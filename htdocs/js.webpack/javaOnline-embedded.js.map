{"version":3,"file":"javaOnline-embedded.js","mappings":";yBAAA,IAAYA,GAAZ,SAAYA,GACR,+BAEA,yCACA,mCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,wCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,6CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAnMJ,CAAYA,IAAAA,EAAS,KAsMd,IC1LKC,EAERC,EDwLOC,EAA4C,CACnD,CAACH,EAAUI,YAAa,iBAExB,CAACJ,EAAUK,iBAAkB,yBAC7B,CAACL,EAAUM,uBAAwB,4BACnC,CAACN,EAAUO,iBAAkB,2BAC7B,CAACP,EAAUQ,gBAAiB,+BAC5B,CAACR,EAAUS,cAAe,s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","sources":["webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/types/Class.ts","webpack:///../src/client/compiler/types/Types.ts","webpack:///../src/client/interpreter/RuntimeObject.ts","webpack:///../src/client/compiler/parser/LabelManager.ts","webpack:///../src/client/compiler/types/Array.ts","webpack:///../src/client/compiler/types/ObjectClass.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../src/client/compiler/types/boxedTypes/LongClass.ts","webpack:///../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../src/client/compiler/lexer/ColorLexer.ts","webpack:///../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/types/Enum.ts","webpack:///../src/client/compiler/parser/CodeGenerator.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/types/TypeTools.ts","webpack:///../src/client/compiler/parser/TypeResolver.ts","webpack:///../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../src/client/compiler/types/TypeHelper.ts","webpack:///../src/client/runtimelibrary/collections/Collection.ts","webpack:///../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../src/client/runtimelibrary/collections/List.ts","webpack:///../src/client/runtimelibrary/collections/Stack.ts","webpack:///../src/client/runtimelibrary/collections/Vector.ts","webpack:///../src/client/runtimelibrary/collections/Set.ts","webpack:///../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../src/client/runtimelibrary/collections/Queue.ts","webpack:///../src/client/runtimelibrary/collections/Deque.ts","webpack:///../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../src/client/runtimelibrary/Console.ts","webpack:///../src/client/main/gui/PrintManager.ts","webpack:///../src/client/interpreter/InputManager.ts","webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/tools/database/CacheManager.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/interpreter/DebuggerElement.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/compiler/AdhocCompiler.ts","webpack:///../src/client/interpreter/Evaluator.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/WorkspaceImporter.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/interpreter/WatcherElement.ts","webpack:///../src/client/interpreter/Debugger.ts","webpack:///../src/client/tools/SoundTools.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../src/client/main/gui/console/MyConsole.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/compiler/types/DeclarationHelper.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/MyColorProvider.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/MyJava.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/SpeedControl.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../src/client/main/gui/diagrams/Diagram.ts","webpack:///../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../src/client/interpreter/Interpreter.ts","webpack:///../src/client/tools/ConvexHull.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/main/gui/WindowStateManager.ts","webpack:///../src/client/workspace/InconsistencyFixer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/tools/KeyboardTool.ts","webpack:///../src/client/tools/GamepadTool.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../src/client/runtimelibrary/graphics/World.ts","webpack:///../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../src/client/tools/MatheTools.ts","webpack:///../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../src/client/runtimelibrary/graphics/Color.ts","webpack:///../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../src/client/runtimelibrary/graphics/Group.ts","webpack:///../src/client/runtimelibrary/graphics/Key.ts","webpack:///../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../src/client/runtimelibrary/graphics/Text.ts","webpack:///../src/client/runtimelibrary/Input.ts","webpack:///../src/client/runtimelibrary/Gamepad.ts","webpack:///../src/client/runtimelibrary/Math.ts","webpack:///../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../src/client/runtimelibrary/System.ts","webpack:///../src/client/runtimelibrary/SystemTools.ts","webpack:///../src/client/runtimelibrary/Timer.ts","webpack:///../src/client/runtimelibrary/collections/Map.ts","webpack:///../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../src/client/runtimelibrary/graphics/Line.ts","webpack:///../src/client/runtimelibrary/Vector2.ts","webpack:///../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../src/client/runtimelibrary/Random.ts","webpack:///../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../src/client/compiler/parser/Patcher.ts","webpack:///../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../src/client/runtimelibrary/database/ResultSet.ts","webpack:///../src/client/runtimelibrary/database/DatabaseStatement.ts","webpack:///../src/client/tools/database/sqljsWorkerSim.ts","webpack:///../src/client/tools/database/DatabaseTool.ts","webpack:///../src/client/tools/database/DatabaseLongPollingListener.ts","webpack:///../src/client/runtimelibrary/database/DatabasePreparedStatement.ts","webpack:///../src/client/runtimelibrary/database/Connection.ts","webpack:///../src/client/runtimelibrary/database/DatabaseManager.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/embedded/EmbeddedSlider.ts","webpack:///../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../src/client/embedded/MainEmbedded.ts","webpack:///../src/client/embedded/EmbeddedStarter.ts"],"sourcesContent":["export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    longConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        // casting something to a String by calling toString() doesn't make sense in my opinion\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        if (attributes == null) return \"{}\";\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color ? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color ? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if (mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                            /**\r\n                             * Rechteck r; \r\n                             * GNGFigur f;\r\n                             * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                             * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                             */\r\n                            if (mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n\r\nexport class UnboxableKlass extends Klass {\r\n\r\n    public unboxableAs: Type[] = [];\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        if (! (type instanceof PrimitiveType)) return null;\r\n        if (this.unboxableAs.includes(type)) {\r\n            if (value.value == null && ! type.allowsNull()) throw Error(\"null kann nicht in einen primitiven \" + type.identifier + \" umgewandelt werden.\");\r\n            else return {\r\n                value: value.value,\r\n                type: type\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n    public allowsNull(): boolean { return false; }\r\n\r\n    public valueToString(value: Value): string {\r\n        return  \"\" + value.value;\r\n    }\r\n\r\n    // public unboxFrom(value: Value, type: Type): Value {\r\n    //     if ((type[\"unboxableAs\"] || []).includes(this)){\r\n    //         if (value.value != null) return {\r\n    //             value: value.value,\r\n    //             type: value.type\r\n    //         };\r\n    //         else {\r\n    //             throw Error(\"null kann nicht in einen primitiven \" + this.identifier + \" umgewandelt werden.\");\r\n    //         }\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\nexport function nullToString(s: string) {\r\n  return s == null ? \"null\" : s;\r\n}\r\n\r\nexport function floatToString(val: number){\r\n  return val + (Number.isInteger(val)? \".0\": \"\");\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { LongClass } from \"./boxedTypes/LongClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\nimport { createSemanticDiagnosticsBuilderProgram } from \"typescript\";\r\nimport { floatToString, nullToString } from \"../../tools/StringTools.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface || type instanceof ArrayType);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return {\r\n            value: value.value,\r\n            type: type\r\n        };\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class LongPrimitiveType extends IntPrimitiveType {\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"long\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: false, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n            \"Long\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.longConstant;\r\n    }\r\n}\r\n\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: true },\r\n            \"Double\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        // if (type == doublePrimitiveType || type == DoubleType || type == FloatType) {\r\n        //     return {\r\n        //         type: type,\r\n        //         value: value.value\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n    public valueToString(value: Value): string {\r\n        return floatToString(value.value);\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"Float\": { automatic: true, needsStatement: true },\r\n            \"Double\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        // let unboxed = this.unboxFrom(value, type);\r\n        // if (unboxed != null) return unboxed;\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        // if (type == floatPrimitiveType || type == FloatType || type == DoubleType) {\r\n        //     return {\r\n        //         type: type,\r\n        //         value: value.value\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n    public valueToString(value: Value): string {\r\n        return floatToString(value.value);\r\n    }\r\n\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: {},\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return undefined;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + nullToString(<string>(secondOperand.value));\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType //, \"int\": stringPrimitiveType,\r\n                // \"float\": stringPrimitiveType, \"double\": stringPrimitiveType,\r\n                // \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"matches\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return <string>(parameters[0].value).match(regExp) != null;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert der Zeichenkette dem regulären Ausdruck (regex) entspricht.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        let err: Error = checkNotNull(operation, this, firstOperand, secondOperand, [TokenType.plus, TokenType.keywordInstanceof])\r\n        if (err != null) return err;\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return nullToString(value) + <string>(secondOperand.value); // because null + null = 0 in javascript\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return nullToString(value) + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return nullToString(value) + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n            // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n            // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n            // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n            // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public allowsNull(): boolean { return true; }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: true },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        // let unboxed = this.unboxFrom(value, type);\r\n        // if (unboxed != null) return unboxed;\r\n\r\n        // if (type == stringPrimitiveType || type == CharacterType) {\r\n        //     return {\r\n        //         type: type,\r\n        //         value: value\r\n        //     }\r\n        // }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var longPrimitiveType = new LongPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var LongType = new LongClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.longConstant]: longPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}\r\n\r\n\r\nfunction checkNotNull(operation: TokenType, type: Type, firstOperand: Value, secondOperand?: Value, nullAllowedFor: TokenType[] = []): Error {\r\n    if ((firstOperand.value == null || secondOperand.value == null) && !nullAllowedFor.concat([TokenType.equal, TokenType.notEqual]).includes(operation)) {\r\n        let typeAndNull: (v: Value) => string = (v: Value) => v.value == null ? \"(\" + type.identifier + \")\" + \" null\" : type.identifier;\r\n        return new OperandIsNull(\"Unerlaubte Rechnung mit null: \" + typeAndNull(firstOperand) + \" \" + TokenTypeReadable[operation] + \" \" + typeAndNull(secondOperand));\r\n    }\r\n    return null;\r\n}\r\n\r\nexport class OperandIsNull extends Error {\r\n    constructor(message?: string) {\r\n        super(message);\r\n        this.name = \"OperandIsNullError\";\r\n    }\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt = TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { longPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class LongClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Long\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", longPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ long annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", longPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ long annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, longPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Long\", new Parameterlist([\r\n            { identifier: \"long-wert\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Long-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Long\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Long-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen int-Wert um\"));\r\n        this.addMethod(new Method(\"longValue\", new Parameterlist([]), longPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen long-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen long-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen long-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Long-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Long-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Long-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { floatToString } from \"../../../tools/StringTools.js\";\r\n\r\n\r\nexport class FloatClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return floatToString(parameters[0].value);\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { floatToString } from \"../../../tools/StringTools.js\";\r\n\r\n\r\nexport class DoubleClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return floatToString(parameters[0].value);\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, UnboxableKlass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, UnboxableKlass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends UnboxableKlass {\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo, UnboxableKlass } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType, NullType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null || attribute.resolvedType == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode, nullTypeForbidden: boolean = false): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!(typeFrom == nullType && nullTypeForbidden)) {\r\n\r\n            if (typeFrom.equals(typeTo)) {\r\n                return true;\r\n            }\r\n\r\n            if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                    this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n                }\r\n\r\n\r\n                return false;\r\n            }\r\n\r\n            if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    position: position,\r\n                    newType: typeTo\r\n                });\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            // if (castInfo.needsStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                newType: typeTo,\r\n                position: position\r\n            });\r\n            // }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    ensureAutomaticToString(typeFrom: Type, codepos: number = undefined, textposition?: TextPosition): boolean {\r\n        if (typeFrom == stringPrimitiveType) return true;\r\n        if (typeFrom == voidPrimitiveType) return false;\r\n        let automaticToString: Method;\r\n        \r\n        if (typeFrom instanceof PrimitiveType) {\r\n            automaticToString = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n                let value = parameters[0];\r\n                return ((<PrimitiveType>value.type).valueToString(value));\r\n            }, false, true);\r\n\r\n        }\r\n        if ((typeFrom instanceof Klass) || (typeFrom == nullType)) {\r\n\r\n            let toStringMethod: Method;\r\n            if (typeFrom == nullType) {\r\n                toStringMethod = objectType.getMethodBySignature(\"toString()\");\r\n            }\r\n            else {\r\n                toStringMethod = (<Klass>typeFrom).getMethodBySignature(\"toString()\");\r\n            }\r\n            if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n                automaticToString = new Method(toStringMethod.identifier, toStringMethod.parameterlist, stringPrimitiveType, (parameters: Value[]) => {\r\n                    let value = parameters[0].value;\r\n                    if (value == null) return \"null\";\r\n                    return toStringMethod.invoke(parameters);\r\n                }, toStringMethod.isAbstract, true, toStringMethod.documentation, toStringMethod.isConstructor);\r\n\r\n            }\r\n\r\n        }\r\n        if (automaticToString != undefined) {\r\n            this.insertOrPushStatements({\r\n                type: TokenType.callMethod,\r\n                position: textposition,\r\n                method: automaticToString,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            }, codepos);\r\n            return true;\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n    // getToStringStatement(type: Klass | NullType, position: TextPosition, nullToString: boolean = true): Statement {\r\n\r\n    // }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    insertOrPushStatements(statements: Statement | Statement[], pos?: number) {\r\n        if (pos == null && pos == undefined) this.pushStatements(statements);\r\n        else this.insertStatements(pos, statements);\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                this.pushCastToStatement(typeFrom, typeTo, node);\r\n\r\n                // if ((typeFrom instanceof PrimitiveType) && typeTo instanceof PrimitiveType) {\r\n                //     let castInfo = typeFrom.getCastInformation(typeTo);\r\n                //     if (castInfo.needsStatement) {\r\n                //         this.pushStatements({\r\n                //             type: TokenType.castValue,\r\n                //             position: node.position,\r\n                //             newType: typeTo\r\n                //         });\r\n                // }\r\n                // } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                //     let toStringStatement = this.getToStringStatement(typeFrom, node.position, false);\r\n                //     if (toStringStatement != null) {\r\n                //         this.pushStatements(this.getToStringStatement(typeFrom, node.position, false));\r\n                //     } else {\r\n                //         this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                //         this.pushStatements({ type: TokenType.castValue, position: node.position, newType: typeTo });\r\n                //     }\r\n                // }\r\n\r\n                // else if ((typeFrom[\"unboxableAs\"] || []).includes(typeTo)) {\r\n                //     this.pushStatements({\r\n                //         type: TokenType.castValue,\r\n                //         position: node.position,\r\n                //         newType: typeTo\r\n                //     });\r\n                // }\r\n\r\n                // else if (typeFrom instanceof NullType) {\r\n                //     this.pushStatements({\r\n                //         type: TokenType.castValue,\r\n                //         position: node.position,\r\n                //         newType: typeTo\r\n                //     });\r\n                // }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if (typeFrom instanceof UnboxableKlass) {\r\n                for (let unboxableAs of typeFrom.unboxableAs) {\r\n                    if (unboxableAs.canCastTo(typeTo)) {\r\n                        this.pushCastToStatement(typeFrom, unboxableAs, node);\r\n                        this.pushCastToStatement(unboxableAs, typeTo, node);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushCastToStatement(typeFrom: Type, typeTo: Type, node: CastManuallyNode) {\r\n        let needsStatement: boolean = typeFrom != typeTo;\r\n\r\n        // if ((typeFrom instanceof PrimitiveType) && typeTo instanceof PrimitiveType) {\r\n        //     let castInfo = typeFrom.getCastInformation(typeTo);\r\n        //     if (!castInfo.needsStatement) needsStatement = false;\r\n        // }\r\n\r\n        if (needsStatement) this.pushStatements({\r\n            type: TokenType.castValue,\r\n            position: node.position,\r\n            newType: typeTo\r\n        });\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticToString(type.type)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if (switchStatement.defaultDestination == null) {\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if (collectionType.typeVariables.length == 0) {\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if (this.currentProgram.statements.length == pc) {\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean) {\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if (this.currentProgram.statements.length == pc) {\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)) {\r\n            let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n            switch (classIdentifier) {\r\n                case \"Input\":\r\n                    this.pushStatements({\r\n                        type: TokenType.callInputMethod,\r\n                        method: method,\r\n                        position: node.position,\r\n                        stepFinished: true,\r\n                        stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                    });\r\n                    isSystemMethod = true;\r\n                    break;\r\n                case \"SystemTools\":\r\n                case \"Robot\":\r\n                    if ([\"pause\", \"warten\"].indexOf(method.identifier) >= 0) {\r\n                        this.pushStatements([{\r\n                            type: TokenType.setPauseDuration,\r\n                            position: node.position,\r\n                            stepFinished: true\r\n                        }, {\r\n                            type: TokenType.pause,\r\n                            position: node.position,\r\n                            stepFinished: true\r\n                        }\r\n                        ]);\r\n                        isSystemMethod = true;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        if (!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        let convertedLeftType = leftType.type;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand, true)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (rightType.type == stringPrimitiveType) {\r\n                    if (this.ensureAutomaticToString(leftType.type, programPosAfterLeftOpoerand, node.firstOperand.position)) {\r\n                        resultType = stringPrimitiveType;\r\n                        convertedLeftType = stringPrimitiveType;\r\n                    }\r\n                } else if (leftType.type == stringPrimitiveType) {\r\n                    if (this.ensureAutomaticToString(rightType.type, undefined, node.firstOperand.position)) {\r\n                        resultType = stringPrimitiveType;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            this.insertStatements(programPosAfterLeftOpoerand, {\r\n                                type: TokenType.castValue,\r\n                                position: node.firstOperand.position,\r\n                                newType: lt\r\n                            });\r\n                            this.pushStatements({\r\n                                type: TokenType.castValue,\r\n                                position: node.secondOperand.position,\r\n                                newType: rt\r\n                            });\r\n                            convertedLeftType = lt;\r\n                            // rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: convertedLeftType,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand, true)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if(object.intrinsicData[\"ListHelper\"] instanceof ListHelper){\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if(getIteratorMethod == null){\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if(getIteratorMethod.invoke){\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{value: object, type: object.class}]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(hasNextMethod.invoke([iteratorAsValue])){\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{value: object, type: object.class}]);            \r\n            if(iteratorWithError.error != null){this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false;}\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(true){\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if(hasNext.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false;}\r\n                if(hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if(objWithError.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false;}\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({value: obj, type: type});\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): {error: string, value: Value} {\r\n        if(method.invoke){\r\n            return {value: {value: method.invoke([]), type: method.returnType}, error: null};\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error.indexOf(\"Not logged in\") >= 0) {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n                \r\n                console.log(\"Netzwerkfehler: \" + error);\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse, GetDatabaseRequest, getDatabaseResponse, DatabaseData, GetTemplateRequest, ObtainSqlTokenRequest, ObtainSqlTokenResponse, JAddStatementRequest, JAddStatementResponse, JRollbackStatementRequest, JRollbackStatementResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { CacheManager } from \"../tools/database/CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    // sqlIdeURL = \"http://localhost:6500/servlet/\";\r\n    sqlIdeURL = \"https://www.sql-ide.de/servlet/\";\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty || this.errorHappened) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    } else {\r\n                        let message: string = \"Fehler beim Senden der Daten: \";\r\n                        if(response[\"message\"]) message += response[\"message\"];\r\n                        console.log(message);\r\n                    }\r\n                }, (message: string) => {\r\n                    that.errorHappened = true;\r\n                    console.log(\"Fehler beim Ajax-call: \" + message)\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    fetchDatabaseAndToken(code: string, callback:(database: DatabaseData, token: string, error: string) => void){\r\n        let request: ObtainSqlTokenRequest = {code: code};\r\n\r\n        ajax(\"obtainSqlToken\", request, (response: ObtainSqlTokenResponse) => {\r\n            if (response.success) {\r\n                this.fetchDatabase(response.token, (database, error) => {\r\n                    callback(database, response.token, error);\r\n                })                \r\n            } else {\r\n                callback(null, null, response.message);\r\n            }\r\n        }, (errormessage) => {\r\n            callback(null, null, errormessage);\r\n        })\r\n    }\r\n\r\n    private fetchDatabase(token: string, callback: (database: DatabaseData, error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            token: token\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jGetDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                let database = response.database;\r\n                \r\n                cacheManager.fetchTemplateFromCache(database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        //@ts-ignore\r\n                        database.templateDump = pako.inflate(templateDump);\r\n                        callback(database, null);\r\n                        return;\r\n                    } else {\r\n                        if (database.based_on_template_id == null) {\r\n                            callback(database, null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(token, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                database.templateDump = pako.inflate(template);\r\n                                callback(database, null);\r\n                                return;\r\n                            } else {\r\n                                callback(null, \"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(null, \"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private fetchTemplate(token: string, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            token: token\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: this.sqlIdeURL + \"jGetTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public addDatabaseStatement(token: string, version_before: number, statements: string[], \r\n        callback: (statementsBefore: string[], new_version: number, message: string) => void){\r\n\r\n        let request: JAddStatementRequest = {\r\n            token: token,\r\n            version_before: version_before,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jAddDatabaseStatement\", request, (response: JAddStatementResponse) => {\r\n            callback(response.statements_before, response.new_version, response.message);\r\n        }, (message) => {callback([], 0, message)})\r\n\r\n\r\n    }\r\n    \r\n    public rollbackDatabaseStatement(token: string, current_version: number, \r\n        callback: (message: string) => void){\r\n\r\n        let request: JRollbackStatementRequest = {\r\n            token: token,\r\n            current_version: current_version\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jRollbackDatabaseStatement\", request, (response: JRollbackStatementResponse) => {\r\n            callback(response.message);\r\n        })\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\n\r\nexport class WorkspaceImporter {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main, private path: string[] = []) {\r\n\r\n        this.dialog = new Dialog();\r\n        \r\n    }\r\n\r\n    show() {\r\n        let that = this;\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Workspace importieren\");\r\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\r\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\r\n        if(this.path.length  > 0){\r\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\r\n        }\r\n        this.dialog.description(pathDescription);\r\n\r\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\r\n        this.dialog.addDiv($fileInputButton);\r\n        \r\n        let exportedWorkspaces: ExportedWorkspace[] = [];\r\n        \r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\r\n        \r\n        let registerFiles = (files: FileList) => {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files[i];\r\n                var reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    let text: string = <string>event.target.result;\r\n                    if (!text.startsWith(\"{\")) {\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n                    \r\n                    let ew: ExportedWorkspace = JSON.parse(text);\r\n                    \r\n                    if(ew.modules == null || ew.name == null || ew.settings == null){\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n\r\n                    exportedWorkspaces.push(ew);\r\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\r\n\r\n                };\r\n                reader.readAsText(f);\r\n            }\r\n        }\r\n\r\n        $fileInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\r\n        this.dialog.addDiv($dropZone);\r\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\r\n\r\n\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        this.dialog.addDiv($workspacePreviewDiv);\r\n\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => { this.dialog.close() }\r\n            },\r\n            {\r\n                caption: \"Importieren\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    \r\n                    let networkManager = this.main.networkManager;\r\n                    let projectExplorer = this.main.projectExplorer;\r\n\r\n                    let owner_id: number = this.main.user.id;\r\n                    if (this.main.workspacesOwnerId != null) {\r\n                        owner_id = this.main.workspacesOwnerId;\r\n                    }\r\n\r\n                    let count = 0;\r\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\r\n\r\n                    let firstWorkspace: Workspace;\r\n\r\n                    for(let wse of exportedWorkspaces){\r\n\r\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\r\n                        if(firstWorkspace == null) firstWorkspace = ws;\r\n                        ws.isFolder = false;\r\n                        ws.path = this.path.join(\"/\");\r\n                        ws.settings = wse.settings;\r\n                        this.main.workspaceList.push(ws);\r\n                        ws.alterAdditionalLibraries();\r\n\r\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\r\n                            count--;\r\n                            if (error == null) {\r\n                                projectExplorer.workspaceListPanel.addElement({\r\n                                    name: ws.name,\r\n                                    externalElement: ws,\r\n                                    iconClass: \"workspace\",\r\n                                    isFolder: false,\r\n                                    path: that.path\r\n                                }, true);\r\n\r\n                                for(let mo of wse.modules){\r\n                                    let f: File = {\r\n                                        name: mo.name,\r\n                                        dirty: false,\r\n                                        saved: true,\r\n                                        text: mo.text,\r\n                                        text_before_revision: null,\r\n                                        submitted_date: null,\r\n                                        student_edited_after_revision: false,\r\n                                        version: 1,\r\n                                        is_copy_of_id: null,\r\n                                        repository_file_version: null,\r\n                                        identical_to_repository_version: null\r\n                                    };\r\n                                    let m = new Module(f, this.main);\r\n                                    ws.moduleStore.putModule(m);\r\n                                    networkManager.sendCreateFile(m, ws, owner_id,\r\n                                        (error: string) => {\r\n                                            count--;\r\n                                            if (error == null) {\r\n                                                projectExplorer.workspaceListPanel.sortElements();\r\n                                                this.dialog.close();\r\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\r\n                                            } else {\r\n                                                alert('Der Server ist nicht erreichbar!');\r\n                    \r\n                                            }\r\n                                        });\r\n                                }\r\n\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n        \r\n                            }\r\n                        });\r\n\r\n\r\n\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    showHideDbBusyIcon(visible: boolean){\r\n        let displayValue: string = visible ? \"block\" : \"none\";\r\n        jQuery(\".jo_db-busy\").css(\"display\", displayValue);\r\n    }\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { TextPosition, TokenType, TokenTypeReadable } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, nullType, OperandIsNull, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\nimport { ConnectionHelper } from \"../runtimelibrary/database/Connection.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n    databaseConnectionHelpers: ConnectionHelper[] = [];\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.databaseConnectionHelpers.forEach((ch) => ch.close());\r\n        this.databaseConnectionHelpers = [];\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                try {\r\n                    let casted = value.type.castTo(value, node.newType);\r\n                    if (casted == undefined) casted = {\r\n                        value: value.value,\r\n                        type: node.newType\r\n                    }\r\n                    stack[stackTop + relPos] = casted;\r\n                } catch (err) {\r\n                    if (err.message) return err.message;\r\n                    else return \"Bei dem Casten von \" + value.type.identifier + \" zu \" + node.newType.identifier + \" trat ein Fehler auf: \" + err.name + \".\";\r\n                }\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                if (resultValue instanceof Error) {\r\n                    if (resultValue.message) return resultValue.message;\r\n                    else \"Bei der Berechnung von \" + stack[stackTop - 1].type.identifier + \" \" +\r\n                        TokenTypeReadable[node.operator] + \" \" + secondOperand.type.identifier +\r\n                        \" trat ein Fehler (\" + resultValue.name + \") auf.\"\r\n\r\n                }\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    // if (rt != null && rt.identifier != 'void' && (! (rt instanceof PrimitiveType)) && returnValue == null) rt = nullType;\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.pauseForInput();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    that.resumeAfterInput(value);\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) {\r\n                    text = <string>stack.pop().value;\r\n                    if (text == null) text = \"null\";\r\n                }\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n\r\n    oldState: InterpreterState;\r\n    pauseForInput() {\r\n        this.timerStopped = true;\r\n        this.additionalStepFinishedFlag = true;\r\n        this.oldState = this.state;\r\n        this.setState(InterpreterState.waitingForInput);\r\n        this.showProgramPointerAndVariables();\r\n    }\r\n\r\n    resumeAfterInput(value: Value, popPriorValue: boolean = false) {\r\n        if (popPriorValue) this.stack.pop();\r\n        if (value != null) this.stack.push(value);\r\n        this.main.hideProgramPointerPosition();\r\n        this.setState(InterpreterState.paused);\r\n        if (this.oldState == InterpreterState.running) {\r\n            this.start();\r\n        } else {\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n    registerDatabaseConnection(ch: ConnectionHelper) {\r\n        this.databaseConnectionHelpers.push(ch);\r\n    }\r\n\r\n\r\n}","/* \r\n * Convex hull algorithm - Library (TypeScript)\r\n * \r\n * Copyright (c) 2020 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n\r\n\r\nexport namespace convexhull {\r\n    \r\n    export interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tlet newPoints: Array<P> = points.slice();\r\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\r\n\t\treturn convexhull.makeHullPresorted(newPoints);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tlet upperHull: Array<P> = [];\r\n\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\r\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tlet lowerHull: Array<P> = [];\r\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t}\r\n\t\r\n\t\r\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\t\r\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box'); \r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\r\n\r\nexport class FilledShapeDefaults {\r\n    static defaultFillColor: number = 0x8080ff;\r\n    static defaultFillAlpha: number = 1.0;\r\n\r\n    static defaultBorderColor: number = null;\r\n    static defaultBorderAlpha: number = 1.0;\r\n    static defaultBorderWidth: number = 10;\r\n\r\n    static defaultVisibility: boolean = true;\r\n\r\n    static initDefaultValues(){\r\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\r\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\r\n    \r\n        FilledShapeDefaults.defaultBorderColor = null;\r\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\r\n        FilledShapeDefaults.defaultBorderWidth = 10;\r\n\r\n        FilledShapeDefaults.defaultVisibility = true;\r\n    }\r\n\r\n    static setDefaultVisibility(visibility: boolean) {\r\n        FilledShapeDefaults.defaultVisibility = visibility;\r\n    }\r\n\r\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\r\n\r\n        FilledShapeDefaults.defaultBorderWidth = width;\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultBorderColor = c.color;\r\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultBorderColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n    static setDefaultFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultFillColor = c.color;\r\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultFillColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getDefaultGroup\", new Parameterlist([\r\n        ]), groupType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return wh.getDefaultGroup();\r\n\r\n            }, false, false, 'Gibt die Gruppe zurück, zu der aktuell alle neuen Objekte automatisch hinzugefügt werden. Falls gerade keine defaultGroup festgelegt ist, wird null zurückgegeben.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    getDefaultGroup(): RuntimeObject {\r\n        return this.defaultGroup?.runtimeObject;\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implementierung eines Timers) und onKeyTyped, onKeyUp usw. zur Entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        console.log(\"destroying\", this);\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function streckenzugEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n    for(let i = 0; i < punkte.length - 1; i++){\r\n        if(abstandPunktZuStrecke(punkte[i], punkte[i+1], punkt) < 0.000001){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function steckenzugSchneidetStreckenzug(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    for(let i = 0; i < punkte1.length - 1; i++){\r\n        for(let j = 0; j < punkte2.length - 1; j++){\r\n            if(streckeSchneidetStrecke(punkte1[i], punkte1[i+1], punkte2[j], punkte2[j+1])){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType, nullType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"../../compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, highestIndex);\r\n        } else {\r\n            container.setChildIndex(this.displayObject, highestIndex);\r\n        }\r\n    }\r\n\r\n    sendToBack() {\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, 0);\r\n        } else {\r\n            let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n            container.setChildIndex(this.displayObject, 0);\r\n        }\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    getParentGroup(): RuntimeObject {\r\n        return this.belongsToGroup?.runtimeObject || null\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n    destroy(){\r\n        super.destroy(); // for debugging\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class SectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let startAngle: number = parameters[4].value;\r\n                let endAngle: number = parameters[5].value;\r\n\r\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\r\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: boolean = parameters[1].value;\r\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"drawRadii\")) return;\r\n    \r\n                    sh.drawRadii = r;\r\n                    sh.render();\r\n    \r\n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SectorHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\r\n            g.drawCircle(this.mx, this.my, this.r);\r\n        } else {\r\n            if(this.drawRadii){\r\n                g.moveTo(this.mx, this.my);\r\n            }\r\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\r\n            if(this.drawRadii){\r\n                g.lineTo(this.mx, this.my);\r\n            }\r\n        }\r\n        if(this.drawRadii){\r\n            g.closePath();\r\n        }\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        if (dx * dx + dy * dy <= this.r * this.r) {\r\n            let towPI = 2*Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if(normalizedStartAngle <= normalizedEndAngle){\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }  \r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class ArcClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let ri: number = parameters[3].value;\r\n                let ra: number = parameters[4].value;\r\n                let startAngle: number = parameters[5].value;\r\n                let endAngle: number = parameters[6].value;\r\n\r\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ri = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ra = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.ri * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\r\n\r\n                return sh.ra * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ArcHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public ri: number,\r\n        public ra: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ra * Math.cos(alpha),\r\n                y: this.my + this.ra * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.endAngleRad - deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ri * Math.cos(alpha),\r\n                y: this.my + this.ri * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n\r\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\r\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\r\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\r\n            g.drawCircle(this.mx, this.my, this.ra)\r\n                .beginHole()\r\n                .drawCircle(this.mx, this.my, this.ri)\r\n                .endHole();\r\n        } else {\r\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\r\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\r\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\r\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\r\n        }\r\n\r\n        g.closePath();\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        let r2 = dx * dx + dy * dy;\r\n\r\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\r\n            let towPI = 2 * Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if (normalizedStartAngle <= normalizedEndAngle) {\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n            (<Klass>shapeType).addMethod(new Method(\"getParentGroup\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"getParentGroup\")) return;\r\n    \r\n                    return sh.getParentGroup();\r\n    \r\n                }, false, false, 'Gibt die Group zurück, in der sich das Grafikobjekt befindet, bzw. null, falls es in keiner Group ist.', false));\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    setChildIndex(sh: ShapeHelper, index: number) {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject;\r\n        container.setChildIndex(sh.displayObject, index);\r\n\r\n        let oldIndex = this.shapes.indexOf(sh.runtimeObject);\r\n        this.shapes.splice(oldIndex, 1);\r\n        this.shapes.splice(index, 0, sh.runtimeObject);\r\n}\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.add(roCopy);\r\n\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChild(shapeHelper.displayObject);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\nimport { polygonEnthältPunkt, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.closeAndFill){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class GamepadClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon, polygonEnthältPunkt, steckenzugSchneidetStreckenzug, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        if(shapeHelper. hitPolygonTransformed.length == 2 && !this.isFilled){\r\n            return steckenzugSchneidetStreckenzug(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        }\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.isFilled){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\r\n\r\nexport type GNGAktionsempfaengerData = {\r\n    type: GNGAktionsempfaengerType,\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class GNGEreignisbehandlung extends Klass {\r\n\r\n    constructor(module: Module, private moduleStore: ModuleStore) {\r\n\r\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\r\n\r\n\r\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let helper = GNGEreignisbehandlung.getHelper(module);\r\n\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\r\n\r\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n        //         let groesse: number = parameters[1].value;\r\n\r\n\r\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\r\n\r\n            }, false, false, \"Zeitgeber starten.\", false));\r\n\r\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\r\n\r\n            }, false, false, \"Zeitgeber anhalten.\", false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n    }\r\n\r\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\r\n        let interpreter = module.main.getInterpreter();\r\n        if (interpreter.gngEreignisbehandlungHelper == null) {\r\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\r\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\r\n        }\r\n\r\n        return interpreter.gngEreignisbehandlungHelper;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GNGEreignisbehandlungHelper {\r\n\r\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\r\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\r\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\r\n        \"TaktImpulsAusführen()\": \"ausführen\",\r\n        \"AktionAusführen()\": \"ausführen\",\r\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\r\n        \"TasteGedrückt(char)\": \"taste\",\r\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\r\n    };\r\n\r\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\r\n    keyToKeyCodeMap: { [key: string]: number } = {\r\n        \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n    }\r\n\r\n    // For gng library (Cornelsen-Verlag):\r\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\r\n\r\n    timerRunning: boolean = false;\r\n    taktdauer: number = 300;\r\n    remainingTime: number = 0;\r\n\r\n    onKeyDownMethod: (key: string) => void;\r\n\r\n    constructor(private module:Module){\r\n        for (let type of this.aktionsempfaengerTypes) {\r\n            this.aktionsempfaengerMap[type] = [];\r\n        }\r\n\r\n    }\r\n\r\n    hasAktionsEmpfaenger(): boolean {\r\n\r\n        for(let type of this.aktionsempfaengerTypes){\r\n            if(this.aktionsempfaengerMap[type].length > 0){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    registerEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let method: Method = klass.getMethodBySignature(ms);\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n                this.aktionsempfaengerMap[type].push({\r\n                    type: <GNGAktionsempfaengerType>type,\r\n                    method: method,\r\n                    runtimeObject: o\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unregisterEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            this.aktionsempfaengerMap[type] =\r\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\r\n        }\r\n    }\r\n\r\n\r\n    bindEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n\r\n        this.onKeyDownMethod = (key: string) => {\r\n            if (key.length == 1) {\r\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\r\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\r\n                }\r\n            } else {\r\n                let keyCode = this.keyToKeyCodeMap[key];\r\n                if (keyCode != null) {\r\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\r\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\r\n\r\n        // this.startTimer();\r\n\r\n    }\r\n\r\n    detachEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\r\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\r\n        this.stopTimer();\r\n    }\r\n\r\n\r\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        parameters = parameters.slice(0);\r\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\r\n\r\n        if (program != null) {\r\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke(parameters);\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        this.timerRunning = false;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        if (!this.timerRunning) {\r\n            this.timerRunning = true;\r\n            this.processTimerEntries();\r\n        }\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (!this.timerRunning) return;\r\n\r\n        let dt = 10;\r\n\r\n        this.remainingTime += dt;\r\n        if (this.remainingTime > this.taktdauer) {\r\n            this.remainingTime -= this.taktdauer;\r\n\r\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\r\n            for (let ae of liste) {\r\n\r\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, dt);\r\n\r\n    }\r\n\r\n    handleMouseClickedEvent(x: number, y: number) {\r\n        let parameters: Value[] = [\r\n            { type: intPrimitiveType, value: Math.round(x) },\r\n            { type: intPrimitiveType, value: Math.round(y) },\r\n            { type: intPrimitiveType, value: 1 }\r\n        ]\r\n\r\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\r\n        for (let ae of liste) {\r\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.unregisterEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.startTimer();\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.stopTimer();\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","export var GNGFarben: {[identifier: string]: number} = {\r\n    \"weiß\": 0xffffff,\r\n    \"weiss\": 0xffffff,\r\n    \"rot\": 0xff0000,\r\n    \"grün\": 0x00ff00,\r\n    \"gruen\": 0x00ff00,\r\n    \"blau\": 0x0000ff,\r\n    \"gelb\": 0xffff00,\r\n    \"magenta\": 0xff00ff,\r\n    \"cyan\": 0x00ffff,\r\n    \"hellgelb\": 0xffff80,\r\n    \"hellgrün\": 0x80ff80,\r\n    \"hellgruen\": 0x80ff80,\r\n    \"orange\": 0xff8000,\r\n    \"braun\": 0x804000,\r\n    \"grau\": 0x808080,\r\n    \"schwarz\": 0x000000\r\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \r\n            let farbe = value.object.intrinsicData[\"Farbe\"];\r\n            value.value = farbe == null ? \"schwarz\" : farbe;\r\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterX()); \r\n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterY()); \r\n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\r\n\r\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\r\n                sh.displayObject.updateTransform();\r\n                sh.displayObject.transform.worldTransform.apply(p, p);\r\n        \r\n                sh.move(x - p.x, y - p.y);\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                o.intrinsicData[\"Farbe\"] = farbe;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Zerstört das Objekt.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGDreieckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let breite = value.object.intrinsicData[\"Breite\"];\r\n            value.value = Math.round(breite); \r\n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let höhe = value.object.intrinsicData[\"Höhe\"];\r\n            value.value = Math.round(höhe); \r\n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n\r\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\r\n                rh.centerXInitial = 60;\r\n                rh.centerYInitial = 60;\r\n\r\n                o.intrinsicData[\"Breite\"] = 100;\r\n                o.intrinsicData[\"Höhe\"] = 100;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\r\n\r\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n                    let breite: number = parameters[1].value;\r\n                    let höhe: number = parameters[2].value;\r\n\r\n                    o.intrinsicData[\"Breite\"] = breite;\r\n                    o.intrinsicData[\"Höhe\"] = höhe;    \r\n\r\n                    breite /= sh.scaleFactor;\r\n                    höhe /= sh.scaleFactor;\r\n\r\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n    \r\n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\r\n                    sh.centerXInitial = 60;\r\n                    sh.centerYInitial = 10 + höhe/2;\r\n                    \r\n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\r\n    \r\n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\r\n    \r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGKreisClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \r\n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\r\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n                let radius: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\r\n\r\n                sh.setRadius(radius);\r\n\r\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGTurtleClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \r\n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \r\n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\r\n                rh.borderWidth = 1;\r\n                rh.setShowTurtle(true);\r\n                rh.setBorderColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.turtleSize = größe;\r\n                sh.turn(0);\r\n\r\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.turn(grad);\r\n\r\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n\r\n                sh.forward(länge);\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftHeben\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftSenken\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Löschen\")) return;\r\n\r\n                sh.clear(100, 200, 0);\r\n\r\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.moveTo(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                sh.moveTo(100, 200);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.turn(winkel + sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                return Math.round(-sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesAtLeastOneFigure();\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                return sh.touchesColor(farbe);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesShape(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\r\n\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { TextHelper } from \"../graphics/Text.js\";\r\n\r\nexport class GNGTextClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \r\n            let text = value.object.intrinsicData[\"Actor\"].text;\r\n            value.value = text; \r\n        }, false, Visibility.private, false, \"Angezeigter Text\"));\r\n\r\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \r\n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\r\n            value.value = Math.round(fontsize); \r\n        }, false, Visibility.private, false, \"Textgröße\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\r\n\r\n                rh.setFillColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let text: string = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextSetzen\")) return;\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\r\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\r\n\r\n                sh.setFontsize(größe);\r\n\r\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size += 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size += 2;\r\n                }\r\n                else {\r\n                    size += 4;\r\n                }\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size -= 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size -= 2;\r\n                }\r\n                else {\r\n                    size -= 4;\r\n                }\r\n                if (size < 1) {\r\n                    size = 1;\r\n                }\r\n\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GroupHelper } from \"../graphics/Group.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\ntype GNGPoint = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class GNGFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(objectType);\r\n\r\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\r\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\r\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\r\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                let rh = new FigurHelper(interpreter, o, helper);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let center: GNGPoint = {\r\n                    x: 100,\r\n                    y: 200\r\n                };\r\n\r\n                o.intrinsicData[\"Center\"] = center;\r\n\r\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n                rh.scale(0.4, center.x, center.y);\r\n                rh.displayObject.updateTransform();\r\n\r\n                helper.registerEvents(o);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let groesse: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                let newFactor = groesse / 100;\r\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.rotate(grad, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                let angleRad = sh.angle / 180 * Math.PI;\r\n                let dx = länge * Math.cos(angleRad);\r\n                let dy = länge * Math.sin(-angleRad);\r\n                center.x += dx;\r\n                center.y += dy;                \r\n\r\n                sh.move(dx, dy);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(x - center.x, y - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = x;\r\n                center.y = y;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(100 - center.x, 200 - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = 100;\r\n                center.y = 200;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\r\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.x;\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.y;\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\r\n\r\n                sh.destroyChildren();\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n\r\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh) {\r\n                        if(shape instanceof FigurHelper){\r\n                            for(let part of shape.shapes){\r\n                                let partHelper = part.intrinsicData[\"Actor\"];\r\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\r\n                                    if(sh.collidesWith(partHelper)){\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n\r\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\r\n                                if (sh.collidesWith(shape)) return true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.collidesWith(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\r\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n                let x3: number = parameters[5].value;\r\n                let y3: number = parameters[6].value;\r\n                let farbeString: string = parameters[7].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(polygonClass);\r\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = triangle;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                triangle.rotate(sh.angle, 0, 0);\r\n                triangle.scale(sh.scaleFactor, 0, 0);\r\n                triangle.move(center.x, center.y);\r\n                triangle.setFillColor(farbe);\r\n                triangle.setBorderColor(\"black\");\r\n                triangle.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(rectangleClass);\r\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                rectangleHelper.rotate(sh.angle, 0, 0);\r\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\r\n                rectangleHelper.move(center.x, center.y);\r\n                rectangleHelper.setFillColor(farbe);\r\n                rectangleHelper.setBorderColor(\"black\");\r\n                rectangleHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\r\n                \r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\r\n                breite = breite - 0.1;\r\n\r\n                let rto = new RuntimeObject(ellipseClass);\r\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                ellipseHelper.rotate(sh.angle, 0, 0);\r\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\r\n                ellipseHelper.move(center.x, center.y);\r\n                ellipseHelper.setFillColor(farbe);\r\n                ellipseHelper.setBorderColor(\"black\");\r\n                ellipseHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\r\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\r\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\r\n        t.intrinsicData[\"Actor\"] = th;\r\n        th.move(center.x, center.y);\r\n        th.setFillColor(\"yellow\");\r\n        th.setBorderColor(\"black\");\r\n        th.setBorderWidth(2);\r\n        gh.add(t);\r\n\r\n        let c: RuntimeObject = new RuntimeObject(circleClass);\r\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\r\n        c.intrinsicData[\"Actor\"] = ch;\r\n        ch.move(center.x, center.y);\r\n        ch.setFillColor(\"blue\");\r\n        ch.setBorderColor(\"black\");\r\n        ch.setBorderWidth(2);\r\n        gh.add(c);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass FigurHelper extends GroupHelper {\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    destroy(){\r\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class RandomClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Random\", module, \"Zufallszahlengenerator\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\r\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let bound: number = parameters[1].value;\r\n\r\n                return Math.floor(Math.random()*bound);\r\n\r\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randint\", new Parameterlist([\r\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.floor(Math.random()*(to - from + 1) + from);\r\n\r\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\r\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.random()*(to - from) + from;\r\n\r\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class DirectionClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Direction\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\r\n    }\r\n\r\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 150;\r\n        let numberOfBatches = 20;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 200);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1 + 4) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, StringPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class ResultSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"ResultSet\", module, \"Ein ResultSet-Objekt speichert das Ergebnis einer Abfrage an die Datenbank.\");\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.next();\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"wasNull\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.wasNull;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn der zuletzt gelesene Wert null war.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for(let type of types){\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnIndex: number = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n                    if(columnIndex < 1 || columnIndex > rsh.columnCount()){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte \" + columnIndex + \".\");\r\n                        return;\r\n                    }\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex);\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnLabel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnLabel: string = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n\r\n                    let columnIndex: number = rsh.getColumnIndex(columnLabel);\r\n                    if(columnIndex < 0){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte mit dem Bezeichner \" + columnLabel + \".\");\r\n                        return;\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex);\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ResultsetHelper {\r\n    cursor: number = -1;\r\n    wasNull: boolean = false;\r\n\r\n    constructor(private result: QueryResult){\r\n\r\n    }\r\n\r\n    getColumnIndex(columnLabel: string): number {\r\n        \r\n        columnLabel = columnLabel.toLocaleLowerCase();\r\n\r\n        let index = this.result.columns.findIndex((value, index) => {return value.toLocaleLowerCase() == columnLabel});\r\n        if(index < 0) return index;\r\n        return index + 1;\r\n    }\r\n\r\n\r\n    next(): boolean {\r\n        this.cursor++;\r\n        return this.cursor < this.result.values.length;\r\n    }\r\n\r\n    columnCount(): number {\r\n        return this.result.columns.length;\r\n    }\r\n\r\n    getValue(type: Type, columnIndex: number) {\r\n\r\n        let value = this.result.values[this.cursor][columnIndex - 1];\r\n        this.wasNull = value == null;\r\n\r\n        if(type == stringPrimitiveType){\r\n            return value == null ? null : \"\" + value;\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return Math.floor(value);\r\n        }\r\n\r\n        if(type == floatPrimitiveType || type == doublePrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return value;\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(value == null) return false;\r\n            return (value + \"\").indexOf(\"1\") >= 0;\r\n        }\r\n\r\n    }\r\n\r\n    isAfterLast(): boolean {\r\n        return this.cursor > this.result.values.length - 1;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\nexport class DatabaseStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Statement\", module, \"Ein Statement-Objekt repräsentiert eine Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                query = query.trim();\r\n                if(!query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");                    \r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n                \r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n\r\n                connectionHelper.executeQuery(query, (error, result) => {\r\n                module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({value: rs, type: resultSetType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine selct-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n\r\n                query = query.trim();\r\n                if(query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeUpdate können nur datenverändernde Anweisungen ausgeführt werden. Benutze für select-Anweisungen die Methode executeQuery.\");                    \r\n                    return;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                connectionHelper.executeWriteStatement(query, (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({value: 0, type: intPrimitiveType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"src/client/main/MainBase.js\";\r\nimport { WorkerSim } from \"./sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (error: string) => void) {\r\n        \r\n        this.main.getBottomDiv().console.writeConsoleEntry('Bitte warten, die Datenbank wird initialisiert...', null);\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/tools/database/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let error: string;\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    // this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        error = (\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(error);\r\n                   \r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            error = (\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    executeWriteQueries(queries: string[], successCallback: () => void, errorCallback: QueryErrorCallback){\r\n\r\n        if(queries.length == 0){\r\n            successCallback()\r\n            return;\r\n        }\r\n\r\n        let query = queries.shift();\r\n\r\n        this.executeQuery(query, () => {\r\n            this.executeWriteQueries(queries, successCallback, errorCallback);\r\n        }, (message) => {\r\n            this.executeWriteQueries(queries, () => {}, (error) => {});\r\n            errorCallback(message); // report first error\r\n        });\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n    close(){\r\n        if(this.worker != null){\r\n            this.worker.terminate();\r\n            this.worker = null;\r\n        }\r\n    }\r\n\r\n}","import { DatabaseLongPollingListenerRequest, JMessageFromServer, JWebSocketMessageConnect, JWebSocketMessageDisconnect, JWebSocketMessageExecuteStatement, LongPollingListenerResponse, SendingStatementsMessageFromServer, WebSocketRequestConnect } from \"../../communication/Data.js\";\r\nimport { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ConnectionHelper } from \"../../runtimelibrary/database/Connection.js\";\r\n\r\nexport class DatabaseLongPollingListener {\r\n\r\n    identifier: number = Math.floor(Math.random() * 999999999);\r\n    isClosed: boolean = false;\r\n\r\n    constructor(private networkManager: NetworkManager,\r\n        private token: string,\r\n        private onServerSentStatementsCallback: (firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) => void) {\r\n    }\r\n\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        let request: DatabaseLongPollingListenerRequest = {\r\n            token: this.token,\r\n            listenerIdentifier: this.identifier\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: that.networkManager.sqlIdeURL + \"jRegisterLongPollingListener\",\r\n            success: function (resp: string) {\r\n                if (resp != null && !that.isClosed && resp != \"\") {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (response.success) {\r\n                        that.onServerSentStatementsCallback(response.firstNewStatementIndex,\r\n                            response.newStatements, response.rollbackToVersion);\r\n                    }\r\n                }\r\n\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 1000);\r\n                }\r\n            },\r\n            error: function (jqXHR, message) {\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    close(){\r\n        this.isClosed = true;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\n\r\nexport class DatabasePreparedStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PreparedStatement\", module, \"Ein PreparedStatement-Objekt repräsentiert eine parametrisierte Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                if (!psh.query.toLocaleLowerCase().startsWith(\"select\")) {\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");\r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                let error = psh.checkQuery();\r\n\r\n                if (error != null) {\r\n                    interpreter.throwException(error);\r\n                    return null;\r\n                }\r\n\r\n\r\n                psh.connectionHelper.executeQuery(psh.getQueryWithParameterValuesFilledIn(), (error, result) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({ value: rs, type: resultSetType }, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine select-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                if (psh.query.toLocaleLowerCase().startsWith(\"select\")) {\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode execute können nur datenverändernde Anweisungen ausgeführt werden.\" + \r\n                    \"Benutze für select-Anweisungen die Methode executeQuery.\");\r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput();\r\n\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                let error = psh.checkQuery();\r\n\r\n                if (error != null) {\r\n                    interpreter.resumeAfterInput(null);\r\n                    interpreter.throwException(error);\r\n                    return null;\r\n                }\r\n                \r\n                psh.connectionHelper.executeWriteStatement(psh.getQueryWithParameterValuesFilledIn(), (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({ value: 0, type: intPrimitiveType }, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for (let type of types) {\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n\r\n            this.addMethod(new Method(\"set\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"parameterIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"value\", type: type, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let index: number = parameters[1].value;\r\n                    let value: any = parameters[2].value;\r\n                    let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let error = psh.setValue(value, index);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        module.main.getInterpreter().throwException(error);\r\n                    }\r\n\r\n                    return;\r\n\r\n                }, false, false, 'Setzt im Parameter mit dem angegebenen Index den ' + type.identifier + '-Wert ein.'));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PreparedStatementHelper {\r\n\r\n    parameterValues: string[];\r\n    parameterPositions: number[];\r\n    query: string;\r\n\r\n    constructor(public connectionHelper: ConnectionHelper, query: string) {\r\n        this.query = query.trim();\r\n        this.prepareStatement(this.query);\r\n    }\r\n\r\n    prepareStatement(sql: string) {\r\n\r\n        let insideQuotation: boolean = false;\r\n        this.parameterPositions = [];\r\n\r\n        for (let i = 0; i < sql.length; i++) {\r\n\r\n            let c = sql.charAt(i);\r\n            switch (c) {\r\n                case \"'\": insideQuotation = !insideQuotation;\r\n                    break;\r\n                case \"?\": if (!insideQuotation) {\r\n                    this.parameterPositions.push(i);\r\n                }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.parameterValues = new Array(this.parameterPositions.length);\r\n\r\n    }\r\n\r\n    setValue(value: any, position: number): string {\r\n        if (position < 1 || position > this.parameterPositions.length) {\r\n            if (this.parameterPositions.length == 0) {\r\n                return \"Es gibt keine Parameter (mit ? besetzte Stellen) in dieser Anweisung.\";\r\n            }\r\n            return \"Es gibt nur die Parameterpositionen 1 bis \" + this.parameterPositions.length + \" in der SQL-Anweisung, keine Position \" + position + \".\";\r\n        }\r\n\r\n        if(value == null){\r\n            this.parameterValues[position - 1] = \"null\";\r\n        } else\r\n        if (typeof value == \"string\") {\r\n            value = value.replace(/'/g, \"''\");\r\n            this.parameterValues[position - 1] = \"'\" + value + \"'\";\r\n        } else {\r\n            this.parameterValues[position - 1] = \"\" + value;\r\n        }\r\n        return;\r\n    }\r\n\r\n    checkQuery(): string {\r\n        return null;\r\n    }\r\n\r\n    getQueryWithParameterValuesFilledIn(): string {\r\n        let query = this.query;\r\n        let queryParts: string[] = [];\r\n        let pos = 0;\r\n\r\n        for (let i = 0; i < this.parameterPositions.length; i++) {\r\n            queryParts.push(query.substring(pos, this.parameterPositions[i]));\r\n            pos = this.parameterPositions[i] + 1;\r\n        }\r\n\r\n        if (pos < query.length) {\r\n            queryParts.push(query.substring(pos));\r\n        }\r\n\r\n        let queryWithParameterValues = \"\";\r\n        for (let i = 0; i < this.parameterPositions.length; i++) {\r\n            queryWithParameterValues += queryParts[i] + this.parameterValues[i];\r\n        }\r\n\r\n        if (queryParts.length > this.parameterPositions.length) {\r\n            queryWithParameterValues += queryParts[queryParts.length - 1];\r\n        }\r\n\r\n        return queryWithParameterValues;\r\n    }\r\n\r\n}","import { DatabaseData, SendingStatementsMessageFromServer } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { DatabaseTool, QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { DatabaseLongPollingListener } from \"../../tools/database/DatabaseLongPollingListener.js\";\r\nimport { stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { PreparedStatementHelper } from \"./DatabasePreparedStatement.js\";\r\n\r\nexport class ConnectionClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Connection\", module, \"Ein Connection-Objekt repräsentiert die Verbindung zu einer Datenbank auf www.sql-ide.de\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let preparedStatementType = <Klass>module.typeStore.getType(\"PreparedStatement\");\r\n        let statementType = <Klass>module.typeStore.getType(\"Statement\");\r\n\r\n        this.addMethod(new Method(\"createStatement\", new Parameterlist([\r\n        ]), statementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(statementType);\r\n                stmt.intrinsicData[\"ConnectionHelper\"] = ch;\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein Statement-Objekt, mit dem Statements zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"prepareStatement\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), preparedStatementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(preparedStatementType);\r\n                stmt.intrinsicData[\"Helper\"] = new PreparedStatementHelper(ch, query);\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein PreparedStatement-Objekt, mit dem Anweisungen zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                ch.close();\r\n\r\n            }, false, false, 'Schließt die Verbindung zur Datenbank.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ConnectionHelper {\r\n\r\n    database: DatabaseTool;\r\n    databaseData: DatabaseData;\r\n    token: string;\r\n    longPollingListener: DatabaseLongPollingListener;\r\n\r\n    constructor(private main: Main) {\r\n\r\n        main.getInterpreter().registerDatabaseConnection(this);\r\n\r\n    }\r\n\r\n    connect(code: string, callback: (error: string) => void) {\r\n        let that = this;\r\n        this.main.networkManager.fetchDatabaseAndToken(code, (dbData, token, error) => {\r\n            if (error == null) {\r\n                that.token = token;\r\n                that.databaseData = dbData;\r\n                that.database = new DatabaseTool(that.main);\r\n                that.database.initializeWorker(dbData.templateDump, dbData.statements, (error) => {\r\n\r\n                    that.longPollingListener = new DatabaseLongPollingListener(that.main.networkManager,\r\n                        that.token, (firstNewStatementIndex, newStatements, rollbackToVersion) => {\r\n                            that.onServerSentStatements(firstNewStatementIndex, newStatements, rollbackToVersion);\r\n                        })\r\n\r\n                    that.longPollingListener.longPoll();\r\n                    callback(null);\r\n                });\r\n            } else {\r\n                callback(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    close() {\r\n        if (this.longPollingListener != null) {\r\n            this.longPollingListener.close();\r\n            this.longPollingListener = null;\r\n        }\r\n\r\n        if(this.database != null){\r\n            this.database.close();\r\n            this.database = null;\r\n        }\r\n\r\n    }\r\n\r\n    skipNextServerSentStatement: boolean = false;\r\n    onServerSentStatements(firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) {\r\n\r\n        if(this.skipNextServerSentStatement){\r\n            this.skipNextServerSentStatement = false;\r\n            return;\r\n        }\r\n\r\n        if (rollbackToVersion != null) {\r\n            // Rollback\r\n            this.databaseData.statements.splice(rollbackToVersion);\r\n            this.database.initializeWorker(this.databaseData.templateDump, this.databaseData.statements);\r\n            return;\r\n        } else {\r\n            this.executeStatementsFromServer(firstNewStatementIndex, newStatements);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    executeStatementsFromServer(firstStatementIndex: number, statements: string[],\r\n        callback?: (error: string) => void) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            if(callback) callback(\"Keine Datenbankverbindung.\");\r\n            return;\r\n        }\r\n\r\n        let currentDBVersion = this.databaseData.statements.length;\r\n        let delta = currentDBVersion - firstStatementIndex + 1; // these statements are already there\r\n        if (delta >= statements.length) {\r\n            if(callback) callback(null);\r\n            return;\r\n        }\r\n        statements = statements.slice(delta);\r\n        this.databaseData.statements = this.databaseData.statements.concat(statements);\r\n\r\n        this.database.executeWriteQueries(statements, () => {\r\n            if (callback != null) callback(null);\r\n        }, (errorMessage) => {\r\n            if (callback != null) callback(errorMessage);\r\n        })\r\n    }\r\n\r\n    executeWriteStatement(query: string, callback: (error: string, lastRowId: number) => void, retrieveLastRowId: boolean = false) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", 0);\r\n        }\r\n\r\n        let that = this;\r\n        let oldStatementIndex = that.databaseData.statements.length;\r\n        this.database.executeQuery(\"explain \" + query, () => {\r\n\r\n            that.skipNextServerSentStatement = true;\r\n            that.main.networkManager.addDatabaseStatement(that.token, oldStatementIndex,\r\n                [query], (statementsBefore, new_version, errorMessage) => {\r\n                    if (errorMessage != null) {\r\n                        callback(errorMessage, 0);\r\n                        return;\r\n                    }\r\n\r\n                    that.executeStatementsFromServer(oldStatementIndex + 1, statementsBefore, (error: string) => {\r\n\r\n                        that.database.executeWriteQueries([query], () => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (!retrieveLastRowId) {\r\n                                callback(null, 0);\r\n                                return;\r\n                            }\r\n                            that.executeQuery(\"select last_insert_rowid()\", (error, data) => {\r\n                                callback(null, data.values[0][0]);\r\n                            })\r\n                        }, (errorMessage) => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (callback != null) callback(errorMessage, 0);\r\n                            // try rollback so that server doesn't store this statement\r\n                            that.main.networkManager.rollbackDatabaseStatement(that.token, that.databaseData.statements.length, () => {})\r\n                        })\r\n                \r\n\r\n                    });\r\n\r\n                })\r\n\r\n        }, (error) => {\r\n            callback(error, 0);\r\n        })\r\n\r\n    }\r\n\r\n    executeQuery(query: string, callback: (error: string, data: QueryResult) => void) {\r\n\r\n        if (this.database == null || this.longPollingListener == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", null);\r\n            return;\r\n        }\r\n\r\n        this.database.executeQuery(query, (results: QueryResult[]) => {\r\n            callback(null, results[0]);\r\n        }, (error: string) => {\r\n            callback(error, null);\r\n        })\r\n\r\n    }\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\n\r\nexport class DatabaseManagerClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DatabaseManager\", module, \"Über die statische Methode DatabaseManager.getConnection(String code) kann die Verbindung zu einer Datenbank auf www.sql-ide.de aufgebaut werden.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let connectionType = <Klass>module.typeStore.getType(\"Connection\");\r\n \r\n        this.addMethod(new Method(\"getConnection\", new Parameterlist([\r\n            { identifier: \"code\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), connectionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let code: string = parameters[1].value;\r\n\r\n                let main = module.main;\r\n                let interpreter = module.main.getInterpreter();\r\n                if(main.isEmbedded()){\r\n                    interpreter.throwException(\"Verbindung zu einer Datenbank kann nur von www.online-ide.de aus aufgebaut werden.\");\r\n                    return null;\r\n                }\r\n\r\n                let ch: ConnectionHelper = new ConnectionHelper(<Main>module.main);\r\n                interpreter.pauseForInput();\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n                ch.connect(code, (error: string) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error == null){\r\n                        let connectionRuntimeObject = new RuntimeObject(connectionType);\r\n                        connectionRuntimeObject.intrinsicData[\"Helper\"] = ch;\r\n                        interpreter.resumeAfterInput({value: connectionRuntimeObject, type: connectionType}, true);\r\n                    } else {\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                    }\r\n                })\r\n\r\n                return;\r\n\r\n            }, false, true, 'Baut eine Verbindung mit einer Datenbank auf www.sql-ide.de auf. Gibt ein Connection-Objekt zurück, das diese Verbindung repräsentiert.',\r\n            false));\r\n\r\n    }\r\n\r\n}","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType, longPrimitiveType, LongType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\nimport { ResultSetClass } from \"../../runtimelibrary/database/ResultSet.js\";\r\nimport { DatabaseStatementClass } from \"../../runtimelibrary/database/DatabaseStatement.js\";\r\nimport { ConnectionClass } from \"../../runtimelibrary/database/Connection.js\";\r\nimport { DatabaseManagerClass } from \"../../runtimelibrary/database/DatabaseManager.js\";\r\nimport { DatabasePreparedStatementClass } from \"../../runtimelibrary/database/DatabasePreparedStatement.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType); \r\n        this.typeStore.addType(longPrimitiveType); \r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(LongType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n        this.typeStore.addType(new ResultSetClass(this));\r\n        this.typeStore.addType(new DatabaseStatementClass(this));\r\n        this.typeStore.addType(new DatabasePreparedStatementClass(this));\r\n        this.typeStore.addType(new ConnectionClass(this));\r\n        this.typeStore.addType(new DatabaseManagerClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[],\r\n    jsonFilename?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n        if(this.config.jsonFilename == null) this.config.jsonFilename = \"workspace.json\";\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", this.config.jsonFilename);\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n    url?: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    async initJavaOnlineDivs() {\r\n        \r\n        let divsWithScriptLists:[JQuery<HTMLElement>, JOScript[]][] = [];\r\n\r\n        jQuery('.java-online').addClass('notranslate').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            \r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let srcAttr = $script.attr('src');\r\n                let text = $script.text().trim();\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: text\r\n                };\r\n                if(srcAttr != null) script.url = srcAttr;\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            divsWithScriptLists.push([$div, scriptList])\r\n\r\n        });\r\n\r\n        for(let dws of divsWithScriptLists){\r\n            await this.initDiv(dws[0], dws[1]);\r\n        }\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    async initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        for(let script of scriptList){\r\n            if(script.url != null){\r\n                const response = await fetch(script.url)\r\n                script.text = await response.text()\r\n            }\r\n        }\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(\"spritesheet\",  prefix + \"assets/graphics/spritesheet.json\")\r\n        .add(\"steve\", prefix +\"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n        // .add('assets/graphics/robot/minecraft_grass.png')\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"names":["TokenType","Visibility","booleanPrimitiveTypeCopy","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","linefeed","keywordList","EscapeSequenceList","Type","constructor","onlyFirstPass","usagePositions","Map","documentation","toTokenType","clearUsagePositions","this","PrimitiveType","initialValue","description","equals","type","getResultType","operation","secondOperandType","opTypeMap","operationTable","canCastTo","canCastToMap","getCastInformation","allowsNull","valueToString","value","Attribute","name","updateValue","isStatic","visibility","isFinal","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","p","parameters","hasGenericTypes","implements","m","length","i","myParameter","mParameter","hasEllipsis","isEllipsis","getParameterType","index","getParameter","getReturnType","getParameterCount","getParameterList","getSignatureWithReturnParameter","getCompletionLabel","label","getTypeIdentifier","arrayOfType","getCompletionSnippet","leftBracketAlreadyThere","snippet","isVoidReturnDelta","debugOutput","compute","firstOperand","secondOperand","castTo","computeId","s","map","tv","join","RuntimeObject","klass","intrinsicData","class","initializeAttributeValues","getValue","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","object","baseClass","LabelManager","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","correctPositionsAfterInsert","insertPosition","insertedLength","ln","position","registerSwitchStatement","switchStatement","push","insertJumpNode","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","markJumpDestination","offset","labeledNode","set","removeNode","n","indexOf","newNode","registerJumpDestination","ntr","resolveNodes","noOp","jn","dest","get","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","module","typeVariables","isTypeVariable","typeVariablesReady","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","StaticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","a","getNonGenericClass","k","isGenericVariantFrom","getNonGenericIdentifier","implementsInterface","i1","getThisOrExtendedInterface","getImplementedInterface","i2","registerUsedSystemClasses","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","Interface","cda","multiples","ArrayType","getPostConstructorCallbacks","c","callbacks","concat","getCompletionItems","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","filterText","command","title","arguments","Method","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","replace","pushStaticInitializationPrograms","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","getMethodBySignature","setBaseClass","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","filter","baseClassUptoVisibility","protected","found","m1","upToVisibilityInBaseClass","a1","hasConstructor","hasParameterlessConstructor","hasConstructorWithParameters","getParameterlessConstructor","getConstructor","parameterTypes","classIdentifier","constructors","findSuitableMethods","getMethodsThatFitWithCasting","searchConstructor","methodList","staticMethods","error","getMethod","getAttribute","foundButInvisible","attributeNotFound","baseClassAttribute","Math","min","shouldImplement","checkInheritance","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","hasAncestorOrIs","maxLength","private","clone","newKlass","Object","create","slice","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","suits","mParameterType","givenType","mParameterTypeEllispsis","j","typeString","getVisibilityUpTo","objectType","currentClassContext","UnboxableKlass","unboxableAs","includes","Error","lengthAttribute","intPrimitiveType","referenceElement","array","destType","s1","ObjectClass","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indent","indentString","RegExp","stringWrap","nullToString","floatToString","val","Number","isInteger","IntPrimitiveType","init","longPrimitiveType","floatPrimitiveType","doublePrimitiveType","negation","booleanPrimitiveType","automatic","needsStatement","charPrimitiveType","String","fromCharCode","trunc","StringPrimitiveType","stringClass","forEach","declaration","charAt","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","startsWith","toLocaleLowerCase","toLocaleUpperCase","substring","trim","lastIndexOf","pattern","regExp","match","strings","split","values","err","nullAllowedFor","typeAndNull","OperandIsNull","checkNotNull","voidPrimitiveType","longConstant","LexerState","charCodeAt","varType","IntegerType","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","parseInt","v0","v1","sign","toString","LongType","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","isNaN","Infinity","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","getColorInfo","red","green","blue","alpha","m2","m3","ColorHelper","static","predefinedColors","substr","CompilerStatus","endChar","Lexer","colorLexer","spaceTokens","correspondingBracket","lex","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","d","foundToken","checkClosingBracket","openBracket","next","char","specialCharToken","pushToken","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","t","pushError","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","parseStringLiteralEscapeCharacter","StringLines","restOfLine","currentStringLine","lastLine","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","Formatter","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","model","ch","options","token","edits","format","Promise","resolve","deleteOverlappingRanges","e","e1","splice","delta","provideDocumentFormattingEdits","editor","EndOfLinePreference","LF","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","switchTheme","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","key","keys","cssColors","style","setProperty","highlightColor","SymbolTable","parentSymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","getImitation","imitation","st","maxStackPos","variable","stackPos","stackframeSize","getLocalVariableCompletionItems","completionItems","Snippet","Variable","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","EnumRuntimeObject","en","enumValue","Enum","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","getOrdinal","valueIdentifier","enumInfo","enumObject","CodeGenerator","initStackFrameNodes","startAdhocCompilation","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","start","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","getInheritanceQuickFix","annotation","cie","signatureMap","cieType","editsProvider","uri","resource","edit","getSuperconstructorCalls","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","checkIfMethodIsVirtual","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","mo","getModules","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","nullTypeForbidden","checkIfAssignmentInstedOfEqual","ensureAutomaticToString","codepos","textposition","automaticToString","toStringMethod","insertOrPushStatements","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","insertStatements","isArray","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","openBreakScope","openContinueScope","pushBreakNode","breakNode","pushContinueNode","continueNode","closeBreakScope","breakTargetLabel","lm","breakNodes","bn","closeContinueScope","continueTargetLabel","continueNodes","breakOccured","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","pushCastToStatement","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","caseNodes","caseNode","caseTerm","info","ls","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","continueLabelIndex","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","convertedLeftType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","Parser","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","parse","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","expect","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","op","operatorPrecedence","isEnd","comesToken","getCurrentPosition","getEndOfCurrentToken","classDefinitions","oldPos","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","checkIfStatementHasNoEffekt","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","JsonTool","primitiveTypes","toJson","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","fromJson","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","TypeResolver","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","addFromJsonMethod","getInterpreter","addToJsonMethod","classesOrEnums","cn","mn","setupMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","Compiler","compilerStatus","compiledButNothingToRun","compile","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","MainEmbedded","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","ListIteratorImplClass","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","ArrayListClass","collectionInterface","typeA","tvA","listInterface","iteratorType","o","ah","ListHelper","getIterator","r","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","executeImmediatelyInNewStackframe","peek","peek_last_or_null","peek_first_or_null","removeLast_or_error","addLast","addFirst","removeFirstOccurrence","peek_or_null","poll_or_null","removeFirst_or_error","CollectionClass","iterableInterface","IterableClass","IteratorClass","ListClass","StackClass","vectorType","VectorClass","SetClass","SetIteratorImplClass","MapHelper","SetIteratorHelper","SetHelper","console","log","adAll","addToSet","delete","HashSetClass","setInterface","mh","LinkedHashSetClass","QueueClass","DequeClass","QueueInterface","LinkedListClass","dequeInterface","ConsoleClass","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","getGraphicsDiv","showProgramEnd","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","InputManager","readInput","callback","defaultValue","printManager","dvt","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","NotifierClient","networkManager","unsentMessages","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","exception","sendUpdates","CacheManager","fetchTemplateFromCache","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","then","arrayBuffer","buffer","Uint8Array","catch","saveTemplateToCache","templateDump","put","Response","self","caches","open","NetworkManager","$updateTimerDiv","sqlIdeURL","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","initializeTimer","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","sendCreateWorkspace","w","random","entity","sendCreateFile","sendDuplicateWorkspace","workspace_id","workspace","sendDistributeWorkspace","klasse","student_ids","class_id","sendSetSecret","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","sendCreateRepository","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendDeleteWorkspaceOrFile","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","fetchDatabaseAndToken","code","fetchDatabase","database","errormessage","cacheManager","based_on_template_id","pako","inflate","fetchTemplate","template","xhrFields","responseType","addDatabaseStatement","version_before","statements_before","new_version","rollbackDatabaseStatement","current_version","DebuggerElement","caption","children","isOpen","getLevel","getIndent","render","$debuggerElement","$deFirstLine","canOpen","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","$childContainer","removeAllChildren","html","child","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","AdhocCompiler","ModuleStore","Module","resolvedTypeAndModule","codeGeneratorErrors","Evaluator","programMap","compiler","expression","pmEntry","compilation","evaluate","getDebugger","lastSymboltable","Workspace","evaluator","toExportedWorkspace","modules","toExportedModule","alterAdditionalLibraries","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","getModuleByMonacoModel","Dialog","$dialog","$dialogMain","heading","$div","addDiv","subHeading","placeholder","buttons","$buttonRow","button","waitMessage","$message","close","addCheckbox","ischecked","$checkbox","$description","prop","is","WorkspaceImporter","dialog","pathDescription","$fileInputButton","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","firstWorkspace","wse","text_before_revision","submitted_date","student_edited_after_revision","setWorkspaceActive","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","enabled","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","getElementIndex","insertElement","insertIndex","$elements","prepend","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","Helper","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","setTextAfterFilename","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","ps","setElementClass","setCaption","Accordion","$html","panel","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","$result","Debugger","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","enable","disable","showData","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","ActionManager","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","registerAction","active","isActive","setActive","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","ProgramPrinter","$bottomDiv","$pcodeTab","showNode","initGUI","printProgram","printModuleToBottomDiv","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","ConsoleEntry","withBottomBorder","$consoleEntry","$firstLine","span","valueString","detachValue","MyConsole","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","initConsoleClearButton","$consoleClear","layout","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","javaOnlineFont","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","programHasMethodCalls","executeInStepMode","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","showTab","consoleTop","commandEntry","resultEntry","detachValues","ce","showError","Main","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","clearErrors","clearExceptions","parents","ErrorManager","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","showHomeWorkRevisionButton","hideHomeworkRevisionButton","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","attachToWorkspaces","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","BottomDiv","programPrinter","homeworkManager","printCurrentlyExecutedModule","showHomeworkTab","hideHomeworkTab","showHideDbBusyIcon","displayValue","MyCompletionItemProvider","triggerCharacters","provideCompletionItems","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","MyHoverProvider","provideHover","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","diagnostics","isPreferred","MyReferenceProvider","provideReferences","referencePositions","upInCurrentModule","up","MyColorProvider","provideDocumentColors","getCompiler","provideColorPresentations","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","Editor","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","setFontSize","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","resolveRenameLocation","currentlyEditedModule","rejectReason","provideRenameEdits","resourceEdits","usagePositionsInModule","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","MainMenu","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","SpeedControl","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","setInterpreter","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","getSpeedInStepsPerSecond","stepsPerSecond","setSpeedInStepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","ProgramControlButtons","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","each","back","distributeWorkspace","registerOneTimeBackButtonListener","WorkspaceSettingsDialog","currentLibraries","library","cbs","checkboxState","changed","newLibs","lib","used","ProjectExplorer","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","workspaceAccordionElement","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCount","errorCountS","showRepositoryButtonIfNeeded","helperHistory","repositoryButtonDone","stop","nonSystemModules","newFileHelperDone","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","showProgramPointerPosition","hideProgramPointerPosition","setExplorerColor","ZoomControl","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","convexhull","DiagramUnitCm","Diagram","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","setSize","adjustSizeAndElements","diagramElements","xMin","yMin","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","insertStyleElement","styles","ns","defs","refreshInlineStyles","selector","stylesForSelector","textContent","findFreeSpace","radius","fertig","xCm","yCm","isFree","insideX","insideY","DiagramElement","lines","backgroundColor","getRoutingRectangle","appendTo","withRaster","adjustToRaster","moveTo","createTextElement","font","getTextMetrics","textElement","bbox","getBBox","cmPerPx","addTextLine","alignment","bold","italics","$group","textPosYCm","maxWidthCm","center","onClick","metrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","ClassBox","diagram","withMethods","withAttributes","attachToClass","isSystemClass","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","hasSignatureAndFileOf","ArrowHead","position1Cm","position2Cm","sqrt","ex","ey","DiagramArrow","arrow","arrows","step","steps","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","ClassDiagram","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","clearAfterLogout","scd","classBoxes","workspaceId","classBox","deserialize","serializedClassDiagram","inactive","getClassBoxes","switchToWorkspace","cbs1","onlyUpdateIdentifiers","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","uscList1","usc","freePos","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","ListDiagram","objectDiagram","getSettingsElement","$selectElement","selected","rootIdentifier","getName","updateDiagram","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tExtends","tImplements","ObjectDiagram","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","currentTarget","intValue","updateSettings","$settingsDiv","RightDiv","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","adjustWidthToWorld","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isClassDiagramEnabled","isObjectDiagramEnabled","updateObjectDiagramSettings","Sliders","initSliders","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","ea","renderStudents","userDataList","ud","classDataList","Login","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","errorMessage","loginWithTicket","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","InconsistencyFixer","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","getRightDiv","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","Interpreter","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","prototype","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","initEditor","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","mainBase","flag","controlButtons","openHelper","KeyboardTool","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","unregisterListeners","kpc","isPressed","unsubscribeAllListeners","GamepadTool","gamepads","gamepad","axes","isGamepadButtonPressed","gamepadIndex","buttonIndex","gp","getGamepads","pressed","getGamepadAxisValue","axisIndex","isGamepadConnected","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","databaseConnectionHelpers","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","stepInto","return","oldStepOverNestingLevel","executeNode","breakpoint","relPos","casted","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","pauseForInput","resumeAfterInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","oldState","popPriorValue","actionId","clearActorLists","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","registerDatabaseConnection","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","WorldClass","groupType","shapeType","mouseListenerType","breite","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","getDefaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","WorldHelper","WorldContainer","Container","sourceFrame","destinationFrame","renderer","projection","projectionMatrix","renderTexture","bind","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setAllHitpolygonsDirty","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","hasRobot","robotWorldHelper","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","Actor","methodSignatures","actorListIdentifier","ActorHelper","isKeyDown","setTimerPaused","registerWorldType","testdestroyed","AlignmentClass","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","punkte","punkt","abstandPunktZuStrecke","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","q","lambda","fx","fy","s2","abstandPunktZuGerade","l","punkte1","punkte2","istGeschlossen1","istGeschlossen2","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","ShapeClass","directionType","vector2Class","helper","sh","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","ShapeHelper","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","bringOnePlaneFurtherToFront","container","highestIndex","getChildIndex","setChildIndex","bringOnePlaneFurtherToBack","belongsToGroup","addToDefaultGroupAndSetDefaultVisibility","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","index1","getCollidingShapes","groupHelper","collidingShapes","getParentGroup","BitmapClass","colorType","pointsX","pointsY","rh","BitmapHelperNew","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","initGraphics","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","uploadData","baseTexture","update","intColorToHexRGB","setzeFarbeRGBA","g","getFarbe","getAlpha","FilledShapeClass","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgbaToHex","rgb","FilledShapeHelper","borderAlpha","fsh","CircleClass","mx","my","CircleHelper","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","SectorClass","startAngle","endAngle","SectorHelper","drawRadii","startAngleRad","endAngleRad","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ArcClass","ri","ra","ArcHelper","beginHole","endHole","r2","ColorClass","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","EllipseClass","rx","ry","EllipseHelper","setRadiusX","setRadiusY","drawEllipse","CollisionPairClass","GroupClass","collisionPairType","collisionPairArrayType","GroupHelper","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","doCache","oldIndex","groupHelperCopy","roCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChild","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","KeyClass","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","PolygonClass","shapeClass","closeAndFill","pointsNumber","ph","PolygonHelper","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","setPoint","coordinates","setAllPointsUntransformed","RectangleClass","RectangleHelper","RepeatTypeClass","RoundedRectangleClass","RoundedRectangleHelper","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","ScaleModeClass","SoundKlass","HitPolygonStore","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","SpriteClass","scaleModeClass","spriteLibraryEntry","SpriteHelper","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","setTileOffset","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","TileClass","tileScale","SpriteLibraryClass","SpriteLibrary","sle","TextClass","fontsize","TextHelper","setFontsize","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","tm","TextMetrics","measureText","InputClass","GamepadClass","MathClass","E","exp","log10","tan","asin","acos","atan","MathToolsClass","vectorArrayClass","xIndex","yIndex","returnArray","pVector","SystemClass","deltaTimeMillis","printStream","PrintStreamClass","SystemToolsClass","KeyListener","Runnable","TimerClass","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","MapClass","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","HashMapClass","TriangleClass","LocalDateTimeClass","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","DayOfWeekEnum","MonthEnum","LineClass","Vector2Class","alphaDeg","oRet","MouseListenerInterface","MouseAdapterClass","WebSocketClientClass","messageType","setUserData","getUserData","getterList","getter","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","WebSocketClass","webSocketClientType","systemClassType","WebSocketHelper","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","ProcessingClass","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","ProcessingHelper","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","TurtleClass","TurtleHelper","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","steckenzugSchneidetStreckenzug","touchesAtLeastOneFigure","touchesColor","farbe","touchesShape","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","GNGEreignisbehandlungHelper","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","unregisterEvents","onKeyDownMethod","invokeMethod","unshift","liste","GNGZeichenfensterClass","aktionsempfaengerType","aktionsempfaenger","GNGRechteckClass","GNGFarben","GNGBaseFigurClass","moveAnchor","grad","winkel","sichtbarkeit","GNGAktionsempfaengerInterface","GNGDreieckClass","GNGKreisClass","GNGTurtleClass","farbeString","objectShapeHelper","GNGTextClass","GNGFigurClass","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","RandomClass","bound","from","DirectionClass","Patcher","patch","patches","new","patchedText","KeyEvent","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","Float32Array","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","RobotCubeFactory","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","brickMaterial","getBrick","getGrassBrick","getGrassPlane","mesh","makePlane","widthX","widthZ","spriteOrColor","getPlaneMaterial","getMarker","marker","getSidePlanes","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","getHorizontalPlanes","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","makeClouds","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","makeSprite3d","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","RobotClass","robotWorldType","RobotHelper","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","RobotWorldClass","RobotWorldHelper","maximumHeight","addBrick","setMarker","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","adjustRobotPositions","robot","getBrickCount","markerColumn","brickColumn","northSprite","control","CameraOrbitControl","angles","oldHeight","brick","setToXY","adjustMarkerHeight","removeBrick","hasBrickColor","getMarkerColor","removeMarker","brickList","setDimensions","getNumberOfBricks","initString","lowerCaseCharToColor","upperCaseCharToColor","rows","maxColumns","row","rowLength","brickColor","markerColor","gibtFarbe","Direction","names","deltas","getAngle","getDeltas","fetchRobotWorld","Model","gltf","meshes","sm","crop","rw","newX","newY","param","marke","ResultSetClass","wasNull","typeIdFirstUppercase","columnIndex","rsh","columnCount","isAfterLast","columnLabel","getColumnIndex","ResultsetHelper","columns","DatabaseStatementClass","resultSetType","query","connectionHelper","executeQuery","rs","executeWriteStatement","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","postMessageToClient","db","SQL1","SQL","createDb","worker","buff","results","exec","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","initializeWorker","queries","callbackAfterInitializing","jo_doc","querySuccessCallback","queryErrorCallback","execQuery","shift","sql","params","executeWriteQueries","dump","sqliteMagicBytes","DatabaseLongPollingListener","onServerSentStatementsCallback","longPoll","listenerIdentifier","resp","firstNewStatementIndex","newStatements","rollbackToVersion","DatabasePreparedStatementClass","psh","checkQuery","getQueryWithParameterValuesFilledIn","PreparedStatementHelper","prepareStatement","insideQuotation","parameterPositions","parameterValues","queryParts","queryWithParameterValues","ConnectionClass","preparedStatementType","statementType","stmt","ConnectionHelper","skipNextServerSentStatement","dbData","databaseData","longPollingListener","onServerSentStatements","executeStatementsFromServer","firstStatementIndex","retrieveLastRowId","oldStatementIndex","DatabaseManagerClass","connectionType","connectionRuntimeObject","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","patched","f1","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","decoration","getAllDecorations","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","BaseModule","GNGModule","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","getFirstModule","includeSystemModules","excludedModuleName","removeModuleWithFile","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","setColor","otherHeight","newOtherHeight","otherWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeAllFiles","removeFile","addHint","script","$fileDiv","hint","onDelete","setFirstFileActive","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","markFile","EmbeddedIndexedDB","indexedDB","onsuccess","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","writeScript","scriptId","objectStore","removeScript","getScript","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","initWorkspace","$filesListDiv","configJson","hideEditor","withPCode","withErrorList","jsonFilename","eraseDokuwikiSearchMarkup","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","deleteScriptsInDB","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","EmbeddedStarter","mainEmbeddedList","initJavaOnlineDivs","divsWithScriptLists","$script","srcAttr","dws","initDiv","fetch","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","load"],"sourceRoot":""}