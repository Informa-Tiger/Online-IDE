{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","canCastTo","length","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","switchStatement","push","position","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","ln","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","caseFirst","sensitivity","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","LexerState","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","tokens","errors","currentChar","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","lexShiftLeft","lexShiftRight","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","checkIfMethodIsVirtual","getParameterList","superconstructorCallEnsured","scopeNode","stm","superConstructorCall","constructorCall","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","getMethodBySignature","conditionType","binaryOp","operator","nodes","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","elementCount","ec","pushEmptyArray","arrayType","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","parameterStatements","allStatements","constructorOperands","programPointer","staticClassContext","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseUnary","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","annotation","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","m1","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","ajax","url","request","successCallback","errorCallback","showNetworkBusy","$","async","data","contentType","success","response","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","forceUpdate","sendUpdates","$rect","css","sendIfNothingIsDirty","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","updateWorkspaces","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","version","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","alert","workspaceListPanel","sortElements","withSort","createNewWorkspace","path","isFolder","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indent","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","elements","dontSortElements","addPanel","$newFolderAction","preventDefault","pathArray","getCurrentlySelectedPath","addFolder","newElement","newFolderCallback","addAction","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","selectedElement","getSelectedElement","name1","path1","name2","path2","nameWithPath1","nameWithPath2","compareWithPath","insertIndex","getElementIndex","prepend","$htmlFirstLine","elementAtIndex","$element","renderElement","insertElement","renameElement","$accordionDiv","close","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","button","targetGrow","hasClass","parts","animate","element1","currentlyDraggedElement","moveElement","sort","b","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","pathIsCollapsed","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","lastSymboltable","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","pmEntry","compilation","compile","getDebugger","libraries","libaries","Workspace","setAdditionalLibraries","restoreFromData","currentFileId","currentlyOpenModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","SoundTools","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","init","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorDiv","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","text_before_revision","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","submitted_date","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m2","moduleWithWorkspace","setWorkspaceActive","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","detail","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","time","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","resourceEdits","usagePositionsInModule","Dialog","$dialog","$dialogMain","colorStyle","placeholder","$buttonRow","ischecked","$checkbox","$description","prop","is","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","$link","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","alterAdditionalLibraries","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","student_edited_after_revision","sendCreateFile","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","sendCreateWorkspace","enableNewButton","renderSynchronizeButton","removeWorkspace","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","createElement","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","filename","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","hash","position1Cm","position2Cm","sqrt","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","currentWorkspaceId","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","startAnimations","$loginSpinner","loginHappened","loginRequest","username","password","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","showLoginForm","clearAfterLogout","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","isFirstStatement","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","getCompiler","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","getModule","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","socket","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m3","groupType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","identity","translate","onChange","setAllHitpolygonsDirty","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","TARGET_FPMS","app","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Container","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","setHitPolygonDirty","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","shapeHelper","displayObject","destroy","parseColorToOpenGL","renderer","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p1","p2","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","abstandPunktZuStrecke","q","lambda","fx","fy","s2","shapeType","vector2Class","helper","getCenterX","getCenterY","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","shape","sh1","collidesWith","defineCenter","angleDeg","setVisible","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","polygonBerührtPolygonExakt","apply","bounds","screen","cX","cY","scaleX","scaleY","belongsToGroup","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","sprite","addToDefaultGroup","bh","BitmapHelperNew","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","scaleMode","Texture","Sprite","baseTexture","update","red","green","blue","hex","intColorToHexRGB","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","startAngle","endAngle","drawRadii","startAngleRad","endAngleRad","SectorHelper","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","ArcHelper","beginHole","endHole","r2","colorName","intColor","intColorToRGB","cid","o1","d1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","cacheAsBitmap","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","convexhull","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","insertPoint","movePointTo","isClosed","points1","PolygonHelper","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","brt","BaseRenderTexture","LINEAR","RenderTexture","dob","renderTexture","SpriteHelper","prefix","javaOnlineDir","sheet","Loader","resources","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","deltaTimeMillis","printStream","timerRunning","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","xIndex","yIndex","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","count","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","location","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","client","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastPosX","lastPosY","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","drawTurtle","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","newLineElement","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","angleRad","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","main1","methodAST","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","setSpeedInStepsPerSecond","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhMJ,CAAYA,MAAS,KAmMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAAUS,MAAQ,SATK,IAWvBT,EAAUU,aAAe,SAXF,IAYvBV,EAAUW,YAAc,QAZD,IAavBX,EAAUY,aAAe,SAbF,IAcvBZ,EAAUa,WAAa,OAdA,IAevBb,EAAUc,iBAAmB,aAfN,IAgBvBd,EAAUe,YAAc,QAhBD,IAiBvBf,EAAUgB,YAAc,QAjBD,IAkBvBhB,EAAUiB,gBAAkB,YAlBL,IAmBvBjB,EAAUkB,cAAgB,UAnBH,IAoBvBlB,EAAUmB,iBAAmB,aApBN,IAqBvBnB,EAAUoB,eAAiB,WArBJ,IAsBvBpB,EAAUqB,iBAAmB,aAtBN,IAuBvBrB,EAAUsB,cAAgB,UAvBH,IAwBvBtB,EAAUuB,eAAiB,WAxBJ,IAyBvBvB,EAAUwB,kBAAoB,cAzBP,IA0BvBxB,EAAUyB,aAAe,SA1BF,IA2BvBzB,EAAU0B,UAAY,MA3BC,IA4BvB1B,EAAU2B,WAAa,OA5BA,IA6BvB3B,EAAU4B,cAAgB,UA7BH,IA8BvB5B,EAAU6B,YAAc,QA9BD,IA+BvB7B,EAAU8B,eAAiB,WA/BJ,IAgCvB9B,EAAU+B,UAAY,MAhCC,IAiCvB/B,EAAUgC,YAAc,QAjCD,IAkCvBhC,EAAUiC,YAAc,QAlCD,IAmCvBjC,EAAUkC,cAAgB,UAnCH,IAoCvBlC,EAAUmC,aAAe,SApCF,IAqCvBnC,EAAUoC,gBAAkB,YArCL,IAsCvBpC,EAAUqC,YAAc,QAtCD,IAuCvBrC,EAAUsC,aAAe,SAvCF,IAwCvBtC,EAAUuC,kBAAoB,cAxCP,IAyCvBvC,EAAUwC,aAAe,SAzCF,IA0CvBxC,EAAUyC,eAAiB,WA1CJ,IAkDvBzC,EAAU0C,YAAc,KAlDD,IAmDvB1C,EAAU2C,aAAe,KAnDF,IAoDvB3C,EAAU4C,kBAAoB,KApDP,IAqDvB5C,EAAU6C,mBAAqB,KArDR,IAsDvB7C,EAAU8C,iBAAmB,KAtDN,IAuDvB9C,EAAU+C,kBAAoB,KAvDP,IAwDvB/C,EAAUgD,uBAAyB,MAxDZ,IA2DvBhD,EAAUiD,IAAM,KA3DO,IA4DvBjD,EAAUkD,MAAQ,KA5DK,IA6DvBlD,EAAUmD,OAAS,KA7DI,IA8DvBnD,EAAUoD,KAAO,KA9DM,IA+DvBpD,EAAUqD,eAAiB,KA/DJ,IAgEvBrD,EAAUsD,SAAW,KAhEE,IAiEvBtD,EAAUuD,YAAc,KAjED,IAkEvBvD,EAAUwD,YAAc,KAlED,IAmEvBxD,EAAUyD,YAAc,MAnED,IAoEvBzD,EAAU0D,WAAa,MApEA,IAqEvB1D,EAAU2D,MAAQ,KArEK,IAsEvB3D,EAAU4D,QAAU,KAtEG,IAuEvB5D,EAAU6D,aAAe,MAvEF,IAwEvB7D,EAAU8D,eAAiB,MAxEJ,IAyEvB9D,EAAU+D,MAAQ,MAzEK,IA0EvB/D,EAAUgE,SAAW,MA1EE,IA2EvBhE,EAAUiE,WAAa,KA3EA,IA4EvBjE,EAAUkE,eAAiB,MA5EJ,IA6EvBlE,EAAUmE,gBAAkB,MA7EL,IA8EvBnE,EAAUoE,yBAA2B,MA9Ed,IA+EvBpE,EAAUqE,mBAAqB,MA/ER,IAgFvBrE,EAAUsE,iBAAmB,MAhFN,IAiFvBtE,EAAUuE,UAAY,KAjFC,IAkFvBvE,EAAUwE,IAAM,MAlFO,IAmFvBxE,EAAUyE,GAAK,MAnFQ,IAoFvBzE,EAAU0E,IAAM,KApFO,IAsFvB1E,EAAU2E,aAAe,MAtFF,IAuFvB3E,EAAU4E,aAAe,MAvFF,IAwFvB5E,EAAU6E,YAAc,MAxFD,IAyFvB7E,EAAU8E,mBAAqB,OAzFR,IA0FvB9E,EAAU+E,oBAAsB,OA1FT,IA2FvB/E,EAAUgF,4BAA8B,QA3FjB,IA6FvBhF,EAAUiF,GAAK,KA7FQ,IA8FvBjF,EAAUkF,IAAM,KA9FO,IA+FvBlF,EAAUmF,MAAQ,KA/FK,IAgGvBnF,EAAUoF,UAAY,MAhGC,IAiGvBpF,EAAUqF,WAAa,MAjGA,IAkGvBrF,EAAUsF,mBAAqB,OAlGR,IAqGvBtF,EAAUuF,gBAAkB,KArGL,IAwGvBvF,EAAUwF,UAAY,KAxGC,IA0GvBxF,EAAUyF,MAAQ,KA1GK,IA2GvBzF,EAAU0F,SAAW,OA3GE,IA8GvB1F,EAAU2F,MAAQ,KA9GK,IAiHvB3F,EAAU4F,UAAY,MAjHC,IAoHvB5F,EAAU6F,GAAK,KApHQ,IAuHvB7F,EAAU8F,MAAQ,mBAvHK,IAwHvB9F,EAAU+F,IAAM,wBAxHO,IA2HvB/F,EAAUgG,QAAU,qBA3HG,IA8HvBhG,EAAUiG,eAAiB,mCA9HJ,IAiIvBjG,EAAUkG,QAAU,iBAjIG,IAmIvBlG,EAAUmG,gBAAkB,2BAnIL,GAuIjBC,EAAiD,CACxD,IAAKpG,EAAU0C,YACf,IAAK1C,EAAU2C,aACf,IAAK3C,EAAU4C,kBACf,IAAK5C,EAAU6C,mBACf,IAAK7C,EAAU8C,iBACf,IAAK9C,EAAU+C,kBAGf,IAAK/C,EAAUiD,IACf,IAAKjD,EAAU2F,MACf,IAAK3F,EAAUkD,MACf,IAAKlD,EAAUmD,OACf,IAAKnD,EAAUoD,KACf,IAAKpD,EAAUqD,eACf,IAAKrD,EAAUsD,SACf,KAAMtD,EAAU4F,UAChB,IAAK5F,EAAU6F,GACfQ,IAAMrG,EAAUuD,YAChB,IAAKvD,EAAUwD,YACf,IAAKxD,EAAU2D,MACf,IAAK3D,EAAU4D,QACf,IAAK5D,EAAUiE,WACf,IAAKjE,EAAUwE,IACf,IAAKxE,EAAUyE,GACf,IAAKzE,EAAU0E,IACf,IAAK1E,EAAUuF,gBAEf,IAAKvF,EAAUkF,IACf,IAAKlF,EAAUmF,MAEf,IAAKnF,EAAUwF,UACf,IAAKxF,EAAUyF,MAEf,MAAOzF,EAAU0F,SAGjB,IAAK1F,EAAU8F,MACf,KAAM9F,EAAU+F,IAGhB,KAAM/F,EAAUgG,QAChB,KAAMhG,EAAUsG,UAGTC,EAA6C,CACpD,MAASvG,EAAUU,aACnB,KAAQV,EAAUW,YAClB,MAASX,EAAUY,aACnB,IAAOZ,EAAUa,WACjB,UAAab,EAAUc,iBACvB,KAAQd,EAAUe,YAClB,KAAQf,EAAUgB,YAClB,SAAYhB,EAAUiB,gBACtB,OAAUjB,EAAUkB,cACpB,UAAalB,EAAUmB,iBACvB,QAAWnB,EAAUoB,eACrB,UAAapB,EAAUqB,iBACvB,OAAUrB,EAAUsB,cACpB,QAAWtB,EAAUuB,eACrB,WAAcvB,EAAUwB,kBACxB,MAASxB,EAAUyB,aACnB,GAAMzB,EAAU0B,UAChB,IAAO1B,EAAU2B,WACjB,OAAU3B,EAAU4B,cACpB,KAAQ5B,EAAU6B,YAClB,QAAW7B,EAAU8B,eACrB,GAAM9B,EAAU+B,UAChB,KAAQ/B,EAAUgC,YAClB,KAAQhC,EAAUiC,YAClB,OAAUjC,EAAUkC,cACpB,MAASlC,EAAUmC,aACnB,SAAYnC,EAAUoC,gBACtB,KAAQpC,EAAUqC,YAClB,MAASrC,EAAUsC,aACnB,WAActC,EAAUuC,kBACxB,KAAQvC,EAAUQ,KAClB,MAASR,EAAUS,MACnB,MAAST,EAAUwC,aACnB,QAAWxC,EAAUyC,gBAQd+D,EAAiD,CACxD,EAAK,KACL,EAAK,KACL,EAAK,KACLC,IAAM,IACN,IAAK,IACL,KAAM,M,qqCCnZH,IAAeC,EAAtB,WAUI,uBARO,KAAAC,eAAgB,EAEhB,KAAAC,eAAiC,IAAIC,IAIrC,KAAAC,cAAwB,GARnC,gDAwBQ,OAAO,OAxBf,4CA8BQC,KAAKH,eAAiB,IAAIC,QA9BlC,KAmCsBG,EAAtB,iD,sCAEWC,aAAoB,KAEpB,EAAAC,YAAsB,GAJjC,kDAUkBC,GACV,OAAOA,GAAQJ,OAXvB,oCAcyBK,EAAsBC,GAEvC,IAAIC,EAAYP,KAAKQ,eAAeH,GAEpC,OAAiB,MAAbE,EACO,KAGc,MAArBD,EACOC,EAAUD,EAAkBnH,YAGhCoH,EAAS,OA1BxB,gCA8BqBH,GACb,OAA6C,MAAtCJ,KAAKS,aAAaL,EAAKjH,cA/BtC,yCAkC8BiH,GACtB,OAAOJ,KAAKS,aAAaL,EAAKjH,gBAnCtC,GAA4CwG,GAwC/Be,EAmBT,WAAYlJ,EAAc4I,EAAYO,EAClCC,EAAmBC,EAAwBC,EAAkBf,GAAsB,UAlBvF,KAAAH,eAAyB,EAmBrBI,KAAK7G,WAAa3B,EAClBwI,KAAKI,KAAOA,EACZJ,KAAKW,YAAcA,EACnBX,KAAKY,SAAWA,EAChBZ,KAAKa,WAAaA,EAClBb,KAAKc,QAAUA,EACfd,KAAKH,eAAiB,IAAIC,IAC1BE,KAAKD,cAAgBA,GAIhBgB,EAAb,YAqFI,WAAYvJ,EAAcwJ,EAA8BC,EACpDC,EACAC,EAAqBP,EAAmBb,GAAsD,MAA9BqB,EAA8B,mEAC9F,2BAtFJxB,eAAyB,EAMzB,EAAAwB,eAAyB,EACzB,EAAAC,WAAqB,EASrB,EAAAC,8BAAwC,EAIxC,EAAAC,eAAiD,KAmE7C,EAAKpI,WAAa3B,EAClB,EAAKwJ,cAAgBA,EACrB,EAAKC,WAAaA,EAClB,EAAKE,WAAaA,EAClB,EAAKP,SAAWA,EAChB,EAAKC,WAAa,EAClB,EAAKd,cAAgBA,EACrB,EAAKqB,cAAgBA,EAEF,MAAfF,IAC0B,mBAAfA,EACP,EAAKM,OAASN,GAEd,EAAKO,QAAUP,EACfA,EAAYQ,OAAZ,OAIR,EAAKC,UAAYnK,EAAOwJ,EAAcY,GApBwD,2BAsB9F,YAAcZ,EAAca,WAA5B,+CAAwC,KAA/B9I,EAA+B,QACpC,GAA2B,GAAvBA,EAAC,eAA4B,CAC7B,EAAK+I,iBAAkB,EAAM,QAxByD,yFA4B9F,EAAKA,gBAAkB,EAAKA,iBAAuC,MAAnB,EAAKb,YAA2D,GAArC,EAAKA,WAAL,eA5BmB,EAvFtG,oDA0Be5J,GACP,GAAG2I,KAAK7G,YAAc9B,EAAE8B,WAAY,OAAO,EAC3C,GAAsB,MAAnB6G,KAAKiB,YAAoD,QAA9BjB,KAAKiB,WAAW9H,YAC1C,GAAmB,MAAhB9B,EAAE4J,YAAiD,QAA3B5J,EAAE4J,WAAW9H,WAAsB,OAAO,OAGrE,GAAG9B,EAAE4J,sBAAsBhB,GACvB,GAAG5I,EAAE4J,YAAcjB,KAAKiB,WACpB,OAAO,OAER,IAAIjB,KAAKiB,WAAWc,UAAU1K,EAAE4J,YACnC,OAAO,EAIf,GAAGjB,KAAKgB,cAAca,WAAWG,QAAU3K,EAAE2J,cAAca,WAAWG,OAAQ,OAAO,EAErF,IAAI,IAAI/K,EAAI,EAAGA,EAAI+I,KAAKgB,cAAca,WAAWG,OAAQ/K,IAAI,CACzD,IAAIgL,EAAcjC,KAAKgB,cAAca,WAAW5K,GAC5CiL,EAAa7K,EAAE2J,cAAca,WAAW5K,GAE5C,GAAGiL,EAAW9B,gBAAgBH,GAC1B,GAAGiC,EAAW9B,MAAQ6B,EAAY7B,KAC9B,OAAO,OAER,IAAI8B,EAAW9B,KAAK2B,UAAUE,EAAY7B,MAAO,OAAO,EAGnE,OAAO,IAtDf,oCA0DQ,OAA2C,GAAxCJ,KAAKgB,cAAca,WAAWG,QAC1BhC,KAAKgB,cAAca,WAAW7B,KAAKgB,cAAca,WAAWG,OAAS,GAAGG,aA3DvF,uCA+DqBC,GACb,OAAOpC,KAAKgB,cAAca,WAAWO,GAAOhC,OAhEpD,mCAmEiBgC,GACT,OAAOpC,KAAKgB,cAAca,WAAWO,KApE7C,sCAwEQ,OAAOpC,KAAKiB,aAxEpB,0CA4EQ,OAAOjB,KAAKgB,cAAca,WAAWG,SA5E7C,yCAgFQ,OAAOhC,KAAKgB,gBAhFpB,wDAuHQ,OAAsB,MAAnBhB,KAAKiB,WACGjB,KAAKiB,WAAW9H,WAAa,IAAM6G,KAAK2B,UAExC,QAAU3B,KAAK2B,YA1HlC,2CAgIQ,IAAIU,EAAQ,GAEW,MAAnBrC,KAAKiB,YAAoD,QAA9BjB,KAAKiB,WAAW9H,aAC3CkJ,GAASC,EAAkBtC,KAAKiB,YAAc,KAGlDoB,GAASrC,KAAK7G,WAAa,IAG3B,IADA,IAAI0I,EAAa7B,KAAKgB,cAAca,WAC3B5K,EAAI,EAAGA,EAAI4K,EAAWG,OAAQ/K,IAAK,CAExC,IAAI8B,EAAI8I,EAAW5K,GACnB,GAAG8B,EAAEoJ,WAEDE,GAASC,EADuBvJ,EAAEqH,KACGmC,aAAe,OAASxJ,EAAEI,gBAE/DkJ,GAASC,EAAkBvJ,EAAEqH,MAAQ,IAAMrH,EAAEI,WAG7ClC,EAAI4K,EAAWG,OAAS,IACxBK,GAAS,MAOjB,OAFAA,GAAS,MAzJjB,2CA+JyBG,GAEjB,GAAIA,EAAyB,OAAOxC,KAAK7G,WAAa,MAEtD,IAAIsJ,EAAU,GAEdA,GAAWzC,KAAK7G,WAAa,IAM7B,IAJA,IACIuJ,EADkC,MAAnB1C,KAAKiB,YAAoD,QAA9BjB,KAAKiB,WAAW9H,WACvB,EAAI,EAEvC0I,EAAa7B,KAAKgB,cAAca,WAC3B5K,EAAI,EAAGA,EAAI4K,EAAWG,OAAQ/K,IAAK,CAExC,IAAI8B,EAAI8I,EAAW5K,GACnBwL,GAAW,MAASxL,EAAI,IAAM4K,EAAWG,OAASU,GAAsB,IAAM3J,EAAEI,WAAa,IAEzFlC,EAAI4K,EAAWG,OAAS,IACxBS,GAAW,MAWnB,OANAA,GAAW,IAEW,MAAnBzC,KAAKiB,YAAoD,QAA9BjB,KAAKiB,WAAW9H,aAC1CsJ,GAAW,OAGRA,IA5Lf,kCA+LuBvK,GACf,MAAO,KAhMf,6BAmMkBkI,GACV,OAAOA,GAAQJ,OApMvB,oCAuMyBK,EAAsBC,GACvC,OAAO,OAxMf,8BA2MmBD,EAAsBsC,EAAqBC,GACtD,OAAO,OA5Mf,gCA+MqBxC,GACb,OAAO,IAhNf,6BAmNkBlI,EAAckI,GAAqB,OAAOlI,MAnN5D,GAA4ByH,GAwNfkD,EAAb,WAMI,WAAYhB,GAAsB,UAC9B7B,KAAK6B,WAAaA,EAClB7B,KAAK8C,YARb,8CAYQ9C,KAAK4B,GAAK,IAEV,IADA,IAAI3K,EAAI,EACDA,EAAI+I,KAAK6B,WAAWG,QACvBhC,KAAK4B,IAAM5B,KAAK6B,WAAW5K,GAAGmJ,KAAKjH,WAC/BlC,EAAI+I,KAAK6B,WAAWG,OAAS,IAC7BhC,KAAK4B,IAAM,MAEf3K,IAEJ+I,KAAK4B,IAAM,QArBnB,KAiDM,SAAUU,EAAkBlC,G,QAC9B,GAAGA,EAAI,eACAA,EAAI,cAAkB4B,OAAS,EAAE,CAChC,IAAIhJ,GAAaoH,EAAI,eAAsBA,EAAKjH,WAAa,aAA0C,QAA/B,EAAGiH,EAAI,4BAAwB,eAAEjH,YAAciH,EAAKjH,YAC1H,IAEF,OADGH,GAAKoH,EAAI,cAAkB2C,KAAI,SAAAC,GAAE,OAAIV,EAAkBU,EAAG5C,SAAO6C,KAAK,OAC9D,IAInB,OAAO7C,EAAI,eAAsBA,EAAKjH,WAAa,aAA0C,QAA/B,EAAGiH,EAAI,4BAAwB,eAAEjH,YAAciH,EAAKjH,W,sKC7Y/G,IAAM,EAAb,WAWI,WAAY+J,I,4FAA0B,SAPtC,KAAAC,cAAkD,GAS9CnD,KAAKoD,MAAQF,EAEblD,KAAKqD,4B,UAfb,O,EAAA,G,EAAA,gCAmBaC,GAEL,IAAIC,EAAYvD,KAAKwD,WAAWF,GAIhC,OAHsB,OAAnBC,aAAE,EAAFA,EAAI5C,cACH4C,EAAG5C,YAAY4C,GAEZA,IAzBf,kDA+BQvD,KAAKwD,WAAaC,MAAMzD,KAAKoD,MAAMM,sCAAsCC,KAAK,MAG9E,IADA,IAAIT,EAAQlD,KAAKoD,MACF,MAATF,GAAc,4BAEhB,YAAeA,EAAMM,WAArB,+CAAgC,KAAxBI,EAAwB,QAExB1L,EAAY,KACb0L,EAAIxD,gBAAgBH,IACnB/H,EAAQ0L,EAAIxD,KAAKF,cAGrB,IAAI2D,EAAW,CACXzD,KAAMwD,EAAIxD,KACVlI,MAAOA,GAGW,MAAnB0L,EAAIjD,cACHkD,EAAElD,YAAciD,EAAIjD,YACpBkD,EAAElL,OAASqH,MAGfA,KAAKwD,WAAWI,EAAIxB,OAASyB,GAnBjB,kFAuBhBX,EAAQA,EAAMY,gB,2BAzD1B,K,sKCWO,ICJKC,EAERC,EDES,EAAb,WAaI,WAAYvC,I,4FAAgB,SAX5B,KAAAwC,cAAwB,EAExB,KAAAC,aAA8B,GAE9B,KAAAC,SAAqC,IAAIrE,IACzC,KAAAsE,mBAAsC,GAEtC,KAAAC,iBAA4C,GAKxCrE,KAAKyB,QAAUA,E,UAdvB,O,EAAA,G,EAAA,+CAiB4B6C,GACpBtE,KAAKqE,iBAAiBE,KAAKD,KAlBnC,qCAqBmBlE,EAEVoE,EAAwBC,EAA8BC,GAEvD,IAAIC,EAAgB3E,KAAKyB,QAAQmD,WAElB,MAAZJ,GACIG,EAAc3C,OAAS,IACtBwC,EAAWG,EAAcA,EAAc3C,OAAS,GAAGwC,UAI3D,IAAIK,EAAiB,CACjBzE,KAAMA,EACNoE,SAAUA,EACVM,cAAc,GAKlB,OAFAL,EAAcM,eAAeF,GAEtB7E,KAAKgF,iBAAiBH,EAAMH,KAzC3C,0CA6CwBO,EAAgBP,GAEhC,IAAIF,EAAWxE,KAAKyB,QAAQmD,WAAW5C,OAAS,EAAIiD,EAEnC,MAAdP,IACCA,EAAa1E,KAAKiE,iBAGtB,IAAIiB,EAAc,CACdV,SAAUA,EACVE,WAAYA,GAOhB,OAJA1E,KAAKkE,aAAaK,KAAKW,GAEvBlF,KAAKmE,SAASgB,IAAIT,EAAYQ,GAEvBR,IA9Df,iCAkEeG,GACP,IAAI,IAAI5N,EAAI,EAAGA,EAAI+I,KAAKkE,aAAalC,OAAQ/K,IAAI,CAC7C,IAAIyB,EAAIsH,KAAKkE,aAAajN,GAC1B,GAAGyB,EAAEmM,MAAQA,EAAK,CAEd,IAAIzC,EAAQpC,KAAKyB,QAAQmD,WAAWQ,QAAQP,GAE5C,GAAGzC,EAAQpC,KAAKyB,QAAQmD,WAAW5C,OAAS,EAAE,CAC1C,IAAIqD,EAAUrF,KAAKyB,QAAQmD,WAAWxC,EAAQ,GAC9C1J,EAAEmM,KAAOQ,QAIbpO,OA/EhB,8CAoFoC4N,EAAiBH,GAE5B,MAAdA,IACCA,EAAa1E,KAAKiE,iBAGtB,IAAI5B,EAAqB,CACrBwC,KAAMA,EACNH,WAAYA,GAMhB,OAHA1E,KAAKkE,aAAaK,KAAKlC,GACvBrC,KAAKmE,SAASgB,IAAIT,EAAYrC,GAEvBqC,IAlGf,uCAqG4BG,EAAgBH,GAEnB,MAAdA,IACCA,EAAa1E,KAAKiE,iBAGtB,IAAIqB,EAAqB,CACrBZ,WAAYA,EACZG,KAAMA,GAKV,OAFA7E,KAAKoE,mBAAmBG,KAAKe,GAEtBZ,IAlHf,qCAsHgB,2BACR,YAAc1E,KAAKkE,aAAnB,+CAAgC,KAAxBqB,EAAwB,QAE5B,GAAkB,MAAfA,EAAGf,SACFe,EAAGf,SAAWxE,KAAKyB,QAAQmD,WAAWQ,QAAQG,EAAGV,UAC9C,CACH,KAAMU,EAAGf,SAAWxE,KAAKyB,QAAQmD,WAAW5C,OAAS,GACjDhC,KAAKyB,QAAQmD,WAAWL,KAAK,CACzBnE,KAAMnH,EAAUuM,KAChBhB,SAAU,OAGlBe,EAAGV,KAAO7E,KAAKyB,QAAQmD,WAAW5E,KAAKyB,QAAQmD,WAAW5C,OAAS,KAZnE,6GAiBR,YAAchC,KAAKoE,mBAAnB,+CAAsC,KAA9BqB,EAA8B,QAC9BC,EAAO1F,KAAKmE,SAASrM,IAAI2N,EAAGf,YACrB,MAARgB,IACCD,EAAGZ,KAAKc,YAAcD,EAAKlB,WApB3B,6GAwBR,YAAcxE,KAAKqE,iBAAnB,+CAAoC,KAA5BuB,EAA4B,+BAChC,YAAcA,EAAGC,kBAAjB,+CAAmC,KAA3BC,EAA2B,QAC/BF,EAAGG,eAAeD,EAAGE,UAAYhG,KAAKmE,SAASrM,IAAIgO,EAAGzD,OAAOmC,UAFjC,kFAIhCoB,EAAGC,kBAAoB,KACK,MAAzBD,EAAGK,qBACFL,EAAGK,mBAAqBjG,KAAKmE,SAASrM,IAAI8N,EAAGK,oBAAoBzB,WA9BjE,wF,2BAtHhB,K,68CCJA,SAAYT,GAAa,uBAAQ,6BAAW,yBAA5C,CAAYA,MAAU,KAqBf,IAAM,EAAb,YAqCI,WAAY5K,EAAoBnC,EAAgB+I,GAAsB,wBAClE,2BAnCJmG,cAAgC,GAEhC,EAAAC,gBAA0B,EAC1B,EAAAC,oBAA8B,EAa9B,EAAAC,WAA0B,GAC1B,EAAAC,oBAAgC,GAEhC,EAAAnF,YAAsB,EAItB,EAAAoF,yBAA2D,KAEpD,EAAAC,QAAoB,GACnB,EAAAC,UAAiC,IAAI3G,IAEtC,EAAA0D,WAA0B,GAC1B,EAAAkD,aAAuC,IAAI5G,IAC3C,EAAA4D,qCAA+C,KAOlD,EAAK3D,cAAgBA,EAErB,EAAK5G,WAAaA,EAClB,EAAKnC,OAASA,EACd,EAAK6J,WAAakD,EAAW4C,OAE7B,EAAKC,YAAc,IAAI,EAAJ,MAEnB,EAAKC,+BAAiC,CAClCnF,OAAQ,KACR1K,OAAQ,EAAKA,OACb4N,WAAY,GACZkC,aAAc,MAGlB,EAAKD,+BAA+BC,aAAe,IAAI,EAAa,EAAKD,gCAlBP,EArC1E,0EA4D6B,MAAlB7G,KAAK8D,WAA4E,MAAvD9D,KAAK8D,UAAUJ,sCACxC1D,KAAK8D,UAAUiD,iCAEnB,IAAIC,EAAoD,MAAlBhH,KAAK8D,UAAoB,EAAI9D,KAAK8D,UAAUJ,qCAJxD,uBAM1B,YAAa1D,KAAKwD,WAAlB,+CAA6B,SACvBpB,MAAQ4E,KAPY,kFAW1BhH,KAAK0D,qCAAuCsD,IAtEpD,2CA6EQ,IADA,IAAIC,EAAWjH,KACkB,MAA1BiH,EAAEC,sBAA8BD,EAAIA,EAAEC,qBAC7C,OAAOD,IA9Ef,gDAmFQ,IADA,IAAIA,EAAWjH,KACkB,MAA1BiH,EAAEC,sBAA8BD,EAAIA,EAAEC,qBAC7C,OAAOD,EAAE9N,aApFjB,0CAuFwBlC,GAEhB,IADA,IAAIiM,EAAelD,KACH,MAATkD,GAAe,4BAClB,YAAeA,EAAMmD,WAArB,+CAAiC,CAC7B,GAAiE,MADpC,QACvBc,2BAA2BlQ,EAAEmQ,2BAAoC,OAAO,GAFhE,kFAIlBlE,EAAQA,EAAMY,UAGlB,OAAO,IAhGf,8CAoG4B3K,GAEpB,IADA,IAAI+J,EAAelD,KACH,MAATkD,GAAe,4BAClB,YAAeA,EAAMmD,WAArB,+CAAiC,KACzBgB,EADyB,QACNF,2BAA2BhO,GAClD,GAAS,MAANkO,EAAY,OAAOA,GAHR,kFAKlBnE,EAAQA,EAAMY,UAGlB,OAAO,OA9Gf,gDAmH8BwD,GACA,MAAlBtH,KAAK8D,WAA8C,MAAzB9D,KAAK8D,UAAU9M,QAAkBgJ,KAAK8D,UAAU9M,OAAOuQ,gBACjFD,EAAkBlC,QAAQpF,KAAK8D,WAAa,GAC5CwD,EAAkB/C,KAAKvE,KAAK8D,WAH8B,2BAK9D,YAAe9D,KAAKwH,mBAApB,+CAAwC,KAA/BC,EAA+B,QACpB,MAAZA,EAAGvE,OAAoC,MAAnBuE,EAAGvE,MAAMlM,QAAkByQ,EAAGvE,MAAMlM,OAAOuQ,gBAC/DD,EAAkBlC,QAAQqC,EAAGvE,OAAS,GACtCoE,EAAkB/C,KAAKkD,EAAGvE,QAR4B,6GAW9D,YAAmBlD,KAAKqG,WAAxB,+CAAoC,KAA3BqB,EAA2B,QAClB,MAAVA,GAAkBA,EAAO1Q,OAAOuQ,gBAChCD,EAAkBlC,QAAQsC,GAAU,GACpCJ,EAAkB/C,KAAKmD,IAd+B,qFAnHtE,yCAwIQ,IAAID,EAAuB,GACvBE,EAAgD,IAAI7H,IAH5C,uBAKZ,YAAcE,KAAKwD,WAAnB,+CAA+B,KAAtBoE,EAAsB,QAC3B,GAAIA,EAAExH,gBAAgByH,GAASD,EAAExH,gBAAgB,EAAW,CACxD,IAAI0H,EAAMH,EAAM7P,IAAI8P,EAAExH,MACX,MAAP0H,GACAA,EAAM,CACF5E,MAAO0E,EAAExH,KACT2H,WAAW,EACX5O,WAAYyO,EAAEzO,YAElBwO,EAAMxC,IAAIyC,EAAExH,KAAM0H,GAClBL,EAAGlD,KAAKuD,IAERA,EAAI3O,YAAc,KAAOyO,EAAEzO,eAE5B,CAEH,IADA,IAAIiH,EAAawH,EAAExH,KACZA,aAAgB,GACnBA,EAAOA,EAAKmC,YAEhB,GAAInC,aAAgByH,GAASzH,aAAgB,EAAW,CACpD,IAAI,EAAMuH,EAAM7P,IAAIsI,GACT,MAAP,GACA,EAAM,CACF8C,MAAO9C,EACP2H,WAAW,EACX5O,WAAYyO,EAAEzO,YAElBwO,EAAMxC,IAAI/E,EAAM,GAChBqH,EAAGlD,KAAK,KAER,EAAIpL,YAAc,KAAOyO,EAAEzO,WAC3B,EAAI4O,WAAY,MApCpB,kFA0CZ,OAAON,IAhLf,4CAqLQ,wDADe,2BAGf,YAAczH,KAAKwG,QAAnB,+CAA4B,SACtBwB,uBAJS,6GAOf,YAAchI,KAAKwD,WAAnB,+CAA+B,SACzB3D,eAAiB,IAAIC,KARZ,kFAWS,MAApBE,KAAK4G,aACL5G,KAAK4G,YAAYoB,wBAhM7B,oDA0MQ,IAHA,IAAI1Q,EAAW0I,KACXiI,EAA4C,KAEpC,MAAL3Q,GAC+B,MAA9BA,EAAEiP,2BACuB0B,EAAR,MAAbA,EAAiC3Q,EAAEiP,yBAEvB0B,EAAUC,OAAO5Q,EAAEiP,2BAGvCjP,EAAIA,EAAEwM,UAEV,OAAOmE,IAnNf,yCAsNuBE,EACf3F,EAAkC4F,EAClCC,EAA+BC,GAE/B,IAAIC,EAA8C,GAFG,uBAIrD,YAAsBvI,KAAKwI,cAAcL,GAAzC,+CAA0D,KAAjDM,EAAiD,QACtDF,EAAShE,KAAK,CACVlC,MAAOoG,EAAUtP,WAAa,GAC9BuP,KAAMC,OAAOC,UAAUC,mBAAmBC,MAC1CC,WAAYN,EAAUtP,WACtB6P,MAAOX,EACPtI,cAA0C,MAA3B0I,EAAU1I,mBAAwBkJ,EAAY,CACzD/Q,MAAOuQ,EAAU1I,kBAXwB,6GAgBrD,YAAmBC,KAAKkJ,WAAWf,GAAnC,+CAAoD,KAA3CzG,EAA2C,QAChD,GAAIA,EAAON,eACP,IAAGkH,aAAa,EAAbA,EAAelH,gBAAiBkH,GAAiB5G,GAAU1B,KAAK8D,UAAU0C,QAAQpB,QAAQ1D,IAAW,EAAE,CACtG1B,KAAKmJ,wBAAwBZ,EAAU7G,EAAQc,EAAyB6F,GACxE,eAMRE,EAAShE,KAAK,CACVlC,MAAOX,EAAO0H,qBACdC,WAAY3H,EAAOvI,WACnBmQ,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfd,KAAMC,OAAOC,UAAUC,mBAAmB9H,OAC1CgI,WAAYrH,EAAO+H,qBAAqBjH,GACxCwG,MAAOX,EACPqB,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/D7J,cAAuC,MAAxB2B,EAAO3B,mBAAwBkJ,EAAY,CACtD/Q,MAAOwJ,EAAO3B,kBAvC2B,kFAgDrD,OAJAwI,EAAWA,EAASL,OAAOlI,KAAK4G,YAAYiD,mBAAmB1B,EAC3D3F,EAAyB4F,EACzBC,MAtQZ,8CA2Q4BE,EAA6C7G,EAAgBc,EACjF6F,GACAE,EAAShE,KAAK,CACVlC,MAAOX,EAAO0H,qBAAqBU,QAAQpI,EAAOvI,WAAY,SAC9DkQ,WAAY,QACZC,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfd,KAAMC,OAAOC,UAAUC,mBAAmB9H,OAC1CgI,WAAYrH,EAAO+H,qBAAqBjH,GAAyBsH,QAAQpI,EAAOvI,WAAY,SAC5F6P,MAAOX,EACPqB,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/D7J,cAAuC,MAAxB2B,EAAO3B,mBAAwBkJ,EAAY,CACtD/Q,MAAOwJ,EAAO3B,mBA1R9B,uDAgSqCgK,GAEzB/J,KAAK4G,YAAYC,+BAA+BjC,WAAW5C,OAAS,GACpE+H,EAAaxF,KAAK,CACd9C,QAASzB,KAAK4G,YAAYC,+BAC1BmD,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GAC5CN,OAAQ,mDAAqD1B,KAAK4G,YAAYzN,WAC9EiR,oBAAqB,KACrBC,oBAAqB,2CAzSrC,2CA+SyB1I,GAGjB,IADA,IAAIrK,EAAW0I,KACH,MAAL1I,GAAW,CACd,IAAIoK,EAASpK,EAAEmP,UAAU3O,IAAI6J,GAC7B,GAAc,MAAVD,EAAgB,OAAOA,EAC3BpK,EAAIA,EAAEwM,UAGV,OAAO,OAxTf,6BA4TkB1D,GACV,OAAOA,GAAQJ,OA7TvB,mCAgUiB8D,GACT9D,KAAK8D,UAAYA,EACjB9D,KAAK4G,YAAY9C,UAAYA,EAAU8C,cAlU/C,gCAqUqBlF,GACVA,EAAON,gBACNM,EAAOT,WAAa,MAEpBS,EAAOd,SACPZ,KAAK4G,YAAY0D,UAAU5I,IAE3B1B,KAAKwG,QAAQjC,KAAK7C,GAClB1B,KAAKyG,UAAUtB,IAAIzD,EAAOC,UAAWD,MA7UjD,mCAiVwB+G,GACZA,EAAU7H,SACVZ,KAAK4G,YAAY2D,aAAa9B,IAE9BzI,KAAKwD,WAAWe,KAAKkE,GACrBzI,KAAK0G,aAAavB,IAAIsD,EAAUtP,WAAYsP,MAtVxD,oCA0VyBpI,EAAsBC,GAEvC,OAAID,GAAapH,EAAU+D,OAASqD,GAAapH,EAAUgE,YACnDqD,aAA6BuH,GAASvH,GAAqBkK,IAK/DnK,GAAapH,EAAUuC,oBACnB8E,aAA6B,GAAeA,aAA6B,GAClE0D,EAIR,KAVQA,IA9VvB,8BA4WmB3D,EAAsBsC,EAAqBC,G,MACtD,GAAIvC,GAAapH,EAAU+D,MACvB,OAAO2F,EAAazK,OAAS0K,EAAc1K,MAG/C,GAAImI,GAAapH,EAAUgE,SACvB,OAAO0F,EAAazK,OAAS0K,EAAc1K,MAG/C,GAAImI,GAAapH,EAAUuC,kBAAmB,CAC1C,IAAIiP,EAAkC,QAAtB,EAAG9H,aAAY,EAAZA,EAAczK,aAAK,eAAEkL,MACxC,GAAmB,MAAhBqH,EAAsB,OAAO,EAChC,IAAIC,EAAyBD,EACzBE,EAAY/H,EAAcxC,KAC9B,GAAIuK,aAAqB,EAAa,CAElC,KAAmB,MAAZD,GAAkB,CACrB,GAAIA,IAAaC,EAAU9C,MAAO,OAAO,EACzC6C,EAAWA,EAAS5G,UAExB,OAAO,EAEX,GAAI6G,aAAqB,EACrB,KAAmB,MAAZD,GAAkB,4BACrB,YAAcA,EAASrE,WAAvB,+CAAmC,CAC/B,GAD+B,UACrBsE,EAAW,OAAO,GAFX,kFAIrBD,EAAWA,EAAS5G,UAG5B,OAAO,EAGX,OAAO,OA7Yf,iCAmZsB8G,EAA4BzR,GAE1C,IAAIqN,EAAoBxG,KAAKwG,QAAQqE,QAAO,SAACnJ,GACzC,OAAOA,EAAOb,YAAc+J,IAAiC,MAAdzR,GAAsBuI,EAAOvI,YAAcA,MAG9F,GAAsB,MAAlB6G,KAAK8D,YAAoC,MAAd3K,GAAsBA,GAAc6G,KAAK7G,YAAgC,GAAlBqN,EAAQxE,QAAc,CACxG,IAAI8I,EAA0BF,GAAkB7G,EAAW4C,OAASiE,EAAiB7G,EAAWgH,UADQ,uBAGxG,YAAc/K,KAAK8D,UAAUoF,WAAW4B,EAAyB3R,GAAc6G,KAAK7G,WAAa6G,KAAK8D,UAAU3K,WAAaA,GAA7H,+CAA0I,KAAjI9B,EAAiI,QAElI2T,GAAQ,EAF0H,uBAGtI,YAAexE,EAAf,+CAAwB,CACpB,GADoB,QACb7E,WAAatK,EAAEsK,UAAW,CAC7BqJ,GAAQ,EACR,QAN8H,kFAUjIA,GACDxE,EAAQjC,KAAKlN,IAdmF,mFAoB5G,OAAOmP,IA7af,oCAmbyBoE,GAEjB,IAAIpH,EAA0B,GAFa,uBAG3C,YAAcxD,KAAKwD,WAAnB,+CAA+B,KAAtB,EAAsB,QACvB,EAAE3C,YAAc+J,GAChBpH,EAAWe,KAAK,IALmB,kFAS3C,GAAsB,MAAlBvE,KAAK8D,UAAmB,CAExB,IAAImH,EAA4BL,GAAkB7G,EAAW4C,OAASiE,EAAiB7G,EAAWgH,UAF1E,uBAIxB,YAAc/K,KAAK8D,UAAU0E,cAAcyC,GAA3C,+CAAuE,KAA9DrD,EAA8D,QAE/DoD,GAAQ,EAEZ,KAAIpD,EAAE/G,WAAaoK,GAAnB,CAJmE,2BAMnE,YAAezH,EAAf,+CAA2B,CACvB,GADuB,QAChBrK,YAAcyO,EAAEzO,WAAY,CAC/B6R,GAAQ,EACR,QAT2D,kFAa9DA,GACDxH,EAAWe,KAAKqD,KAlBA,mFAwB5B,OAAOpE,IApdf,uCAudyB,2BACjB,YAAcxD,KAAKwG,QAAnB,+CAA4B,CACxB,GADwB,QAClBpF,cAAe,OAAO,GAFf,kFAKjB,OAAsB,MAAlBpB,KAAK8D,WAA0B9D,KAAK8D,UAAUoH,mBA5d1D,oDAkeQ,IAAIC,GAAwC,EADd,uBAE9B,YAAcnL,KAAKwG,QAAnB,+CAA4B,KAAnBnP,EAAmB,QACxB,GAAIA,EAAE+J,cAAe,CACjB,GAAyC,GAArC/J,EAAE2J,cAAca,WAAWG,OAC3B,OAAO,EAEPmJ,GAA+B,IAPb,kFAa9B,OAAIA,GAAkD,MAAlBnL,KAAK8D,WAC9B9D,KAAK8D,UAAUsH,gCA/elC,oDAqfsC,2BAC9B,YAAcpL,KAAKwG,QAAnB,+CAA4B,KAAnBnP,EAAmB,QACxB,GAAIA,EAAE+J,eAAsD,GAArC/J,EAAE2J,cAAca,WAAWG,OAAa,OAAO3K,GAF5C,kFAK9B,OAAqB,MAAlB2I,KAAK8D,UACG9D,KAAK8D,UAAUuH,8BAGnB,OA9ff,qCAkgB0BC,EAAwBV,GAAqE,IAAzCW,EAAyC,uDAAfvL,KAAK7G,WAEjGqS,EAAyBxL,KAAKwG,QAAQqE,QAAO,SAACxT,GAC9C,OAAOA,EAAE+J,iBAGb,OAA2B,GAAvBoK,EAAaxJ,QAAiC,MAAlBhC,KAAK8D,UAC1B9D,KAAK8D,UAAU2H,eAAeH,EAAgBV,EAAgBW,GAE9DG,EAAoBF,EAAcxL,KAAK7G,WAAYmS,EAAgBC,GAAiB,KA3gBvG,mDAghBwCpS,EAAoBmS,EACpDK,EAA4Bf,GAE5B,IAEIpE,EAAUkF,EAFG1L,KAAKkJ,WAAW0B,GAEazR,EAAYmS,EAAgBtL,KAAK7G,WAAYwS,GAE3F,GAAiC,GAA7BnF,EAAQoF,WAAW5J,SAAgB2J,EAAmB,CACtD,IAAIE,EAAgB7L,KAAK4G,YAAYkF,6BAA6B3S,EAAYmS,GAAgB,EAAOV,GACrG,OAA2B,MAAvBiB,EAAcE,MACPF,EAGJrF,EAGX,OAAOA,IAhiBf,gCAoiBqBrN,EAAoB6H,GAEjC,IAAIU,EAAS1B,KAAKyG,UAAU3O,IAAIqB,EAAa6H,EAAcY,IAE3D,OAAc,MAAVF,GAAoC,MAAlB1B,KAAK8D,UAChB9D,KAAK8D,UAAUkI,UAAU7S,EAAY6H,GAGzCU,IA5iBf,mCA+iBwBvI,EAAoByR,GAEpC,IAAImB,EAAQ,KACRE,GAA6B,EAE7BxD,EAAYzI,KAAK0G,aAAa5O,IAAIqB,GAClC+S,EAAiC,MAAbzD,EAWxB,GATiB,MAAbA,EACAsD,EAAQ,gBAAkB5S,EAAa,+BAEnCsP,EAAU5H,WAAa+J,IACvBmB,EAAQ,gBAAkB5S,EAAa,yBAA2B4K,EAAW0E,EAAU5H,YAAc,sCACrG4H,EAAY,KACZwD,GAAoB,GAGX,MAAbxD,GAAuC,MAAlBzI,KAAK8D,UAAmB,CAC7C,IAAImH,EAA4BL,GAAkB7G,EAAW4C,OAASiE,EAAiB7G,EAAWgH,UAE9FoB,EAAqBnM,KAAK8D,UAAUsI,aAAajT,EAAY8R,GACjE,GAAoC,MAAhCkB,EAAmB1D,WAAqByD,EACxC,OAAOC,EAKf,MAAO,CAAE1D,UAAWA,EAAWsD,MAAOA,EAAOE,kBAAmBA,KA1kBxE,gCA6kBqB7L,GAEb,GAAIA,GAAQiM,GACR,OAAO,EAGX,GAAIjM,aAAgByH,EAGhB,IAFA,IAAI/D,EAAmB9D,KAEH,MAAb8D,GAAmB,CACtB,GAAI1D,EAAKgH,2BAA6BtD,EAAUsD,0BAA2B,CACvE,GAAIhH,EAAK8F,cAAclE,OAAS,EAAG,CAE/B,IADA,IAAItJ,EAAY4T,KAAKC,IAAInM,EAAK8F,cAAclE,OAAQ8B,EAAUoC,cAAclE,QACnE/K,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB,IAAK6M,EAAUoC,cAAcjP,GAAGmJ,KAAK2B,UAAU3B,EAAK8F,cAAcjP,GAAGmJ,MAAO,OAAO,EAEvF,OAAO,EAEX,OAAO,EAEX0D,EAAYA,EAAUA,UAI9B,GAAI1D,aAAgB,EAGhB,IADA,IAAI8C,EAAelD,KACJ,MAATkD,GAAc,4BAChB,YAAcA,EAAMmD,WAApB,+CAAgC,KAAvB,EAAuB,QAC5B,GAAIjG,EAAKgH,2BAA6B,EAAEA,0BACpC,OAAO,GAHC,kFAMhBlE,EAAQA,EAAMY,UAItB,OAAO,IAlnBf,6BAsnBkB5L,EAAckI,GAExB,OAAOlI,IAxnBf,yCA8nBQ,GAAsB,MAAlB8H,KAAK8D,WAAqB+D,EAAM2E,gBAAgBpH,QAAQpF,KAAK8D,UAAU3K,aAAe,EACtF,MAAO,CAAEsT,QAAS,gJAAiJC,eAAgB,IAWvL,IARA,IAAID,EAAU,GACVE,EAAmC,GACnCC,EAA+B,GAE/BC,EAAoC,GAEpC3J,EAAelD,KACf8M,EAAsB,CAAC5J,EAAM/J,YACP,MAAnB+J,EAAMY,WAAmB,CAE5B,GADAZ,EAAQA,EAAMY,UACVgJ,EAAU1H,QAAQlC,EAAM/J,aAAe,EAAG,CAC1C+J,EAAMY,UAAY,KAClBgJ,EAAY,CAAC5J,EAAM/J,YAAY+O,OAAO4E,GACtCL,EAAU,cAAgBvJ,EAAM/J,WAAa,0BAC7CsT,GAAW,IAAMK,EAAU7J,KAAK,aAAe,IAC/C,MAEJ6J,EAAY,CAAC5J,EAAM/J,YAAY+O,OAAO4E,GAG1C,GAAe,IAAXL,EAAe,CAEf,GAAsB,MAAlBzM,KAAK8D,YAAsB9D,KAAKmB,WAOhC,IALA,IAAI4L,EAA4B,GAE5B,EAAe/M,KAGH,MAAT,GAAe,4BAClB,YAAc,EAAMwG,QAApB,+CAA6B,KAApBnP,EAAoB,QACzB,GAAIA,EAAE8J,WAAY,CACd4L,EAAgBxI,KAAKlN,GACrB,IAAI2V,GAAyB,EAFf,uBAGd,YAAcJ,EAAd,+CAAiC,CAC7B,GAD6B,QACvBvG,WAAWhP,GAAG,CAChB2V,GAAgB,EAChB,QANM,kFASVA,GACAL,EAAuBpI,KAAKlN,QAGhCuV,EAAmBrI,KAAKlN,IAfd,kFAkBlB,EAAQ,EAAMyM,UAKlB6I,EAAuB3K,OAAS,IAChCyK,EAAU,cAAgBzM,KAAK7G,WAAa,8EAE5CsT,GAAWE,EAAuB5J,KAAI,SAAC1L,GAAD,OAAOA,EAAE4V,qCAAmChK,KAAK,OAnC5E,2BAuCf,YAAcjD,KAAKqG,WAAnB,+CAA+B,KAAtBpP,EAAsB,+BAC3B,YAAcA,EAAEiS,aAAhB,+CAA8B,KAArB,EAAqB,QACtB,GAAyB,EADH,uBAE1B,YAAc0D,EAAd,+CAAiC,CAC7B,GAD6B,QACvBvG,WAAW,GAAG,CAChB,GAAgB,EAChB,QALkB,kFAQtB,GACAwG,EAAwBtI,KAAK,IAVV,oFAvChB,kFAsDXsI,EAAwB7K,OAAS,IAElB,IAAXyK,IAAeA,GAAW,MAE9BA,GAAW,cAAgBzM,KAAK7G,WAAa,uFAE7CsT,GAAWI,EAAwB9J,KAAI,SAAC1L,GAAD,OAAOA,EAAEsK,aAAWsB,KAAK,OAMxE,MAAO,CAAEwJ,QAASA,EAASC,eAAgBC,EAAuBzE,OAAO2E,MAxtBjF,sCA4tBoBjF,GACZ,IAAItQ,EAAyB0I,KACzB4B,EAAKgG,EAAEzO,WAGX,IAFIyO,aAAaC,IAAOjG,EAAKgG,EAAER,2BAEnB,MAAL9P,GAAW,CACd,GAAIA,EAAE8P,2BAA6BxF,EAAI,OAAO,EAC9CtK,EAAIA,EAAEwM,UAEV,OAAO,IAruBf,kCAwuBuB5L,GAAoC,IAAtBgV,EAAsB,uDAAF,GAE7ClU,EAAY,IACZwK,EAAaxD,KAAKwI,cAAczE,EAAWoJ,SAC3CxU,EAAwBT,EAAMA,MAElC,GAAc,MAAVS,EACA,MAAO,OAGX,IAAK,IAAI1B,EAAI,EAAGA,EAAIuM,EAAWxB,OAAQ/K,IAAK,CAExC,IAAIwR,EAAYjF,EAAWvM,GACvB4M,EAAIlL,EAAOyU,SAAS3E,EAAUrG,OAC9BqG,EAAUrI,gBAAgBH,EAC1BjH,GAAKyP,EAAUtP,WAAa,UAAYsP,EAAUrI,KAAKiN,YAAYxJ,EAAGqJ,EAAY,GAElFlU,GAAKyP,EAAUtP,WAAa,gBAE5BlC,EAAIuM,EAAWxB,OAAS,IACxBhJ,GAAK,WAKb,OAAOA,EAAI,MAjwBnB,8BAwwBQ,IAAIsU,EAAkB3V,OAAOY,OAAOyH,MAMpC,OAJAsN,EAASjH,WAAarG,KAAKqG,WAAWkH,MAAM,GAC5CD,EAASzN,eAAiB,IAAIC,IAC9BwN,EAASpG,qBAAuBlH,KAEzBsN,MA9wBf,GAA2B3N,GAQR,EAAA6M,gBAA4B,CAAC,UAAW,QAAS,SAAU,UAAW,YAAa,UA2wB/F,IAAM,EAAb,YAgBI,WAAYtJ,GAAY,wBACpB,2BARGsD,QAAoB,GACnB,EAAAC,UAAiC,IAAI3G,IAEtC,EAAA0D,WAA0B,GAC1B,EAAAkD,aAAuC,IAAI5G,IAC3C,EAAA4D,qCAA+C,KAKlD,EAAKmE,MAAQ3E,EACb,EAAK/J,WAAa+J,EAAM/J,WAED,MAAnB+J,EAAMY,YACN,EAAKA,UAAYZ,EAAMY,UAAU8C,aAGrC,EAAKC,+BAAiC,CAClCnF,OAAQ,KACR1K,OAAQ,EAAK6Q,MAAM7Q,OACnB4N,WAAY,GACZkC,aAAc,MAGlB,EAAKD,+BAA+BC,aAAe,IAAI,EAAa,EAAKD,gCAjBrD,EAhB5B,0EAsC6B,MAAlB7G,KAAK8D,WAA4E,MAAvD9D,KAAK8D,UAAUJ,sCACxC1D,KAAK8D,UAAUiD,iCAEnB,IAAIC,EAAoD,MAAlBhH,KAAK8D,UAAoB,EAAI9D,KAAK8D,UAAUJ,qCAJxD,uBAM1B,YAAa1D,KAAKwD,WAAlB,+CAA6B,SACvBpB,MAAQ4E,KAPY,kFAW1BhH,KAAK0D,qCAAuCsD,IAhDpD,4CAsDQ,wDADe,2BAGf,YAAchH,KAAKwG,QAAnB,+CAA4B,SACtBwB,uBAJS,6GAOf,YAAchI,KAAKwD,WAAnB,+CAA+B,SACzB3D,eAAiB,IAAIC,KARZ,qFArDvB,kCAkEuB5H,GAMf,IANmD,IAAtBgV,EAAsB,uDAAF,GAE7ClU,EAAY,IACZwK,EAAaxD,KAAKwI,cAAczE,EAAWoJ,SAC3CxU,EAASqH,KAAKwN,YAETvW,EAAI,EAAGA,EAAIuM,EAAWxB,OAAQ/K,IAAK,CAExC,IAAIwR,EAAYjF,EAAWvM,GAC3B+B,GAAKyP,EAAUtP,WAAa,KAAOR,GAAU,KAAO,MAAQ8P,EAAUrI,KAAKiN,YAAY1U,EAAOyU,SAAS3E,EAAUrG,OAAQ8K,EAAY,GACjIjW,EAAIuM,EAAWxB,OAAS,IACxBhJ,GAAK,MAKb,OAAOA,EAAI,MAlFnB,yCAsFuBmP,EACf3F,EAAkC4F,EAClCC,GAEA,IAAIE,EAA8C,GAFrB,uBAI7B,YAAsBvI,KAAKwI,cAAcL,GAAzC,+CAA0D,KAAjDM,EAAiD,QACtDF,EAAShE,KAAK,CACVlC,MAAOoG,EAAUtP,WACjBuP,KAAMC,OAAOC,UAAUC,mBAAmBC,MAC1CC,WAAYN,EAAUtP,WACtB6P,MAAOX,EACPtI,cAA0C,MAA3B0I,EAAU1I,mBAAwBkJ,EAAY,CACzD/Q,MAAOuQ,EAAU1I,kBAXA,6GAgB7B,YAAmBC,KAAKkJ,WAAWf,GAAnC,+CAAoD,KAA3CzG,EAA2C,QAChD6G,EAAShE,KAAK,CACVlC,MAAOX,EAAO0H,qBACdC,WAAY3H,EAAOvI,WACnBuP,KAAMC,OAAOC,UAAUC,mBAAmB9H,OAC1CgI,WAAYrH,EAAO+H,qBAAqBjH,GACxCwG,MAAOX,EACPiB,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfE,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/D7J,cAAuC,MAAxB2B,EAAO3B,mBAAwBkJ,EAAY,CACtD/Q,MAAOwJ,EAAO3B,kBA9BG,kFAmC7B,OAAOwI,IA3Hf,6BA8HkBnI,GACV,OAAOA,GAAQJ,OA/HvB,gCAkIqB0B,GACb1B,KAAKwG,QAAQjC,KAAK7C,GAClB1B,KAAKyG,UAAUtB,IAAIzD,EAAOC,UAAWD,KApI7C,mCAuIwB+G,GAChBzI,KAAKwD,WAAWe,KAAKkE,GACrBzI,KAAK0G,aAAavB,IAAIsD,EAAUtP,WAAYsP,KAzIpD,oCA4IyBpI,EAAsBC,GAEvC,OAAO,OA9If,8BAkJmBD,EAAsBsC,EAAqBC,GACtD,OAAO,OAnJf,mDAsJwCzJ,EAAoBmS,EACpDK,EAA4Bf,GAE5B,OAAOc,EAAoB1L,KAAKkJ,WAAW0B,GAAiBzR,EAAYmS,EACpEtL,KAAK6H,MAAM1O,WAAYwS,KA1JnC,iCAkKsBf,EAA4BzR,GAE1C,IAAIqN,EAAoBxG,KAAKwG,QAAQ+G,QAAQ1C,QAAO,SAACnJ,GACjD,OAAOA,EAAOb,YAAc+J,IAAiC,MAAdzR,GAAsBA,GAAcuI,EAAOvI,eAG9F,GAAsB,MAAlB6G,KAAK8D,UAAmB,CACxB,IAAIgH,EAA0BF,GAAkB7G,EAAW4C,OAAS5C,EAAW4C,OAAS5C,EAAWgH,UAD3E,uBAExB,YAAc/K,KAAK8D,UAAUoF,WAAW4B,EAAyB3R,GAAjE,+CAA8E,KAArE9B,EAAqE,QAEtE2T,GAAQ,EAF8D,uBAG1E,YAAexE,EAAf,+CAAwB,CACpB,GADoB,QACb7E,WAAatK,EAAEsK,UAAW,CAC7BqJ,GAAQ,EACR,QANkE,kFAUrEA,GACDxE,EAAQjC,KAAKlN,IAbG,mFAmB5B,OAAOmP,IA3Lf,oCAkMyB2B,GAEjB,IAAI3E,EAA0BxD,KAAKwD,WAAWqH,QAAO,SAACpC,GAClD,OAAOA,EAAU5H,YAAcsH,KAGnC,GAAsB,MAAlBnI,KAAK8D,UAAmB,CAExB,IAAI2J,EAA0BtF,GAAkBpE,EAAW4C,OAASwB,EAAiBpE,EAAWgH,UAFxE,uBAIxB,YAAc/K,KAAK8D,UAAU0E,cAAciF,GAA3C,+CAAqE,KAA5D7F,EAA4D,QAE7DoD,GAAQ,EAFqD,uBAIjE,YAAexH,EAAf,+CAA2B,CACvB,GADuB,QAChBrK,YAAcyO,EAAEzO,WAAY,CAC/B6R,GAAQ,EACR,QAPyD,kFAW5DA,GACDxH,EAAWe,KAAKqD,IAhBA,mFAsB5B,OAAOpE,IA9Nf,gCAiOqBrK,EAAoB6H,GAEjC,IAAIU,EAAS1B,KAAKyG,UAAU3O,IAAIqB,EAAa6H,EAAcY,IAE3D,OAAc,MAAVF,GAAoC,MAAlB1B,KAAK8D,UAChB9D,KAAK8D,UAAUkI,UAAU7S,EAAY6H,GAGzCU,IAzOf,mCA4OwBvI,EAAoByR,GAEpC,IAAImB,EAAQ,GACR2B,GAAW,EACXjF,EAAYzI,KAAK0G,aAAa5O,IAAIqB,GAUtC,GARiB,MAAbsP,GACAiF,GAAW,EACX3B,EAAQ,gBAAkB5S,EAAa,kCAChCsP,EAAU5H,WAAa+J,IAC9BmB,EAAQ,gBAAkB5S,EAAa,yBAA2B4K,EAAW0E,EAAU5H,YAAc,sCACrG4H,EAAY,MAGC,MAAbA,GAAuC,MAAlBzI,KAAK8D,UAAmB,CAC7C,IAAImH,EAA4BL,GAAkB7G,EAAW4C,OAASiE,EAAiB7G,EAAWgH,UAE9F4C,EAA8B3N,KAAK8D,UAAUsI,aAAajT,EAAY8R,GAC1E,GAAIyC,EACA,OAAOC,EAIf,MAAO,CAAElF,UAAWA,EAAWsD,MAAOA,EAAOE,mBAAoByB,EAAW9G,YAAa5G,QAnQjG,gCAsQqBI,GAEb,OAAO,IAxQf,6BA4QkBlI,EAAckI,GACxB,OAAOlI,IA7Qf,sCAgRoB0P,GAEZ,IADA,IAAItQ,EAAyB0I,KACjB,MAAL1I,GAAW,CACd,GAAIA,GAAKsQ,EAAG,OAAO,EACnBtQ,EAAIA,EAAEwM,UAEV,OAAO,MAtRf,GAAiCnE,GA2RpB,EAAb,YAcI,WAAYxG,EAAoBnC,EAAgB+I,GAAsB,wBAClE,2BAZJmG,cAAgC,GAEhC,EAAAE,oBAA8B,EAIvB,EAAAwH,QAAuB,GAEvB,EAAApH,QAAoB,GACnB,EAAAC,UAAiC,IAAI3G,IAIzC,EAAKC,cAAgBA,EACrB,EAAK5G,WAAaA,EAClB,EAAKnC,OAASA,EAJoD,EAd1E,mEAuBQ,IADA,IAAIiQ,EAAejH,KACc,MAA1BiH,EAAEC,sBAA8BD,EAAIA,EAAEC,qBAC7C,OAAOD,EAAE9N,aAxBjB,iDA2B+BA,GACvB,GAAG6G,KAAKoH,2BAA6BjO,EAAY,OAAO6G,KADf,2BAEzC,YAAeA,KAAK4N,QAApB,+CAA4B,KACpBC,EADoB,QACV1G,2BAA2BhO,GACzC,GAAU,MAAP0U,EAAa,OAAOA,GAJc,kFAMzC,OAAO,OAjCf,8BAuCQ,IAAIC,EAA0BnW,OAAOY,OAAOyH,MAK5C,OAHA8N,EAAajO,eAAiB,IAAIC,IAClCgO,EAAa5G,qBAAuBlH,KAE7B8N,IA5Cf,4CAgDQ,wDADe,2BAGf,YAAc9N,KAAKwG,QAAnB,+CAA4B,SACtBwB,uBAJS,qFA/CvB,yCAyDuBxF,EAAkC4F,EACjDC,GAEA,IAAIE,EAA8C,GAFrB,uBAI7B,YAAmBvI,KAAKkJ,aAAxB,+CAAsC,KAA7BxH,EAA6B,QAClC6G,EAAShE,KAAK,CACVlC,MAAOX,EAAO0H,qBACdC,WAAY3H,EAAOvI,WACnBuP,KAAMC,OAAOC,UAAUC,mBAAmB9H,OAC1CgI,WAAYrH,EAAO+H,qBAAqBjH,GACxCwG,MAAOX,EACPiB,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfE,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/D7J,cAAuC,MAAxB2B,EAAO3B,mBAAwBkJ,EAAY,CACtD/Q,MAAOwJ,EAAO3B,kBAlBG,kFAuB7B,OAAOwI,IAjFf,kCAoFuBrQ,GAAoC,wDACnD,OAAmB,MAAfA,EAAMA,MACC,OAEHA,EAAMA,iBAAiB,EAChBA,EAAMA,MAAMkL,MAAMiK,YAAYnV,GAE9B,UA3FvB,6BAgGkBkI,GACV,OAAOA,GAAQJ,OAjGvB,gCAoGqB0B,GACb1B,KAAKwG,QAAQjC,KAAK7C,GAClB1B,KAAKyG,UAAUtB,IAAIzD,EAAOC,UAAWD,KAtG7C,oCAyGyBrB,EAAsBC,GAEvC,OAAID,GAAapH,EAAU+D,OAASqD,GAAapH,EAAUgE,UAIvDoD,GAAapH,EAAUuC,oBACnB8E,aAA6B,GAAeA,aAA6ByN,GAJtE/J,EASJ,OArHf,8BAyHmB3D,EAAsBsC,EAAqBC,GAEtD,OAAIvC,GAAapH,EAAU+D,MAChB2F,EAAazK,OAAS0K,EAAc1K,MAG3CmI,GAAapH,EAAUgE,SAChB0F,EAAazK,OAAS0K,EAAc1K,MAGxC,OAnIf,mCA6IQ,OAAO8H,KAAKwG,UA7IpB,gCAiJqBrN,EAAoB6H,GAEjC,OAAOhB,KAAKyG,UAAU3O,IAAIqB,EAAa6H,EAAcY,MAnJ7D,gCAuJqBxB,GAEb,GAAIA,aAAgB2N,EAAW,CAE3B,GAAI3N,EAAKgH,2BAA6BpH,KAAKoH,0BAA2B,CAElE,IADqB,EACY,GAA7BpH,KAAKkG,cAAclE,OAAa,OAAO,EAC3C,IAAIgM,EAAmB5N,EACvB,GAAIJ,KAAKkG,cAAclE,QAAUgM,EAAM9H,cAAclE,OAAQ,OAAO,EACpE,IAAK,IAAI/K,EAAI,EAAGA,EAAI+I,KAAKkG,cAAclE,OAAQ/K,IAAK,CAChD,IAAI+L,EAAKhD,KAAKkG,cAAcjP,GAE5B,IADc+W,EAAM9H,cAAcjP,GACrBmJ,KAAK2B,UAAUiB,EAAG5C,MAAO,OAAO,EAEjD,OAAO,EACJ,2BACH,YAAkBJ,KAAK4N,QAAvB,+CAAgC,CAC5B,GAD4B,QAClB7L,UAAU3B,GAChB,OAAO,GAHZ,kFAOP,OAAO,EAKP,OAHIA,aAAgB,GAASA,EAAKgH,2BAG3B,IAlLnB,6BAwLkBlP,EAAckI,GACxB,OAAOlI,IAzLf,mDA4LwCiB,EAAoBmS,EAAwBK,GAE5E,OAAOD,EAAoB1L,KAAKkJ,aAAc/P,EAAYmS,EAAgBtL,KAAK7G,WAAYwS,OA9LnG,GAA+BhM,GAqM/B,SAAS+L,EAAoBE,EAAsBzS,EAAoBmS,EACnEC,EACAI,GAEA,IAAIsC,EAA4B,GAC5BC,EAA6B,IAC7BnC,EAAQ,KAERoC,GAAgC,EANV,uBAQ1B,YAAcvC,EAAd,+CAA0B,KAAjBvU,EAAiB,QAElB+W,EAAkB,EACtB,GAAI/W,EAAE8B,YAAcA,GAAc9B,EAAE+J,eAAiBuK,EAAmB,CAEpEwC,GAAgC,EAEhC,IAAIhM,EAAa9K,EAAEgX,cACnB,GAAIhX,EAAEiX,qBAAuBhD,EAAetJ,QAAWG,GAAc9K,EAAEiX,qBAAuBhD,EAAetJ,OAAS,CAElH,IAAIuM,GAAQ,EAERtX,EAAI,EAER,IAAKA,EAAI,EAAGA,EAAII,EAAEiX,qBAAuBnM,EAAa,EAAI,GAAIlL,IAAK,CAC/D,IAAIuX,EAAiBnX,EAAEoX,iBAAiBxX,GACpCyX,EAAYpD,EAAerU,GAE/B,GAAiB,MAAbyX,EAAmB,CACnBH,GAAQ,EAAO,MAGnB,GAAIC,GAAkBE,EAAtB,CAIA,IAAIA,EAAU3M,UAAUyM,GAAxB,CAKAD,GAAQ,EACR,MALIH,KASR,GAAGG,GAASpM,EAKJ,IAJJ,IACIwM,EADqBtX,EAAEuX,aAAa3X,GACqBmJ,KAAMmC,YAGtDsM,EAAI5X,EAAG4X,EAAIvD,EAAetJ,OAAQ6M,IAAK,CAC5C,IAAI,EAAYvD,EAAerU,GAE/B,GAAiB,MAAb,EAAmB,CACnBsX,GAAQ,EAAO,MAGnB,GAAII,GAA2B,EAA/B,CAIA,IAAI,EAAU5M,UAAU4M,GAAxB,CAKAJ,GAAQ,EACR,MALIH,KAUZG,GAASH,GAAmBF,IACxBE,EAAkBF,IAClBD,EAAkB,IAEtBA,EAAgB1J,KAAKlN,GACrB6W,EAAqBE,MA5EX,kFAoF1B,GAA8B,GAA1BH,EAAgBjM,OAEhB,GAAImM,EACA,GAA4B,GAAzB7C,EAAetJ,OACd+J,EAAQJ,EAAoB,wDAA0DJ,EAAkB,+CAAiDpS,EAAa,2FACnK,CACH,IAAI2V,EAAaxD,EAAevI,KAAI,SAAA3C,GAAI,OAAIA,aAAI,EAAJA,EAAMjH,cAAY8J,KAAK,MACnE8I,EAAQJ,EAAoB,uBAAH,OAA0BmD,EAA1B,qDAAiFvD,GAAjF,8BAA4HuD,EAA5H,0EAAwM3V,EAAxM,UAG7B4S,EAAQ,WAAaR,EAAkB,6CAA+CpS,EAAa,IAClF,aAAdA,IACC4S,GAAS,8EAWrB,OALIkC,EAAgBjM,OAAS,IACzBiM,EAAkBA,EAAgBV,MAAM,EAAG,IAIxC,CACHxB,MAAOA,EACPH,WAAYqC,GAKd,SAAUc,EAAkBC,EAAiCC,GAE/D,OAA2B,MAAvBA,EACOlL,EAAW4C,QAGlBqI,aAAsB,IAAaA,EAAaA,EAAWnH,OAC3DoH,aAA+B,IAAaA,EAAsBA,EAAoBpH,OAEtFmH,GAAcC,EACPlL,EAAWoJ,QAGlB8B,EAAoBC,gBAAgBF,GAC7BjL,EAAWgH,UAGfhH,EAAW4C,Q,uyBCp5Cf,IAAM,EAAb,YAKI,WAAYpE,GAAiB,a,4FAAA,UACzB,2BACKA,YAAcA,EACnB,EAAKpJ,WAAa,QAEA,MAAfoJ,IACC,EAAKpJ,WAAaoJ,EAAYpJ,WAAa,MAG/C,EAAKgW,gBAAkB,IAAIzO,EAAU,SAAU0O,IAAkB,SAACzW,GAC9D,OAAeA,EAAOT,MAAO8J,UAC9B,EAAO+B,EAAW4C,QAAQ,GAXJ,E,UALjC,O,kOAAA,M,EAAA,G,EAAA,8BAmBkBvG,GACV,OAAQA,aAAgBiP,GAAcjP,EAAKmC,YAAY+M,OAAOtP,KAAKuC,eApB3E,oCA2ByBlC,EAAsBC,GACvC,OAAGD,GAAapH,EAAUsW,iBACfvP,KAAKuC,YAGT,OAhCf,8BAoCmBlC,EAAsBsC,EAAqBC,GAEtD,GAAGvC,GAAapH,EAAUsW,iBACtB,OAAc5M,EAAazK,MAAc0K,EAAc1K,SAvCnE,gCA4CqBiB,EAAoBwI,GACjC,OAAO,OA7Cf,mCAgDwBxI,GAChB,MAAiB,UAAdA,EACQ6G,KAAKmP,gBAET,OApDf,gCAuDqB/O,GAEb,OAAKA,aAAgBiP,GAIdrP,KAAKuC,YAAYR,UAAU3B,EAAKmC,eA7D/C,6BAgEkBrK,EAAckI,GAExB,IAAIoP,EAAkBtX,EAAMA,MAAOqV,QAC/BkC,EAAgCrP,EAAMmC,YAHR,uBAKlC,YAAaiN,EAAb,+CAAmB,KAAX5H,EAAW,QACf5H,KAAKuC,YAAYmN,OAAO9H,EAAG6H,IANG,kFASlC,MAAO,CACHrP,KAAMA,EACNlI,MAAOsX,KA3EnB,kCAgFuBtX,GAAoC,IAAtBgV,EAAsB,uDAAF,GAE7ClL,EAAiB,EAErB,GAAkB,MAAf9J,EAAMA,MAAc,CAMf,IAJJ,IAAIc,EAAY,IAER4O,EAAsB1P,EAAMA,MAExBjB,EAAI,EAAGA,EAAI2Q,EAAE5F,OAAQ/K,IAAI,CAE7B,IAAI4M,EAAI+D,EAAE3Q,GAEN0Y,EAAK9L,EAAEzD,KAAKiN,YAAYxJ,EAAGqJ,EAAU,GAMzC,GAJAlU,GAAK2W,EACF1Y,EAAI2Q,EAAE5F,OAAS,IAAGhJ,GAAK,YAC1BgJ,GAAU2N,EAAG3N,QAEDkL,EAAW,MAI/B,OAAOlU,EAAI,IAER,MAAO,SA1GtB,yBAwBQ,OAAOgH,KAAKuC,YAAYpJ,WAAa,U,2BAxB7C,GAA+BwG,G,soBCWxB,IAAM,GAAb,YAEI,WAAY3I,GAAc,a,4FAAA,UACtB,0BAAM,SAAUA,EAAQ,+BAInBsT,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,IACzD,SAACxK,GAEG,MAAO,IAA+BA,EAAW,GAAG3J,MAAOkL,MAAMjK,WAAa,OAE/E,GAAO,IAVQ,EAF9B,O,mOAAA,SAAiC,G,0lCCV1B,IAAM,GAAb,YAII,WAAY2K,GAAgB,a,4FAAA,UACxB,0BAAM,UAAW,KAAM,qEAH3B8L,YAAc,GAIV,EAAK9L,UAAYA,EAEjB,EAAKyG,aAAa,IAAI7J,EAAU,YAAa0O,IAAkB,SAAClX,GAAYA,EAAMA,MAAQ2X,OAAOC,oBAAoB,EAAM/L,EAAW4C,QAAQ,EAAM,iEACpJ,EAAK4D,aAAa,IAAI7J,EAAU,YAAa0O,IAAkB,SAAClX,GAAYA,EAAMA,MAAQ2X,OAAOE,oBAAoB,EAAMhM,EAAW4C,QAAQ,EAAM,mEAEpJ,EAAKC,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAT9B,E,UAJhC,O,mOAAA,M,EAAA,G,EAAA,iCAiBcxG,GACN,OAAOJ,KAAK4P,YAAYxK,QAAQhF,IAAS,GAAlC,+BAAAJ,MAAA,KAAAA,KAAuDI,KAlBtE,6BAuBQJ,KAAK4P,YAAc,CAACR,GAAkBY,GAAoBC,IAE1DjQ,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,WAAYiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2J,EAAW,GAAG3J,SAErC,GAAO,EAAO,wCAAwC,IAE7D8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2X,OAAOM,SAAStO,EAAW,GAAG3J,UAErD,GAAO,EAAO,+GAA+G,IAGpI8H,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IAAKoN,IAC5D,SAACpO,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,uDACnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IAAKmN,IAC3D,SAACnO,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,sDACnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKuM,IACzD,SAACvN,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,oDAEnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,iBAAkBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC9FsO,IACA,SAACvN,GACG,IAAIuO,EAAKvO,EAAW,GAAG3J,MACnBmY,EAAKxO,EAAW,GAAG3J,MACvB,OAAIkY,EAAKC,EAAW,EAChBD,EAAKC,GAAY,EACd,KACR,GAAO,EAAO,qKAErBrQ,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,iBAAkBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC9FwP,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS2J,EAAW,GAAG3J,SAC7C,GAAO,EAAO,gFAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDwJ,IACA,SAACxK,GACG,MAAO,GAAKA,EAAW,GAAG3J,SAC3B,GAAO,EAAO,mEAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDuM,IACA,SAACvN,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAO,0CAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGsO,IACA,SAACvN,GACG,OAAOgO,OAAOM,SAAStO,EAAW,GAAG3J,UACtC,GAAO,EAAM,kDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGsO,IACA,SAACvN,GACG,OAAOgO,OAAOM,SAAStO,EAAW,GAAG3J,MAAO2J,EAAW,GAAG3J,UAC3D,GAAO,EAAM,8HAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FsO,IACA,SAACvN,GACG,OAAOyK,KAAKiE,KAAK1O,EAAW,GAAG3J,UAChC,GAAO,EAAM,wGAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FuL,IACA,SAACxK,GACG,OAAQA,EAAW,GAAG3J,QAAU,GAAGsY,SAAS,MAC7C,GAAO,EAAM,6DAEpBxQ,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FuL,IACA,SAACxK,GACG,OAAQA,EAAW,GAAG3J,QAAU,GAAGsY,SAAS,OAC7C,GAAO,EAAM,mEAEpBxQ,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FuL,IACA,SAACxK,GACG,OAAQA,EAAW,GAAG3J,QAAU,GAAGsY,SAAS,MAC7C,GAAO,EAAM,6DAEpBxQ,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FuL,IACA,SAACxK,GACG,OAAQA,EAAW,GAAG3J,MAAOsY,cAC9B,GAAO,EAAM,kEAEpBxQ,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGuL,IACA,SAACxK,GACG,OAAQA,EAAW,GAAG3J,QAAU,GAAGsY,SAAS3O,EAAW,GAAG3J,UAC3D,GAAO,EAAM,qEAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7Fd,MACA,SAAC6B,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAM,wDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGd,MACA,SAAC6B,GACG,OAAOgO,OAAOM,SAAStO,EAAW,GAAG3J,UACtC,GAAO,EAAM,qGAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGd,MACA,SAAC6B,GACG,OAAOgO,OAAOM,SAAStO,EAAW,GAAG3J,MAAO2J,EAAW,GAAG3J,UAC3D,GAAO,EAAM,gHA/J5B,kCAsKuBA,GACf,MAAO,GAAaA,EAAMA,W,6BAvKlC,GAAkC,G,0lCCA3B,IAAM,GAAb,YAII,WAAY4L,GAAgB,a,4FAAA,UACxB,0BAAM,QAAS,KAAM,uEAHzB8L,YAAc,GAIV,EAAK9L,UAAYA,EAEjB,EAAKyG,aAAa,IAAI7J,EAAU,YAAasP,IAAoB,SAAC9X,GAAYA,EAAMA,MAAQ2X,OAAOY,aAAa,EAAM1M,EAAW4C,QAAQ,EAAM,mEAC/I,EAAK4D,aAAa,IAAI7J,EAAU,YAAasP,IAAoB,SAAC9X,GAAYA,EAAMA,MAAQ2X,OAAOa,aAAa,EAAM3M,EAAW4C,QAAQ,EAAM,qEAC/I,EAAK4D,aAAa,IAAI7J,EAAU,YAAasP,IAAoB,SAAC9X,GAAYA,EAAMA,MAAQ2X,OAAOc,OAAO,EAAM5M,EAAW4C,QAAQ,EAAM,0CACzI,EAAK4D,aAAa,IAAI7J,EAAU,oBAAqBsP,IAAoB,SAAC9X,GAAYA,EAAMA,MAAQ2X,OAAOe,qBAAqB,EAAM7M,EAAW4C,QAAQ,EAAM,+CAC/J,EAAK4D,aAAa,IAAI7J,EAAU,oBAAqBsP,IAAoB,SAAC9X,GAAYA,EAAMA,MAAQ2X,OAAOgB,qBAAqB,EAAM9M,EAAW4C,QAAQ,EAAM,+CAC/J,EAAKC,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAX9B,E,UAJhC,O,mOAAA,M,EAAA,G,EAAA,iCAmBcxG,GACN,OAAOJ,KAAK4P,YAAYxK,QAAQhF,IAAS,GAAlC,+BAAAJ,MAAA,KAAAA,KAAuDI,KApBtE,6BAyBQJ,KAAK4P,YAAc,CAACI,GAAoBC,IAExCjQ,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,eAAgBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3G,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2J,EAAW,GAAG3J,SAErC,GAAO,EAAO,sCAAsC,IAE3D8H,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,YAAaiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2J,EAAW,GAAG3J,SAErC,GAAO,EAAO,sCAAsC,IAE3D8H,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2X,OAAOiB,WAAWjP,EAAW,GAAG3J,UAEvD,GAAO,EAAO,+GAA+G,IAGpI8H,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IAAKoN,IAC5D,SAACpO,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,sDACnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IAAKmN,IAC3D,SAACnO,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,qDACnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKuM,IACzD,SAACvN,GAAiB,OAAOyK,KAAKyE,MAAMlP,EAAW,GAAG3J,UAAW,GAAO,EAAO,kEAE/E8H,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,eAAgBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC5FsO,IACA,SAACvN,GACG,IAAIuO,EAAKvO,EAAW,GAAG3J,MACnBmY,EAAKxO,EAAW,GAAG3J,MACvB,OAAIkY,EAAKC,EAAW,EAChBD,EAAKC,GAAY,EACd,KACR,GAAO,EAAO,qKAErBrQ,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,eAAgBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC5FwP,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS2J,EAAW,GAAG3J,SAC7C,GAAO,EAAO,gFAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDwJ,IACA,SAACxK,GACG,MAAO,GAAKA,EAAW,GAAG3J,SAC3B,GAAO,EAAO,sDAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDuM,IACA,SAACvN,GACG,OAAOyK,KAAKyE,MAAMlP,EAAW,GAAG3J,UACjC,GAAO,EAAO,0CAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,IAAKiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGkP,IACA,SAACnO,GACG,OAAOgO,OAAOiB,WAAWjP,EAAW,GAAG3J,UACxC,GAAO,EAAM,oDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC/FuL,IACA,SAACxK,GACG,MAAO,GAAKA,EAAW,GAAG3J,SAC3B,GAAO,EAAM,qDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC/Fd,MACA,SAAC6B,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAM,sDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGd,MACA,SAAC6B,GACG,OAAOgO,OAAOiB,WAAWjP,EAAW,GAAG3J,UACxC,GAAO,EAAM,mGAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,IAAKiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC/FwP,IACA,SAACzO,GACG,OAAOgO,OAAOmB,MAAMnP,EAAW,GAAG3J,UACnC,GAAO,EAAM,yFAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjDyN,IACA,SAACzO,GACG,OAAOgO,OAAOmB,MAAMnP,EAAW,GAAG3J,UACnC,GAAO,EAAO,0EAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,IAAKiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC/FwP,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS+Y,OAC/B,GAAO,EAAM,gFAEpBjR,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDyN,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS+Y,OAC/B,GAAO,EAAO,kEAhJ7B,kCAoJuB/Y,GACf,MAAO,GAAaA,EAAMA,W,6BArJlC,GAAgC,G,0lCCAzB,IAAM,GAAb,YAII,WAAY4L,GAAgB,a,4FAAA,UACxB,0BAAM,YAAa,KAAM,sEAH7B8L,YAAc,GAIV,EAAK9L,UAAYA,EACjB,EAAK8C,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAL9B,E,UAJhC,O,mOAAA,M,EAAA,G,EAAA,iCAacxG,GACN,OAAOJ,KAAK4P,YAAYxK,QAAQhF,IAAS,GAAlC,+BAAAJ,MAAA,KAAAA,KAAuDI,KAdtE,6BAmBQJ,KAAK4P,YAAc,CAACsB,GAAmB7E,IAEvCrM,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvG,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2J,EAAW,GAAG3J,SAErC,GAAO,EAAO,0CAA0C,IAG/D8H,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IAAKqO,IAC1D,SAACrP,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,uDAEnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,mBAAoBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGsO,IACA,SAACvN,GACG,IAAIuO,EAAKvO,EAAW,GAAG3J,MACnBmY,EAAKxO,EAAW,GAAG3J,MACvB,OAAIkY,EAAKC,EAAW,EAChBD,EAAKC,GAAY,EACd,KACR,GAAO,EAAO,qKAErBrQ,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,mBAAoBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGwP,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS2J,EAAW,GAAG3J,SAC7C,GAAO,EAAO,gFAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDwJ,IACA,SAACxK,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAO,sDAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDuM,IACA,SAACvN,GACG,OAAgBA,EAAW,GAAG3J,MAAOiZ,WAAW,MACjD,GAAO,EAAO,0CAErBnR,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDqO,IACA,SAACrP,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAO,2CAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACvG,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGsO,IACA,SAACvN,GACG,OAAOgO,OAAOM,SAAStO,EAAW,GAAG3J,MAAO2J,EAAW,GAAG3J,UAC3D,GAAO,EAAM,mEAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,YAAaiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrG,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGoQ,IACA,SAACrP,GACG,OAAgBA,EAAW,GAAG3J,MAAOsY,SAAS3O,EAAW,GAAG3J,OAAOkZ,OAAO,MAC3E,GAAO,EAAM,iFAEpBpR,KAAKsK,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,CAC3D,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGsO,IACA,SAACvN,GACG,OAAgBA,EAAW,GAAG3J,MAAOiZ,WAAW,MACjD,GAAO,EAAM,qEAEpBnR,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGwP,IACA,SAACzO,GACG,OAA4D,MAA5CA,EAAW,GAAG3J,MAAOmZ,MAAM,iBAC5C,GAAO,EAAM,sFAEpBrR,KAAKsK,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,CAC3D,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGwP,IACA,SAACzO,GACG,OAA+D,MAA/CA,EAAW,GAAG3J,MAAOmZ,MAAM,oBAC5C,GAAO,EAAM,uGAEpBrR,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGwP,IACA,SAACzO,GACG,OAAwD,MAAxCA,EAAW,GAAG3J,MAAOmZ,MAAM,aAC5C,GAAO,EAAM,mEAEhBrR,KAAKsK,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CAC5D,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGwP,IACA,SAACzO,GACG,OAA4D,MAA5CA,EAAW,GAAG3J,MAAOmZ,MAAM,iBAC5C,GAAO,EAAM,4GAEpBrR,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGoQ,IACA,SAACrP,GACG,OAAgBA,EAAW,GAAG3J,MAAOoZ,uBACtC,GAAO,EAAM,8CAEpBtR,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGoQ,IACA,SAACrP,GACG,OAAgBA,EAAW,GAAG3J,MAAOqZ,uBACtC,GAAO,EAAM,+CAEpBvR,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,aAAciH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGd,MACA,SAAC6B,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAM,wDA5I5B,kCAiJuBA,GACf,MAAO,GAAaA,EAAMA,W,6BAlJlC,GAAoC,G,qhCCA7B,IAAM,GAAb,YAII,WAAY4L,GAAgB,M,IAAA,O,4FAAA,S,EACxB,U,EAAA,gBAAM,UAAW,KAAM,yE,gDAH3B8L,YAAc,GAIV,EAAK9L,UAAYA,EAEjB,EAAKyG,aAAa,IAAI7J,EAAU,OAAd,OAA4B,SAACxI,GAAYA,EAAMA,OAAQ,KAAQ,EAAM6L,EAAW4C,QAAQ,EAAM,+CAChH,EAAK4D,aAAa,IAAI7J,EAAU,QAAd,OAA6B,SAACxI,GAAYA,EAAMA,OAAQ,KAAS,EAAM6L,EAAW4C,QAAQ,EAAM,gDAClH,EAAKC,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAR9B,E,UAJhC,O,mOAAA,M,EAAA,G,EAAA,iCAgBcxG,GACN,OAAOJ,KAAK4P,YAAYxK,QAAQhF,IAAS,GAAlC,+BAAAJ,MAAA,KAAAA,KAAuDI,KAjBtE,6BAsBQJ,KAAK4P,YAAc,CAACU,IAEpBtQ,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,gBAAiBiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7G,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2J,EAAW,GAAG3J,SAErC,GAAO,EAAO,wCAAwC,IAE7D8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3G,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAyB,MAAjB2J,EAAW,IAAmD,QAArCA,EAAW,GAAG3J,MAAMsZ,iBAEpE,GAAO,EAAO,qLAAuL,IAE5MxR,KAAKsK,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IAAKyN,IAC7D,SAACzO,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,wDAEnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,iBAAkBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC9FsO,IACA,SAACvN,GAGG,OAFSA,EAAW,GAAG3J,OACd2J,EAAW,GAAG3J,MACL,EAAI,KACvB,GAAO,EAAO,sGAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,iBAAkBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC9FwP,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS2J,EAAW,GAAG3J,SAC7C,GAAO,EAAO,gFAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDwJ,IACA,SAACxK,GACG,MAAO,GAAKA,EAAW,GAAG3J,SAC3B,GAAO,EAAO,sDAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDuM,IACA,SAACvN,GACG,OAAiBA,EAAW,GAAG3J,MAAS,EAAI,KAC7C,GAAO,EAAO,0CAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IACxDyN,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAO,8CAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,gBAAiBiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7Gd,MACA,SAAC6B,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAM,uDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3GwP,IACA,SAACzO,GACG,OAA8B,MAAvBA,EAAW,GAAG3J,OAAgE,QAAtC2J,EAAW,GAAG3J,MAAOsZ,iBACrE,GAAO,EAAM,iMAEpBxR,KAAKsK,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3GwP,IACA,SAACzO,GACG,OAA8B,MAAvBA,EAAW,GAAG3J,OAAgE,QAAtC2J,EAAW,GAAG3J,MAAOsZ,iBACrE,GAAO,EAAM,mMAlG5B,kCAuGuBtZ,GACf,MAAO,GAAaA,EAAMA,W,6BAxGlC,GAAkC,G,0lCCA3B,I,GAAM,GAAb,YAII,WAAY4L,GAAgB,a,4FAAA,UACxB,0BAAM,SAAU,KAAM,wEAH1B8L,YAAc,GAIV,EAAK9L,UAAYA,EAEjB,EAAKyG,aAAa,IAAI7J,EAAU,YAAauP,IAAqB,SAAC/X,GAAYA,EAAMA,MAAQ2X,OAAOY,aAAa,EAAM1M,EAAW4C,QAAQ,EAAM,oEAChJ,EAAK4D,aAAa,IAAI7J,EAAU,YAAauP,IAAqB,SAAC/X,GAAYA,EAAMA,MAAQ2X,OAAOa,aAAa,EAAM3M,EAAW4C,QAAQ,EAAM,sEAChJ,EAAK4D,aAAa,IAAI7J,EAAU,YAAauP,IAAqB,SAAC/X,GAAYA,EAAMA,MAAQ2X,OAAOc,OAAO,EAAM5M,EAAW4C,QAAQ,EAAM,2CAC1I,EAAK4D,aAAa,IAAI7J,EAAU,oBAAqBuP,IAAqB,SAAC/X,GAAYA,EAAMA,MAAQ2X,OAAOe,qBAAqB,EAAM7M,EAAW4C,QAAQ,EAAM,gDAChK,EAAK4D,aAAa,IAAI7J,EAAU,oBAAqBuP,IAAqB,SAAC/X,GAAYA,EAAMA,MAAQ2X,OAAOgB,qBAAqB,EAAM9M,EAAW4C,QAAQ,EAAM,gDAChK,EAAKC,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAX9B,E,UAJhC,O,mOAAA,M,EAAA,G,EAAA,iCAmBcxG,GACN,OAAOJ,KAAK4P,YAAYxK,QAAQhF,IAAS,GAAlC,+BAAAJ,MAAA,KAAAA,KAAuDI,KApBtE,6BAyBQJ,KAAK4P,YAAc,CAACK,IAEpBjQ,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,eAAgBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3G,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2J,EAAW,GAAG3J,SAErC,GAAO,EAAO,uCAAuC,IAE5D8H,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,YAAaiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2J,EAAW,GAAG3J,SAErC,GAAO,EAAO,uCAAuC,IAE5D8H,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GAEGA,EAAW,GAAG3J,MAAQ2X,OAAOiB,WAAWjP,EAAW,GAAG3J,UAEvD,GAAO,EAAO,iHAAiH,IAGtI8H,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IAAKoN,IAC5D,SAACpO,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,uDACnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IAAKmN,IAC3D,SAACnO,GAAiB,OAAOA,EAAW,GAAG3J,SAAU,GAAO,EAAO,sDACnE8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKuM,IACzD,SAACvN,GAAiB,OAAOyK,KAAKyE,MAAMlP,EAAW,GAAG3J,UAAW,GAAO,EAAO,mEAE/E8H,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,gBAAiBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FsO,IACA,SAACvN,GACG,IAAIuO,EAAKvO,EAAW,GAAG3J,MACnBmY,EAAKxO,EAAW,GAAG3J,MACvB,OAAIkY,EAAKC,EAAW,EAChBD,EAAKC,GAAY,EACd,KACR,GAAO,EAAO,qKAErBrQ,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,gBAAiBiH,KAAMJ,KAAMkQ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FwP,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS2J,EAAW,GAAG3J,SAC7C,GAAO,EAAO,gFAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDwJ,IACA,SAACxK,GACG,MAAO,GAAKA,EAAW,GAAG3J,SAC3B,GAAO,EAAO,sDAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDuM,IACA,SAACvN,GACG,OAAOyK,KAAKyE,MAAMlP,EAAW,GAAG3J,UACjC,GAAO,EAAO,0CAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGmP,IACA,SAACpO,GACG,OAAOgO,OAAOiB,WAAWjP,EAAW,GAAG3J,UACxC,GAAO,EAAM,qDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGuL,IACA,SAACxK,GACG,MAAO,GAAKA,EAAW,GAAG3J,SAC3B,GAAO,EAAM,qDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGd,MACA,SAAC6B,GACG,OAAOA,EAAW,GAAG3J,SACtB,GAAO,EAAM,uDAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGd,MACA,SAAC6B,GACG,OAAOgO,OAAOiB,WAAWjP,EAAW,GAAG3J,UACxC,GAAO,EAAM,oGAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGwP,IACA,SAACzO,GACG,OAAOgO,OAAOmB,MAAMnP,EAAW,GAAG3J,UACnC,GAAO,EAAM,0FAEpB8H,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjDyN,IACA,SAACzO,GACG,OAAOgO,OAAOmB,MAAMnP,EAAW,GAAG3J,UACnC,GAAO,EAAO,0EAErB8H,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGwP,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS+Y,OAC/B,GAAO,EAAM,iFAEpBjR,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDyN,IACA,SAACzO,GACG,OAAOA,EAAW,GAAG3J,OAAS+Y,OAC/B,GAAO,EAAO,kEAhJ7B,kCAoJuB/Y,GACf,MAAO,GAAaA,EAAMA,W,6BArJlC,GAAiC,G,ylDCK1B,IAAM,GAAb,YAEI,sCACI,6BACKiB,WAAa,OAFtB,EAFJ,yDAOkBkH,EAAsBC,GAChC,OAAO,OARf,8BAUYD,EAAsBsC,EAAqBC,GAC/C,OAAO,OAXf,gCAacxC,GACN,OAAQA,aAAgB,GAASA,aAAgB,IAdzD,6BAgBWlI,EAAckI,GACjB,OAAOlI,IAjBf,6BAmBWkI,GACH,OAAQA,aAAgB,GAASA,aAAgB,IApBzD,kCAuBuBlI,GACf,MAAO,WAxBf,GAA8ByH,GA4BjB,GAAb,YAEI,sCACI,6BACKxG,WAAa,MAFtB,EAFJ,yDAOkBkH,EAAsBC,GAChC,OAAO,OARf,8BAUYD,EAAsBsC,EAAqBC,GAC/C,OAAO,OAXf,gCAacxC,GACN,OAAQA,aAAgB,GAASA,aAAgB,IAdzD,6BAgBWlI,EAAckI,GACjB,OAAOlI,IAjBf,6BAmBWkI,GACH,OAAQA,aAAgB,GAASA,aAAgB,IApBzD,kCAuBuBlI,GACf,MAAO,UAxBf,GAA6ByH,GA4BhB,GAAb,kIAEQ,MACAK,KAAKE,aAAe,EAEpBF,KAAK7G,WAAa,MAElB6G,KAAKG,YAAc,aAEnBH,KAAKQ,gBAAL,QACKvH,EAAUoD,KAAO,CAAE,IAAO+S,GAAkB,QAAWA,GAAkB,MAASY,GAAoB,MAASA,GAAoB,OAAUC,GAAqB,OAAUA,GAAqB,OAAU5D,KADhN,KAEKpT,EAAUkD,MAAQ,CAAE,KAAQiT,GAAkB,IAAOA,GAAkB,QAAWA,GAAkB,MAASY,GAAoB,MAASA,GAAoB,OAAUC,GAAqB,OAAUA,KAF5M,KAGKhX,EAAUqD,eAAiB,CAAE,IAAO8S,GAAkB,QAAWA,GAAkB,MAASY,GAAoB,MAASA,GAAoB,OAAUC,GAAqB,OAAUA,KAH3L,KAIKhX,EAAUmD,OAAS,CAAE,IAAOgT,GAAkB,QAAWA,KAJ9D,KAKKnW,EAAUsD,SAAW,CAAE,IAAO6S,GAAkB,QAAWA,GAAkB,MAASY,GAAoB,MAASA,GAAoB,OAAUC,GAAqB,OAAUA,KALrL,KAMKhX,EAAU0D,WAAa,CAAE,KAAQyS,KANtC,KAOKnW,EAAUyD,YAAc,CAAE,KAAQ0S,KAPvC,KAQKnW,EAAUwY,SAAW,CAAE,KAAQrC,KARpC,KASKnW,EAAUmF,MAAQ,CAAE,KAAQgR,KATjC,KAUKnW,EAAU2D,MAAQ,CAAE,IAAO0T,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAV/L,KAWKrX,EAAU4D,QAAU,CAAE,IAAOyT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAXjM,KAYKrX,EAAU6D,aAAe,CAAE,IAAOwT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAZtM,KAaKrX,EAAU8D,eAAiB,CAAE,IAAOuT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAbxM,KAcKrX,EAAU+D,MAAQ,CAAE,IAAOsT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAd/L,KAeKrX,EAAUgE,SAAW,CAAE,IAAOqT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAflM,KAkBKrX,EAAUiF,GAAK,CAAE,IAAOkR,GAAkB,QAAWA,KAlB1D,KAmBKnW,EAAUkF,IAAM,CAAE,IAAOiR,GAAkB,QAAWA,KAnB3D,KAoBKnW,EAAUuE,UAAY,CAAE,IAAO4R,GAAkB,QAAWA,KApBjE,KAqBKnW,EAAUoF,UAAY,CAAE,IAAO+Q,GAAkB,QAAWA,KArBjE,KAsBKnW,EAAUqF,WAAa,CAAE,IAAO8Q,GAAkB,QAAWA,KAtBlE,KAuBKnW,EAAUsF,mBAAqB,CAAE,IAAO6Q,GAAkB,QAAWA,KAvB1E,GA6BApP,KAAKS,aAAe,CAChB,MAAS,CAAEiR,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,KAAQ,CAAED,WAAW,EAAMC,gBAAgB,GAC3C,IAAO,CAAED,WAAW,EAAMC,gBAAgB,GAC1C,QAAW,CAAED,WAAW,EAAMC,gBAAgB,MA5C1D,oCAmDQ,OAAO1Y,EAAUG,kBAnDzB,6BAsDkBlB,EAAckI,GAExB,OAAIA,GAAQ4P,IAAsB5P,GAAQ6P,GAC/B,CACH7P,KAAMA,EACNlI,MAAOA,EAAMA,OAIjBkI,GAAQiM,GACD,CACHjM,KAAMA,EACNlI,MAAO,GAAaA,EAAMA,OAI9BkI,GAAQ8Q,GACD,CACH9Q,KAAMA,EACNlI,MAAO0Z,OAAOC,aAAqB3Z,EAAMA,aAHjD,IAtER,8BAgFmBmI,EAAsBsC,EAAqBC,GAEtD,IAAI1K,EAAiByK,EAAazK,MAElC,OAAQmI,GACJ,KAAKpH,EAAUoD,KACX,OAAIuG,EAAcxC,KACPlI,EAAiB0K,EAAc1K,MAK9C,KAAKe,EAAUkD,MACX,OAAqB,MAAjByG,GAA+B1K,EAC5BA,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUqD,eACX,OAAOpE,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUsD,SACX,OAAIqG,EAAcxC,MAAQgP,GACf9C,KAAKyE,MAAM7Y,EAAiB0K,EAAc1K,OAE9CA,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUmD,OACX,OAAIwG,EAAcxC,MAAQgP,GACf9C,KAAKyE,MAAM7Y,EAAiB0K,EAAc1K,OAE9C,EAEX,KAAKe,EAAU0D,WACX,OAAOzE,IAEX,KAAKe,EAAUyD,YACX,OAAOxE,IAEX,KAAKe,EAAUwY,SACX,OAAQvZ,EAEZ,KAAKe,EAAUmF,MACX,OAAQlG,EAEZ,KAAKe,EAAU2D,MACX,OAAO1E,EAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU4D,QACX,OAAO3E,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAU6D,aACX,OAAO5E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU8D,eACX,OAAO7E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU+D,MACX,OAAO9E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUgE,SACX,OAAO/E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUiF,GACX,OAAOhG,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUkF,IACX,OAAOjG,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUuE,UACX,OAAOtF,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUoF,UACX,OAAOnG,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUqF,WACX,OAAOpG,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUsF,mBACX,OAAOrG,IAAmB0K,EAAc1K,SA7JxD,kCAoKuBA,GACf,MAAO,GAAaA,EAAMA,UArKlC,GAAsC+H,GA2KzB,GAAb,kIAEQ,MAEAD,KAAKE,aAAe,EAEpBF,KAAK7G,WAAa,QAElB6G,KAAKG,YAAc,2CAEnBH,KAAKQ,gBAAL,QACKvH,EAAUoD,KAAO,CAAE,QAAW2T,GAAoB,IAAOA,GAAoB,MAASA,GAAoB,MAASA,GAAoB,OAAUC,GAAqB,OAAUA,GAAqB,OAAU5D,KADpN,KAEKpT,EAAUkD,MAAQ,CAAE,KAAQ6T,GAAoB,QAAWA,GAAoB,IAAOA,GAAoB,MAASA,GAAoB,MAASA,GAAoB,OAAUC,GAAqB,OAAUA,KAFlN,KAGKhX,EAAUqD,eAAiB,CAAE,QAAW0T,GAAoB,IAAOA,GAAoB,MAASA,GAAoB,MAASA,GAAoB,OAAUC,GAAqB,OAAUA,KAH/L,KAIKhX,EAAUsD,SAAW,CAAE,QAAWyT,GAAoB,IAAOA,GAAoB,MAASA,GAAoB,MAASA,GAAoB,OAAUC,GAAqB,OAAUA,KAJzL,KAKKhX,EAAU0D,WAAa,CAAE,KAAQqT,KALtC,KAMK/W,EAAUyD,YAAc,CAAE,KAAQsT,KANvC,KAOK/W,EAAUwY,SAAW,CAAE,KAAQzB,KAPpC,KAQK/W,EAAU2D,MAAQ,CAAE,IAAO0T,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAR/L,KASKrX,EAAU4D,QAAU,CAAE,IAAOyT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KATjM,KAUKrX,EAAU6D,aAAe,CAAE,IAAOwT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAVtM,KAWKrX,EAAU8D,eAAiB,CAAE,IAAOuT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAXxM,KAYKrX,EAAU+D,MAAQ,CAAE,IAAOsT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAZ/L,KAaKrX,EAAUgE,SAAW,CAAE,IAAOqT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAblM,GAkBAtQ,KAAKS,aAAe,CAChB,IAAO,CAAEiR,WAAW,EAAOC,gBAAgB,GAC3C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,MAlCzD,oCAwCQ,OAAO1Y,EAAUI,wBAxCzB,6BA2CkBnB,EAAckI,GAExB,OAAIA,GAAQiM,GACD,CACHjM,KAAMA,EACNlI,MAAO,GAAaA,EAAMA,OAI9BkI,GAAQgP,GACD,CACHhP,KAAMA,EACNlI,MAAOoU,KAAKyE,MAAc7Y,EAAMA,QAIpCkI,GAAQ6P,GACD,CACH7P,KAAMA,EACNlI,MAAOA,EAAMA,YAHrB,IA3DR,8BAqEmBmI,EAAsBsC,EAAqBC,GAEtD,IAAI1K,EAAiByK,EAAazK,MAElC,OAAQmI,GACJ,KAAKpH,EAAUoD,KACX,OAAIuG,EAAcxC,KACPlI,EAAiB0K,EAAc1K,MAK9C,KAAKe,EAAUkD,MACX,OAAqB,MAAjByG,GAA+B1K,EAC5BA,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUqD,eACX,OAAOpE,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUsD,SACX,OAAOrE,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAU0D,WACX,OAAOzE,IAEX,KAAKe,EAAUyD,YACX,OAAOxE,IAEX,KAAKe,EAAUwY,SACX,OAAQvZ,EAEZ,KAAKe,EAAU2D,MACX,OAAO1E,EAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU4D,QACX,OAAO3E,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAU6D,aACX,OAAO5E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU8D,eACX,OAAO7E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU+D,MACX,OAAO9E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUgE,SACX,OAAO/E,GAAkB0K,EAAc1K,SApHvD,kCA2HuBA,GACf,MAAO,GAAaA,EAAMA,UA5HlC,GAAwC+H,GAkI3B,GAAb,kIAEQ,MAEAD,KAAKE,aAAe,EAEpBF,KAAK7G,WAAa,SAElB6G,KAAKG,YAAc,2CAEnBH,KAAKQ,gBAAL,QACKvH,EAAUoD,KAAO,CAAE,IAAO4T,GAAqB,QAAWA,GAAqB,MAASA,GAAqB,MAASA,GAAqB,OAAUA,GAAqB,OAAUA,GAAqB,OAAU5D,KADxN,KAEKpT,EAAUkD,MAAQ,CAAE,KAAQ8T,GAAqB,IAAOA,GAAqB,QAAWA,GAAqB,MAASA,GAAqB,MAASA,GAAqB,OAAUA,GAAqB,OAAUA,KAFvN,KAGKhX,EAAUqD,eAAiB,CAAE,IAAO2T,GAAqB,QAAWA,GAAqB,MAASA,GAAqB,MAASA,GAAqB,OAAUA,GAAqB,OAAUA,KAHnM,KAIKhX,EAAUsD,SAAW,CAAE,IAAO0T,GAAqB,QAAWA,GAAqB,MAASA,GAAqB,MAASA,GAAqB,OAAUA,GAAqB,OAAUA,KAJ7L,KAKKhX,EAAU0D,WAAa,CAAE,KAAQsT,KALtC,KAMKhX,EAAUyD,YAAc,CAAE,KAAQuT,KANvC,KAOKhX,EAAUwY,SAAW,CAAE,KAAQxB,KAPpC,KAQKhX,EAAU2D,MAAQ,CAAE,IAAO0T,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAR/L,KASKrX,EAAU4D,QAAU,CAAE,IAAOyT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KATjM,KAUKrX,EAAU6D,aAAe,CAAE,IAAOwT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAVtM,KAWKrX,EAAU8D,eAAiB,CAAE,IAAOuT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAXxM,KAYKrX,EAAU+D,MAAQ,CAAE,IAAOsT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAZ/L,KAaKrX,EAAUgE,SAAW,CAAE,IAAOqT,GAAsB,MAASA,GAAsB,OAAUA,GAAsB,QAAWA,GAAsB,MAASA,GAAsB,OAAUA,KAblM,GAiBAtQ,KAAKS,aAAe,CAChB,IAAO,CAAEiR,WAAW,EAAOC,gBAAgB,GAC3C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,MAjCzD,oCAwCQ,OAAO1Y,EAAUI,wBAxCzB,6BA2CkBnB,EAAckI,GAExB,OAAIA,GAAQiM,GACD,CACHjM,KAAMA,EACNlI,MAAO,GAAaA,EAAMA,OAI9BkI,GAAQgP,GACD,CACHhP,KAAMA,EACNlI,MAAOoU,KAAKyE,MAAc7Y,EAAMA,QAIpCkI,GAAQ4P,GACD,CACH5P,KAAMA,EACNlI,MAAOA,EAAMA,YAHrB,IA3DR,8BAqEmBmI,EAAsBsC,EAAqBC,GAEtD,IAAI1K,EAAiByK,EAAazK,MAElC,OAAQmI,GACJ,KAAKpH,EAAUoD,KACX,OAAIuG,EAAcxC,KACPlI,EAAiB0K,EAAc1K,MAK9C,KAAKe,EAAUkD,MACX,OAAqB,MAAjByG,GAA+B1K,EAC5BA,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUqD,eACX,OAAOpE,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAUsD,SACX,OAAOrE,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAU0D,WACX,OAAOzE,IAEX,KAAKe,EAAUyD,YACX,OAAOxE,IAEX,KAAKe,EAAUwY,SACX,OAAQvZ,EAEZ,KAAKe,EAAU2D,MACX,OAAO1E,EAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU4D,QACX,OAAO3E,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAU6D,aACX,OAAO5E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU8D,eACX,OAAO7E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU+D,MACX,OAAO9E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUgE,SACX,OAAO/E,GAAkB0K,EAAc1K,SApHvD,kCA2HuBA,GACf,MAAO,GAAaA,EAAMA,UA5HlC,GAAyC+H,GAkI5B,GAAb,kIAEQ,MAEAD,KAAKE,cAAe,EAEpBF,KAAK7G,WAAa,UAElB6G,KAAKG,YAAc,oCAEnBH,KAAKQ,gBAAL,QACKvH,EAAUoD,KAAO,CAAE,OAAUgQ,KADlC,KAEKpT,EAAUwE,IAAM,CAAE,QAAW6S,KAFlC,KAGKrX,EAAUyE,GAAK,CAAE,QAAW4S,KAHjC,KAIKrX,EAAU0E,IAAM,CAAE,KAAQ2S,KAJ/B,KAKKrX,EAAU+D,MAAQ,CAAE,QAAWsT,KALpC,KAMKrX,EAAUgE,SAAW,CAAE,QAAWqT,KANvC,GASAtQ,KAAKS,aAAe,CAChB,OAAU,CAAEiR,WAAW,EAAMC,gBAAgB,GAC7C,QAAW,CAAED,WAAW,EAAMC,gBAAgB,GAC9C,QAAW,CAAED,WAAW,EAAMC,gBAAgB,MAtB1D,oCA6BQ,OAAO1Y,EAAUK,kBA7BzB,6BAgCkBpB,EAAckI,GAExB,GAAIA,GAAQiM,GACR,MAAO,CACHjM,KAAMA,EACNlI,MAAO,GAAaA,EAAMA,SArC1C,8BA4CmBmI,EAAsBsC,EAAqBC,GAEtD,IAAI1K,EAAkByK,EAAazK,MAEnC,OAAQmI,GACJ,KAAKpH,EAAUoD,KACX,OAAOnE,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAU+D,MACX,OAAO9E,GAAmB0K,EAAc1K,MAE5C,KAAKe,EAAUgE,SACX,OAAO/E,GAAmB0K,EAAc1K,MAE5C,KAAKe,EAAUwE,IACX,OAAOvF,GAAmB0K,EAAc1K,MAE5C,KAAKe,EAAUyE,GACX,OAAOxF,GAAmB0K,EAAc1K,MAE5C,KAAKe,EAAU0E,IACX,OAAQzF,KAjExB,kCAwEuBA,GACf,MAAO,GAAcA,EAAMA,UAzEnC,GAA0C+H,GA+E7B,GAAb,kIAIQD,KAAKE,cAAe,EAEpBF,KAAK7G,WAAa,OAElB6G,KAAKG,YAAc,sBAEnBH,KAAKQ,eAAiB,GAGtBR,KAAKS,aAAe,KAb5B,oCAkBQ,OAAOxH,EAAUgB,cAlBzB,6BAqBkB/B,EAAckI,GAExB,OAAOlI,IAvBf,8BA4BmBmI,EAAsBsC,EAAqBC,GAEtD,OAAO,OA9Bf,kCAkCuB1K,GACf,MAAO,WAnCf,GAAuC+H,GAyC1B,GAAb,YA6BI,WAAY6D,GAAgB,kBACxB,0BAAM,SAAU,KAAM,+DACjBA,UAAYA,EACjB,IAAIgO,EAAc,MAHM,OAIxBhO,EAAU0C,QAAQqE,QAAO,SAAAxT,GAAC,MAAoB,YAAhBA,EAAE8B,cAA0B4Y,SAAQ,SAAA1a,GAAC,OAAIA,EAAE4J,WAAa6Q,KAJ9D,EA7BhC,yDAKQ,OAAO7Y,EAAUM,iBALzB,oCAQyB8G,EAAsBC,GAEvC,GAAID,GAAapH,EAAUuC,kBACvB,0DAA2B6E,EAAWC,GAG1C,IAAIC,EAAYP,KAAKQ,eAAeH,GAEpC,OAAiB,MAAbE,EACO,KAGc,MAArBD,EACOC,EAAUD,EAAkBnH,YAGhCoH,EAAS,OAxBxB,6BAoCQ,MACAP,KAAKQ,gBAAL,QACKvH,EAAUoD,KAAO,CACd,OAAUgQ,GAAqB,IAAOA,GACtC,MAASA,GAAqB,OAAU4D,GACxC,QAAW5D,GAAqB,KAAQA,KAJhD,KAMKpT,EAAU+D,MAAQ,CAAE,OAAUsT,GAAsB,KAAQA,KANjE,KAOKrX,EAAUgE,SAAW,CAAE,OAAUqT,GAAsB,KAAQA,KAPpE,KAQKrX,EAAU2D,MAAQ,CAAE,OAAU0T,KARnC,KASKrX,EAAU4D,QAAU,CAAE,OAAUyT,KATrC,KAUKrX,EAAU6D,aAAe,CAAE,OAAUwT,KAV1C,KAWKrX,EAAU8D,eAAiB,CAAE,OAAUuT,KAX5C,GAgBAtQ,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAAKuM,IACvD,SAACvN,GAAiB,OAAgBA,EAAW,GAAG3J,MAAO8J,UAAW,GAAO,EAAO,yEACpFhC,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,WAAYiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWoQ,IAClK,SAACrP,GAAiB,OAAgBA,EAAW,GAAG3J,MAAOkZ,OAAgBvP,EAAW,GAAG3J,UAAY,GAAO,EAAO,iJACnH8H,KAAKsK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWwP,IACxK,SAACzO,GAAiB,OAAeA,EAAW,GAAG3J,OAAkB2J,EAAW,GAAG3J,SAAW,GAAO,EAAO,oIAC5G8H,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWsO,IAC3K,SAACvN,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQ8Z,cAAuBnQ,EAAW,GAAG3J,MAAQ,KAAM,CAAE+Z,UAAW,aAAe,GAAO,EAAO,qLAC1JjS,KAAKsK,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWsO,IACrL,SAACvN,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQ8Z,cAAuBnQ,EAAW,GAAG3J,MAAQ,KAAM,CAAEga,YAAa,cAAgB,GAAO,EAAO,qLAC7JlS,KAAKsK,UAAU,IAAIvJ,EAAO,mBAAoB,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWwP,IAClL,SAACzO,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQsZ,eAA2B3P,EAAW,GAAG3J,MAAOsZ,iBAAmB,GAAO,EAAO,uIAC9IxR,KAAKsK,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,SAAUiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWwP,IACrK,SAACzO,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQia,SAAkBtQ,EAAW,GAAG3J,UAAY,GAAO,EAAO,gKACvH8H,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,SAAUiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWwP,IACvK,SAACzO,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQka,WAAoBvQ,EAAW,GAAG3J,UAAY,GAAO,EAAO,kKACzH8H,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IAAKwJ,IAC5D,SAACxK,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQqZ,uBAAwB,GAAO,EAAO,sOACnGvR,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IAAKwJ,IAC5D,SAACxK,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQoZ,uBAAwB,GAAO,EAAO,sOACnGtR,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,aAAciH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWuL,IACvK,SAACxK,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQma,UAAmBxQ,EAAW,GAAG3J,UAAY,GAAO,EAAO,mKACxH8H,KAAKsK,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,aAAciH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChK,CAAE3H,WAAY,WAAYiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWuL,IAC3G,SAACxK,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQma,UAAmBxQ,EAAW,GAAG3J,MAAiB2J,EAAW,GAAG3J,UAAY,GAAO,EAAO,wMACvJ8H,KAAKsK,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAAKwJ,IACrD,SAACxK,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQoa,UAAW,GAAO,EAAO,iJACtFtS,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IAAKyN,IACxD,SAACzO,GAAiB,MAA0C,IAAzBA,EAAW,GAAG3J,SAAkB,GAAO,EAAO,oJACrF8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWsO,IACzK,SAACvN,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQkN,QAAiBvD,EAAW,GAAG3J,UAAY,GAAO,EAAO,8FACtH8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC1G,CAAE3H,WAAY,YAAaiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrGsO,IACA,SAACvN,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQkN,QAAiBvD,EAAW,GAAG3J,MAAiB2J,EAAW,GAAG3J,UAAY,GAAO,EAAO,oJACrJ8H,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CAAC,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAWsO,IAC7K,SAACvN,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQqa,YAAqB1Q,EAAW,GAAG3J,UAAY,GAAO,EAAO,4FAC1H8H,KAAKsK,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC1G,CAAE3H,WAAY,YAAaiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrGsO,IACA,SAACvN,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQqa,YAAqB1Q,EAAW,GAAG3J,MAAiB2J,EAAW,GAAG3J,UAAY,GAAO,EAAO,gKACzJ8H,KAAKsK,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,SAAUiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrG,CAAE3H,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GuL,IACA,SAACxK,GAAiB,OAAiBA,EAAW,GAAG3J,MAAQ4R,QAAiBjI,EAAW,GAAG3J,MAAiB2J,EAAW,GAAG3J,UAAY,GAAO,EAAO,4JACrJ8H,KAAKsK,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GuL,IACA,SAACxK,GACG,IAAI2Q,EAAmB3Q,EAAW,GAAG3J,MACjCua,EAAS,IAAIC,OAAOF,EAAS,KAEjC,OAAiB3Q,EAAW,GAAG3J,MAAQ4R,QAAQ2I,EAAiB5Q,EAAW,GAAG3J,UAC/E,GAAO,EAAO,qHACrB8H,KAAKsK,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GuL,IACA,SAACxK,GACG,IAAI2Q,EAAmB3Q,EAAW,GAAG3J,MACjCua,EAAS,IAAIC,OAAOF,EAAS,IAEjC,OAAiB3Q,EAAW,GAAG3J,MAAQ4R,QAAQ2I,EAAiB5Q,EAAW,GAAG3J,UAC/E,GAAO,EAAO,yHACrB8H,KAAKsK,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,IAAI,EAAUuL,KACd,SAACxK,GACG,IAAI2Q,EAAmB3Q,EAAW,GAAG3J,MACjCua,EAAS,IAAIC,OAAOF,EAAS,IAE7BG,EAAoB9Q,EAAW,GAAG3J,MAAQ0a,MAAMH,GAChDI,EAAkB,GALX,uBAMX,YAAcF,EAAd,+CAAuB,KAAd3Z,EAAc,QACnB6Z,EAAOtO,KAAK,CAAEnE,KAAMiM,GAAqBnU,MAAOc,KAPzC,kFAUX,OAAO6Z,KAER,GAAO,EAAO,gNAxI7B,8BA4ImBxS,EAAsBsC,EAAqBC,GAEtD,IAAI1K,EAAiByK,EAAazK,MAElC,OAAQmI,GACJ,KAAKpH,EAAUoD,KACX,OAAIuG,EAAcxC,MAAQiM,IAAuBzJ,EAAcxC,MAAQ8Q,IAE5DtO,EAAcxC,KADdlI,EAAiB0K,EAAc1K,MAO9C,KAAKe,EAAU2D,MACX,OAAO1E,EAAM8Z,cAAuBpP,EAAc1K,MAAQ,KAAM,CAAE+Z,UAAW,UAAa,EAG9F,KAAKhZ,EAAU4D,QACX,OAAO3E,EAAM8Z,cAAuBpP,EAAc1K,MAAQ,KAAM,CAAE+Z,UAAW,UAAa,EAG9F,KAAKhZ,EAAU6D,aACX,OAAO5E,EAAM8Z,cAAuBpP,EAAc1K,MAAQ,KAAM,CAAE+Z,UAAW,WAAc,EAG/F,KAAKhZ,EAAU8D,eACX,OAAO7E,EAAM8Z,cAAuBpP,EAAc1K,MAAQ,KAAM,CAAE+Z,UAAW,WAAc,EAG/F,KAAKhZ,EAAU+D,MACX,OAAO9E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUgE,SACX,OAAO/E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUuC,kBACX,oDAAqB6E,EAAWsC,EAAcC,MAjL9D,kCAwLuB1K,GACf,MAAO,IAAcA,EAAMA,MAAQ,QAzL3C,GAAyC,GA+L5B,GAAb,kIAEQ,MAEA8H,KAAKE,aAAe,KAEpBF,KAAK7G,WAAa,OAElB6G,KAAKG,YAAc,cAEnBH,KAAKQ,gBAAL,QACKvH,EAAUoD,KAAO,CAAE,OAAUgQ,GAAqB,KAAQA,KAD/D,KAEKpT,EAAU+D,MAAQ,CAAE,KAAQsT,KAFjC,KAGKrX,EAAUgE,SAAW,CAAE,KAAQqT,KAHpC,KAIKrX,EAAU2D,MAAQ,CAAE,KAAQ0T,KAJjC,KAKKrX,EAAU4D,QAAU,CAAE,KAAQyT,KALnC,KAMKrX,EAAU6D,aAAe,CAAE,KAAQwT,KANxC,KAOKrX,EAAU8D,eAAiB,CAAE,KAAQuT,KAP1C,GAYAtQ,KAAKS,aAAe,CAChB,IAAO,CAAEiR,WAAW,EAAMC,gBAAgB,GAC1C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,KAAQ,CAAED,WAAW,EAAMC,gBAAgB,GAC3C,UAAa,CAAED,WAAW,EAAMC,gBAAgB,MA5B5D,oCAkCQ,OAAO1Y,EAAUO,eAlCzB,6BAqCkBtB,EAAckI,GAExB,OAAIA,GAAQiM,GACDnU,EAGPkI,GAAQgP,IAAoBhP,GAAQ4P,IAAsB5P,GAAQ6P,GAC3D,CACH7P,KAAMA,EACNlI,MAAgBA,EAAMA,MAAOiZ,WAAW,SAHhD,IA3CR,8BAoDmB9Q,EAAsBsC,EAAqBC,GAEtD,IAAI1K,EAAiByK,EAAazK,MAElC,OAAQmI,GACJ,KAAKpH,EAAUoD,KACX,OAAOnE,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAU2D,MACX,OAAO1E,EAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU4D,QACX,OAAO3E,EAAiB0K,EAAc1K,MAE1C,KAAKe,EAAU6D,aACX,OAAO5E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU8D,eACX,OAAO7E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAU+D,MACX,OAAO9E,GAAkB0K,EAAc1K,MAE3C,KAAKe,EAAUgE,SACX,OAAO/E,GAAkB0K,EAAc1K,SA5EvD,kCAmFuBA,GACf,MAAO,IAAcA,EAAMA,MAAQ,QApF3C,GAAuC+H,GA0F5B6S,GAAoB,IAAI,GACxB1D,GAAmB,IAAI,GACvBY,GAAqB,IAAI,GACzBC,GAAsB,IAAI,GAC1BK,GAAuB,IAAI,GRv3BlCtM,EQw3BwBsM,GACrB,ICt4BFyC,GDs4BM,GAAa,IAAI,GAAY,MAC7B1G,GAAsB,IAAI,GAAoB,IAC9C6E,GAAoB,IAAI,GACxB1G,GAAW,IAAI,GACfwI,GAAU,IAAI,GAEdC,GAAc,IAAI,GAAa,IAC/BC,GAAY,IAAI,GAAW,IAC3BC,GAAa,IAAI,GAAY,IAC7BC,GAAgB,IAAI,GAAe,IACnCC,GAAc,IAAI,GAAa,IAE/BC,IAAsB,SAC5Bra,EAAUG,gBAAkBgW,IADA,MAE5BnW,EAAUI,sBAAwB2W,IAFN,MAG5B/W,EAAUK,gBAAkBgX,IAHA,MAI5BrX,EAAUM,eAAiB8S,IAJC,MAK5BpT,EAAUO,aAAe0X,IALG,MAM5BjY,EAAUqC,YAAckP,IANI,I,wKCl5BjC,SAAKuI,GACD,uBAAQ,+BAAY,uCAAgB,6CAAmB,2CAAkB,2CAD7E,CAAKA,QAAU,KAIf,IAgBa,GAAb,WAuBI,c,4FAAA,SARA,KAAAQ,YAA2B,CACvBta,EAAU8F,MAAO9F,EAAU+F,IAAK/F,EAAUgG,SAK9C,KAAAuU,qBAAqD,GAGjDxT,KAAKwT,qBAAqBva,EAAU0C,aAAe1C,EAAU2C,aAC7DoE,KAAKwT,qBAAqBva,EAAU8C,kBAAoB9C,EAAU+C,kBAClEgE,KAAKwT,qBAAqBva,EAAU4C,mBAAqB5C,EAAU6C,mBACnEkE,KAAKwT,qBAAqBva,EAAU2C,cAAgB3C,EAAU0C,YAC9DqE,KAAKwT,qBAAqBva,EAAU+C,mBAAqB/C,EAAU8C,iBACnEiE,KAAKwT,qBAAqBva,EAAU6C,oBAAsB7C,EAAU4C,kB,UA7B5E,O,EAAA,G,EAAA,2BAgCQ4X,GAaA,GAXAzT,KAAKyT,MAAQA,EAAM3J,QAAQ,IAAU,KACrC9J,KAAK0T,UAAY,GACjB1T,KAAK2T,UAAY,GACjB3T,KAAK4T,aAAe,KACpB5T,KAAK6T,aAAe,GACpB7T,KAAK8T,IAAM,EACX9T,KAAKkK,KAAO,EACZlK,KAAKmK,OAAS,EACdnK,KAAK+T,sBAAwB,KAGT,GAAhBN,EAAMzR,OACN,MAAO,CAAEgS,OAAQhU,KAAK0T,UAAWO,OAAQjU,KAAK2T,UAAWC,aAAc,MAQ3E,IALA5T,KAAKkU,YAAcT,EAAMrC,OAAO,GAEhCpR,KAAKmU,SAAWV,EAAMzR,OAAS,EAAIyR,EAAMrC,OAAO,GAnE1C,SAsECpR,KAAKkU,aACRlU,KAAKoU,YAGT,GAAIpU,KAAK6T,aAAa7R,OAAS,EAAG,CAC9B,IAAIqS,EAAcrU,KAAK6T,aAAaS,MAChCC,EAAgBvU,KAAKwT,qBAAqBa,GAE9CrU,KAAKwU,gBAAgBtb,EAAkBmb,GAAe,IAAMnb,EAAkBqb,IAGlF,MAAO,CACHP,OAAQhU,KAAK0T,UACbO,OAAQjU,KAAK2T,UACbC,aAAc5T,KAAK4T,gBApE/B,0CAyEwBa,GAChB,GAAgC,GAA5BzU,KAAK6T,aAAa7R,OAAtB,CAKA,IAAI0S,EAAc1U,KAAK6T,aAAaS,MAChCd,EAAuBxT,KAAKwT,qBAAqBkB,GACjDD,GAAMjB,GACNxT,KAAKwU,gBAAgBtb,EAAkBwb,GAAe,IAAMxb,EAAkBsa,QARlF,CACI,IAAIa,EAAcrU,KAAKwT,qBAAqBiB,GAC5CzU,KAAKwU,gBAAgBtb,EAAkBmb,GAAe,IAAMnb,EAAkBub,OA5E1F,sCAsFoB1I,GACa,MAArB/L,KAAK4T,eAAsB5T,KAAK4T,aAAe7H,KAvF3D,6BA2FQ/L,KAAK8T,MACL9T,KAAKkU,YAAclU,KAAKmU,SACpBnU,KAAK8T,IAAM,EAAI9T,KAAKyT,MAAMzR,OAC1BhC,KAAKmU,SAAWnU,KAAKyT,MAAMrC,OAAOpR,KAAK8T,IAAM,GAE7C9T,KAAKmU,SAhHH,IAkHNnU,KAAKmK,WAlGb,kCAyGQ,IAAIwK,EAAO3U,KAAKkU,YAEZU,EAAmBvV,EAAgBsV,GAEvC,GAAwB,MAApBC,EAA0B,CAC1B,OAAQA,GACJ,KAAK3b,EAAU4C,kBACX,MAAqB,KAAjBmE,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAUgD,uBAAwB,MACjD+D,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAU4C,kBAAmB,KAC5CmE,KAAK6T,aAAatP,KAAKqQ,QACvB5U,KAAK8U,QAGb,KAAK7b,EAAU6C,mBACXkE,KAAK+U,oBAAoBH,GACzB,MACJ,KAAK3b,EAAU0C,YACXqE,KAAK6T,aAAatP,KAAKqQ,GACvB,MACJ,KAAK3b,EAAU2C,aACXoE,KAAK+U,oBAAoBH,GACzB,MACJ,KAAK3b,EAAU8C,iBACXiE,KAAK6T,aAAatP,KAAKqQ,GACvB,MACJ,KAAK3b,EAAU+C,kBACXgE,KAAK+U,oBAAoBH,GACzB,MACJ,KAAK3b,EAAUwE,IACX,MAAqB,KAAjBuC,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAUwE,IAAK,MAC9BuC,KAAK8U,YACL9U,KAAK8U,QAEmB,KAAjB9U,KAAKmU,UACZnU,KAAK6U,UAAU5b,EAAU2E,aAAc,MACvCoC,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUuE,UAAW,UACpCwC,KAAK8U,QAGb,KAAK7b,EAAUyE,GACX,MAAqB,KAAjBsC,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAUyE,GAAI,MAC7BsC,KAAK8U,YACL9U,KAAK8U,QAEmB,KAAjB9U,KAAKmU,UACZnU,KAAK6U,UAAU5b,EAAU6E,YAAa,MACtCkC,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUiF,GAAI,UAC7B8B,KAAK8U,QAGb,KAAK7b,EAAUkF,IACX,MAAqB,KAAjB6B,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAU4E,aAAc,MACvCmC,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUkF,IAAK,UAC9B6B,KAAK8U,QAGb,KAAK7b,EAAUqD,eACX,MAAqB,KAAjB0D,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAUoE,yBAA0B,MACnD2C,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUqD,eAAgB,UACzC0D,KAAK8U,QAGb,KAAK7b,EAAU0E,IACX,MAAqB,KAAjBqC,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAUgE,SAAU,MACnC+C,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAU0E,IAAK,UAC9BqC,KAAK8U,QAGb,KAAK7b,EAAUsD,SACX,MAAqB,KAAjByD,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAUqE,mBAAoB,MAC7C0C,KAAK8U,YACL9U,KAAK8U,QAEmB,KAAjB9U,KAAKmU,cACZnU,KAAKgV,sBAEmB,KAAjBhV,KAAKmU,cACZnU,KAAKiV,uBAGTjV,KAAK6U,UAAU5b,EAAUsD,SAAU,UACnCyD,KAAK8U,QAET,KAAK7b,EAAUmD,OACX,MAAqB,KAAjB4D,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAUsE,iBAAkB,MAC3CyC,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUmD,OAAQ,UACjC4D,KAAK8U,QAGb,KAAK7b,EAAUoD,KACX,MAAqB,KAAjB2D,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAU0D,WAAY,MACrCqD,KAAK8U,YACL9U,KAAK8U,QAEmB,KAAjB9U,KAAKmU,UACZnU,KAAK6U,UAAU5b,EAAUkE,eAAgB,MACzC6C,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUoD,KAAM,UAC/B2D,KAAK8U,QAGb,KAAK7b,EAAU2D,MACX,MAAqB,KAAjBoD,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAU6D,aAAc,MACvCkD,KAAK8U,YACL9U,KAAK8U,QAEmB,KAAjB9U,KAAKmU,cACZnU,KAAKkV,gBAGLlV,KAAK6U,UAAU5b,EAAU2D,MAAO,UAChCoD,KAAK8U,QAGb,KAAK7b,EAAU4D,QACX,MAAqB,KAAjBmD,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAU8D,eAAgB,MACzCiD,KAAK8U,YACL9U,KAAK8U,QAEmB,KAAjB9U,KAAKmU,cACZnU,KAAKmV,iBAGLnV,KAAK6U,UAAU5b,EAAU4D,QAAS,UAClCmD,KAAK8U,QAGb,KAAK7b,EAAUiD,IACX,MAAqB,KAAjB8D,KAAKmU,UAAmBnU,KAAK8T,IAAM,EAAI9T,KAAKyT,MAAMzR,QAAsC,KAA5BhC,KAAKyT,MAAMzT,KAAK8T,IAAM,IAClF9T,KAAK6U,UAAU5b,EAAU0F,SAAU,OACnCqB,KAAK8U,OACL9U,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUiD,IAAK,UAC9B8D,KAAK8U,QAIb,KAAK7b,EAAUiE,WACX,MAAqB,KAAjB8C,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAU+D,MAAO,MAChCgD,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUiE,WAAY,UACrC8C,KAAK8U,QAGb,KAAK7b,EAAUkD,MACX,MAAqB,KAAjB6D,KAAKmU,UACLnU,KAAK6U,UAAU5b,EAAUyD,YAAa,MACtCsD,KAAK8U,YACL9U,KAAK8U,SAGA9U,KAAKoV,QAAQpV,KAAKmU,SAAU,KAChC,CAAClb,EAAUE,WAAYF,EAAUG,gBAAiBH,EAAUI,sBAAuBJ,EAAU2C,cAAcwJ,QAAQpF,KAAK+T,wBAA0B,EAK7H,KAAjB/T,KAAKmU,UACVnU,KAAK6U,UAAU5b,EAAUmE,gBAAiB,MAC1C4C,KAAK8U,YACL9U,KAAK8U,SAGL9U,KAAK6U,UAAU5b,EAAUkD,MAAO,UAChC6D,KAAK8U,aAVL9U,KAAKqV,YAab,KAAKpc,EAAUuD,YAEX,YADAwD,KAAKsV,uBAET,KAAKrc,EAAUwD,YAEX,YADAuD,KAAKuV,oBAET,KAAKtc,EAAUgG,QAKX,OAJAe,KAAK6U,UAAU5b,EAAUgG,QAAS,MAClCe,KAAKkK,OACLlK,KAAKmK,OAAS,OACdnK,KAAK8U,OAET,KAAK7b,EAAU8F,MACf,KAAK9F,EAAU+F,IAEX,YADAgB,KAAKwV,WAET,KAAKvc,EAAUsG,SAEX,YADAS,KAAK8U,OAET,KAAK7b,EAAU6F,GAEX,YADAkB,KAAKyV,gBAMb,OAFAzV,KAAK6U,UAAUD,EAAkBD,QACjC3U,KAAK8U,OAOL9U,KAAKoV,QAAQT,EAAM,IACnB3U,KAAKqV,YAITrV,KAAK0V,2BAtWb,sCA2WQ1V,KAAK8U,OAEe,KAAjB9U,KAAKmU,SACJnU,KAAK2V,wBACkB,KAAjB3V,KAAKmU,UACXnU,KAAK6U,UAAU5b,EAAU+E,oBAAqB,OAC9CgC,KAAK8U,OACL9U,KAAK8U,SAEL9U,KAAK6U,UAAU5b,EAAUqF,WAAY,MACrC0B,KAAK8U,UArXjB,8CA2XQ9U,KAAK8U,OAEe,KAAjB9U,KAAKmU,UACJnU,KAAK6U,UAAU5b,EAAUgF,4BAA6B,QACtD+B,KAAK8U,OACL9U,KAAK8U,SAEL9U,KAAK6U,UAAU5b,EAAUsF,mBAAoB,OAC7CyB,KAAK8U,UAnYjB,qCAyYQ9U,KAAK8U,OAEe,KAAjB9U,KAAKmU,UACJnU,KAAK6U,UAAU5b,EAAU8E,mBAAoB,OAC7CiC,KAAK8U,OACL9U,KAAK8U,SAEL9U,KAAK6U,UAAU5b,EAAUoF,UAAW,MACpC2B,KAAK8U,UAjZjB,gCAuZcL,EAAemB,GAA4H,IAA3F1L,EAA2F,uDAA5ElK,KAAKkK,KAAMC,EAAiE,uDAAhDnK,KAAKmK,OAAQnI,EAAmC,wDAAjB,GAAK4T,GAAM5T,OACvI7J,EAAW,CACXsc,GAAIA,EACJvc,MAAO0d,EACPpR,SAAU,CACN2F,OAAQA,EACRD,KAAMA,EACNlI,OAAQA,IAIVhC,KAAKuT,YAAYnO,QAAQqP,IAAO,IAClCzU,KAAK+T,sBAAwBU,GAGjCzU,KAAK0T,UAAUnP,KAAKpM,KAta5B,gCAyacyd,EAAc5T,GAAwG,IAAxF6T,EAAwF,uDAA/D,QAAS3L,EAAsD,uDAAvClK,KAAKkK,KAAMC,EAA4B,uDAAXnK,KAAKmK,OACtHnK,KAAK2T,UAAUpP,KAAK,CAChBqR,KAAMA,EACNpR,SAAU,CACN0F,KAAMA,EACNC,OAAQA,EACRnI,OAAQA,GAEZ8T,MAAOD,MAjbnB,8BAubYjO,EAAWmO,GACf,IAAIC,EAAWpO,EAAEuJ,WAAW,GAE5B,OAAY,IAAR4E,EAAoBC,GAAY,IAAMA,GAAY,GAC1C,GAARD,EAAmBC,GAAY,IAAMA,GAAY,GACzC,GAARD,EAAmBC,GAAY,IAAMA,GAAY,GACzC,IAARD,EAAoBC,GAAY,IAAMA,GAAY,IAAQA,GAAY,IAAMA,GAAY,KACvFA,GAAY,IAAMA,GAAY,QADnC,IA7bR,iCAscQ,IAJA,IAAI7L,EAASnK,KAAKmK,OACdD,EAAOlK,KAAKkK,KAEZ+L,EAAWjW,KAAK8T,IACO,KAApB9T,KAAKkU,aAA0C,MAApBlU,KAAKkU,aACnClU,KAAK8U,OAGT,IAAIoB,EAASlW,KAAK8T,IAClB9T,KAAK6U,UAAU5b,EAAU8F,MAAOiB,KAAKyT,MAAMpB,UAAU4D,EAAUC,GAAShM,EAAMC,KA3ctF,6CAidQ,IAAIA,EAASnK,KAAKmK,OACdD,EAAOlK,KAAKkK,KAChBlK,KAAK8U,OACL,IAAIH,EAAO3U,KAAKkU,YAChB,GAAY,MAARS,EAAc,CACd,IAAIwB,EAAa1W,EAAmBO,KAAKmU,UACvB,MAAdgC,GACAnW,KAAKoW,UAAU,wBAA0BpW,KAAKmU,SAAW,kBAAmB,GACvD,KAAjBnU,KAAKmU,WACLQ,EAAO3U,KAAKmU,SACZnU,KAAK8U,UAGTH,EAAOwB,EACPnW,KAAK8U,QAGb9U,KAAK8U,OACmB,KAApB9U,KAAKkU,YACLlU,KAAKoW,UAAU,iDAAkD,GAEjEpW,KAAK8U,OAGT9U,KAAK6U,UAAU5b,EAAUO,aAAcmb,EAAMzK,EAAMC,KAze3D,0CA8eQ,IAAID,EAAOlK,KAAKkK,KACZC,EAASnK,KAAKmK,OACdyL,EAAO,GAIX,IAFA5V,KAAK8U,SAEQ,CACT,IAAIH,EAAO3U,KAAKkU,YAChB,GAAY,MAARS,EACA,GAAqB,KAAjB3U,KAAKmU,SACLnU,KAAK8U,WAEF,CACH,IAAIqB,EAAa1W,EAAmBO,KAAKmU,UACvB,MAAdgC,EACAnW,KAAKoW,UAAU,wBAA0BpW,KAAKmU,SAAW,kBAAmB,IAE5EQ,EAAOwB,EACPnW,KAAK8U,YAGV,IAAY,KAARH,EAAa,CACpB3U,KAAK8U,OACL,MACG,GAAY,MAARH,GAthBT,KAshByBA,EAAiB,CACxC3U,KAAKoW,UAAU,kEAAmER,EAAK5T,OAAS,EAAG,QAASkI,EAAMC,GAClH,OAEJyL,GAAQjB,EACR3U,KAAK8U,OAGT9U,KAAK6U,UAAU5b,EAAUM,eAAgBqc,EAAM1L,EAAMC,EAAQyL,EAAK5T,OAAS,KA9gBnF,4CAmhBQ,IAAIkI,EAAOlK,KAAKkK,KACZC,EAASnK,KAAKmK,OACdkM,GAA8B,EAE9BT,EAAO,KAIX,IAHA5V,KAAK8U,OACL9U,KAAK8U,SAEQ,CACT,IAAIH,EAAO3U,KAAKkU,YAChB,GAAY,KAARS,GAAgC,KAAjB3U,KAAKmU,SAAiB,CACrCnU,KAAK8U,OACL9U,KAAK8U,OACLc,GAAQ,KACR,MAEJ,GAnjBE,KAmjBEjB,EAAiB,CACjB3U,KAAKoW,UAAU,gFAAiF,GAChG,MAEQ,MAARzB,GACA3U,KAAKkK,OACLlK,KAAKmK,OAAS,EACdkM,GAAqB,EACrBT,GAAQjB,GACC0B,GAA8B,KAAR1B,IAC/BiB,GAAQjB,EACR0B,GAAqB,GAGzBrW,KAAK8U,OAGT9U,KAAK6U,UAAU5b,EAAUkG,QAASyW,EAAM1L,EAAMC,KApjBtD,4CAyjBQ,IAAID,EAAOlK,KAAKkK,KACZC,EAASnK,KAAKmK,OAEdyL,EAAO,KAIX,IAHA5V,KAAK8U,OACL9U,KAAK8U,SAEQ,CACT,IAAIH,EAAO3U,KAAKkU,YAChB,GAAY,MAARS,EACA,MAEJ,GArlBE,KAqlBEA,EAEA,MAEJiB,GAAQjB,EACR3U,KAAK8U,OAGT9U,KAAK6U,UAAU5b,EAAUkG,QAASyW,EAAM1L,EAAMC,KA7kBtD,kCAmlBQ,IAAID,EAAOlK,KAAKkK,KACZC,EAASnK,KAAKmK,OAEdoG,EAAe,EACK,KAApBvQ,KAAKkU,cACL3D,GAAQ,EACRvQ,KAAK8U,QAGT,IAAImB,EAAWjW,KAAK8T,IAEhBwC,EAAYtW,KAAKkU,YAErBlU,KAAK8U,OAEL,IAAIyB,EAAgB,GAapB,IAXiB,KAAbD,GAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKlR,QAAQpF,KAAKkU,cAAgB,IAC7E,KAApBlU,KAAKkU,aACLqC,EAAQ,GACRvW,KAAK8U,QACsB,KAApB9U,KAAKkU,aACZqC,EAAQ,EACRvW,KAAK8U,QACFyB,EAAQ,EACfN,EAAWjW,KAAK8T,KAGb9T,KAAKoV,QAAQpV,KAAKkU,YAAaqC,IAClCvW,KAAK8U,OAGT,IAAIL,EAAKxb,EAAUG,gBAEnB,GAAwB,KAApB4G,KAAKkU,YAAoB,CAIzB,IAHAO,EAAKxb,EAAUI,sBAEf2G,KAAK8U,OACE9U,KAAKoV,QAAQpV,KAAKkU,YAAa,KAClClU,KAAK8U,OAGI,IAATyB,GACAvW,KAAKoW,UAAU,qEAAsEpW,KAAK8T,IAAMmC,EAAU,QAASjW,KAAKkK,KAAMlK,KAAKmK,QAAUnK,KAAK8T,IAAMmC,IAKhK,IAAIF,EAAO/V,KAAKyT,MAAMpB,UAAU4D,EAAUjW,KAAK8T,KAE/CmC,EAAWjW,KAAK8T,IAChB,IAAI0C,EAAmB,EAIvB,GAAwB,KAApBxW,KAAKkU,YAAoB,CAEzBlU,KAAK8U,OACL,IAAI2B,EAA2BzW,KAAK8T,IAOpC,IAJwB,KAApB9T,KAAKkU,aACLlU,KAAK8U,OAGF9U,KAAKoV,QAAQpV,KAAKkU,YAAa,KAClClU,KAAK8U,OAEI,IAATyB,GACAvW,KAAKoW,UAAU,qEAAsEpW,KAAK8T,IAAMmC,EAAU,QAASjW,KAAKkK,KAAMlK,KAAKmK,QAAUnK,KAAK8T,IAAMmC,IAE5J,IAAIS,EAAiB1W,KAAKyT,MAAMpB,UAAUoE,EAAkBzW,KAAK8T,KACjE0C,EAAW3G,OAAOM,SAASuG,GAGP,KAApB1W,KAAKkU,aAA0C,KAApBlU,KAAKkU,cAC1Bjb,EAAUI,sBAChB2G,KAAK8U,OACQ,IAATyB,GACAvW,KAAKoW,UAAU,qEAAsEpW,KAAK8T,IAAMmC,EAAU,QAASjW,KAAKkK,KAAMlK,KAAKmK,QAAUnK,KAAK8T,IAAMmC,KAIhK,IAAI/d,EAAiBuc,GAAMxb,EAAUG,gBAAmByW,OAAOM,SAAS4F,EAAMQ,GAAS1G,OAAOiB,WAAWiF,GACzG7d,GAASqY,EACO,GAAZiG,IAAete,GAASoU,KAAKqK,IAAI,GAAIH,IAEzCxW,KAAK6U,UAAUJ,EAAIvc,EAAOgS,EAAMC,KA1qBxC,sCA+qBQ,IAAID,EAAOlK,KAAKkK,KACZC,EAASnK,KAAKmK,OAAS,EACvB8L,EAAWjW,KAAK8T,IAEpB9T,KAAK8U,OAGL,IAFA,IAAIH,EAAO3U,KAAKkU,YAEgB,MAAzB7U,EAAgBsV,KAAkB3U,KAAK4W,QAAQjC,IAtsBhD,KAssB2DA,GAC7D3U,KAAK8U,OACLH,EAAO3U,KAAKkU,YAGhB,IAAIgC,EAASlW,KAAK8T,IAEd8B,EAAO5V,KAAKyT,MAAMpB,UAAU4D,EAAUC,GAC1ClW,KAAK6U,UAAU5b,EAAU6F,GAAI8W,EAAM1L,EAAMC,EAAQyL,EAAK5T,OAAS,KA9rBvE,+CAwsBQ,IANA,IAAIkI,EAAOlK,KAAKkK,KACZC,EAASnK,KAAKmK,OAEd8L,EAAWjW,KAAK8T,IAChBa,EAAO3U,KAAKkU,YAEgB,MAAzB7U,EAAgBsV,KAAkB3U,KAAK4W,QAAQjC,IAxtBhD,KAwtB2DA,GAC7D3U,KAAK8U,OACLH,EAAO3U,KAAKkU,YAGhB,IAAIgC,EAASlW,KAAK8T,IAEd8B,EAAO5V,KAAKyT,MAAMpB,UAAU4D,EAAUC,GAEtCzB,EAAKjV,EAAYoW,GACrB,GAAU,MAANnB,GAA2B,iBAANA,EAyBzBzU,KAAK6U,UAAU5b,EAAUE,WAAYyc,EAAM1L,EAAMC,QAvB7C,OAAQsK,GACJ,KAAKxb,EAAUQ,KACXuG,KAAK6U,UAAU5b,EAAUK,iBAAiB,EAAM4Q,EAAMC,GACtD,MACJ,KAAKlR,EAAUS,MACXsG,KAAK6U,UAAU5b,EAAUK,iBAAiB,EAAO4Q,EAAMC,GACvD,MACJ,KAAKlR,EAAUwC,aACf,KAAKxC,EAAUyC,eACPsE,KAAK+T,uBAAyB9a,EAAUiD,IACxC8D,KAAK6U,UAAU5b,EAAUE,WAAYyc,EAAM1L,EAAMC,GAEjDnK,KAAK6U,UAAUJ,EAAImB,EAAM1L,EAAMC,GAEnC,MACJ,QACInK,KAAK6U,UAAUJ,EAAImB,EAAM1L,EAAMC,MApuBnD,8BA+uBYwK,GACJ,MAAe,KAARA,GAAuB,MAARA,O,6BAhvB9B,K,uKCpBO,IAAM,GAAb,WAQI,c,qGALA,KAAAkC,4BAAwC,CAAC,MAEzC,KAAAC,YAAuB,kB,UAL3B,O,EAAA,G,EAAA,8BAeQnO,OAAOC,UAAUmO,uCAAuC,SAAU/W,MAClE2I,OAAOC,UAAUoO,qCAAqC,SAAUhX,QAhBxE,mDAmBiCiX,EAAiCzS,EAA2B0S,EAAYC,EAA6CC,GAE9I,IAAIC,EAAqCrX,KAAKsX,OAAOL,GAErD,OAAOM,QAAQC,QACXH,KAxBZ,8CA4B4BA,GACpB,IAAK,IAAIpgB,EAAI,EAAGA,EAAIogB,EAAMrV,OAAS,EAAG/K,IAAK,CACvC,IAAIwgB,EAAIJ,EAAMpgB,GACVygB,EAAKL,EAAMpgB,EAAI,GACnB,KAAIwgB,EAAEzO,MAAM2O,cAAgBD,EAAG1O,MAAM4O,kBACjCH,EAAEzO,MAAM2O,eAAiBD,EAAG1O,MAAM4O,gBAClC,GAAIH,EAAEzO,MAAM6O,WAAaH,EAAG1O,MAAM8O,YAC9BT,EAAMU,OAAO9gB,EAAI,EAAG,QAEpB,GAAyB,GAArBwgB,EAAEzO,MAAM6O,WAAkBJ,EAAE7B,KAAK5T,OAAS,GAA6B,GAAxB0V,EAAG1O,MAAM8O,aAAoBJ,EAAG1O,MAAM6O,UAAYH,EAAG1O,MAAM8O,aAA0B,IAAXJ,EAAG9B,KAAY,CACxI,IAAIoC,EAAQP,EAAE7B,KAAK5T,QAAU0V,EAAG1O,MAAM6O,UAAYH,EAAG1O,MAAM8O,aACvDE,EAAQ,GACRP,EAAE7B,KAAO6B,EAAE7B,KAAKqC,OAAO,EAAGD,GAC1BX,EAAMU,OAAO9gB,EAAE,EAAG,IAEb+gB,EAAQ,GAGbN,EAAG1O,MAAM6O,UAAYH,EAAG1O,MAAM8O,YAAcE,EAC5CX,EAAMU,OAAO9gB,EAAG,GAChBA,MAIAogB,EAAMU,OAAO9gB,EAAG,GAChBA,SArD5B,qDA8DmCggB,EAC3BE,EACAC,GAEA,IAAIC,EAAqCrX,KAAKsX,OAAOL,GAErD,OAAOM,QAAQC,QACXH,KArEZ,6BA0EWJ,GAEH,IAAII,EAAqC,GAQrCzB,EAAOqB,EAAM7J,SAASzE,OAAOuP,OAAOC,oBAAoBC,IAExDC,GAAY,IAAI,IAAQC,IAAI1C,GAAM5B,OAItC,GAAiB,MAAbqE,EAAmB,MAAO,GAqB9B,IATA,IAAIE,EAA2B,KAC3BC,EAAc,EAEdC,EAAmC,GACnCC,EAA0C,GAC1CC,GAAyB,EACzBC,EAA8B,EAC9BC,EAA4B,EAEvB5hB,EAAI,EAAGA,EAAIohB,EAAUrW,OAAQ/K,IAAK,CAEvC,IAAIkB,EAAIkgB,EAAUphB,GAGlB,OAFA2hB,IAEQzgB,EAAEsc,IAEN,KAAKxb,EAAU4B,cACX8d,GAAgB,EAChB,MACJ,KAAK1f,EAAU6B,YACf,KAAK7B,EAAU8B,eAEP5C,EAAEqM,SAAS2F,OAAS,GACpBnK,KAAK8Y,aAAazB,EAAOlf,EAAEqM,SAAS0F,KAAM,EAAG,GAEjD,MACJ,KAAKjR,EAAU8C,iBAQX,GAPI4c,IACAA,GAAgB,EAChBD,EAA8BnU,KAAKiU,EAAc,GACjDA,KAEJA,IACAC,EAAuBlU,KAAKpM,EAAEqM,SAAS0F,MACd,MAArBqO,EAA2B,CAC3B,IAAI9D,EAAK8D,EAAkB9D,GACvBA,GAAMxb,EAAU2C,cAAgB6Y,GAAMxb,EAAUE,YAAcsb,GAAMxb,EAAUgD,wBAC9E+D,KAAK+Y,eAAeR,EAAmBpgB,EAAGkf,EAAO,KAGzD,GAAIpgB,EAAIohB,EAAUrW,OAAS,EAAG,CAC1B,IAAIgX,EAASX,EAAUphB,EAAI,GACvB+hB,EAAOvE,IAAMxb,EAAUgG,SAAW+Z,EAAOvE,IAAMxb,EAAU8F,OACzDiB,KAAKiZ,aAAa5B,EAAO2B,EAAOxU,SAAS0F,KAAM8O,EAAOxU,SAAS2F,OAAQ,GAG/E,MACJ,KAAKlR,EAAU+C,kBACP0c,EAA8BA,EAA8B1W,OAAS,IAAMwW,IAC3EE,EAA8BpE,MAC9BkE,IAEAxY,KAAK8Y,aAAazB,EAAOlf,EAAEqM,SAAS0F,KAAM,EAAG,IAGjDsO,IACA,IAAIU,EAAeT,EAAuBnE,MAC1C,GAAoB,MAAhB4E,GAAwBA,GAAgB/gB,EAAEqM,SAAS0F,KAC1B,MAArBqO,GAA6BA,EAAkB/T,SAAS0F,MAAQ/R,EAAEqM,SAAS0F,MAC3ElK,KAAK8J,QAAQuN,EAAOlf,EAAEqM,SAAUrM,EAAEqM,SAAU,KAAO,IAAI2U,OAzD7D,EAyDoEX,SAGlE,GAAIvhB,EAAI,EAAG,CACP,IAAI,EAASohB,EAAUphB,EAAI,GACvB,EAAOwd,IAAMxb,EAAU8F,OAAS,EAAO0V,IAAMxb,EAAUgG,SACvDe,KAAKiZ,aAAa5B,EAAOlf,EAAEqM,SAAS0F,KAAM/R,EAAEqM,SAAS2F,OAAQ,GAIzE,MACJ,KAAKlR,EAAU0C,YAEX,GADAkd,IACI5hB,EAAIohB,EAAUrW,OAAS,EAAG,CAC1B,IAAIoX,EAAaf,EAAUphB,EAAI,GAC3BoiB,EAAahB,EAAUphB,EAAI,GAC3BmiB,EAAW3E,IAAMxb,EAAU8F,OAASsa,EAAW5E,IAAMxb,EAAUgG,UAC/De,KAAK8Y,aAAazB,EAAO+B,EAAW5U,SAAS0F,KAAMkP,EAAW5U,SAAS2F,OAAQiP,EAAW5U,SAASxC,QACnG/K,IACIoiB,EAAW5E,IAAMxb,EAAU2C,eAC3B3E,IACA4hB,MAIZ,GAAI5hB,EAAI,EAAG,CACP,IAAIqiB,EAAajB,EAAUphB,EAAI,GAC3BsiB,EAAalB,EAAUphB,EAAI,GAC3BqiB,EAAW7E,IAAMxb,EAAU8F,OAASwa,EAAW9E,IAAMxb,EAAUgG,SAAYe,KAAKwZ,iBAAiBD,EAAW9E,KAC1E,GAA9B6E,EAAW9U,SAASxC,QACpBhC,KAAK8Y,aAAazB,EAAOiC,EAAW9U,SAAS0F,KAAMoP,EAAW9U,SAAS2F,OAAQ,GAI3F,MACJ,KAAKlR,EAAU2C,aAEX,GADAid,IACI5hB,EAAI,EAAG,CACP,IAAI,EAAaohB,EAAUphB,EAAI,GAC3B,EAAaohB,EAAUphB,EAAI,GAC3B,EAAWwd,IAAMxb,EAAU8F,OAAS,EAAW0V,IAAMxb,EAAUgG,SAC/De,KAAK8Y,aAAazB,EAAO,EAAW7S,SAAS0F,KAAM,EAAW1F,SAAS2F,OAAQ,EAAW3F,SAASxC,QAG3G,MACJ,KAAK/I,EAAUgG,QAEX,GADA2Z,EAAsB,EAClB3hB,EAAIohB,EAAUrW,OAAS,EAAG,CAE1B,IAAIyX,EAAoBzZ,KAAK0Z,qBAAqBziB,EAAGohB,GAGjDsB,EAAsB3Z,KAAKwZ,iBAAiBjB,aAAiB,EAAjBA,EAAmB9D,MAAO8D,aAAiB,EAAjBA,EAAmB9D,KAAMxb,EAAUyF,MACzGkb,EAAsB5Z,KAAKwZ,iBAAiBC,EAAkBhF,IAE9DoF,EAAgBxB,EAAUphB,EAAI,GAC9B6iB,EAASzB,EAAUphB,EAAI,GACvB8iB,EAAqB,EAEzB,GAAIF,EAAcpF,IAAMxb,EAAUgG,SAAWwa,EAAkBhF,IAAMxb,EAAUkG,QAC3E,MAGJ,IAAI6Y,EAAgB,EACpB,GAAI6B,EAAcpF,IAAMxb,EAAU8F,MAAO,CACrC,GAAI+a,EAAOrF,IAAMxb,EAAUgG,QACvB,MAEJ8a,EAAqBF,EAAcrV,SAASxC,OAC5C/K,IACI6iB,EAAOrF,IAAMxb,EAAU+C,oBACvBgc,GAAS,GAIb6B,EAAcpF,IAAMxb,EAAU+C,oBAC9Bgc,GAAS,IAOV4B,GAAuBD,KAAqB3B,EAAQ,GAEvD,IAAIgC,EAAKxB,EAAcR,EACpBa,EAAoB,GACnBmB,IAEAA,EAAK,IAAGA,EAAK,GAEjB,IAAIC,EApJN,EAoJ2BD,EAErBC,EAAqBF,EACrB/Z,KAAKiZ,aAAa5B,EAAOlf,EAAEqM,SAAS0F,KAAO,EAAG,EAAG+P,EAAqBF,GAC/DE,EAAqBF,GAC5B/Z,KAAK8Y,aAAazB,EAAOlf,EAAEqM,SAAS0F,KAAO,EAAG,EAAG6P,EAAqBE,GAG9E,MACJ,KAAKhhB,EAAU8F,MACP9H,EAAIohB,EAAUrW,OAAS,GACPqW,EAAUphB,EAAI,GAChBwd,IAAMxb,EAAUkG,SACtBlI,EAAI,GACYohB,EAAUphB,EAAI,GAChBwd,IAAMxb,EAAUgG,SACtB9G,EAAEqM,SAASxC,OAAS,GACpBhC,KAAK8Y,aAAazB,EAAOlf,EAAEqM,SAAS0F,KAAM/R,EAAEqM,SAAS2F,OAAQhS,EAAEqM,SAASxC,OAAS,GAMrG,MACJ,KAAK/I,EAAU2F,MACf,KAAK3F,EAAUwF,UACX,GAAIxH,EAAI,EAAG,CACP,IAAI,EAAaohB,EAAUphB,EAAI,GAC3B,EAAaohB,EAAUphB,EAAI,GAC3B,EAAWwd,IAAMxb,EAAUgG,SAAW,EAAWwV,IAAMxb,EAAUgG,SAAYe,KAAKwZ,iBAAiB,EAAW/E,KAC1G,EAAWA,IAAMxb,EAAU8F,OAAuC,GAA9B,EAAWyF,SAASxC,QACxDhC,KAAK8Y,aAAazB,EAAO,EAAW7S,SAAS0F,KACzC,EAAW1F,SAAS2F,OAAQ,GAI5C,GAAIlT,EAAIohB,EAAUrW,OAAS,EAAG,CAC1B,IAAI,EAAYqW,EAAUphB,EAAI,GAC1B,EAAUwd,IAAMxb,EAAUkG,SAAW,EAAUsV,IAAMxb,EAAU8F,OAAS,EAAU0V,IAAMxb,EAAUgG,SAClGe,KAAKiZ,aAAa5B,EAAO,EAAU7S,SAAS0F,KAAM,EAAU1F,SAAS2F,OAAQ,GAGrF,MACJ,KAAKlR,EAAU6C,mBACc,MAArByc,GAA6BA,EAAkB9D,IAAMxb,EAAU4C,mBAC/DmE,KAAK+Y,eAAeR,EAAmBpgB,EAAGkf,EAAO,IAQ7D,GAAIrX,KAAKwZ,iBAAiBrhB,EAAEsc,IAAK,CAE7B,IAAIyF,EAAe/hB,EAAEsc,IAAMxb,EAAU2D,OAASoD,KAAKma,gCAAgCljB,EAAGohB,GAClF+B,EAAiBjiB,EAAEsc,IAAMxb,EAAU4D,SAAWmD,KAAKqa,kCAAkCpjB,EAAGohB,GAE5F,GAAIO,GAAuB,GAA0B,MAArBL,GAA6B,CAACtf,EAAU0C,YAAa1C,EAAUiE,WAAYjE,EAAU2F,OAAOwG,QAAQmT,EAAkB9D,IAAM,EAAG,CAE3J,GAAIxd,EAAI,EAAG,CACP,IAAIqjB,EAAcjC,EAAUphB,EAAI,GAC5BsjB,EAAUL,GAAgBE,EAAkB,EAAI,EAChDE,EAAY7F,IAAMxb,EAAU8F,MACxBub,EAAY9V,SAASxC,QAAUuY,GAC/Bva,KAAKiZ,aAAa5B,EAAOiD,EAAY9V,SAAS0F,KAC1CoQ,EAAY9V,SAAS2F,OAAQoQ,EAASD,EAAY9V,SAASxC,QAGrD,GAAVuY,GACAva,KAAKiZ,aAAa5B,EAAOlf,EAAEqM,SAAS0F,KAAM/R,EAAEqM,SAAS2F,OAAQ,GAIzE,GAAIlT,EAAIohB,EAAUrW,OAAS,EAAG,CAC1B,IAAI,EAAYqW,EAAUphB,EAAI,GAC1B,EAAUijB,EAAgB,EAAI,EAC9B,EAAUzF,IAAMxb,EAAU8F,OACtBqb,GAAkBnjB,EAAIohB,EAAUrW,OAAS,GAAKqW,EAAUphB,EAAI,GAAGwd,IAAMxb,EAAU0C,cAC/E,EAAS,GAET,EAAU6I,SAASxC,QAAU,GAC7BhC,KAAKiZ,aAAa5B,EAAO,EAAU7S,SAAS0F,KACxC,EAAU1F,SAAS2F,OAAQ,EAAS,EAAU3F,SAASxC,UAG3DoY,GAAkB,EAAU3F,IAAMxb,EAAU0C,cAC5C,EAAS,GAEC,GAAV,GAAaqE,KAAKiZ,aAAa5B,EAAO,EAAU7S,SAAS0F,KAAM,EAAU1F,SAAS2F,OAAQ,MAO1GhS,EAAEsc,IAAMxb,EAAU8F,OAAS5G,EAAEsc,IAAMxb,EAAUgG,UAC7CsZ,EAAoBpgB,GAO5B,OAFA6H,KAAKwa,wBAAwBnD,GAEtBA,IApWf,2CAuWyBoD,EAAsBpC,GAEvC,GAAGoC,GAAgBpC,EAAUrW,OAAS,EAAG,OAAOqW,EAAUoC,GAG1D,IADA,IAAI5L,EAAI4L,EAAe,EACjB5L,EAAIwJ,EAAUrW,OAAS,IAAMqW,EAAUxJ,GAAG4F,IAAMxb,EAAU8F,OAASsZ,EAAUxJ,GAAG4F,IAAMxb,EAAUyhB,SAClG7L,IAEJ,OAAOwJ,EAAUxJ,KA/WzB,sDAmXoCrK,EAAkB6T,GAE9C,IADA,IAAIphB,EAAIuN,EAAW,EACZvN,EAAIohB,EAAUrW,QAAQ,CACzB,IAAIyS,EAAK4D,EAAUphB,GAAGwd,GACtB,GAAIA,GAAMxb,EAAU4D,QAChB,OAAO,EAEX,GAAI,CAAC5D,EAAU8F,MAAO9F,EAAU2F,MAAO3F,EAAUE,YAAYiM,QAAQqP,GAAM,EACvE,OAAO,EAEXxd,IAEJ,OAAO,IA/Xf,wDAkYsCuN,EAAkB6T,GAEhD,IADA,IAAIphB,EAAIuN,EAAW,EACZvN,GAAK,GAAG,CACX,IAAIwd,EAAK4D,EAAUphB,GAAGwd,GACtB,GAAIA,GAAMxb,EAAU2D,MAChB,OAAO,EAEX,GAAI,CAAC3D,EAAU8F,MAAO9F,EAAU2F,MAAO3F,EAAUE,YAAYiM,QAAQqP,GAAM,EACvE,OAAO,EAEXxd,IAEJ,OAAO,IA9Yf,uCAiZqBmgB,GACb,OAAgB,MAATA,GAAiBA,GAASne,EAAUmD,QAAUgb,GAASne,EAAUyF,QAlZhF,qCAqZ2B6Z,EAA0BpgB,EAAUkf,EAAoCzB,GAC3F,IAAI+E,EAAe,CACfzQ,KAAMqO,EAAkB/T,SAAS0F,KACjCC,OAAQoO,EAAkB/T,SAAS2F,OAASoO,EAAkB/T,SAASxC,QAEvE4Y,EAAa,CACb1Q,KAAM/R,EAAEqM,SAAS0F,KACjBC,OAAQhS,EAAEqM,SAAS2F,QAEnBwQ,EAAazQ,MAAQ0Q,EAAW1Q,MAChC0Q,EAAWzQ,OAASwQ,EAAaxQ,QAAUyL,EAAK5T,QAChDhC,KAAK8J,QAAQuN,EAAOsD,EAAcC,EAAYhF,KAha1D,mCAoaiByB,EAAoCnN,EAAcC,EAAgB0Q,GAC3ExD,EAAM9S,KAAK,CACPyE,MAAO,CACH8O,YAAa3N,EACbyN,gBAAiB1N,EACjB2N,UAAW1N,EAAS0Q,GAA4B,GAAV1Q,EAAc,EAAI,GACxDwN,cAAezN,GAEnB0L,KAAM,OA5alB,mCAgbiByB,EAAoCnN,EAAcC,EAAgB0Q,GAEvEA,EAAiB,EACjB7a,KAAK8Y,aAAazB,EAAOnN,EAAMC,GAAS0Q,GAI5CxD,EAAM9S,KAAK,CACPyE,MAAO,CACH8O,YAAa3N,EACbyN,gBAAiB1N,EACjB2N,UAAW1N,EACXwN,cAAezN,GAEnB0L,KAAM,IAAIuD,OAAO0B,OA9b7B,8BAkcYxD,EAAoCsD,EAAiDC,EAA+ChF,GAExIyB,EAAM9S,KAAK,CACPyE,MAAO,CACH8O,YAAa6C,EAAaxQ,OAC1ByN,gBAAiB+C,EAAazQ,KAC9B2N,UAAW+C,EAAWzQ,OACtBwN,cAAeiD,EAAW1Q,MAE9B0L,KAAMA,S,6BA3clB,K,uKCKO,IAAMkF,GAAb,WAII,c,4FAAA,SAFA,KAAAC,OAAkB,GAGd/a,KAAKgb,a,UALb,O,EAAA,G,EAAA,mCAQgBxjB,GAAY,2BACpB,YAAkBwI,KAAK+a,OAAvB,+CAA+B,KAAtBE,EAAsB,QAC3B,GAAIA,EAAMzjB,MAAQA,EAAM,CACpBwI,KAAKkb,oBAAoBD,GACzB,QAJY,qFAR5B,0CAgBwBA,GAChBtS,OAAOuP,OAAOiD,SAASF,EAAMG,aAG7B,IADA,IAAIC,EAAOC,SAASC,gBACpB,MAAkB5jB,OAAO6jB,KAAKP,EAAMQ,WAApC,eAAgD,CAA3C,IAAMjjB,EAAG,KACJN,EAAQ+iB,EAAMQ,UAAUjjB,GAE9B6iB,EAAKK,MAAMC,YAAYnjB,EAAKN,MAvBxC,mCA+BQ8H,KAAK+a,OAAOxW,KAAK,CACb/M,KAAM,OACN4jB,YAAa,oBACbK,UAAW,CACP,mBAAoB,UACpB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,UACxB,oBAAqB,UACrB,mBAAoB,UACpB,WAAY,UACZ,yBAA0B,UAC1B,yBAA0B,UAC1B,sBAAuB,mBACvB,qBAAsB,UACtB,sBAAuB,UACvB,cAAe,UACf,oBAAqB,UACrB,0BAA2B,UAC3B,2BAA4B,UAC5B,kBAAmB,UACnB,kBAAmB,UACnB,qBAAsB,UACtB,eAAgB,0BAChB,gBAAiB,UACjB,sBAAuB,0BACvB,oBAAqB,MACrB,mBAAoB,OACpB,2BAA4B,UAC5B,sBAAuB,mBACvB,iCAAkC,UAClC,4BAA6B,UAC7B,mBAAoB,UACpB,qBAAsB,UACtB,qBAAsB,0BACtB,mBAAoB,UACpB,eAAgB,UAChB,iBAAkB,6BAClB,kBAAmB,YACnB,gCAAiC,MACjC,4BAA6B,yBAC7B,0BAA2B,4BAC3B,yBAA0B,gBAC1B,sBAAuB,yBACvB,qBAAsB,UACtB,sBAAuB,UACvB,4BAA6B,UAC7B,oCAAqC,UACrC,gCAAiC,UACjC,6BAA8B,UAC9B,yBAA0B,UAE1B,sBAAuB,UAGvB,+BAAgC,QAChC,gCAAiC,iBACjC,mBAAoB,mBACpB,6BAA8B,UAC9B,2BAA4B,UAC5B,4BAA6B,UAC7B,sBAAuB,QACvB,2BAA4B,qBAC5B,wBAAyB,OACzB,wBAAyB,QACzB,kBAAmB,qBACnB,kBAAmB,mBAGnB,iBAAkB,qBAClB,YAAa,QAGb,4BAA6B,UAC7B,wBAAyB,UACzB,mCAAoC,UACpC,+BAAgC,UAChC,8BAA+B,QAC/B,qCAAsC,UACtC,mBAAoB,yBACpB,oBAAqB,yBAGrB,uBAAwB,UACxB,kBAAmB,UACnB,uBAAwB,8BAOhCzb,KAAK+a,OAAOxW,KAAK,CACb/M,KAAM,QACN4jB,YAAa,qBACbK,UAAW,CACP,mBAAoB,QACpB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,UACxB,oBAAqB,UACrB,mBAAoB,UACpB,WAAY,UACZ,yBAA0B,UAC1B,yBAA0B,UAC1B,sBAAuB,mBACvB,qBAAsB,UACtB,sBAAuB,UACvB,cAAe,UACf,oBAAqB,UACrB,0BAA2B,UAC3B,2BAA4B,UAC5B,kBAtBa,UAuBb,kBAAmB,UACnB,qBAAsB,UACtB,eAAgB,UAChB,gBA1Ba,UA2Bb,sBAAuB,UACvB,oBAAqB,MACrB,mBAAoB,QACpB,2BAA4B,QAC5B,sBAAuB,UACvB,iCAhCa,UAiCb,4BAA6B,UAC7B,mBAAoB,UACpB,qBAAsB,UACtB,qBAAsB,UACtB,mBAAoB,UACpB,eAAgB,UAChB,iBAAkB,6BAClB,kBAAmB,YACnB,gCAAiC,MACjC,4BAA6B,yBAC7B,0BAA2B,4BAC3B,yBAA0B,UAC1B,sBAAuB,yBACvB,qBAAsB,UACtB,sBAAuB,UACvB,4BAA6B,UAC7B,oCAAqC,UACrC,gCAAiC,UACjC,6BAA8B,UAC9B,yBAA0B,UAE1B,sBAAuB,UAIvB,+BAAgC,UAChC,gCAAiC,UACjC,mBAAoB,mBACpB,6BAA8B,UAC9B,2BAA4B,QAC5B,4BAA6B,UAC7B,sBAAuB,UACvB,2BAA4B,QAC5B,wBAAyB,OACzB,wBAAyB,UACzB,kBAAmB,qBACnB,kBAAmB,mBAGnB,iBAAkB,QAClB,YAAa,UAGb,4BAA6B,UAC7B,wBAAyB,UACzB,mCAAoC,UACpC,+BAAgC,UAChC,8BAA+B,QAC/B,qCAAsC,UACtC,mBAAoB,yBACpB,oBAAqB,yBAGrB,uBAAwB,UACxB,kBAAmB,UACnB,uBAAwB,6B,6BAjNxC,K,uKCFO,IAAM,GAAb,WAoBI,WAAYG,EAAgCjB,EAA4BC,I,4FAAwB,SAhBzF,KAAAhZ,GAAKia,EAAYC,QAMxB,KAAAC,qBAA+B,EAG/B,KAAAC,kBAAmC,GAEnC,KAAAC,YAAqC,IAAInc,IAEzC,KAAAoc,aAAoC,KACpC,KAAAxa,OAAiB,KAIb1B,KAAKmc,OAASP,EAEd5b,KAAK2a,aAAeA,EACpB3a,KAAK4a,WAAaA,EAElB5a,KAAKkc,aAAoC,MAArBN,EAA4B,KAAOA,EAAkBM,aAEtD,MAAflc,KAAKmc,SACLnc,KAAKmc,OAAOH,kBAAkBzX,KAAKvE,MACnCA,KAAK0B,OAAS1B,KAAKmc,OAAOza,Q,UA/BtC,O,EAAA,G,EAAA,sCAoCQ,IAAI0a,EAAY,IAAIP,EAAY,KAAM,CAAE3R,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GAAK,CAAEkI,KAAM,EAAGC,OAAQ,IAAOnI,OAAQ,IAE3Goa,EAAUL,qBAAsB,EAKhC,IAJA,IAAIM,EAAkBrc,KAElBsc,GAAe,EAEN,MAAND,GACoB,MAAnBA,EAAGH,eACHE,EAAUF,aAAeG,EAAGH,cAGhCG,EAAGJ,YAAYlK,SAAQ,SAACwK,EAAUpjB,GAEe,MAAzCijB,EAAUH,YAAYnkB,IAAIqB,IAC1BijB,EAAUH,YAAY9W,IAAIhM,EAAYojB,GAGtCA,EAASC,SAAWF,IACpBA,EAAcC,EAASC,aAK/BH,EAAKA,EAAGF,OAMZ,OAFAC,EAAUK,eAAiBH,EAAc,EAElCF,IAlEf,sDAuEoC/T,GAE5B,IAAIqU,EAAqD,GAmCzD,OAjCA1c,KAAKic,YAAYlK,SAAQ,SAACwK,EAAUpjB,GAGf,GAAdA,IAIa,MAAZojB,GAAqC,MAAjBA,EAASnc,MAAgBmc,EAASnc,gBAAgB,GACtEsc,EAAgBnY,KAAK,CACjBlC,MAAOlJ,EAAa,KACpB4P,WAAY5P,EAAa,OACzB4G,cAAe,qBACf2J,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,MAAOX,IAKfqU,EAAgBnY,KAAK,CACjBlC,MAAOlJ,EACP4P,WAAY5P,EACZuP,KAAMC,OAAOC,UAAUC,mBAAmB+T,SAC1C5T,MAAOX,QAMI,MAAfrI,KAAKmc,QAAkBnc,KAAKmc,OAAOD,cAAgBlc,KAAKkc,eACxDQ,EAAkBA,EAAgBxU,OAAOlI,KAAKmc,OAAOU,gCAAgCxU,KAGlFqU,IA5Gf,0CA+GwBxS,EAAcC,GAE9B,IAAKnK,KAAK8c,iBAAiB5S,EAAMC,GAC7B,OAAO,KAGX,IAAI4S,EAAwC,KACxCC,EAAmB,IAPqB,uBAS5C,YAAehd,KAAKgc,kBAApB,+CAAuC,KAA9BK,EAA8B,QACnC,GAAIA,EAAGS,iBAAiB5S,EAAMC,GAAS,CACnC,IAAI8S,EAAMZ,EAAGa,oBAAoBhT,EAAMC,GACnC8S,EAAIrC,WAAW1Q,KAAO+S,EAAItC,aAAazQ,KAAO8S,IAC9CD,EAAwCE,EACxCD,EAAmBC,EAAIrC,WAAW1Q,KAAO+S,EAAItC,aAAazQ,QAd1B,kFAuB5C,OAA6C,MAAzC6S,EACOA,EAEA/c,OAzInB,uCA8IqBkK,EAAcC,GAC3B,QAAID,EAAOlK,KAAK2a,aAAazQ,MAAQA,EAAOlK,KAAK4a,WAAW1Q,QAIxDA,GAAQlK,KAAK2a,aAAazQ,KAAaC,GAAUnK,KAAK2a,aAAaxQ,OACnED,GAAQlK,KAAK4a,WAAW1Q,MAAaC,GAAUnK,KAAK4a,WAAWzQ,a,6BApJ3E,K,o6CAEW,GAAA2R,MAAgB,ECEpB,IAAMqB,GAAb,YAII,WAAYC,EAAUC,GAAmB,yBACrC,0BAAMD,KACDC,UAAYA,EAFoB,EAJ7C,kBAAuC,GAoB1B,GAAb,YAqBI,WAAYlkB,EAAoBnC,EAAgBsmB,GAA+B,kBAE3E,0BAAMnkB,EAAYnC,KArBtBumB,aAA2B,GAC3B,EAAAC,oBAA0D,GAC1D,EAAAC,eAAgD,GAEhD,EAAAC,UAAmB,KAkBf,EAAK5Z,UAAY,GAEjB,IAAI7M,EAAY,EAL2D,uBAO3E,YAAgBqmB,EAAhB,+CAAgC,KAAvBK,EAAuB,QAExBlV,EAAuB,IAAI/H,EAAUid,EAAIxkB,WAAlB,MAAoC,MAAM,EAAM4K,EAAW4C,QAAQ,GAE1E,MAAhBgX,EAAInZ,WACJiE,EAAUyH,YAAc,CACpBlZ,OAAQA,EACRwN,SAAUmZ,EAAInZ,UAGlBiE,EAAU5I,eAAesF,IAAInO,EAAQ,CAAC2mB,EAAInZ,YAG9C,EAAKoC,YAAY2D,aACb9B,GAIJ,IAAImV,EAAe,CACfzkB,WAAYwkB,EAAIxkB,WAChB0kB,QAAS5mB,KAGb,EAAKsmB,aAAahZ,KAAKqZ,GACvB,EAAKJ,oBAAoBG,EAAIxkB,YAAcykB,EAC3C,EAAKH,eAAeG,EAAGC,SAAWD,GAhCqC,kFAoC3E,GAAG5mB,EAAOuQ,eAAe,CACrB,EAAKmW,UAAY,CACbtd,KAAM,IAAI,EAAJ,OACNlI,MAAO,IAHU,2BAKrB,YAAc,EAAKqlB,aAAnB,+CAAgC,KAAxBO,EAAwB,QAE5BA,EAAGnlB,OAAS,IAAIwkB,GAAJ,MAA4BW,GAExC,EAAKJ,UAAUxlB,MAAMqM,KAAK,CACtBnE,KAAM,MACNlI,MAAO4lB,EAAGnlB,UAXG,mFAgBzB,IAAIolB,EAAO,MApDgE,OAsD3E,EAAKnX,YAAY0D,UAAU,IAAIvJ,EAAO,YAClC,IAAI8B,EAAc,IAAK,IAAI,EAAJ,QAAqB,SAAChB,GAEzC,GAAsB,MAAlB,EAAK6b,UAAmB,CAExB,IAAI7K,EAAS,GAFW,uBAGxB,YAAe,EAAK0K,aAApB,+CAAkC,KAAzBS,EAAyB,QAE9BnL,EAAOtO,KAAK,CACRnE,KAAM2d,EACN7lB,MAAO8lB,EAAGrlB,UAPM,kFAYxB,EAAK+kB,UAAY,CACbtd,KAAM,IAAI,EAAU2d,GACpB7lB,MAAO2a,GAKf,OAAO,EAAK6K,aAEb,GAAO,IAGd,EAAKpT,UAAU,IAAIvJ,EAAO,WACtB,IAAI8B,EAAc,IAAKwJ,IAAqB,SAACxK,GAIzC,OAFkDA,EAAW,GAAG3J,MAEpDmlB,UAAUlkB,cAEvB,GAAO,IAGd,EAAKmR,UAAU,IAAIvJ,EAAO,YACtB,IAAI8B,EAAc,IAAKuM,IAAkB,SAACvN,GAItC,OAFkDA,EAAW,GAAG3J,MAEpDmlB,UAAUQ,WAEvB,GAAO,IAlG6D,E,UArBnF,e,EAAA,G,EAAA,kCAQeI,GAEP,IAAIC,EAAqBle,KAAKwd,oBAAoBS,GAClD,OAAgB,MAAZC,GAA0B,EACvBA,EAASL,UAZxB,kCAgBuB3lB,GAAoC,4DAC/CimB,EAAgCjmB,EAAMA,MAC1C,OAAO8H,KAAK7G,WAAa,IAAMglB,EAAWd,UAAUlkB,aAlB5D,gCA4HqBiH,GAEb,OAAIA,GAAQgP,IAIZ,+CAAuBhP,KAlI/B,6BAsIkBlI,EAAckI,GAExB,GAAIA,GAAQgP,GAAkB,CAC1B,IAAIgO,EAAwBllB,EAAMA,MAClC,MAAO,CACHkI,KAAMgP,GACNlX,MAAOklB,EAAGC,UAAUQ,SAI5B,mDAAoB3lB,EAAOkI,Q,6BAhJnC,GAA0B,G,yoBCxBnB,IAAM,GAAb,YAEI,WAAYpJ,GAAc,a,4FAAA,UACtB,0BAAM,QAASA,EAAQ,sEAElBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAKhU,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC3G,CAAE3H,WAAY,cAAeiH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGoQ,IACJ,SAACrP,GACG,OAAO,QAEf,GAAO,EAAM,qEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC3G,CAAE3H,WAAY,cAAeiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGsO,IACJ,SAACvN,GACG,OAAO,QAEf,GAAO,EAAM,oEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC3G,CAAE3H,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtGuL,IACJ,SAACxK,GACG,OAAO,QAEf,GAAO,EAAM,uEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC3G,CAAE3H,WAAY,cAAeiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrGkP,IACJ,SAACnO,GACG,OAAO,QAEf,GAAO,EAAM,sEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC3G,CAAE3H,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtGmP,IACJ,SAACpO,GACG,OAAO,QAEf,GAAO,EAAM,uEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC3G,CAAE3H,WAAY,cAAeiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGwP,IACJ,SAACzO,GACG,OAAO,QAEf,GAAO,EAAM,wEAMb,EAAKyI,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGoQ,IACJ,SAACrP,GACG,OAAO,QAEf,GAAO,EAAM,qEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGsO,IACJ,SAACvN,GACG,OAAO,QAEf,GAAO,EAAM,oEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGuL,IACJ,SAACxK,GACG,OAAO,QAEf,GAAO,EAAM,uEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGkP,IACJ,SAACnO,GACG,OAAO,QAEf,GAAO,EAAM,sEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGmP,IACJ,SAACpO,GACG,OAAO,QAEf,GAAO,EAAM,uEAEb,EAAKyI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,eAAgBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGwP,IACJ,SAACzO,GACG,OAAO,QAEf,GAAO,EAAM,wEA7GS,EAF9B,O,mOAAA,SAAgC,G,uKCezB,I,GAAM,GAAb,yB,4FAAA,SAq8BI,KAAA0c,oBAAiD,G,UAr8BrD,O,EAAA,G,EAAA,6CAuB0BvnB,EAAgBwnB,EAA0BC,EAA0BC,GAEtF1e,KAAKwe,YAAcA,EACnBxe,KAAKhJ,OAASA,EAEdgJ,KAAK2e,iBAAmB,GACxB3e,KAAK2e,iBAAiBpa,KAAKka,GAC3Bze,KAAK4e,mBAAqBH,EAE1Bze,KAAK0e,KAAOA,EAEZ,IAAIG,EAAoBJ,EAAYhC,eAWpC,OAVAzc,KAAK8e,yBAA2BD,EAEhC7e,KAAK+e,eAAiB,KACtB/e,KAAK2T,UAAY,GAEjB3T,KAAKgf,eAAiB,GACtBhf,KAAKif,kBAAoB,GAEzBjf,KAAKkf,cAAa,GAEXlf,KAAK2T,YA7CpB,4BAiDU3c,EAAgBwnB,GAalB,GAXAxe,KAAKwe,YAAcA,EACnBxe,KAAKhJ,OAASA,EAEdgJ,KAAK2e,iBAAmB,GACxB3e,KAAK4e,mBAAqB,KAE1B5e,KAAK+e,eAAiB,KACtB/e,KAAK2T,UAAY,GAEjB3T,KAAK8e,yBAA2B,EAE5B9e,KAAKhJ,OAAO0c,UAAU1R,OAAS,EAAG,CAClC,IAAImd,EAAYnf,KAAKhJ,OAAO0c,UAAU1T,KAAKhJ,OAAO0c,UAAU1R,OAAS,GACrEhC,KAAKhJ,OAAOooB,gBAAgBxE,WAAa,CAAE1Q,KAAMiV,EAAU3a,SAAS0F,KAAMC,OAAQgV,EAAU3a,SAAS2F,OAAS,EAAGnI,OAAQ,GAG7HhC,KAAK2e,iBAAiBpa,KAAKvE,KAAKhJ,OAAOooB,iBACvCpf,KAAK4e,mBAAqB5e,KAAKhJ,OAAOooB,gBAEtCpf,KAAKgf,eAAiB,GACtBhf,KAAKif,kBAAoB,GAEzBjf,KAAKkf,eAELlf,KAAKqf,kBAELrf,KAAKsf,wBAELtf,KAAKhJ,OAAOid,OAAO,GAAKjU,KAAK2T,YA/ErC,8CAqFQ,IAAI4L,EAAcvf,KAAKhJ,OAAOuoB,YAE9B,KAAmB,MAAfA,GAAuBA,EAAY3a,WAAW5C,OAAS,GAA3D,CAEA,IAAIwd,EAAqB,KACrB5Y,EAA2B,KAPd,uBAUjB,YAAsB5G,KAAKhJ,OAAOyoB,oBAAlC,+CAAuD,KAA9CC,EAA8C,QACnD,GAAIA,EAAUtf,MAAQnH,EAAUU,aAAc,CAE1C,IAAIgmB,EAAKD,EAAUE,aAFuB,uBAI1C,YAAcD,EAAG/Y,YAAYJ,QAA7B,+CAAsC,KAA7BnP,EAA6B,QAClC,GAAoB,QAAhBA,EAAE8B,YAA6D,GAArC9B,EAAE2J,cAAca,WAAWG,OAAa,CAClE,IAAI6d,EAAKxoB,EAAE2J,cAAca,WAAW,GAChCge,EAAGzf,gBAAgB,GAAayf,EAAGzf,KAAKmC,aAAe8J,KACrC,MAAdmT,EACAxf,KAAKoW,UAAU,8DAA+DsJ,EAAUlb,WAExFgb,EAAanoB,EACbuP,EAAc+Y,EAAG/Y,gBAZS,qFAXjC,kFAgCjB,GAAkB,MAAd4Y,EAAoB,CAEpB,IAAIhb,EAAyBgb,EAAW3f,eAAe,GAC7B,MAAtB2f,EAAW/d,SAAmB+d,EAAW/d,QAAQmD,WAAW5C,OAAS,IACrEwC,EAAWgb,EAAW/d,QAAQmD,WAAW,GAAGJ,UAGhDxE,KAAK8f,qBAEL9f,KAAKhJ,OAAOuoB,YAAcvf,KAAK+e,eAE/B/e,KAAK+E,eAAe,CAAC,CACjB3E,KAAMnH,EAAU8mB,eAChBvb,SAAUA,EACVM,cAAc,EACdpD,OAAQ8d,EACR5Y,YAAaA,GACd,CACCxG,KAAMnH,EAAU+mB,gBAChBxb,SAAUgb,EAAW3f,eAAe/H,IAAIkI,KAAKhJ,QAAQ,MAEtD,OAxIf,wCA+IQ,GAAuC,MAAnCgJ,KAAKhJ,OAAOyoB,oBAAhB,CADW,2BAGX,YAAsBzf,KAAKhJ,OAAOyoB,oBAAlC,+CAAuD,KAA9CC,EAA8C,QAOnD,GANIA,EAAUtf,MAAQnH,EAAUU,cAC5BqG,KAAKigB,cAAcP,GAEnBA,EAAUtf,MAAQnH,EAAUe,aAC5BgG,KAAKkgB,aAAaR,GAElBA,EAAUtf,MAAQnH,EAAUc,iBAAkB,CAC9C,IAAI2N,EAASgY,EAAUE,aACT,MAAVlY,GACA1H,KAAKmgB,6BAA6BzY,KAbnC,sFA9InB,mCAmKiB0Y,GAET,GAA6B,MAAzBA,EAASR,aAAb,CAEA5f,KAAKqgB,oBAAmB,EAAOD,EAASE,UAAWF,EAASG,SAE5D,IAAIC,EAAkBJ,EAASR,aAI/B5f,KAAK4e,mBAAmB1C,aAAesE,EACvCxgB,KAAK+e,eAAiByB,EAAU3Z,+BAXM,2BAatC,YAAsBuZ,EAAS5c,WAA/B,+CAA2C,KAAlCiF,EAAkC,QACtB,MAAbA,GAAsBA,EAAU7H,UAAwC,MAA5B6H,EAAUgY,gBACtDzgB,KAAK0gB,oBAAoBjY,IAfK,kFAmBlC+X,EAAU3Z,+BAA+BjC,WAAW5C,OAAS,GAC7DhC,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUyhB,OAChBlW,SAAUxE,KAAK2gB,cAAcnc,SAC7Boc,iCAAiC,EACjC9b,cAAc,EACd+b,wBAAwB,IAKhC7gB,KAAK+e,eAAejY,aAAaga,eA9BK,2BAgCtC,YAAuBV,EAAS5Z,QAAhC,+CAAyC,KAAhCua,EAAgC,QACnB,MAAdA,GAAuBA,EAAW5f,YAAe4f,EAAWngB,UAC5DZ,KAAKghB,cAAcD,IAlCW,kFAsCtC/gB,KAAKihB,eAAe,MAGpBjhB,KAAKqgB,oBAAmB,EAAOD,EAASE,UAAWF,EAASG,SAzCtB,2BA2CtC,YAA0BH,EAASvN,OAAnC,+CAA2C,KAAlCqO,EAAkC,QAEvC,GAA2C,MAAvCA,EAAcC,sBAA+B,CAE7C,IAAIpoB,EAAa,CACb/B,OAAQgJ,KAAKhJ,OACb8P,aAAc,KACdlC,WAAY,IAGhB5E,KAAK+e,eAAiBhmB,EAEtBiH,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUmoB,cAChB5c,SAAU0c,EAAc1c,SACxBgc,UAAWA,EACXvC,gBAAiBiD,EAAc/nB,aAGnC6G,KAAKqhB,2BAA2Bb,EAAWU,EAAcC,sBACrDD,EAAc1c,SAAU0c,EAAcI,eAAgBJ,EAAcK,sBAExEvhB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUuoB,WAChBhd,SAAU0c,EAAc1c,SACxBM,cAAc,IAGlB,IAAIoZ,EAAqBsC,EAAUhD,oBAAoB0D,EAAc/nB,YACrE+kB,EAASuD,uBAAyB1oB,EAClCmlB,EAAS1Z,SAAW0c,EAAc1c,WAzEJ,kFA+EtCxE,KAAKihB,eAAe,MAIpBjhB,KAAKqgB,oBAAmB,EAAOD,EAASE,UAAWF,EAASG,SAE5DvgB,KAAK4e,mBAAmB1C,aAAesE,EAAU5Z,YACjD5G,KAAK+e,eAAiByB,EAAU5Z,YAAYC,+BAtFN,2BAwFtC,YAAsBuZ,EAAS5c,WAA/B,+CAA2C,KAAlC,EAAkC,QACtB,MAAb,GAAqB,EAAU5C,UAAwC,MAA5B,EAAU6f,gBACrDzgB,KAAK0gB,oBAAoB,IA1FK,kFA8FtC1gB,KAAK+e,eAAejY,aAAaga,eA9FK,2BAgGtC,YAAuBV,EAAS5Z,QAAhC,+CAAyC,KAAhC,EAAgC,QACnB,MAAd,GAAsB,EAAW5F,UACjCZ,KAAKghB,cAAc,IAlGW,kFAqGtChhB,KAAKmgB,6BAA6BK,GAElCxgB,KAAKihB,eAAe,SA1Q5B,iDA8Q+BT,EAAiBkB,EACxCld,EAAwB8c,EAAgCC,GACxD,IAAIjW,EAAyB,GAD6D,uBAG1F,YAAcoW,EAAd,+CAA8B,KAArB3oB,EAAqB,QACtB4oB,EAAW3hB,KAAK4hB,YAAY7oB,GAChB,MAAZ4oB,GACJrW,EAAe/G,KAAKod,EAASvhB,OANyD,kFAS1F,IAAIoG,EAAUga,EAAU1U,6BAA6B0U,EAAUrnB,WAC3DmS,GAAgB,EAAMvH,EAAWoJ,SAKrC,GAHAnN,KAAKhJ,OAAO6qB,uBAAuBrd,EAAU8c,EAAgBd,EAAUtX,WAAWnF,EAAWoJ,QAASqT,EAAUrnB,YAAaooB,GAGxG,MAAjB/a,EAAQuF,MAER,OADA/L,KAAKoW,UAAU5P,EAAQuF,MAAOvH,GACvB,CAAEpE,KAAMiM,GAAqByV,cAAc,GAKtD,IAFA,IAAIpgB,EAAS8E,EAAQoF,WAAW,GAEvB3U,EAAI,EAAGA,EAAIqU,EAAetJ,OAAQ/K,IAAK,CAC5C,IAAIwY,EAAW/N,EAAO+M,iBAAiBxX,GACnC8qB,EAAUzW,EAAerU,GACxB8qB,EAAQzS,OAAOG,IAEZsS,aAAmB9hB,GAAiBwP,aAAoBxP,GACpD8hB,EAAQC,mBAAmBvS,GAAUkC,gBACrC3R,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUgpB,UAChBzd,SAAU,KACV0d,QAASzS,EACT0S,iBAA2C,EAAxB7W,EAAetJ,OAAa/K,IAQnE+I,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUmpB,WAChB1gB,OAAQA,EACR8C,SAAUA,EACVM,cAAc,EACdud,aAAa,EACbC,kBAAmBhX,EAAetJ,OAAS,OA9TvD,oCAkUkB0d,GAEV,GAA8B,MAA1BA,EAAUE,aAAd,CAEA5f,KAAKqgB,oBAAmB,EAAOX,EAAUY,UAAWZ,EAAUa,SAE9D,IAAIrd,EAAewc,EAAUE,aAIzB2C,EAAmBrf,EAAMsf,mBAEG,IAA5BD,EAAiB9V,SACjBzM,KAAKoW,UAAUmM,EAAiB9V,QAASiT,EAAUlb,SAAU,QAASxE,KAAKyiB,uBAAuB/C,EAAUa,QAASgC,IAGzH,IAAIze,EAAYZ,EAAMY,UACL,MAAbA,GAAqBA,EAAU9M,QAAUkM,EAAMlM,QAAU8M,EAAUjD,YAAckD,EAAWoJ,SAC5FnN,KAAKoW,UAAU,mBAAqBtS,EAAU3K,WAAa,eAAiB+J,EAAM/J,WAAa,4BAA6BumB,EAAUlb,UAG1IxE,KAAK4e,mBAAmB1C,aAAehZ,EACvClD,KAAK+e,eAAiB7b,EAAM2D,+BAtBa,2BAwBzC,YAAsB6Y,EAAUlc,WAAhC,+CAA4C,KAAnCiF,EAAmC,QACvB,MAAbA,GAAsBA,EAAU7H,UAAwC,MAA5B6H,EAAUgY,gBACtDzgB,KAAK0gB,oBAAoBjY,IA1BQ,kFA8BrCvF,EAAM2D,+BAA+BjC,WAAW5C,OAAS,GACzDhC,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUyhB,OAChBlW,SAAUxE,KAAK2gB,cAAcnc,SAC7Boc,iCAAiC,EACjC9b,cAAc,EACd+b,wBAAwB,IAKhC7gB,KAAK+e,eAAejY,aAAaga,eAzCQ,2BA2CzC,YAAuBpB,EAAUlZ,QAAjC,+CAA0C,KAAjCua,EAAiC,QACpB,MAAdA,GAAuBA,EAAW5f,YAAe4f,EAAWngB,UAC5DZ,KAAKghB,cAAcD,IA7Cc,kFAiDzC/gB,KAAKmgB,6BAA6Bjd,GAElClD,KAAKihB,eAAe,MAGpBjhB,KAAKqgB,oBAAmB,EAAOX,EAAUY,UAAWZ,EAAUa,SAE9DvgB,KAAK4e,mBAAmB1C,aAAehZ,EAAM0D,YAC7C5G,KAAK+e,eAAiB7b,EAAM0D,YAAYC,+BAzDC,2BA2DzC,YAAsB6Y,EAAUlc,WAAhC,+CAA4C,KAAnC,EAAmC,QACvB,MAAb,GAAqB,EAAU5C,UAAwC,MAA5B,EAAU6f,gBACrDzgB,KAAK0gB,oBAAoB,IA7DQ,kFAiErCxd,EAAM0D,YAAYC,+BAA+BjC,WAAW5C,OAAS,GACrEhC,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUyhB,OAChBlW,SAAUxE,KAAK2gB,cAAcnc,SAC7Boc,iCAAiC,EACjC9b,cAAc,EACd+b,wBAAwB,IAKhC7gB,KAAK+e,eAAejY,aAAaga,eA5EQ,2BA8EzC,YAAuBpB,EAAUlZ,QAAjC,+CAA0C,KAAjC,EAAiC,QACpB,MAAd,GAAsB,EAAW5F,UACjCZ,KAAKghB,cAAc,IAhFc,kFAoFzChhB,KAAKihB,eAAe,SAtZ5B,mDA2ZiCyB,GAEzB,IAAIC,EAA0C,GAFC,uBAI/C,YAAcD,EAAIlc,QAAlB,+CAA2B,KAAlBnP,EAAkB,QAEnBsK,EAAYtK,EAAE4V,kCAClB,GAA+B,MAA3B0V,EAAahhB,GAAoB,CAEjC,IAAIihB,EAAkB,iBAClBF,aAAe,IAAWE,EAAU,iBACpCF,aAAe,KAAME,EAAU,YAEnC5iB,KAAKoW,UAAUwM,EAAUF,EAAIvpB,WAAa,kDAAoDwI,EAAWtK,EAAEwI,eAAe/H,IAAIkI,KAAKhJ,QAAQ,GAAI,SAC/IgJ,KAAKoW,UAAUwM,EAAUF,EAAIvpB,WAAa,kDAAoDwI,EAAWghB,EAAahhB,GAAW9B,eAAe/H,IAAIkI,KAAKhJ,QAAQ,GAAI,cAGrK2rB,EAAahhB,GAAatK,GAjBa,qFA3ZvD,6CAmb2BmN,EAAwB+d,GAE3C,IAAIvpB,EAAY,GAF2F,uBAG3G,YAAcupB,EAAiB7V,eAA/B,+CAA+C,KAAtCrV,EAAsC,QAC3C2B,GAAK,aAA+B,MAAhB3B,EAAE4J,WAAqB,QAAUqB,EAAkBjL,EAAE4J,aAAe,IAAM5J,EAAE8B,WAAa,IAC7GH,GAAK3B,EAAE2J,cAAca,WAAWkB,KAAI,SAAAhK,GAAC,OAAIuJ,EAAkBvJ,EAAEqH,MAAQ,IAAMrH,EAAEI,cAAY8J,KAAK,MAC9FjK,GAAK,4CANkG,kFAS3G,MAAO,CACHuQ,MAAO,6BACPsZ,cAAe,SAACC,GACZ,MAAO,CACH,CACIC,SAAUD,EACVE,KAAM,CACFha,MAAO,CAAE4O,gBAAiBpT,EAAS0F,KAAM4N,YAAatT,EAAS2F,OAAS,EAAGwN,cAAenT,EAAS0F,KAAM2N,UAAWrT,EAAS2F,OAAS,GACtIyL,KAAM5c,SApclC,oCA8ckB+nB,G,QAENrf,EAASqf,EAAWnB,aAIxB,GAFA5f,KAAKijB,uBAAuBvhB,GAEd,MAAVA,EAAJ,CAIA1B,KAAK8f,qBACLpe,EAAOD,QAAUzB,KAAK+e,eAEtB/e,KAAKqgB,oBAAmB,EAAOU,EAAWT,UAAWS,EAAWR,SAChEvgB,KAAK4e,mBAAmBld,OAASA,EAEjC,IAAI8a,EAAmB,EAhBoB,uBAkB3C,YAAc9a,EAAOwhB,mBAAmBrhB,WAAxC,+CAAoD,KAA3CgC,EAA2C,QAChDA,EAAE2Y,SAAWA,IAEbxc,KAAK4e,mBAAmB3C,YAAY9W,IAAItB,EAAE1K,WAAY0K,IArBf,kFA2B3C,GAFA7D,KAAK8e,yBAA2BiC,EAAWlf,WAAWG,OAAS,EAE3DN,EAAON,eAAiBpB,KAAK4e,mBAAmB1C,wBAAwB,EAAO,CAC/E,IAAI5kB,EAAW0I,KAAK4e,mBAAmB1C,aAEnCiH,GAAuC,EAC3C,GAAIpC,EAAWnc,WAAW,GAAGxE,MAAQnH,EAAUmqB,UAAW,CACtD,IAAIC,EAAMtC,EAAWnc,WAAW,GAAGA,WAC/Bye,EAAIrhB,OAAS,GAAK,CAAC/I,EAAUqqB,qBAAsBrqB,EAAUsqB,iBAAiBne,QAAQie,EAAI,GAAGjjB,OAAS,IACtG+iB,GAA8B,OAE3B,CAAClqB,EAAUqqB,qBAAsBrqB,EAAUsqB,iBAAiBne,QAAQ2b,EAAWnc,WAAW,GAAGxE,OAAS,IAC7G+iB,GAA8B,GAGlC,GAAS,MAAL7rB,IAAwB,QAAf,EAAIA,EAAEwM,iBAAS,eAAEoH,qBAAgC,QAAZ,EAAC5T,EAAEwM,iBAAS,eAAEsH,+BAA+B,CAC3F,IAAIW,GAAiB,EAKrB,GAJ6B,MAAzBgV,EAAWnc,YAAsD,GAAhCmc,EAAWnc,WAAW5C,SAAa+J,GAAQ,GAC3EA,IACDA,GAASoX,GAETpX,EAAO,CACP,IAAIyX,EAAqB,KACrBhY,EAAelU,EAAEwM,UAAU0C,QAAQqE,QAAO,SAAAxT,GAAC,OAAIA,EAAE+J,iBACrD,GAA2B,GAAvBoK,EAAaxJ,OAAa,CAC1B,IAAIyhB,EAAa,SAAWjY,EAAa,GAAGxK,cAAca,WAAWkB,KAAI,SAAAhK,GAAC,OAAIA,EAAEI,cAAY8J,KAAK,MAAQ,KACrGuB,EAAWuc,EAAWvc,SAC1Bgf,EAAW,CACPja,MAAO,mDAEPsZ,cAAe,SAACC,GACZ,MAAO,CAAC,CACJC,SAAUD,EACVE,KAAM,CACFha,MAAO,CACH4O,gBAAiBpT,EAAS0F,KAAO,EAAG4N,YAAa,EAAGH,cAAenT,EAAS0F,KAAO,EAAG2N,UAAW,EACjGpL,QAAS,GACTiX,SAAU/a,OAAOgb,eAAeC,OAEpChO,KAAM,OAAS6N,EAAa,UAOhDzjB,KAAKoW,UAAU,8BAAgC9e,EAAE6B,WAAa,gKAC1D4nB,EAAWvc,SAAU,QAASgf,SAEnC,IAAKL,GAA+B7rB,EAAEwM,UAAUsH,8BAA+B,CAElF,IAAIyY,EAAuBvsB,EAAEwM,UAAUuH,8BACvCrL,KAAK+E,eAAe,CAEhB,CACI3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUuc,EAAWvc,SACrBuf,mBAAoB,GAExB,CACI3jB,KAAMnH,EAAUmpB,WAChB1gB,OAAQmiB,EACRxB,aAAa,EACb7d,SAAUuc,EAAWvc,SACrB8d,iBAAkB,MAOlC,IAAI0B,EAAoBhkB,KAAKwe,YAAYF,QAAQ,SAASle,KAe1D,GAdwB,CAAC,MAAO,aAAc,YAAa,UACvD,cAAe,YAAa,cAAe,eAAgB,gBACzCgF,QAAQ1D,EAAOvI,aAAe,GAAK6G,KAAK4e,mBAAmB1C,aAAahN,gBAAgB8U,IAC1GhkB,KAAK+E,eAAe,CAEhB,CACI3E,KAAMnH,EAAUgrB,kBAChBzf,SAAUuc,EAAWvc,aAKPxE,KAAKkkB,mBAAmBnD,EAAWnc,YAAYuf,oBAE/C,CACtBnkB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUyhB,OAChBlW,SAAUuc,EAAWR,QACrBK,iCAAiC,EACjC9b,cAAc,EACd+b,wBAAwB,IAG5B,IAAIuD,EAAK1iB,EAAO2iB,gBACX3iB,EAAON,eAAuB,MAANgjB,GAAcA,GAAMtR,IAC7C9S,KAAKoW,UAAU,0EAA4EgO,EAAGjrB,WAAa,+DAAgE4nB,EAAWvc,UAI9L9C,EAAOJ,8BAAgCtB,KAAK8e,yBACtCiC,EAAWlf,WAAWG,OAAS,EAErChC,KAAKihB,iBACLjhB,KAAK+e,eAAejY,aAAaga,kBAhlBzC,6CAulB2Bpf,GAEnB,IAAIwB,EAAQlD,KAAK4e,mBAAmB1C,aACpC,GAAa,MAAThZ,EAAe,4BAEf,YAAelD,KAAKwe,YAAY8F,YAAW,GAA3C,+CAAmD,KAA1CC,EAA0C,+BAC/C,YAAcA,EAAGlG,UAAUmG,SAA3B,+CAAqC,KAA5BltB,EAA4B,QACjC,GAAIA,aAAa,GAASA,GAAK4L,GAAS5L,EAAE4X,gBAAgBhM,GAAQ,4BAC9D,YAAc5L,EAAEkP,QAAhB,+CAAyB,KAAhBnP,EAAgB,QACrB,GAAS,MAALA,GAAuB,MAAVqK,GAAkBrK,EAAEsK,WAAaD,EAAOC,UAErD,YADAD,EAAOL,WAAY,IAHmC,qFAFvB,oFAFpC,sFA1lB3B,0CA6mBwBoH,GAEhB,GAAiB,MAAbA,GAGwB,MAAxBA,EAAUtP,YAAkD,MAA5BsP,EAAUgY,eAA9C,CAEIhY,EAAU7H,SACVZ,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUwrB,oBAChBnhB,eAAgBmF,EAAUmX,aAAaxd,MACvCsiB,oBAAqBjc,EAAUmX,aAAazmB,WAC5CqL,SAAUiE,EAAUgY,eAAejc,SACnCtB,MAAqBlD,KAAK4e,mBAAmB1C,eAGjDlc,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU0rB,cAChBrhB,eAAgBmF,EAAUmX,aAAaxd,MACvCsiB,oBAAqBjc,EAAUtP,WAC/BqL,SAAUiE,EAAUgY,eAAejc,SACnCogB,eAAe,IAKvB,IAAIC,EAAqB7kB,KAAK4hB,YAAYnZ,EAAUgY,gBAE1B,MAAtBoE,GAAyD,MAA3BA,EAAmBzkB,OAC5CJ,KAAK8kB,uBAAuBD,EAAmBzkB,KAAMqI,EAAUsc,cAAcnF,gBAElC,MAAxCnX,EAAUsc,cAAcnF,aACxB5f,KAAKoW,UAAU,oBAAsB3N,EAAUtP,WAAa,mCAAoCsP,EAAUjE,UAE1GxE,KAAKoW,UAAU,kCAAoCyO,EAAmBzkB,KAAO,sBAAwBqI,EAAUtP,WAAa,YAAcsP,EAAUsc,cAAcnF,aAAazmB,WAAa,4BAA6BsP,EAAUgY,eAAejc,WAM1PxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUiE,WAChBsH,SAAUiE,EAAUgY,eAAejc,SACnCM,cAAc,EACdkgB,mBAAmB,QAzpBnC,2CAmqBQhlB,KAAK+e,eAAiB,CAClB/nB,OAAQgJ,KAAKhJ,OACb4N,WAAY,GACZkC,aAAc,MAGlB9G,KAAK+e,eAAejY,aAAe,IAAI,EAAa9G,KAAK+e,gBAEzD/e,KAAK2gB,cAAgB,OA3qB7B,qCA+qBoD,IAAnCsE,EAAmC,wDAE5CjlB,KAAK8f,qBAEL,IAAItb,EAAyB,CAAE0F,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GAEvDkjB,EAAiBllB,KAAKhJ,OAAOkuB,eACX,MAAlBA,GAA0BA,EAAeljB,OAAS,GAA0B,MAArBkjB,EAAe,KACtE1gB,EAAWxE,KAAKhJ,OAAOkuB,eAAe,GAAG1gB,UAGxCygB,IACDjlB,KAAKqgB,oBAAmB,EAAM7b,EAAU,CAAE0F,KAAM,IAAQC,OAAQ,EAAGnI,OAAQ,GAAKhC,KAAK+e,gBACrF/e,KAAK0e,KAAO,IAGhB1e,KAAKhJ,OAAOuoB,YAAcvf,KAAK+e,eAE/B,IAAIoG,GAA0B,EAEI,MAA9BnlB,KAAKhJ,OAAOkuB,gBAA0BllB,KAAKhJ,OAAOkuB,eAAeljB,OAAS,IAE1EmjB,GAAiB,EACjBnlB,KAAKkkB,mBAAmBlkB,KAAKhJ,OAAOkuB,gBAEhCD,GAA4C,MAAtBjlB,KAAK2gB,eAAyB3gB,KAAK2gB,cAAcvgB,MAAQnH,EAAUmsB,sBACzFplB,KAAKqlB,sBAGTrlB,KAAKslB,aAAetlB,KAAKhJ,OAAOuuB,eACP,MAArBvlB,KAAKslB,eAAsBtlB,KAAKslB,aAAe,CAAEpb,KAAM,IAAQC,OAAQ,EAAGnI,OAAQ,IAGtFhC,KAAK4e,mBAAmBhE,WAAa5a,KAAKslB,aACrCL,GAAoBjlB,KAAKihB,eAAejhB,KAAK+e,gBAAgB,GAClE/e,KAAK0e,KAAO,KAEZ1e,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUuoB,WAChBhd,SAAUxE,KAAKslB,aACfxgB,cAAc,EACd0gB,sBAAsB,IACvB,IAIPxlB,KAAK+e,eAAejY,aAAaga,eAE5BmE,GAAuBE,IACxBnlB,KAAKihB,eAAejhB,KAAK+e,gBACzB/e,KAAK0e,KAAO,QAjuBxB,6CAsuB2B+G,EAAgBC,EAAclhB,EAAyBmhB,GAE1E,GAAgB,MAAZF,EAAkB,OAAO,EAE7B,GAAIA,EAASnW,OAAOoW,GAChB,OAAO,EAGX,GAAgB,MAAZD,GAA8B,MAAVC,EAAgB,OAAO,EAE/C,IAAKD,EAAS1jB,UAAU2jB,GASpB,OAPIA,GAAUpV,IAAoC,MAAZqV,GAElC3lB,KAAK4lB,+BAA+BD,IAKjC,EAGX,GAA+B,MAA3BF,EAAQ,aAA2BA,EAAQ,YAAgBrgB,QAAQsgB,IAAW,EAC9E,OAAO,EAGX,GAAID,aAAoB,GAASC,GAAUrZ,GAAqB,CAE5D,IAAIwZ,EAAoB7lB,KAAK8lB,qBAAqBL,EAAUjhB,GAE5D,OAAyB,MAArBqhB,IACA7lB,KAAK+E,eAAe8gB,IACb,GAOf,GAAIJ,aAAoBxlB,IAAkBylB,aAAkBzlB,GAAiBylB,GAAUrZ,IAAsB,CACzG,IAAI0Z,EAAWN,EAASzD,mBAAmB0D,GAC3C,IAAKK,EAASrU,UACV,OAAO,EAEPqU,EAASpU,gBACT3R,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUgpB,UAChBC,QAASwD,EACTlhB,SAAUA,IAKtB,OAAO,IA3xBf,2CA+xByBpE,EAAaoE,GAC9B,IAAIwhB,EAAiB5lB,EAAK6lB,qBAAqB,cAC/C,OAAsB,MAAlBD,GAA0BA,EAAe3B,iBAAmBhY,GAErD,CACHjM,KAAMnH,EAAUmpB,WAChB5d,SAAUA,EACV9C,OAAQskB,EACR3D,aAAa,EACbC,iBAAkB,EAClBxd,cAAc,GAKX,OA9yBnB,qDAkzBmC6gB,EAAmBO,GAC9C,GAAgB,MAAZP,GAEAA,EAASvlB,MAAQnH,EAAUktB,UAAYR,EAASS,UAAYntB,EAAUiE,WAAY,CAClF,IAAI4W,EAAM6R,EAASnhB,SACnBxE,KAAKoW,UAAU,sHACXtC,EAAKoS,GAAiB5V,GAAuB,UAAY,QAAS,CAClE/G,MAAO,sBACPsZ,cAAe,SAACC,GACZ,MAAO,CAAC,CACJC,SAAUD,EACVE,KAAM,CACFha,MAAO,CACH4O,gBAAiB9D,EAAI5J,KAAM4N,YAAahE,EAAI3J,OAAQwN,cAAe7D,EAAI5J,KAAM2N,UAAW/D,EAAI3J,OAAS,EACrGsC,QAAS,GACTiX,SAAU/a,OAAOgb,eAAeC,OAEpChO,KAAM,cAn0BlC,yCA80BuByQ,GAGf,GAAa,MAATA,GAAiC,GAAhBA,EAAMrkB,QAA2B,MAAZqkB,EAAM,GAAY,MAAO,CAAElC,qBAAqB,GAE1F,IAGImC,EAHAnC,EAA+BnkB,KAAKumB,6BAA6BF,GAEjEG,EAAWH,EAAMA,EAAMrkB,OAAS,GAiBpC,OAfgB,MAAZwkB,GACIA,EAASpmB,MAAQnH,EAAUmqB,UAC3BkD,EAAcE,EAAS5L,WAGJ,OADnB0L,EAAc3uB,OAAO8uB,OAAO,GAAID,EAAShiB,aAErC8hB,EAAYnc,QAAUmc,EAAYtkB,OAClCskB,EAAYtkB,OAAS,GAG7BhC,KAAKslB,aAAegB,GAEpBA,EAActmB,KAAKslB,aAGhB,CAAEnB,oBAAqBA,EAAqBmC,YAAaA,KAt2BxE,mDA02BiCD,GACzB,IAAIlC,GAAsB,EADe,uBAGzC,YAAiBkC,EAAjB,+CAAwB,KAAfxhB,EAAe,QAEpB,GAAY,MAARA,EAAJ,CAEA,IAAIzE,EAAOJ,KAAK4hB,YAAY/c,GAEhB,MAARzE,GAA4C,MAA5BA,EAAK+jB,qBAA+B/jB,EAAK+jB,sBACzDA,GAAsB,GAMd,MAAR/jB,GAA6B,MAAbA,EAAKA,MAAgBA,EAAKA,MAAQ0S,KAExB,MAAtB9S,KAAK2gB,eACL3gB,KAAK2gB,cAAcvgB,MAAQnH,EAAUiE,YAAc8C,KAAK2gB,cAAcqE,kBACtEhlB,KAAK2gB,cAAcqE,mBAAoB,EAEvChlB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUmsB,qBAChB5gB,SAAU,KACVkiB,SAAU,EACV5hB,cAAc,IACf,MA3B0B,kFAkCzC,OAAOqf,IA54Bf,uCAm5BqBrQ,EAAalP,GAC1B,GAAkB,MAAdA,EAAJ,CACKnB,MAAMkjB,QAAQ/hB,KAAaA,EAAa,CAACA,IAFe,2BAG7D,YAAeA,EAAf,+CAA2B,KAAlByX,EAAkB,QACvBrc,KAAK+e,eAAena,WAAWmT,OAAOjE,IAAO,EAAGuI,IAJS,sFAn5BrE,qCA25BmBuK,GAAuF,IAAnDC,EAAmD,wDAElG,GAAiB,MAAbD,EAAJ,CAEA,GAAIC,GAAsC7mB,KAAK+e,eAAena,WAAW5C,OAAS,EAAG,CACjF,IAAI8kB,EAAwB9mB,KAAK+e,eAAena,WAAW5E,KAAK+e,eAAena,WAAW5C,OAAS,GACnG8kB,EAAWhiB,cAAe,EAG9B,GAAIrB,MAAMkjB,QAAQC,GAAY,4BAC1B,YAAeA,EAAf,+CAA0B,KAAjBvK,EAAiB,QACtBrc,KAAK+e,eAAena,WAAWL,KAAK8X,GAChCA,EAAGjc,MAAQnH,EAAUyhB,QAAU2B,EAAGjc,MAAQnH,EAAU8tB,YAC1B,MAAtB/mB,KAAK2gB,gBAAuB3gB,KAAK2gB,cAAc7b,cAAe,GAEnD,MAAfuX,EAAG7X,SACHxE,KAAKslB,aAAejJ,EAAG7X,SAEvB6X,EAAG7X,SAAWxE,KAAKslB,aAEvBtlB,KAAK2gB,cAAgBtE,GAXC,wFAc1Brc,KAAK+e,eAAena,WAAWL,KAAKqiB,GAChCA,EAAUxmB,MAAQnH,EAAUyhB,QAAUkM,EAAUxmB,MAAQnH,EAAU8tB,YACxC,MAAtB/mB,KAAK2gB,gBAAuB3gB,KAAK2gB,cAAc7b,cAAe,GAE5C,MAAtB8hB,EAAUpiB,SACVxE,KAAKslB,aAAesB,EAAUpiB,SAE9BoiB,EAAUpiB,SAAWxE,KAAKslB,aAG9BtlB,KAAK2gB,cAAgBiG,KA57BjC,4CAi8BQ,IAAII,EAAMhnB,KAAK+e,eAAena,WAAW0P,MACzCtU,KAAK+e,eAAejY,aAAamgB,WAAWD,KAl8BpD,yCAw8BuBE,EAA6BvM,EAA4BC,EACxEnZ,GAEA,IAAI4a,EAAK,IAAI,GAAYrc,KAAK4e,mBAAoBjE,EAAcC,GAIhE,GAFA5a,KAAK2e,iBAAiBpa,KAAKvE,KAAK4e,oBAE5BsI,IACA7K,EAAGN,qBAAsB,EACzB/b,KAAK4e,mBAAmBnC,eAAiBzc,KAAK8e,yBAC9C9e,KAAK8e,yBAA2B,EAEjB,MAAXrd,GAAiB,CACjB,IAAI0lB,EAA8C,CAC9C/mB,KAAMnH,EAAUmuB,eAChB5iB,SAAUmW,EACV0M,yBAA0B,GAG9B5lB,EAAQmD,WAAWL,KAAK4iB,GACxBnnB,KAAKue,oBAAoBha,KAAK4iB,GAOtC,OAFAnnB,KAAK4e,mBAAqBvC,EAEnBA,IAn+Bf,qCAu+BmB5a,GAAsE,WAAnDolB,EAAmD,wDAE7ExK,EAAKrc,KAAK4e,mBAoBV,GAnBJ5e,KAAK4e,mBAAqB5e,KAAK2e,iBAAiBrK,MAGhD+H,EAAGJ,YAAYlK,SAAQ,SAAAlO,GACO,MAAtBA,EAAEyjB,kBAA4BzjB,EAAE0jB,2BAChC,EAAK5T,UAAUpP,KAAKV,EAAEyjB,kBACtBzjB,EAAEyjB,iBAAmB,SAarBjL,EAAGN,sBAEHM,EAAGI,eAAiBzc,KAAK8e,yBACzB9e,KAAK8e,yBAA2B9e,KAAK4e,mBAAmBnC,eAEzC,MAAXhb,GAAiB,CACjB,IAAI+lB,EAAqBxnB,KAAKue,oBAAoBjK,MAGlD,GAF0B,MAAtBkT,IAA4BA,EAAmBH,yBAA2BhL,EAAGI,gBAE7Ehb,EAAQmD,WAAW5C,OAAS,GAAK6kB,EAAoC,CACrE,IAAID,EAAYnlB,EAAQmD,WAAWnD,EAAQmD,WAAW5C,OAAS,IAIgH,GAA3K,CAAC/I,EAAU8tB,WAAY9tB,EAAUwuB,WAAYxuB,EAAUyuB,YAAazuB,EAAU0uB,2BAA4B1uB,EAAU2uB,2BAA2BxiB,QAAQwhB,EAAUxmB,QACjKqB,EAAQmD,WAAWnD,EAAQmD,WAAW5C,OAAS,GAAG8C,cAAe,GAIzErD,EAAQmD,WAAWL,KAAK,CACpBnE,KAAMnH,EAAU+mB,gBAChBxb,SAAU6X,EAAGzB,gBAlhCrC,gCA4hCchF,EAAcpR,GAA6E,IAArDqR,EAAqD,uDAA5B,QAAS2N,EAAmB,uCACjGxjB,KAAK2T,UAAUpP,KAAK,CAChBqR,KAAMA,EACNpR,SAAUA,EACVgf,SAAUA,EACV1N,MAAOD,MAjiCnB,uCAsiCQ7V,KAAKgf,eAAeza,KAAK,MAtiCjC,0CA0iCQvE,KAAKif,kBAAkB1a,KAAK,MA1iCpC,oCA6iCkBsjB,GACwB,GAA9B7nB,KAAKgf,eAAehd,OACpBhC,KAAKoW,UAAU,mGAAoGyR,EAAUrjB,WAE7HxE,KAAKgf,eAAehf,KAAKgf,eAAehd,OAAS,GAAGuC,KAAKsjB,GACzD7nB,KAAK+E,eAAe8iB,MAljChC,uCAsjCqBC,GACwB,GAAjC9nB,KAAKif,kBAAkBjd,OACvBhC,KAAKoW,UAAU,sGAAuG0R,EAAatjB,WAEnIxE,KAAKif,kBAAkBjf,KAAKif,kBAAkBjd,OAAS,GAAGuC,KAAKujB,GAC/D9nB,KAAK+E,eAAe+iB,MA3jChC,sCA+jCoBC,EAA0BC,GACtC,IAAIC,EAAajoB,KAAKgf,eAAe1K,MADiB,uBAEtD,YAAe2T,EAAf,+CAA2B,KAAlBC,EAAkB,QACvBF,EAAGhjB,iBAAiBkjB,EAAIH,IAH0B,qFA/jC9D,yCAskCuBI,EAA6BH,GAC5C,IAAII,EAAgBpoB,KAAKif,kBAAkB3K,MADiB,uBAE5D,YAAe8T,EAAf,+CAA8B,KAArBF,EAAqB,QAC1BF,EAAGhjB,iBAAiBkjB,EAAIC,IAHgC,qFAtkCpE,qCA8kCQ,OAAOnoB,KAAKgf,eAAehd,OAAS,GAAKhC,KAAKgf,eAAehf,KAAKgf,eAAehd,OAAS,GAAGA,OAAS,IA9kC9G,kCAilCgB6C,GAAsD,IAAvCwjB,EAAuC,wDAE9D,GAAY,MAARxjB,EAEJ,OAAQA,EAAKzE,MACT,KAAKnH,EAAUktB,SACX,OAAOnmB,KAAKsoB,gBAAgBzjB,GAChC,KAAK5L,EAAUsvB,QACX,OAAOvoB,KAAKwoB,eAAe3jB,GAC/B,KAAK5L,EAAUwvB,aACX,OAAOzoB,KAAKyoB,aAAa5jB,GAC7B,KAAK5L,EAAUmpB,WACX,OAAOpiB,KAAKoiB,WAAWvd,GAC3B,KAAK5L,EAAUE,WAEP,IAAIuvB,EAAY1oB,KAAK2oB,kBAAkB9jB,GACnChB,EAAIgB,EAAK0X,SAcb,OAbS,MAAL1Y,IACIwkB,GACAxkB,EAAE+kB,aAAc,EACX/kB,EAAE0jB,2BACH1jB,EAAEyjB,iBAAmB,OAGJ,MAAjBzjB,EAAE+kB,aAAwB/kB,EAAE+kB,cAC5B/kB,EAAE0jB,0BAA2B,EAC7BvnB,KAAKoW,UAAU,gBAAkBvS,EAAE1K,WAAa,oDAAqD0L,EAAKL,SAAU,UAIzHkkB,EAEf,KAAKzvB,EAAU4vB,mBACX,OAAO7oB,KAAK6oB,mBAAmBhkB,GACnC,KAAK5L,EAAU6vB,yBACf,KAAK7vB,EAAU8vB,wBACX,OAAO/oB,KAAKgpB,gCAAgCnkB,GAChD,KAAK5L,EAAUqqB,qBAEf,KAAKrqB,EAAUsqB,gBACX,OAAOvjB,KAAKipB,qBAAqBpkB,GACrC,KAAK5L,EAAUW,YACX,OAAOoG,KAAKkpB,gBAAgBrkB,GAAM,GACtC,KAAK5L,EAAUY,aACX,OAAOmG,KAAKkpB,gBAAgBrkB,GAAM,GACtC,KAAK5L,EAAU0rB,cACX,OAAO3kB,KAAK2kB,cAAc9f,GAC9B,KAAK5L,EAAUkwB,UACX,OAAOnpB,KAAKmpB,UAAUtkB,GAC1B,KAAK5L,EAAUyB,aACX,OAAOsF,KAAKopB,aAAavkB,GAC7B,KAAK5L,EAAU0B,UACX,OAAOqF,KAAKqpB,UAAUxkB,GAC1B,KAAK5L,EAAU2B,WACX,OAAOoF,KAAKspB,WAAWzkB,GAC3B,KAAK5L,EAAUswB,sBACX,OAAOvpB,KAAKwpB,6BAA6B3kB,GAC7C,KAAK5L,EAAU+B,UACX,OAAOgF,KAAKypB,UAAU5kB,GAC1B,KAAK5L,EAAU4B,cACX,OAAOmF,KAAK0pB,cAAc7kB,GAC9B,KAAK5L,EAAUkC,cACX,OAAO6E,KAAK2pB,cAAc9kB,GAC9B,KAAK5L,EAAU2wB,yBACX,OAAO5pB,KAAK4pB,yBAAyB/kB,GACzC,KAAK5L,EAAU4wB,oBACX,OAAO7pB,KAAK8pB,oBAAoBjlB,GACpC,KAAK5L,EAAU8wB,SACX,OAAO/pB,KAAKgqB,gBAAgBnlB,GAChC,KAAK5L,EAAUwC,aACf,KAAKxC,EAAUyC,eACX,OAAOsE,KAAKiqB,aAAaplB,GAC7B,KAAK5L,EAAUgpB,UACX,OAAOjiB,KAAKkqB,kBAAkBrlB,GAClC,KAAK5L,EAAUmC,aAKX,OAJA4E,KAAKmqB,cAAc,CACf/pB,KAAMnH,EAAU8tB,WAChBviB,SAAUK,EAAKL,WAEZ,KACX,KAAKvL,EAAUoC,gBAKX,OAJA2E,KAAKoqB,iBAAiB,CAClBhqB,KAAMnH,EAAU8tB,WAChBviB,SAAUK,EAAKL,WAEZ,KACX,KAAKvL,EAAU2C,aACX,IAAIwE,EAAOJ,KAAK4hB,YAAY/c,EAAKwlB,oBAEjC,OADY,MAARjqB,GAAgBA,EAAKA,gBAAgB,GAAOJ,KAAKsqB,iBAAiBzlB,EAAKL,SAAUpE,EAAKA,MACnFA,EACX,KAAKnH,EAAUmqB,UACXpjB,KAAKqgB,oBAAmB,EAAOxb,EAAKL,SAAUK,EAAK+V,YAEnD,IAAIuJ,EAAsBnkB,KAAKumB,6BAA6B1hB,EAAKD,YAIjE,OAFA5E,KAAKihB,iBAEE,CAAE7gB,KAAM,KAAM0hB,cAAc,EAAOqC,oBAAqBA,MAlrC/E,wCAwrCsBtf,GAEd,IAAI0lB,EAAYvqB,KAAK4hB,YAAY/c,EAAK2lB,YAEtC,GAAiB,MAAbD,GAAuC,MAAlBA,EAAUnqB,KAAnC,CACA,IAAIqlB,EAAiB8E,EAAUnqB,KAE/B,GAAgB,MAAZqlB,GAAuC,MAAnB5gB,EAAK4lB,YAAsD,MAAhC5lB,EAAK4lB,WAAW7K,aAAsB,CAErF,IAAI8F,EAAS7gB,EAAK4lB,WAAW7K,aAE7B,GAAI6F,EAAS1jB,UAAU2jB,GAAS,CAE5B,GAAID,aAAoBxlB,GAAiBylB,aAAkBzlB,EACxCwlB,EAASzD,mBAAmB0D,GAC9B/T,gBACT3R,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUgpB,UAChBzd,SAAUK,EAAKL,SACf0d,QAASwD,SAGd,GAAID,aAAoB,GAASC,GAAUrZ,GAAqB,CACnE,IAAI2Z,EAAiBP,EAASQ,qBAAqB,cAC7B,MAAlBD,GAA0BA,EAAe3B,iBAAmBhY,GAE5DrM,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUmpB,WAChB5d,SAAUK,EAAKL,SACf9C,OAAQskB,EACR3D,aAAa,EACbC,iBAAkB,EAClBxd,cAAc,KAIlB9E,KAAKoW,UAAU,gBAAkBqP,EAAStsB,WAAa,yDAA2DusB,EAAOvsB,WAAa,uBAAwB0L,EAAKL,UACnKxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUgpB,UAChBzd,SAAUK,EAAKL,SACf0d,QAASwD,KAMrB,MAAO,CACH5D,aAAcyI,EAAUzI,aACxB1hB,KAAMslB,GAKd,IAAKD,aAAoB,GAASA,aAAoB,KAAeC,aAAkB,GAASA,aAAkB,GAc9G,OAPA1lB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUyxB,UAChBlmB,SAAUK,EAAKL,SACf0d,QAASwD,EACT5gB,cAAc,IAGX,CACHgd,aAAcyI,EAAUzI,aACxB1hB,KAAMslB,GAIV1lB,KAAKoW,UAAU,gBAAkBqP,EAAStsB,WAAa,yDAA2DusB,EAAOvsB,WAAa,uBAAwB0L,EAAKL,cAjwCnL,mCAwwCiBK,G,MAELzE,EAAOyE,EAAKzE,MAAQnH,EAAUwC,aAAexC,EAAU0xB,MAAQ1xB,EAAU2xB,QAI7E,GAFA5qB,KAAKhJ,OAAO6qB,uBAAuBhd,EAAKL,SAAUK,EAAKyc,eAAgBpoB,EAAkB2L,EAAKzE,MAAOyE,EAAK0c,sBAEzF,MAAb1c,EAAK+Q,KAAc,CAEnB,IAAI,EAAO5V,KAAK4hB,YAAY/c,EAAK+Q,MAErB,MAAR,IACK5V,KAAK8kB,uBAAuB,EAAK1kB,KAAMiM,KACxCrM,KAAKoW,UAAU,4GAAsH,QAAZ,EAAG,EAAKhW,YAAI,eAAEjH,YAAa,IAAK0L,EAAKL,WAM1K,IAAIqmB,GAAqB,EAEzB,GAAkB,MAAdhmB,EAAKimB,MAAe,CAEpB,IAAI,EAAO9qB,KAAK4hB,YAAY/c,EAAKimB,OAErB,MAAR,GACI,EAAK1qB,MAAQiM,IAAuB,EAAKjM,MAAQgP,KAC5CpP,KAAK8kB,uBAAuB,EAAK1kB,KAAMiM,KACxCrM,KAAKoW,UAAU,8HAAgI,EAAKhW,KAAKjH,WAAa,IAAK0L,EAAKL,WAK5LqmB,GAAY,EAahB,OATA7qB,KAAK+E,eAAe,CAChB3E,KAAMA,EACNoE,SAAUK,EAAKL,SACfumB,MAAqB,MAAblmB,EAAK+Q,KACb9Q,cAAc,EACd+lB,UAAWA,IAIR,OArzCf,sCAwzCoBhmB,GAEZ,GAA2B,MAAvBA,EAAK4b,eACL,OAAOzgB,KAAK8pB,oBAAoBjlB,EAAK4b,gBAKzC,IAAIuK,EAAY,EARc,uBAS9B,YAAenmB,EAAKomB,aAApB,+CAAkC,KAAzBC,EAAyB,QAC9B,GAAU,MAANA,EAIA,MAHAlrB,KAAK4hB,YAAYsJ,GACjBF,KAZsB,kFA0B9B,OAPAhrB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUkyB,eAChB3mB,SAAUK,EAAKL,SACf4mB,UAAWvmB,EAAKumB,UAAUxL,aAC1BoL,UAAWA,IAGR,CACHlJ,cAAc,EACd1hB,KAAMyE,EAAKumB,UAAUxL,gBAp1CjC,0CA01CwB/a,GAEhB,IAAIwmB,EAA2B,CAC3BjrB,KAAMnH,EAAUqyB,WAChB9mB,SAAUK,EAAKL,SACf4mB,UAAWvmB,EAAKumB,UAAUxL,cAG9B5f,KAAK+E,eAAesmB,GARyB,2BAU7C,YAAgBxmB,EAAKwhB,MAArB,+CAA4B,KAAnBkF,EAAmB,QAGxB,GAAW,MAAPA,EAIJ,GAAIA,EAAInrB,MAAQnH,EAAU4wB,oBACtB7pB,KAAK8pB,oBAAoByB,OACtB,CACH,IAAIC,EAAQxrB,KAAK4hB,YAAY2J,GAC7B,GAAa,MAATC,EACA,OAEJ,IAAIC,EAAyB5mB,EAAKumB,UAAUxL,aAAcrd,YACrDvC,KAAK8kB,uBAAuB0G,EAAMprB,KAAMqrB,EAAYF,EAAI/mB,WACzDxE,KAAKoW,UAAU,2BAA6BoV,EAAMprB,KAAKjH,WAAa,gCAAkCsyB,EAAWtyB,WAAa,uBAAwBoyB,EAAI/mB,YA1BzH,kFAsC7C,OANAxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUyyB,WAChBlnB,SAAUK,EAAKL,SACfmnB,sBAAuB9mB,EAAKwhB,MAAMrkB,SAG/B,CACH8f,cAAc,EACd1hB,KAAMyE,EAAKumB,UAAUxL,gBAl4CjC,+CAu4C6B/a,GAAiF,IAA7C+mB,EAA6C,wDAEhE,MAAlC/mB,EAAKgnB,aAAajM,eAClB/a,EAAKgnB,aAAajM,aAAepV,IAGrC,IAAIshB,EAAsC,MAAb9rB,KAAK0e,MAAgB1e,KAAK2e,iBAAiB3c,QAAU,EAE9Eua,EAAqB,CACrBpjB,WAAY0L,EAAK1L,WACjBqjB,SAAUsP,EAAwB,KAAO9rB,KAAK8e,2BAC9C1e,KAAMyE,EAAKgnB,aAAajM,aACxB/f,eAAgB,IAAIC,IACpBoQ,YAAa,CAAElZ,OAAQgJ,KAAKhJ,OAAQwN,SAAUK,EAAKL,UACnD1D,QAAS+D,EAAK/D,SAyClB,GAtCAd,KAAK+rB,kBAAkBlnB,EAAKL,SAAU+X,GAElCuP,GAEA9rB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU+yB,wBAChBxnB,SAAUK,EAAKL,SACfynB,kCAA0D,MAAvBpnB,EAAK4b,eACxClE,SAAUA,EACVzX,aAAqC,MAAvBD,EAAK4b,iBAGnBzgB,KAAK0e,KAAKnC,EAASpjB,aACnB6G,KAAKoW,UAAU,gBAAkBvR,EAAK1L,WAAa,gFAAiF0L,EAAKL,UAG7IxE,KAAK0e,KAAKnC,EAASpjB,YAAcojB,EAEjCvc,KAAK4e,mBAAmB3C,YAAY9W,IAAIN,EAAK1L,WAAYojB,KAIrDvc,KAAK4e,mBAAmB3C,YAAYnkB,IAAI+M,EAAK1L,aAC7C6G,KAAKoW,UAAU,gBAAkBvR,EAAK1L,WAAa,gFAAiF0L,EAAKL,UAG7IxE,KAAK4e,mBAAmB3C,YAAY9W,IAAIN,EAAK1L,WAAYojB,GAEzDvc,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU2wB,yBAChBplB,SAAUK,EAAKL,SACfynB,kCAA0D,MAAvBpnB,EAAK4b,eACxClE,SAAUA,EACVzX,aAAqC,MAAvBD,EAAK4b,kBAKA,MAAvB5b,EAAK4b,eAAwB,CAC7B,IAAIyL,EAAWlsB,KAAK4hB,YAAY/c,EAAK4b,gBAErB,MAAZyL,IAEI3P,EAASnc,MAAQ4S,GACjBuJ,EAASnc,KAAO8rB,EAAS9rB,KACD,MAAjB8rB,EAAS9rB,KAChBJ,KAAKoW,UAAU,oGAAqGvR,EAAK4b,eAAejc,UAEnIxE,KAAK8kB,uBAAuBoH,EAAS9rB,KAAMmc,EAASnc,OACrDJ,KAAKoW,UAAU,oBAAsB8V,EAAS9rB,KAAKjH,WAAa,8BAAgCojB,EAASnc,KAAKjH,WAAa,4BAA6B0L,EAAK4b,eAAejc,UAEpLxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUiE,WAChBsH,SAAUK,EAAK4b,eAAejc,SAC9BM,cAAc,EACdkgB,mBAAmB,UAK3B,GAAIzI,EAASnc,MAAQ4S,GACjBhT,KAAKoW,UAAU,sJAAuJvR,EAAKgnB,aAAarnB,cACrL,CACH,IAAI2nB,EAAsB,UACtB5P,EAASnc,MAAQgP,KAAkB+c,EAAc,QACjD5P,EAASnc,MAAQ6P,KAAqBkc,EAAc,UACpD5P,EAASnc,MAAQkQ,KAAsB6b,EAAc,YACrD5P,EAASnc,MAAQ8Q,KAAmBib,EAAc,UAClD5P,EAASnc,MAAQiM,KAAqB8f,EAAc,SAExD5P,EAAS+K,iBAAmB,CACxB1R,KAAM,gFACNpR,SAAUK,EAAKL,SACfgf,SACA,CACIja,MAAO4iB,EAAc,YACrBtJ,cAAe,SAACC,GACZ,IAAIhP,EAAMjP,EAAKL,SACf,MAAO,CACH,CACIue,SAAUD,EACVE,KAAM,CACFha,MAAO,CAAE4O,gBAAiB9D,EAAI5J,KAAM4N,YAAahE,EAAI3J,OAAS2J,EAAI9R,OAAQ2V,cAAe7D,EAAI5J,KAAM2N,UAAW/D,EAAI3J,OAAS2J,EAAI9R,QAC/H4T,KAAMuW,OAM1BrW,MAAO,QAGXyG,EAASgL,0BAA2B,EACpChL,EAASqM,YAAcgD,EAK/B,OAAO,OA1/Cf,oCA8/CkB/mB,GAEV,IAAInD,EAAS1B,KAAK4e,mBAAmBld,OAErC,GAAc,MAAVA,EAEA,OADA1B,KAAKoW,UAAU,kEAAmEvR,EAAKL,UAChF,KAGX,GAAiB,MAAbK,EAAKunB,KAAc,CAEnB,GAA8B,MAA1B1qB,EAAO2iB,gBAEP,OADArkB,KAAKoW,UAAU,eAAiB1U,EAAOvI,WAAa,iCAAkC0L,EAAKL,UACpF,KAGX,IAAIpE,EAAOJ,KAAK4hB,YAAY/c,EAAKunB,MAErB,MAARhsB,IACKJ,KAAK8kB,uBAAuB1kB,EAAKA,KAAMsB,EAAO2iB,gBAAiB,KAAMxf,IACtE7E,KAAKoW,UAAU,eAAiB1U,EAAOvI,WAAa,uCAAyCuI,EAAO2iB,gBAAgBlrB,WAAa,qCAAuCiH,EAAKA,KAAKjH,WAAa,IAAK0L,EAAKL,gBAMnL,MAA1B9C,EAAO2iB,iBAA2B3iB,EAAO2iB,iBAAmBvR,IAC5D9S,KAAKoW,UAAU,eAAiB1U,EAAOvI,WAAa,wCAA0CuI,EAAO2iB,gBAAgBlrB,WAAa,sEAAuE0L,EAAKL,UAYtN,OARAxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUyhB,OAChBlW,SAAUK,EAAKL,SACfoc,gCAA8C,MAAb/b,EAAKunB,KACtCtnB,cAAc,EACd+b,wBAAwB,IAGrB,CAAEzgB,KAAM,KAAM0hB,cAAc,EAAOqC,qBAAqB,KAriDvE,oCAyiDkBtf,GAEV,IAAImjB,EAAKhoB,KAAK+e,eAAejY,aAE7B9G,KAAKqgB,oBAAmB,EAAOxb,EAAKyb,UAAWzb,EAAK0b,SAEpD,IAAIZ,EAAK3f,KAAK4hB,YAAY/c,EAAKwnB,WAC/B,GAAU,MAAN1M,GAAyB,MAAXA,EAAGvf,KAArB,CAEA,IAAI8lB,EAAgBvG,EAAGvf,KAEnBksB,EAAWpG,GAAiB7Z,IAAuB6Z,GAAiBhV,GAEpEqb,EAASrG,aAAyB,GAEhCoG,GAHUpG,GAAiB9W,IAGFmd,GAC3BvsB,KAAKoW,UAAU,mIAAqI8P,EAAc/sB,WAAY0L,EAAKwnB,UAAU7nB,UAG7L+nB,GACAvsB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUgpB,UAChBzd,SAAUK,EAAKwnB,UAAU7nB,SACzB0d,QAAS9S,KAIjB,IAAI9K,EAAyC,CACzClE,KAAMnH,EAAU4B,cAChB2J,SAAUK,EAAKL,SACfyB,mBAAoB,KACpBumB,WAAYF,EAAW,SAAW,SAClCzmB,kBAAmB,GACnBE,eAAgB,IAGpB/F,KAAK+E,eAAeT,GAGpB,IAAImoB,EAAWzE,EAAG0E,eAAezzB,EAAU8tB,WAAYliB,EAAKL,SAAUxE,MAEtEsE,EAAgBQ,cAAe,EAE/BkjB,EAAG2E,wBAAwBroB,GAE3BtE,KAAK4sB,iBAEL,IAAIzI,EAAsBtf,EAAKgoB,UAAU7qB,OAAS,EA/CxB,uBAiD1B,YAAqB6C,EAAKgoB,UAA1B,+CAAqC,KAA5BC,EAA4B,QAIjC,GAFqC,MAArBA,EAASC,SA6ClB,CACH,IAAI,EAAQ/E,EAAGgF,oBAAoB,GACnChtB,KAAKkkB,mBAAmB4I,EAASloB,YACjCN,EAAgB2B,mBAAqB,MA9CzB,CAEZ,IAAID,EAA4B,KAEhC,GAAIumB,GAAUO,EAASC,SAAS3sB,MAAQnH,EAAUE,WAAY,CAC1D,IACI8zB,EADiB/G,EACP1I,oBAAoBsP,EAASC,SAAS5zB,YACxC,MAAR8zB,EACAjtB,KAAKoW,UAAU,mBAAqB8P,EAAc/sB,WAAa,wCAA0C2zB,EAASC,SAAS5zB,WAAY2zB,EAAStoB,SAAU,SAE1JwB,EAAWinB,EAAKpP,YAEjB,CACY7d,KAAK4hB,YAAYkL,EAASC,UAAzC,IAEIG,EAAKltB,KAAK2gB,cAEVuM,EAAG9sB,MAAQnH,EAAUwvB,eACrBziB,EAAWknB,EAAGh1B,OAGdg1B,EAAG9sB,MAAQnH,EAAUmoB,gBACrBpb,EAAWknB,EAAG1M,UAAU2M,WAAWD,EAAGjP,kBAG1Cje,KAAKqlB,sBAGO,MAAZrf,GACAhG,KAAKoW,UAAU,wCAAyC0W,EAASC,SAASvoB,UAG9E,IAAInC,EAAQ2lB,EAAGgF,oBAAoB,GAC/BpoB,EAAa5E,KAAKkkB,mBAAmB4I,EAASloB,YAEX,OAAnCA,aAAU,EAAVA,EAAYuf,sBAAgCvf,EAAWuf,sBACvDA,GAAsB,GAG1B7f,EAAgBuB,kBAAkBtB,KAAK,CACnCyB,SAAUA,EACV3D,MAAOA,MA9FO,kFA+G1B,OANA2lB,EAAGgF,oBAAoB,EAAGP,GAE1BzsB,KAAKotB,gBAAgBX,EAAUzE,GAE/BhoB,KAAKihB,eAAe,MAEb,CAAE7gB,KAAM,KAAM0hB,cAAc,EAAOqC,oBAAqBA,MAxpDvE,gCA2pDctf,GAEN,IAAImjB,EAAKhoB,KAAK+e,eAAejY,aAEzBof,EAAgBlmB,KAAK4hB,YAAY/c,EAAKwnB,WAE1CrsB,KAAK4lB,+BAA+B/gB,EAAKwnB,UAAWnG,aAAa,EAAbA,EAAe9lB,MAC9C,MAAjB8lB,GAAyBA,EAAc9lB,MAAQkQ,IAC/CtQ,KAAKoW,UAAU,iFAAkFvR,EAAKwnB,UAAU7nB,UAGpH,IAII6oB,EAOAC,EAXAC,EAAYvF,EAAG0E,eAAezzB,EAAUyuB,YAAa,KAAM1nB,MAE3DwtB,EAAwBxtB,KAAKkkB,mBAAmBrf,EAAK4oB,kBAAkBtJ,oBAoB3E,OAjB8B,MAA1Btf,EAAK6oB,oBACLL,EAAUrF,EAAG0E,eAAezzB,EAAU8tB,WAAY,KAAM/mB,OAG5DgoB,EAAGgF,oBAAoB,EAAGO,GAItBD,EAD0B,MAA1BzoB,EAAK6oB,mBAA8D,GAAjC7oB,EAAK6oB,kBAAkB1rB,QAG/BhC,KAAKkkB,mBAAmBrf,EAAK6oB,mBAAmBvJ,oBAG/D,MAAXkJ,GACArF,EAAGgF,oBAAoB,EAAGK,GAGvB,CAAEjtB,KAAM,KAAM0hB,cAAc,EAAOqC,oBAAqBqJ,GAAyBF,KA5rDhG,iCAisDezoB,GAEP,IAAImjB,EAAKhoB,KAAK+e,eAAejY,aAE7B9G,KAAKqgB,oBAAmB,EAAOxb,EAAKyb,UAAWzb,EAAK0b,SAEpDvgB,KAAKkkB,mBAAmBrf,EAAK8oB,kBAE7B,IAAIC,EAAuB5F,EAAGgF,oBAAoB,GAE9C9G,EAAgBlmB,KAAK4hB,YAAY/c,EAAKwnB,WAErB,MAAjBnG,GAAyBA,EAAc9lB,MAAQkQ,KAC/CtQ,KAAK4lB,+BAA+B/gB,EAAKwnB,WACzCrsB,KAAKoW,UAAU,6DAA8DvR,EAAKwnB,UAAU7nB,WAGhG,IAAIqpB,EAAoB7F,EAAG0E,eAAezzB,EAAUyuB,YAAa,KAAM1nB,MAEvEA,KAAK4sB,iBACL5sB,KAAK8tB,oBAEL,IAAIlpB,EAAa5E,KAAKkkB,mBAAmBrf,EAAKD,YAC1Cuf,EAAsBvf,EAAWuf,oBAEjC4J,EAAqB/F,EAAGgF,oBAAoB,GAYhD,OAXAhtB,KAAKguB,mBAAmBD,EAAoB/F,GAC5ChoB,KAAKkkB,mBAAmBrf,EAAKopB,iBAE7BjG,EAAG0E,eAAezzB,EAAU8tB,WAAYniB,EAAW0hB,YAAatmB,KAAM4tB,GAEtE5F,EAAGgF,oBAAoB,EAAGa,GAE1B7tB,KAAKotB,gBAAgBS,EAAmB7F,GAExChoB,KAAKihB,iBAEE,CAAE7gB,KAAM,KAAM0hB,cAAc,EAAOqC,oBAAqBA,KAtuDvE,mDA0uDiCtf,GAEzB,IAAImjB,EAAKhoB,KAAK+e,eAAejY,aAE7B9G,KAAKqgB,oBAAmB,EAAOxb,EAAKyb,UAAWzb,EAAK0b,SAGpD,IAAI2N,EAAwBluB,KAAK8e,2BAG7Ba,EAAK3f,KAAK4hB,YAAY/c,EAAKspB,YAC/B,GAAU,MAANxO,EAAJ,CACA,IASIyO,EATAC,EAAiB1O,EAAGvf,KAExBJ,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUq1B,wBAChB9pB,SAAUK,EAAKspB,WAAW3pB,SAC1Buf,mBAAoBmK,EACpBppB,cAAc,IAKlB,IAAI4D,EAAmE,KAEvE,GAAI2lB,aAA0B,EAC1BD,EAAwBC,EAAe9rB,YACvCmG,EAAO,aACJ,GAAI2lB,aAA0B,GAA+D,MAAtDA,EAAeE,wBAAwB,YAE7E7lB,EADA2lB,EAAer3B,OAAOuQ,eACf,eAEA,sBAEa8mB,EAAeE,wBAAwB,YAC/DH,EAAwBC,EAAenoB,cAAc,GAAG9F,SACrD,MAAIiuB,aAA0B,GAAsC,SAA7BA,EAAel1B,YAMzD,OADA6G,KAAKoW,UAAU,uKAAwKvR,EAAKspB,WAAW3pB,UAChM,KALPkE,EAAO,QACP0lB,EAAwBpuB,KAAKwe,YAAYF,QAAQ,SAASle,KAO9D,IAAIyrB,EAAehnB,EAAKgnB,aAAajM,aACrC,GAAoB,MAAhBiM,EAAsB,OAAO,KAEjC,IAAI2C,EAAkB3C,GAAgB7Y,GACtC,GAAIwb,EACA3C,EAAeuC,EACfvpB,EAAKgnB,aAAajM,aAAewO,OAEjC,IAAKA,EAAsBrsB,UAAU8pB,GAEjC,OADA7rB,KAAKoW,UAAU,kBAAoBgY,EAAsBj1B,WAAa,yCAA2C0yB,EAAa1yB,WAAa,2BAA6B0L,EAAK4pB,mBAAqB,uBAAwB5pB,EAAKL,UACxN,KAIfxE,KAAK4pB,yBAAyB,CAC1BxpB,KAAMnH,EAAU2wB,yBAChBzwB,WAAY0L,EAAK4pB,mBACjBhO,eAAgB,KAChB3f,SAAS,EACT0D,SAAUK,EAAK6pB,iBACf7C,aAAchnB,EAAKgnB,eACpB,GAEH,IAAI8C,EAAmB3uB,KAAK8e,yBAA2B,EACnD8P,EAAsC5uB,KAAK8e,2BAEnC,SAARpW,GAA2B,gBAARA,GAAkC,SAARA,EAC7C1I,KAAK+E,eAAe,CAAC,CACjB3E,KAAMnH,EAAU41B,oBAChBrqB,SAAUK,EAAKL,SACfM,cAAc,EACdgqB,qBAAsBZ,EACtBa,kBAAmBJ,EACnBK,cAAenD,EACfoD,kBAAmBL,KACnB,GAGJ5uB,KAAK+E,eAAe,CAChB,CACI3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoB6K,EACpB9pB,cAAc,GAElB,CACI1E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoBmK,EACpBppB,cAAc,GAElB,CACI1E,KAAMnH,EAAUmpB,WAChB5d,SAAUK,EAAKL,SACfM,cAAc,EACdud,aAAa,EACb3gB,OAAQ2sB,EAAeriB,UAAU,WAAY,IAAInJ,EAAc,KAC/Dyf,iBAAkB,GAEtB,CACIliB,KAAMnH,EAAUiE,WAChBsH,SAAUK,EAAKL,SACfM,cAAc,EACdkgB,mBAAmB,KACnB,GAGZ,IACI6I,EACAqB,EAFAtB,EAAuB5F,EAAGgF,oBAAoB,GAIlD,GAAY,SAARtkB,GAA2B,gBAARA,GAAkC,SAARA,EAAiB,CAC9D,IAAIymB,EAAqD,CACrD/uB,KAAMnH,EAAUm2B,yCAChB1mB,KAAMA,EACNlE,SAAUK,EAAK6pB,iBACf5pB,cAAc,EACdgqB,qBAAsBZ,EACtBa,kBAAmBJ,EACnBM,kBAAmBL,EACnBjpB,YAAa,GAEjBupB,EAA6BC,EAC7BtB,EAAoB7F,EAAGhjB,iBAAiBmqB,GAExCnvB,KAAK+E,eACDoqB,QAKJnvB,KAAK+E,eAAe,CAChB,CACI3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAK6pB,iBACf3K,mBAAoBmK,EACpBppB,cAAc,GAElB,CACI1E,KAAMnH,EAAUmpB,WAChB5d,SAAUK,EAAKL,SACfM,cAAc,EACdud,aAAa,EACb3gB,OAAQ2sB,EAAeriB,UAAU,UAAW,IAAInJ,EAAc,KAC9Dyf,iBAAkB,KAG1BuL,EAAoB7F,EAAG0E,eAAezzB,EAAUyuB,YAAa,KAAM1nB,MAEnEA,KAAK+E,eAAe,CAChB,CACI3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoB4K,EACpB7pB,cAAc,GAElB,CACI1E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoBmK,EACpBppB,cAAc,GAElB,CACI1E,KAAMnH,EAAUmpB,WAChB5d,SAAUK,EAAKL,SACfM,cAAc,EACdud,aAAa,EACb3gB,OAAQ2sB,EAAeriB,UAAU,OAAQ,IAAInJ,EAAc,KAC3Dyf,iBAAkB,GAEtB,CACIliB,KAAMnH,EAAUiE,WAChBsH,SAAUK,EAAKL,SACfM,cAAc,EACdkgB,mBAAmB,KAI/B,IAAKwJ,EAAiB,CAClB,IAAIa,EAAoBrvB,KAAK+e,eAAena,WAAW5C,OACvDhC,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoB4K,EACpB7pB,cAAc,IAElB9E,KAAK8kB,uBAAuBsJ,EAAuBvC,GAC/C7rB,KAAK+e,eAAena,WAAW5C,OAASqtB,EAAoB,EAE5DrvB,KAAK+e,eAAena,WAAW0P,OAE/BtU,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUq1B,wBAChBvK,mBAAoB4K,EACpBnqB,SAAUK,EAAKL,SACfM,cAAc,IAElBoqB,EAA2BpqB,cAAe,GAIlD9E,KAAK4sB,iBACL5sB,KAAK8tB,oBAEL,IAAIlpB,EAAa5E,KAAKkkB,mBAAmBrf,EAAKD,YAC1Cuf,EAAsBvf,EAAWuf,oBAEjC4J,EAAqB/F,EAAGgF,oBAAoB,GAWhD,OAVAhtB,KAAKguB,mBAAmBD,EAAoB/F,GAE5CA,EAAG0E,eAAezzB,EAAU8tB,WAAYniB,EAAW0hB,YAAatmB,KAAM4tB,GAEtE5F,EAAGgF,oBAAoB,EAAGa,GAE1B7tB,KAAKotB,gBAAgBS,EAAmB7F,GAExChoB,KAAKihB,iBAEE,CAAE7gB,KAAM,KAAM0hB,cAAc,EAAOqC,oBAAqBA,MAz8DvE,mCA68DiBtf,GAET,IAAImjB,EAAKhoB,KAAK+e,eAAejY,aAE7B9G,KAAKqgB,oBAAmB,EAAOxb,EAAKyb,UAAWzb,EAAK0b,SAEpD,IAAI+O,EAAsBtH,EAAGgF,oBAAoB,GAE7C9G,EAAgBlmB,KAAK4hB,YAAY/c,EAAKwnB,WAErB,MAAjBnG,GAAyBA,EAAc9lB,MAAQkQ,KAC/CtQ,KAAK4lB,+BAA+B/gB,EAAKwnB,WACzCrsB,KAAKoW,UAAU,oFAAqFvR,EAAKwnB,UAAU7nB,WAGvH,IAAIA,EAAWK,EAAKL,SAEE,MAAlBK,EAAKwnB,YACL7nB,EAAWK,EAAKwnB,UAAU7nB,UAG9B,IAAI+qB,EAA2BvH,EAAG0E,eAAezzB,EAAUyuB,YAAaljB,EAAUxE,MAElFA,KAAK4sB,iBACL5sB,KAAK8tB,oBAEL,IAAIlpB,EAAa5E,KAAKkkB,mBAAmBrf,EAAKD,YAC1Cuf,EAAsBvf,EAAWuf,oBAWrC,OATAnkB,KAAKguB,mBAAmBsB,EAAqBtH,GAC7CA,EAAG0E,eAAezzB,EAAU8tB,WAAYniB,EAAW0hB,YAAatmB,KAAMsvB,GAEtEtH,EAAGgF,oBAAoB,EAAGuC,GAE1BvvB,KAAKotB,gBAAgBmC,EAA0BvH,GAE/ChoB,KAAKihB,iBAEE,CAAE7gB,KAAM,KAAM0hB,cAAc,EAAOqC,oBAAqBA,KAn/DvE,gCAu/Dctf,GAEN,IAAImjB,EAAKhoB,KAAK+e,eAAejY,aAE7B9G,KAAKqgB,oBAAmB,EAAOxb,EAAKyb,UAAWzb,EAAK0b,SAEpD,IAAIiP,EAAuBxH,EAAGgF,oBAAoB,GAElDhtB,KAAK4sB,iBACL5sB,KAAK8tB,oBAEL,IAAIlpB,EAAa5E,KAAKkkB,mBAAmBrf,EAAKD,YAC1Cuf,EAAsBvf,EAAWuf,oBAEjC4J,EAAqB/F,EAAGgF,oBAAoB,GAChDhtB,KAAKguB,mBAAmBD,EAAoB/F,GAE5C,IAAI9B,EAAgBlmB,KAAK4hB,YAAY/c,EAAKwnB,WAErB,MAAjBnG,GAAyBA,EAAc9lB,MAAQkQ,KAC/CtQ,KAAK4lB,+BAA+B/gB,EAAKwnB,WACzCrsB,KAAKoW,UAAU,oFAAqFvR,EAAKwnB,UAAU7nB,WAGvHwjB,EAAG0E,eAAezzB,EAAUwuB,WAAY7iB,EAAW0hB,YAAatmB,KAAMwvB,GAEtE,IAAI/C,EAAWzE,EAAGgF,oBAAoB,GAMtC,OAJAhtB,KAAKotB,gBAAgBX,EAAUzE,GAE/BhoB,KAAKihB,iBAEE,CAAE7gB,KAAM,KAAM0hB,cAAc,EAAOqC,oBAAqBA,KAvhEvE,gCA2hEctf,G,MAEN,GAAsB,MAAlBA,EAAK4qB,WAAoD,MAA/B5qB,EAAK4qB,UAAU7P,aAAsB,OAAO,KAE1E,IAAIA,EAA6B/a,EAAK4qB,UAAU7P,aAChD,KAAMA,aAAwB,GAE1B,OADA5f,KAAKoW,UAAUvR,EAAK4qB,UAAUt2B,WAAa,4EAA6E0L,EAAKL,UACtH,KAGX,GAAIob,EAAaze,WAEb,OADAnB,KAAKoW,UAAL,UAAkBvR,EAAK4qB,UAAUt2B,WAAjC,0GAA6I0L,EAAK4qB,UAAUt2B,WAA5J,+FAAqQ0L,EAAKL,UACnQ,KAKPob,EAAa5oB,QAAUgJ,KAAKhJ,QAAU4oB,EAAa/e,YAAckD,EAAW4C,QAC5E3G,KAAKoW,UAAU,cAAgBwJ,EAAazmB,WAAa,4BAA6B0L,EAAKL,UAG/F,IAAIkrB,EAAmC,CACnCtvB,KAAMnH,EAAUkwB,UAChB3kB,SAAUK,EAAKL,SACfpB,MAAOwc,EACP+P,2BAA2B,EAC3B7qB,cAAc,GAGlB9E,KAAK+E,eAAe2qB,GACpB1vB,KAAKsqB,iBAAiBzlB,EAAK0c,qBAAsB3B,GAEjD,IAAItU,EAAyB,GACzBskB,EAAqC,GACrCC,EAAgB7vB,KAAK+e,eAAena,WAExC,IAA4B,QAAxB,EAAAC,EAAKirB,2BAAmB,eAAE9tB,QAAS,EAAG,4BACtC,YAAc6C,EAAKirB,oBAAnB,+CAAwC,KAA/B/2B,EAA+B,QAChCg3B,EAAiBF,EAAc7tB,OAC/B2f,EAAW3hB,KAAK4hB,YAAY7oB,GAChC62B,EAAoBrrB,KAAKsrB,EAAc9X,OAAOgY,EAAgBF,EAAc7tB,OAAS+tB,IACrE,MAAZpO,EACArW,EAAe/G,KAAKuO,IAEpBxH,EAAe/G,KAAKod,EAASvhB,OARC,mFAa1C,IAAIwK,EAAiBmE,EAAkB6Q,EAAc5f,KAAK4e,mBAAmB1C,cAKzE1V,EAAUoZ,EAAanU,eAAeH,EAAgBV,GAK1D,GAHA5K,KAAKhJ,OAAO6qB,uBAAuBhd,EAAKL,SAAUK,EAAKyc,eAAgB1B,EAAa1W,WAAWnF,EAAW4C,OAAQiZ,EAAazmB,YAAa0L,EAAK0c,sBAG7IjW,EAAetJ,OAAS,GAAK4d,EAAa1U,iBAAkB,CAE5D,GAAqB,MAAjB1E,EAAQuF,MAER,OADA/L,KAAKoW,UAAU5P,EAAQuF,MAAOlH,EAAKL,UAC5B,CAAEpE,KAAMwf,EAAckC,cAAc,GAG/C,IAAIpgB,EAAS8E,EAAQoF,WAAW,GAChC5L,KAAK+rB,kBAAkBlnB,EAAKL,SAAU9C,GAEtC,IAAIsuB,EAAqB,KACrB9T,EAAelc,KAAK4e,mBAAmB1C,aACvB,MAAhBA,GAAwBA,aAAwB,IAChD8T,EAAqB9T,EAAatV,aAGlClF,EAAOb,YAAckD,EAAWoJ,SAAWyS,GAAgB1D,GAAgB0D,GAAgBoQ,GAC3FhwB,KAAKoW,UAAU,oEAAqEvR,EAAKL,UAK7F,IADA,IAAIiL,EAAiB,KACZxY,EAAI,EAAGA,EAAIqU,EAAetJ,OAAQ/K,IAAK,CACxCA,EAAIyK,EAAO4M,sBACXmB,EAAW/N,EAAO+M,iBAAiBxX,GAC/BA,GAAKyK,EAAO4M,oBAAsB,GAAK5M,EAAO2M,gBAC9CoB,EAAuBA,EAAUlN,cAGzC,IAAIwf,EAAUzW,EAAerU,GAPe,uBAQ5C,YAAe24B,EAAoB34B,GAAnC,+CAAuC,KAA9BolB,EAA8B,QACnCrc,KAAK+e,eAAena,WAAWL,KAAK8X,IATI,kFAWvCrc,KAAK8kB,uBAAuB/C,EAAStS,EAAU5K,EAAKirB,oBAAoB74B,GAAGuN,SAAUK,EAAKirB,oBAAoB74B,KAC/G+I,KAAKoW,UAAU,yBAA2B2L,EAAQ5oB,WAAa,uCAAyCsW,EAAStW,WAAa,sBAAuB0L,EAAKirB,oBAAoB74B,GAAGuN,UAKzL,IAAIyrB,EAAkB,EACtB,GAAIvuB,EAAO2M,cAAe,CACtB,IAAI6hB,EAAyB5kB,EAAetJ,OAASN,EAAO4M,oBAAsB,EAClF2hB,IAAqBC,EAAyB,GAC9ClwB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUk3B,kBAChB3rB,SAAUK,EAAKirB,oBAAoBpuB,EAAO4M,oBAAsB,GAAG9J,SACnE4rB,eAAgBF,EAChBprB,cAAc,EACdsmB,UAAW1pB,EAAOkN,aAAalN,EAAO4M,oBAAsB,GAAGlO,OAKvEJ,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUmpB,WAChB1gB,OAAQA,EACR8C,SAAUK,EAAKL,SACf6d,aAAa,EACbvd,aAA4D,MAA9C8a,EAAayQ,8BAC3B/N,kBAAmBhX,EAAetJ,OAAS,EAAIiuB,KAChD,GAEHP,EAAaC,2BAA4B,EACzCD,EAAa5qB,cAAe,EAYhC,OARkD,MAA9C8a,EAAayQ,+BACbrwB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUq3B,gCAChB9rB,SAAUK,EAAKL,SACfM,cAAc,IACf,GAGA,CAAE1E,KAAMwf,EAAckC,cAAc,KAjqEnD,oCAqqEkBjd,GAEV,GAAmB,MAAfA,EAAKlM,QAAqC,MAAnBkM,EAAK1L,WAAoB,OAAO,KAE3D,IAAIo3B,EAAKvwB,KAAK4hB,YAAY/c,EAAKlM,QAC/B,GAAU,MAAN43B,EAEA,OADAvwB,KAAKoW,UAAU,qCAAsCvR,EAAKL,UACnD,KAGX,KAAM+rB,EAAGnwB,gBAAgB,GAASmwB,EAAGnwB,gBAAgB,GAAemwB,EAAGnwB,gBAAgB,GAMnF,OALe,MAAXmwB,EAAGnwB,KACHJ,KAAKoW,UAAU,kDAAoDvR,EAAK1L,WAAa,IAAK0L,EAAKL,UAE/FxE,KAAKoW,UAAU,mDAAqDma,EAAGnwB,KAAKjH,WAAa,8BAAgC0L,EAAK1L,WAAa,IAAK0L,EAAKL,UAElJ,KAGX,IAAIwK,EAA8CuhB,EAAGnwB,KAErD,GAAI4O,aAAsB,EAAO,CAE7B,IAqBQvG,EArBJN,EAAiB4G,EAAkBC,EAAYhP,KAAK4e,mBAAmB1C,cAEvEsU,EAAqBxhB,EAAW5C,aAAavH,EAAK1L,WAAYgP,GAE9DsoB,EACE,KAKN,OAJoC,MAAhCD,EAAmB/nB,YACnBgoB,EAA2BzhB,EAAWpI,YAAYwF,aAAavH,EAAK1L,WAAYgP,IAGhD,MAAhCqoB,EAAmB/nB,WAA2D,MAAtCgoB,EAAyBhoB,WAC7D+nB,EAAmBvkB,oBAAsBwkB,EAAyBxkB,kBAClEjM,KAAKoW,UAAUoa,EAAmBzkB,MAAOlH,EAAKL,UAE9CxE,KAAKoW,UAAUqa,EAAyB1kB,MAAOlH,EAAKL,UAEjD,CACHpE,KAAM4O,EACN8S,cAAc,KAIkB,MAAhC0O,EAAmB/nB,WACnBzI,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU0rB,cAChBngB,SAAUK,EAAKL,SACflB,eAAgBktB,EAAmB/nB,UAAUrG,MAC7CsiB,oBAAqB8L,EAAmB/nB,UAAUtP,WAClDyrB,eAAe,IAEnBnc,EAAY+nB,EAAmB/nB,YAE/BzI,KAAK+E,eAAe,CAAC,CACjB3E,KAAMnH,EAAUmsB,qBAChB5gB,SAAUK,EAAKL,SACfkiB,SAAU,GACX,CACCtmB,KAAMnH,EAAUwrB,oBAChBjgB,SAAUK,EAAKL,SAEftB,MAAOutB,EAAyB7pB,YAChCtD,eAAgBmtB,EAAyBhoB,UAAUrG,MACnDsiB,oBAAqB+L,EAAyBhoB,UAAUtP,cAE5DsP,EAAYgoB,EAAyBhoB,WAGzCzI,KAAK+rB,kBAAkBlnB,EAAKL,SAAUiE,GAE/B,CACHrI,KAAMqI,EAAUrI,KAChB0hB,cAAerZ,EAAU3H,UAI9B,GAAIkO,aAAsB,EAAa,CAE1C,GAAIA,EAAWnH,iBAAiB,GAgB5B,OAfA7H,KAAKqlB,sBAIW,MAFDrW,EAAWnH,MAAM0V,aAAamT,MAAK,SAAA5S,GAAE,OAAIA,EAAG3kB,YAAc0L,EAAK1L,eAG1E6G,KAAKoW,UAAU,mBAAqBpH,EAAW7V,WAAa,4CAA8C0L,EAAK1L,WAAY0L,EAAKL,UAGpIxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUmoB,cAChB5c,SAAUK,EAAKL,SACfgc,UAAWxR,EAAWnH,MACtBoW,gBAAiBpZ,EAAK1L,aAGnB,CACHiH,KAAM4O,EAAWnH,MACjBia,cAAc,GAIlB,IAAIlX,EAAiBmE,EAAkBC,EAAYhP,KAAK4e,mBAAmB1C,cACvE,EAA2BlN,EAAW5C,aAAavH,EAAK1L,WAAYyR,GACxE,OAA0C,MAAtC,EAAyBnC,WAUrBzI,KAAKqlB,sBACLrlB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUwrB,oBAChBjgB,SAAUK,EAAKL,SACflB,eAAgB,EAAyBmF,UAAUrG,MACnDsiB,oBAAqB,EAAyBjc,UAAUtP,WACxD+J,MAAO,EAAyB0D,cAEpC5G,KAAK+rB,kBAAkBlnB,EAAKL,SAAU,EAAyBiE,WAG5D,CACHrI,KAAM,EAAyBqI,UAAUrI,KACzC0hB,cAAe,EAAyBrZ,UAAU3H,WAGtDd,KAAKoW,UAAU,EAAyBrK,MAAOlH,EAAKL,UAC7C,CACHpE,KAAM4O,EACN8S,cAAc,IAO1B,GAAuB,UAAnBjd,EAAK1L,WAEL,OADA6G,KAAKoW,UAAU,yBAA2Bma,EAAGnwB,KAAKjH,WAAa,sBAAwB0L,EAAK1L,WAAY0L,EAAKL,UACtG,KAGXxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU03B,gBAChBnsB,SAAUK,EAAKL,WAGnB,IAAIosB,EAAqB,IAAIlwB,EAAU,SAAU0O,GAAkB,MAAM,EAAMrL,EAAW4C,QAAQ,EAAM,oBAIxG,OAFA3G,KAAKhJ,OAAO65B,sBAAsBhsB,EAAKL,SAAUosB,GAE1C,CACHxwB,KAAMgP,GACN0S,cAAc,KAj0E9B,sCAy0EoBjd,EAA4BisB,GAExC,IAAI5U,EAAelc,KAAK4e,mBAAmB1C,aAEvC4U,GAA2B,MAAhB5U,IACXA,EAAeA,EAAapY,WAGhC,IAAIitB,EAAgB/wB,KAAK4e,mBAAmBld,OAE5C,OAAoB,MAAhBwa,GAAyC,MAAjB6U,GACxB/wB,KAAKoW,UAAU,eAAiB0a,EAAU,QAAU,QAAU,sDAAuDjsB,EAAKL,UACnH,OAEPxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoB,IAGxB/jB,KAAKsqB,iBAAiBzlB,EAAKL,SAAU0X,GAC9B,CAAE9b,KAAM8b,EAAc4F,cAAc,EAAOgP,QAASA,MA91EvE,2CAm2EyBjsB,GAEjB,IAAIqX,EAAelc,KAAK4e,mBAAmB1C,aAEvC8U,EAAkCnsB,EAAKzE,MAAQnH,EAAUqqB,qBAEzD0N,IAC+B,OAA3B9U,aAAY,EAAZA,EAAcpY,YAA0D,UAArCoY,EAAapY,UAAU3K,YAC1D6G,KAAKoW,UAAU,6GAA8GvR,EAAKL,WAI1I,IAQIysB,EARAF,EAAgB/wB,KAAK4e,mBAAmBld,OAE5C,GAAoB,MAAhBwa,GAAyC,MAAjB6U,IAA0BA,EAAc3vB,cAEhE,OADApB,KAAKoW,UAAU,kHAAmHvR,EAAKL,UAChI,KAMX,GAAIwsB,EAAwB,CAExB,IADAC,EAAwB/U,EAAapY,qBACP,EAE1B,OADA9D,KAAKoW,UAAU,wDAAyDvR,EAAKL,UACtE,CAAEpE,KAAM,KAAM0hB,cAAc,GAEjB,MAAlBmP,IAAwBA,EAAwBjxB,KAAKwe,YAAYF,QAAQ,UAAUle,WAGvF,IADA6wB,EAAwB/U,aACM,EAE1B,OADAlc,KAAKoW,UAAU,uDAAwDvR,EAAKL,UACrE,CAAEpE,KAAM,KAAM0hB,cAAc,GAK3C9hB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoB,IAGxB,IAAIzY,EAAyB,GAE7B,GAAqB,MAAjBzG,EAAKqsB,SAAkB,CACvB,IAAIC,GAA2B,EADR,uBAEvB,YAActsB,EAAKqsB,SAAnB,+CAA6B,KAApBn4B,EAAoB,QACrB8mB,EAAK7f,KAAK4hB,YAAY7oB,GAChB,MAAN8mB,EACAvU,EAAe/G,KAAKsb,EAAGzf,MAEvB+wB,GAAkB,GAPH,kFAUvB,GAAIA,EACA,MAAO,CAAE/wB,KAAMiM,GAAqByV,cAAc,GAI1D,IAAItb,EAAUyqB,EAAexlB,eAAeH,EAAgBvH,EAAWgH,WAKvE,GAHA/K,KAAKhJ,OAAO6qB,uBAAuBhd,EAAKL,SAAUK,EAAKyc,eAAgB2P,EAAe/nB,WAAWnF,EAAWgH,UAAWkmB,EAAe93B,YAClI0L,EAAK0c,sBAEY,MAAjB/a,EAAQuF,MAER,OADA/L,KAAKoW,UAAU5P,EAAQuF,MAAOlH,EAAKL,UAC5B,CAAEpE,KAAMiM,GAAqByV,cAAc,GAGtD,IAAIpgB,EAAS8E,EAAQoF,WAAW,GAEhC5L,KAAK+rB,kBAAkBlnB,EAAKL,SAAU9C,GAEtC,IAAIuuB,EAAkB,EACtB,GAAIvuB,EAAO2M,cAAe,CACtB,IAAI6hB,EAAyB5kB,EAAetJ,OAASN,EAAO4M,oBAAsB,EAClF2hB,IAAqBC,EAAyB,GAC9ClwB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUk3B,kBAChB3rB,SAAUK,EAAKqsB,SAASxvB,EAAO4M,oBAAsB,GAAG9J,SACxD4rB,eAAgBF,EAChBprB,cAAc,EACdsmB,UAAW1pB,EAAOkN,aAAalN,EAAO4M,oBAAsB,GAAGlO,OAcvE,OAVAJ,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUmpB,WAChB1gB,OAAQA,EACR2gB,YAAa2O,EACbxsB,SAAUK,EAAKL,SACf8d,kBAAmBhX,EAAetJ,OAAS,EAAIiuB,KAK5C,CAAE7vB,KAAM,KAAM0hB,cAAc,KAr8E3C,sDAy8EoCjd,GAC5B,IAAIzE,EAAOJ,KAAK4hB,YAAY/c,EAAKusB,SAEjC,GAAY,MAARhxB,EAEJ,OAAKA,EAAK0hB,aAKL1hB,EAAKA,KAAK2B,UAAUiO,KAKzBhQ,KAAK+E,eAAe,CAChB3E,KAAMyE,EAAKzE,KACXoE,SAAUK,EAAKL,SACf6sB,qBAAsBxsB,EAAKuhB,UAAYntB,EAAUyD,aAAgB,EAAI,IAIlE0D,IAXHJ,KAAKoW,UAAU,mGAAqGhW,EAAKA,KAAKjH,WAAY0L,EAAKL,UACxIpE,IANPJ,KAAKoW,UAAU,kIAAmIvR,EAAKL,UAChJpE,KAh9EnB,yCAm+EuByE,GAEf,IAAIumB,EAAYprB,KAAK4hB,YAAY/c,EAAKlM,QAClC24B,EAAYtxB,KAAK4hB,YAAY/c,EAAKzC,OAEtC,GAAiB,MAAbgpB,GAAkC,MAAbkG,EAEzB,OAAMlG,EAAUhrB,gBAAgB,GAKhCJ,KAAKhJ,OAAO65B,sBAAsB,CAC9B3mB,KAAMrF,EAAKL,SAAS0F,KACpBC,OAAQtF,EAAKL,SAAS2F,OAAStF,EAAKL,SAASxC,OAC7CA,OAAQ,GACTopB,EAAUhrB,KAAKmC,aAEbvC,KAAK8kB,uBAAuBwM,EAAUlxB,KAAMgP,KAMjDpP,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU4vB,mBAChBrkB,SAAUK,EAAKL,WAGZ,CAAEpE,KAAkBgrB,EAAUhrB,KAAMmC,YAAauf,aAAcsJ,EAAUtJ,gBAV5E9hB,KAAKoW,UAAU,+FAAiGkb,EAAUlxB,KAAKjH,WAAa,IAAK0L,EAAKzC,MAAMoC,UACrJ,CAAEpE,KAAkBgrB,EAAUhrB,KAAMmC,YAAauf,aAAcsJ,EAAUtJ,iBAZhF9hB,KAAKoW,UAAU,sEAAuEvR,EAAKlM,OAAO6L,UAC3F,QA5+EnB,uCAogFqBA,EAAwBpE,GACrB,MAAZoE,IACAA,EAASxC,OAAS,IAClBwC,EAAW,CACP0F,KAAM1F,EAAS0F,KACfC,OAAQ3F,EAAS2F,OAAS3F,EAASxC,OACnCA,OAAQ,IAGhBhC,KAAKhJ,OAAO65B,sBAAsBrsB,EAAUpE,MA7gFpD,wCAkhFsBoE,EAAwBosB,GAItC,GAFA5wB,KAAKhJ,OAAO65B,sBAAsBrsB,EAAUosB,KAExCA,aAAmB3wB,GAAvB,CAIA,IAAIsxB,EAA+BX,EAAQ/wB,eAAe/H,IAAIkI,KAAKhJ,QAC/C,MAAhBu6B,IACAA,EAAe,GACfX,EAAQ/wB,eAAesF,IAAInF,KAAKhJ,OAAQu6B,IAG5CA,EAAahtB,KAAKC,MAhiF1B,wCAoiFsBK,GAEd,GAAuB,MAAnBA,EAAK1L,WAAoB,OAAO,KAEpC,IAAIojB,EAAWvc,KAAKwxB,kBAAkB3sB,EAAK1L,YAC3C,GAAgB,MAAZojB,EAUA,OATAvc,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoBxH,EAASC,WAGjCxc,KAAK+rB,kBAAkBlnB,EAAKL,SAAU+X,GACtC1X,EAAK0X,SAAWA,EAET,CAAEnc,KAAMmc,EAASnc,KAAM0hB,cAAevF,EAASzb,SAG1D,GAAiB,MAAbd,KAAK0e,KAAc,CACnB,IAAI,EAAW1e,KAAK0e,KAAK7Z,EAAK1L,YAC9B,GAAgB,MAAZ,EAWA,OAVA6G,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUw4B,oBAChBjtB,SAAUK,EAAKL,SACfrL,WAAY0L,EAAK1L,aAGrB6G,KAAK+rB,kBAAkBlnB,EAAKL,SAAU,GACtCK,EAAK0X,SAAW,EAGT,CAAEnc,KAAM,EAASA,KAAM0hB,cAAe,EAAShhB,SAK9D,IAAI2H,EAAYzI,KAAK0xB,cAAc7sB,EAAK1L,WAAY0L,EAAKL,UACzD,GAAiB,MAAbiE,EAAmB,CAEnB,GAAIA,EAAU7H,SAAU,CAIpB,IAHA,IAAI+wB,EAAK3xB,KAAK4e,mBAAmB1C,aAC7B0V,EAAOD,aAAc,EAAeA,EAAKA,EAAG/qB,YAElC,MAAPgrB,IAAqD,GAAtCA,EAAIpuB,WAAW4B,QAAQqD,IACzCmpB,EAAMA,EAAI9tB,UAGd9D,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUwrB,oBAChBjgB,SAAUK,EAAKL,SACftB,MAAO0uB,EACPtuB,eAAgBmF,EAAUrG,MAC1BsiB,oBAAqBjc,EAAUtP,kBAGnC6G,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU0rB,cAChBngB,SAAUK,EAAKL,SACflB,eAAgBmF,EAAUrG,MAC1BsiB,oBAAqBjc,EAAUtP,WAC/ByrB,eAAe,IAOvB,OAFA5kB,KAAK+rB,kBAAkBlnB,EAAKL,SAAUiE,GAE/B,CAAErI,KAAMqI,EAAUrI,KAAM0hB,cAAerZ,EAAU3H,SAG5D,IAAI+wB,EAAc7xB,KAAKwe,YAAYF,QAAQzZ,EAAK1L,YAChD,GAAmB,MAAf04B,EAAqB,CACrB,IAAI3uB,EAAQ2uB,EAAYzxB,KACxB,OAAM8C,aAAiB,GAASA,aAAiB,GAG7ClD,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU64B,sBAChBttB,SAAUK,EAAKL,SACftB,MAAOA,IAGXlD,KAAK+rB,kBAAkBlnB,EAAKL,SAAUtB,GAE/B,CACH9C,KAAM8C,aAAiB,EAAQA,EAAM0D,YAAc1D,EACnD4e,cAAc,KAZlB9hB,KAAKoW,UAAU,WAAalT,EAAM/J,WAAa,4CAA6C0L,EAAKL,UAgB9F,CACHpE,KAAM8C,EACN4e,cAAc,IAItB9hB,KAAKoW,UAAU,kBAAoBvR,EAAK1L,WAAa,2BAA4B0L,EAAKL,YApoF9F,wCAwoFsBrL,GAGd,IAFA,IAAIkjB,EAAKrc,KAAK4e,mBAED,MAANvC,GAAY,CAEf,IAAIE,EAAWF,EAAGJ,YAAYnkB,IAAIqB,GAElC,GAAgB,MAAZojB,GAAyC,MAArBA,EAASC,SAC7B,OAAOD,EAGXF,EAAKA,EAAGF,OAGZ,OAAO,OAtpFf,oCA0pFkBhjB,EAAoBqL,GAC9B,IAAI0X,EAAelc,KAAK4e,mBAAmB1C,aAC3C,GAAoB,MAAhBA,EACA,OAAO,KAGX,IAAIzT,EAAYyT,EAAa9P,aAAajT,EAAY4K,EAAWoJ,SACjE,GAA2B,MAAvB1E,EAAUA,UAAmB,OAAOA,EAAUA,UAElD,GAAIyT,aAAwB,EAAO,CAC/B,IAAI6V,EAAkB7V,EAAatV,YAAYwF,aAAajT,EAAY4K,EAAWoJ,SACnF,GAAiC,MAA7B4kB,EAAgBtpB,UAAmB,OAAOspB,EAAgBtpB,UAKlE,OAAO,OA1qFf,iCA6qFe5D,GAEP,IAAImtB,EAAwB,KAE5B,GAAmB,MAAfntB,EAAKlM,OAAgB,CAIrB,IAAIs5B,EAAYjyB,KAAK4e,mBAAmB1C,aACxC,GAAiB,MAAb+V,EAgBA,OAFAjyB,KAAKoW,UAAU,6BAA+BvR,EAAK1L,WAC/C,uEAAwE0L,EAAKL,UAC1E,KAdPxE,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAU6qB,yBAChBtf,SAAUK,EAAKL,SACfuf,mBAAoB,IAGxBiO,EAAa,CACT5xB,KAAM6xB,EACNnQ,cAAc,QAUtBkQ,EAAahyB,KAAK4hB,YAAY/c,EAAKlM,QAGvC,GAAkB,MAAdq5B,EAAoB,OAAO,KAE/B,KACKA,EAAW5xB,gBAAgB,GAAW4xB,EAAW5xB,gBAAgB,GACjE4xB,EAAW5xB,gBAAgB,GAAe4xB,EAAW5xB,gBAAgB,IAQtE,OANuB,MAAnB4xB,EAAW5xB,KACXJ,KAAKoW,UAAU,kDAAmDvR,EAAKL,UAEvExE,KAAKoW,UAAU,uBAAyB4b,EAAW5xB,KAAKjH,WAAa,4BAA6B0L,EAAKL,UAGpG,KAGX,IAsBIgC,EAtBAwI,EAAmDgjB,EAAW5xB,KAE9D8xB,EAA+BlyB,KAAK+e,eAAena,WAAW5C,OAE9DsJ,EAAyB,GACzBskB,EAAqC,GAErCC,EAAgB7vB,KAAK+e,eAAena,WACxC,GAAqB,MAAjBC,EAAKqsB,SAAkB,4BACvB,YAAcrsB,EAAKqsB,SAAnB,+CAA6B,KAApBn4B,EAAoB,QACrBg3B,EAAiBF,EAAc7tB,OAC/B2f,EAAW3hB,KAAK4hB,YAAY7oB,GAChC62B,EAAoBrrB,KAAKsrB,EAAc9X,OAAOgY,EAAgBF,EAAc7tB,OAAS+tB,IACrE,MAAZpO,EACArW,EAAe/G,KAAKuO,IAEpBxH,EAAe/G,KAAKod,EAASvhB,OARd,mFAe3B,GAAI4O,aAAsB,EACtBxI,EAAUwI,EAAWlD,6BAA6BjH,EAAK1L,WACnDmS,GAAgB,OACjB,CACH,IAAIV,EAAiBmE,EAAkBC,EAAYhP,KAAK4e,mBAAmB1C,cAE3E1V,EAAUwI,EAAWlD,6BAA6BjH,EAAK1L,WACnDmS,GAAgB,EAAOV,GAM/B,GAFA5K,KAAKhJ,OAAO6qB,uBAAuBhd,EAAKL,SAAUK,EAAKyc,eAAgBtS,EAAW9F,WAAWnF,EAAWoJ,QAAStI,EAAK1L,YAAa0L,EAAK0c,sBAEnH,MAAjB/a,EAAQuF,MAER,OADA/L,KAAKoW,UAAU5P,EAAQuF,MAAOlH,EAAKL,UAC5B,CAAEpE,KAAMiM,GAAqByV,cAAc,GAGtD,IAAIpgB,EAAS8E,EAAQoF,WAAW,GAEhC5L,KAAK+rB,kBAAkBlnB,EAAKL,SAAU9C,GAGlCA,EAAOd,UAAYoO,aAAsB,GAAkC,eAAzBA,EAAW7V,aAC7D6G,KAAKoW,UAAU,0HAA4HpH,EAAW7V,WAAa,IAAMuI,EAAOvI,WAAa,SAAU0L,EAAKL,SAAU,QACtNxE,KAAKmyB,iBAAiBD,EAA8B,CAAC,CACjD9xB,KAAMnH,EAAUmsB,qBAChB5gB,SAAUK,EAAKL,SACfkiB,SAAU,GAEd,CACItmB,KAAMnH,EAAU64B,sBAChBttB,SAAUK,EAAKL,SACftB,MAAO8L,MAMf,IADA,IAAIS,EAAiB,KACZxY,EAAI,EAAGA,EAAIqU,EAAetJ,OAAQ/K,IAAK,CACxCA,EAAIyK,EAAO4M,sBACXmB,EAAW/N,EAAO+M,iBAAiBxX,GAC/BA,GAAKyK,EAAO4M,oBAAsB,GAAK5M,EAAO2M,gBAC9CoB,EAAuBA,EAAUlN,cAGzC,IAAIwf,EAAUzW,EAAerU,GAPe,uBAQ5C,YAAe24B,EAAoB34B,GAAnC,+CAAuC,KAA9BolB,EAA8B,QACnCrc,KAAK+e,eAAena,WAAWL,KAAK8X,IATI,kFAWvCrc,KAAK8kB,uBAAuB/C,EAAStS,EAAU5K,EAAKqsB,SAASj6B,GAAGuN,SAAUK,EAAKqsB,SAASj6B,KACzF+I,KAAKoW,UAAU,yBAA2B2L,EAAQ5oB,WAAa,uCAAyCsW,EAAStW,WAAa,sBAAuB0L,EAAKqsB,SAASj6B,GAAGuN,UAgB9K,IAAIyrB,EAAkB,EACtB,GAAIvuB,EAAO2M,cAAe,CACtB,IAAI6hB,EAAyB5kB,EAAetJ,OAASN,EAAO4M,oBAAsB,EAClF2hB,IAAqBC,EAAyB,GAC9ClwB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUk3B,kBAChB3rB,SAAUK,EAAKqsB,SAASxvB,EAAO4M,oBAAsB,GAAG9J,SACxD4rB,eAAgBF,EAChBprB,cAAc,EACdsmB,UAAW1pB,EAAOkN,aAAalN,EAAO4M,oBAAsB,GAAGlO,OAIvE,GAAIsB,EAAOb,YAAckD,EAAW4C,OAAQ,CAExC,IAAIyrB,GAAU,EACVlW,EAAelc,KAAK4e,mBAAmB1C,aACvB,MAAhBA,EACAkW,GAAU,EAENlW,GAAgBlN,GACdkN,aAAwB,GAASA,EAAa7V,WAAWjB,QAAmB4J,GAAc,IAExFojB,EADA1wB,EAAOb,YAAckD,EAAWoJ,SAGtB+O,EAAahN,gBAAqCF,IAInEojB,GACDpyB,KAAKoW,UAAU,eAAiB1U,EAAOvI,WAAa,sDAAuD0L,EAAKL,UA+BxH,OA3BI9C,EAAOd,UAA+B,MAAnBoxB,EAAW5xB,MAC7B4xB,EAAW5xB,gBAAgB,GAC3B4xB,EAAW5xB,KAAKyH,iBAAiB,GAElC7H,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUo5B,gBAChB3wB,OAAQA,EACR8C,SAAUK,EAAKL,SACfM,cAAc,EACdwd,kBAAmBhX,EAAetJ,OAAS,EAAIiuB,KAInDjwB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUmpB,WAChB1gB,OAAQA,EACR8C,SAAUK,EAAKL,SACf6d,YAAmC,MAAtB2P,EAAWlB,SAA0BkB,EAAWlB,QAC7DhsB,cAAc,EACdwd,kBAAmBhX,EAAetJ,OAAS,EAAIiuB,KAMvDjwB,KAAKsqB,iBAAiBzlB,EAAK0c,qBAAsB7f,EAAO2iB,iBAEjD,CAAEjkB,KAAMsB,EAAO2iB,gBAAiBvC,cAAc,KAn3F7D,mCAu3FiBjd,GAET,IAAIzE,EAEJ,OAAQyE,EAAKytB,cACT,KAAKr5B,EAAUG,gBACXgH,EAAOgP,GACP,MACJ,KAAKnW,EAAUK,gBACX8G,EAAOkQ,GACP,MACJ,KAAKrX,EAAUI,sBACX+G,EAAO4P,GACP,MACJ,KAAK/W,EAAUM,eACX6G,EAAOiM,GACPrM,KAAKsqB,iBAAiBzlB,EAAKL,SAAUpE,GACrC,MACJ,KAAKnH,EAAUO,aACX4G,EAAO8Q,GACP,MACJ,KAAKjY,EAAUqC,YACX8E,EAAOoK,GAWf,OAPAxK,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUwvB,aAChB8J,SAAUnyB,EACVoE,SAAUK,EAAKL,SACftM,MAAO2M,EAAKmB,WAGT,CAAE5F,KAAMA,EAAM0hB,cAAc,KAx5F3C,sCA45FoBjd,GAEZ,IAAI2tB,EAAeC,EAAcC,oBAAoBttB,QAAQP,EAAKuhB,WAAa,EAE/E,GAAIvhB,EAAKuhB,UAAYntB,EAAUuF,gBAC3B,OAAOwB,KAAK2yB,uBAAuB9tB,GAGvC,IAAI+tB,EAAW5yB,KAAK4hB,YAAY/c,EAAKlC,aAAc6vB,GAE/CK,EAA8B7yB,KAAK+e,eAAena,WAAW5C,OAE7D8wB,EAAqB,KACrBjuB,EAAKuhB,UAAYntB,EAAUwE,IAC3Bq1B,EAAqB9yB,KAAK+e,eAAejY,aAAa4lB,eAAezzB,EAAU0uB,2BAA4B9iB,EAAKlC,aAAa6B,SAAUxE,MAChI6E,EAAKuhB,UAAYntB,EAAUyE,KAClCo1B,EAAqB9yB,KAAK+e,eAAejY,aAAa4lB,eAAezzB,EAAU2uB,0BAA2B/iB,EAAKlC,aAAa6B,SAAUxE,OAG1I,IAAI+yB,EAAY/yB,KAAK4hB,YAAY/c,EAAKjC,eAEtC,GAAgB,MAAZgwB,GAAqC,MAAjBA,EAASxyB,MAA6B,MAAb2yB,GAAuC,MAAlBA,EAAU3yB,KAAc,OAAO,KAErG,GAAIoyB,EAAc,CACd,IAAKxyB,KAAK8kB,uBAAuBiO,EAAU3yB,KAAMwyB,EAASxyB,KAAMyE,EAAKL,SAAUK,EAAKlC,cAEhF,OADA3C,KAAKoW,UAAU,yBAA2B2c,EAAU3yB,KAAKjH,WAAa,4EAA8Ey5B,EAASxyB,KAAKjH,WAAa,6BAA8B0L,EAAKL,UAC3MouB,EAGNA,EAAS9Q,cACV9hB,KAAKoW,UAAU,4GAA6GvR,EAAKL,UAGrI,IAAIoiB,EAAiC,CAEjCxmB,KAAMyE,EAAKuhB,SACX5hB,SAAUK,EAAKL,SACfM,cAAc,EACdkgB,mBAAmB,GAMvB,OAHAhlB,KAAK+E,eAAe6hB,GAGbgM,EAIP,GAAI/tB,EAAKlC,aAAavC,MAAQnH,EAAUE,YAA4C,MAA9B0L,EAAKlC,aAAa4Z,SAAkB,CACtF,IAAI1Y,EAAIgB,EAAKlC,aAAa4Z,SACL,MAAjB1Y,EAAE+kB,aAAwB/kB,EAAE+kB,cAC5B/kB,EAAE0jB,0BAA2B,EAC7BvnB,KAAKoW,UAAU,gBAAkBvS,EAAE1K,WAAa,oDAAqD0L,EAAKL,SAAU,SAI5H,IAAIwuB,EAAaJ,EAASxyB,KAAK6yB,cAAcpuB,EAAKuhB,SAAU2M,EAAU3yB,MAElE8yB,EAAgBN,EAASxyB,KAAT,YAChB+yB,EAAiBJ,EAAU3yB,KAAV,YAErB,GAAkB,MAAd4yB,IAAwC,MAAjBE,GAA2C,MAAlBC,GAAyB,CACzE,IAAIC,EAAqC,MAAjBF,EAAwB,CAACN,EAASxyB,MAAQ8yB,EAC9DG,EAAuC,MAAlBF,EAAyB,CAACJ,EAAU3yB,MAAQ+yB,EAFI,uBAIzE,YAAeC,EAAf,+CAA0B,KAAjBE,EAAiB,+BACtB,YAAeD,EAAf,+CAA2B,KAAlBjP,EAAkB,QAEvB,GAAkB,OADlB4O,EAAaM,EAAGL,cAAcpuB,EAAKuhB,SAAUhC,IACrB,CACpBwO,EAASxyB,KAAOkzB,EAChBP,EAAU3yB,KAAOgkB,EACjB,QANc,kFAStB,GAAkB,MAAd4O,EAAoB,OAb6C,mFAkC7E,GAhBkB,MAAdA,GAAsBnuB,EAAKuhB,UAAYntB,EAAUoD,OAC7Cu2B,EAASxyB,gBAAgB,GAAS2yB,EAAU3yB,MAAQiM,IACpDrM,KAAKmyB,iBAAiBU,EAA6B7yB,KAAK8lB,qBAAqB8M,EAASxyB,KAAMyE,EAAKlC,aAAa6B,WAC9GwuB,EAAa3mB,IACN0mB,EAAU3yB,gBAAgB,GAASwyB,EAASxyB,MAAQiM,KAC3DrM,KAAK+E,eAAe/E,KAAK8lB,qBAAqBiN,EAAU3yB,KAAMyE,EAAKlC,aAAa6B,WAChFwuB,EAAa3mB,KAKjBxH,EAAKuhB,WAAY,CAACntB,EAAUwE,IAAKxE,EAAUyE,MAC3CsC,KAAK4lB,+BAA+B/gB,EAAKlC,cACzC3C,KAAK4lB,+BAA+B/gB,EAAKjC,gBAG3B,MAAdowB,EAAoB,CACpB,IAGIO,EAHe,CAACt6B,EAAUuE,UAAWvE,EAAUiF,IAGxBkH,QAAQP,EAAKuhB,UAqBxC,OApBImN,GAAW,GAAKX,EAASxyB,MAAQkQ,IAAwByiB,EAAU3yB,MAAQkQ,GAC3EtQ,KAAKoW,UAAU,iBAAmBld,EAAkB2L,EAAKuhB,UAAY,oCAAsCwM,EAASxyB,KAAKjH,WAAa,QAAU45B,EAAU3yB,KAAKjH,WAAa,6DAJzJ,CAAC,+BAAgC,iCAIwMo6B,GAAW,IAAK1uB,EAAKL,SAAU,QACvR,CACI+E,MAAO,YALG,CAAC,MAAO,MAKmBgqB,GAAW,oBAAsBr6B,EAAkB2L,EAAKuhB,UAC7FvD,cAAe,SAACC,GACZ,MAAO,CACH,CACIC,SAAUD,EACVE,KAAM,CACFha,MAAO,CAAE4O,gBAAiB/S,EAAKL,SAAS0F,KAAM4N,YAAajT,EAAKL,SAAS2F,OAAQwN,cAAe9S,EAAKL,SAAS0F,KAAM2N,UAAWhT,EAAKL,SAAS2F,QAC7IyL,KAAM1c,EAAkB2L,EAAKuhB,gBAQrDpmB,KAAKoW,UAAU,iBAAmBld,EAAkB2L,EAAKuhB,UAAY,oCAAsCwM,EAASxyB,KAAKjH,WAAa,QAAU45B,EAAU3yB,KAAKjH,WAAa,oBAAqB0L,EAAKL,UAEnMouB,EAeX,OAXA5yB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUktB,SAChByM,SAAUA,EAASxyB,KACnBgmB,SAAUvhB,EAAKuhB,SACf5hB,SAAUK,EAAKL,WAGO,MAAtBsuB,GACA9yB,KAAK+e,eAAejY,aAAakmB,oBAAoB,EAAG8F,GAGrD,CAAE1yB,KAAM4yB,EAAYlR,cAAc,KAniGrD,6CAyiG2Bjd,GAEnB,IAAI+tB,EAAW5yB,KAAK4hB,YAAY/c,EAAKlC,cAErC,GAAgB,MAAZiwB,GAEA5yB,KAAK8kB,uBAAuB8N,EAASxyB,KAAMkQ,GAAsB,KAAMzL,EAAKlC,cAAe,CAE3F,IAAIC,EAAgBiC,EAAKjC,cACzB,GAAqB,MAAjBA,EAAuB,CACvB,GAAIA,EAAcxC,MAAQnH,EAAUktB,UAAYvjB,EAAcwjB,UAAYntB,EAAUyF,MAE7E,CACH,IAAIspB,EAAKhoB,KAAK+e,eAAejY,aACzB0sB,EAAoBxL,EAAG0E,eAAezzB,EAAUyuB,YAAa7iB,EAAKL,SAAUxE,MAC5EyzB,EAAYzzB,KAAK4hB,YAAYhf,EAAcD,cAC3C8pB,EAAWzE,EAAG0E,eAAezzB,EAAU8tB,WAAYnkB,EAAcD,aAAa6B,SAAUxE,MAC5FgoB,EAAGgF,oBAAoB,EAAGwG,GAC1B,IAAIE,EAAa1zB,KAAK4hB,YAAYhf,EAAcA,eAChDolB,EAAGgF,oBAAoB,EAAGP,GAE1B,IAAIrsB,EAAOqzB,EAAUrzB,KAKrB,OAJIA,GAAQszB,EAAWtzB,MAAQA,EAAK2B,UAAU2xB,EAAWtzB,QACrDA,EAAOszB,EAAWtzB,MAGf,CACHA,KAAMA,EACN0hB,cAAc,GAjBlB9hB,KAAKoW,UAAU,gGAAiGvR,EAAKL,cApjGzI,qCA+kGmBK,GACX,IAAI+tB,EAAW5yB,KAAK4hB,YAAY/c,EAAKusB,SAErC,GAAgB,MAAZwB,GAAqC,MAAjBA,EAASxyB,KAEjC,OAAIyE,EAAKuhB,UAAYntB,EAAUkD,OACtBy2B,EAASxyB,KAAK2B,UAAUiO,IAO7BnL,EAAKuhB,UAAYntB,EAAU0E,KACrBi1B,EAASxyB,MAAQkQ,IACnBtQ,KAAK4lB,+BAA+B/gB,EAAKusB,SACzCpxB,KAAKoW,UAAU,kCAAoCwc,EAASxyB,KAAKjH,WAAa,oBAAqB0L,EAAKL,UACjGouB,IAKf5yB,KAAK+E,eAAe,CAChB3E,KAAMnH,EAAUsvB,QAChBnC,SAAUvhB,EAAKuhB,SACf5hB,SAAUK,EAAKL,WAGZouB,IArBC5yB,KAAKoW,UAAU,kCAAoCwc,EAASxyB,KAAKjH,WAAa,oBAAqB0L,EAAKL,UACjGouB,Q,6BAvlGvB,K,gSAEW,GAAAF,oBAAsB,CAACz5B,EAAUiE,WAAYjE,EAAUkE,eAAgBlE,EAAUmE,gBACxFnE,EAAUoE,yBAA0BpE,EAAUqE,mBAAoBrE,EAAU2E,aAAc3E,EAAU6E,YACpG7E,EAAU4E,aAAc5E,EAAU8E,mBAAoB9E,EAAU+E,oBAAqB/E,EAAUgF,6BCd5F,IAAM,GAAb,WAsDI,WAAoB01B,I,4FAAwB,SAAxB,KAAAA,kBAfpB,KAAAC,UAAY,EAQZ,KAAAC,SAAkB,CACdrvB,SAAU,CAAE0F,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACxCyS,GAAIxb,EAAUmG,gBACdlH,MAAO,0BAumCX,KAAA47B,sBAAqC,CAAC76B,EAAUqD,eAAgBrD,EAAUsD,SAAUtD,EAAUoD,KAC9FpD,EAAUkD,MAAOlD,EAAUiD,IAAKjD,EAAUmD,OAAQnD,EAAUwF,UAAWxF,EAAU2C,c,UA1pCrF,O,EAAA,G,EAAA,6BA0DUvE,GAOF,GALA2I,KAAKhJ,OAASK,EAEd2I,KAAK0T,UAAYrc,EAAEqc,UACnB1T,KAAK2T,UAAY,GAEY,GAAzB3T,KAAK0T,UAAU1R,OAKf,OAJAhC,KAAKhJ,OAAOkuB,eAAiB,GAC7BllB,KAAKhJ,OAAOyoB,oBAAsB,GAClCzf,KAAKhJ,OAAO+8B,UAAY,QACxB/zB,KAAKhJ,OAAOid,OAAO,GAAKjU,KAAK2T,WAIjC3T,KAAK8T,IAAM,EACX9T,KAAKg0B,sBAELh0B,KAAK+zB,UAAY,GAEjB,IAAI5U,EAAYnf,KAAK0T,UAAU1T,KAAK0T,UAAU1R,OAAS,GACvDhC,KAAK6zB,SAASrvB,SAAW,CAAE0F,KAAMiV,EAAU3a,SAAS0F,KAAMC,OAAQgV,EAAU3a,SAAS2F,OAASgV,EAAU3a,SAASxC,OAAQA,OAAQ,GAEjI,IAAIiyB,EAAWj0B,KAAKk0B,YACpBl0B,KAAKhJ,OAAOkuB,eAAiB+O,EAASE,eACtCn0B,KAAKhJ,OAAOyoB,oBAAsBwU,EAASG,mBAC3Cp0B,KAAKhJ,OAAOuuB,eAAiB0O,EAAS1O,eACtCvlB,KAAKhJ,OAAO+8B,UAAY/zB,KAAK+zB,UAE7B/zB,KAAKhJ,OAAOid,OAAO,GAAKjU,KAAK2T,YAvFrC,4CA6FQ3T,KAAK2f,GAAK,GAEV,IAAK,IAAI1oB,EAAI,EAAGA,EAAI+I,KAAK4zB,UAAW38B,IAAK,CAIrC,IAFA,IAAImgB,EAAepX,KAAK6zB,WAIhB7zB,KAAK8T,KAAO9T,KAAK0T,UAAU1R,SAFtB,CAIT,IAAIgX,EAAShZ,KAAK0T,UAAU1T,KAAK8T,KAKjC,GAJGkF,EAAOvE,IAAMxb,EAAUkG,UACtBa,KAAKq0B,YAAcrb,GAGnBA,EAAOvE,IAAMxb,EAAUgG,SAAW+Z,EAAOvE,IAAMxb,EAAU8F,OAASia,EAAOvE,IAAMxb,EAAUkG,QAAS,CAClGiY,EAAQ4B,EACe,MAApBhZ,KAAKq0B,cACJjd,EAAMkd,cAAgBt0B,KAAKq0B,YAC3Br0B,KAAKq0B,YAAc,MAEvB,MAGJr0B,KAAK8T,MAIT9T,KAAK2f,GAAGpb,KAAK6S,GAETngB,EAAI+I,KAAK4zB,UAAY,GACrB5zB,KAAK8T,MAKb9T,KAAKu0B,IAAMv0B,KAAK2f,GAAG,GACnB3f,KAAKyU,GAAKzU,KAAKu0B,IAAI9f,GACnBzU,KAAKwE,SAAWxE,KAAKu0B,IAAI/vB,WAnIjC,kCAyIQ,IAAI4S,EAGJ,IAFApX,KAAKmf,UAAYnf,KAAKu0B,MAET,CAIT,GAFAv0B,KAAK8T,MAED9T,KAAK8T,KAAO9T,KAAK0T,UAAU1R,OAAQ,CACnCoV,EAAQpX,KAAK6zB,SACb,MAQJ,IALAzc,EAAQpX,KAAK0T,UAAU1T,KAAK8T,MACnBW,IAAMxb,EAAUkG,UACrBa,KAAKq0B,YAAcjd,GAGnBA,EAAM3C,IAAMxb,EAAUgG,SAAWmY,EAAM3C,IAAMxb,EAAU8F,OAASqY,EAAM3C,IAAMxb,EAAUkG,QAAS,CAC/FiY,EAAMkd,cAAgBt0B,KAAKq0B,YAC3Br0B,KAAKq0B,YAAc,KACnB,OAKR,IAAK,IAAIp9B,EAAI,EAAGA,EAAI+I,KAAK4zB,UAAY,EAAG38B,IACpC+I,KAAK2f,GAAG1oB,GAAK+I,KAAK2f,GAAG1oB,EAAI,GAG7B+I,KAAK2f,GAAG3f,KAAK4zB,UAAY,GAAKxc,EAE9BpX,KAAKu0B,IAAMv0B,KAAK2f,GAAG,GACnB3f,KAAKyU,GAAKzU,KAAKu0B,IAAI9f,GACnBzU,KAAKwE,SAAWxE,KAAKu0B,IAAI/vB,WA1KjC,gCA8KcoR,GAA4F,IAA9EC,EAA8E,uDAArD,QAASrR,EAA4C,uCAAnBgf,EAAmB,uCAClF,MAAZhf,IAAkBA,EAAW7M,OAAO8uB,OAAO,GAAIzmB,KAAKwE,WACxDxE,KAAK2T,UAAUpP,KAAK,CAChBqR,KAAMA,EACNpR,SAAUA,EACVgf,SAAUA,EACV1N,MAAOD,MApLnB,6BAwLWpB,GAA0E,IAA3D+f,IAA2D,yDAArCC,EAAqC,wDAC7E,GAAIz0B,KAAKyU,IAAMA,EAAI,CACf,GAAIA,GAAMxb,EAAUwF,WAAauB,KAAKyU,IAAMxb,EAAUmG,gBAClD,OAAO,EAGX,IAAIoF,EAAyBxE,KAAKu0B,IAAI/vB,SAClCiQ,GAAMxb,EAAUwF,WAA+B,MAAlBuB,KAAKmf,WAE9Bnf,KAAKmf,UAAU3a,SAAS0F,KAAO1F,EAAS0F,OACxC1F,EAAW,CACP0F,KAAMlK,KAAKmf,UAAU3a,SAAS0F,KAC9BC,OAAQnK,KAAKmf,UAAU3a,SAAS2F,OAASnK,KAAKmf,UAAU3a,SAASxC,OACjEA,OAAQ,IAKpB,IAAIwhB,EAAqB,KA6BzB,OA5BI/O,GAAMxb,EAAUwF,WAAauB,KAAKmf,UAAU3a,SAAS0F,KAAOlK,KAAKu0B,IAAI/vB,SAAS0F,OAC7ElK,KAAK00B,gBAAgB10B,KAAKmf,UAAU1K,MAErC+O,EAAW,CACPja,MAAO,4BACPsZ,cAAe,SAACC,GACZ,MAAO,CAAC,CACJC,SAAUD,EACVE,KAAM,CACFha,MAAO,CACH4O,gBAAiBpT,EAAS0F,KAAM4N,YAAatT,EAAS2F,OAAQwN,cAAenT,EAAS0F,KAAM2N,UAAWrT,EAAS2F,OAChHsC,QAAS,GACTiX,SAAU/a,OAAOgb,eAAeC,OAEpChO,KAAM,SAOlB6e,GACAz0B,KAAKhJ,OAAO29B,KAAKC,oBAAoBC,SAASrwB,EAAUxE,KAAKhJ,SAKrEgJ,KAAKoW,UAAU,kBAAoBld,EAAkBub,GAAM,sBAAwBvb,EAAkB8G,KAAKyU,IAAK,QAASjQ,EAAUgf,IAC3H,EAOX,OAJIgR,GACAx0B,KAAK80B,aAGF,IA9Of,sCAgPoBrgB,GACZ,GAAIA,GAAMxb,EAAUiD,IAAK,OAAO,EADP,2BAEzB,YAAe64B,EAAOC,mBAAtB,+CAA0C,KAAjCC,EAAiC,+BACtC,YAAqBA,EAArB,+CACI,GAAIxgB,GADiB,QACD,OAAO,EAFO,oFAFjB,qFAhPjC,8BA0PQ,OAAOzU,KAAKu0B,KAAOv0B,KAAK6zB,WA1PhC,iCA6Pezc,GAEP,OAAK3T,MAAMkjB,QAAQvP,GAIZA,EAAMhS,QAAQpF,KAAKyU,KAAO,EAHtBzU,KAAKyU,IAAM2C,IAhQ9B,2CAwQQ,OAAOzf,OAAO8uB,OAAO,GAAIzmB,KAAKwE,YAxQtC,6CA6QQ,IAAIA,EAAWxE,KAAKk1B,qBAIpB,OAHA1wB,EAAS2F,OAAS3F,EAAS2F,OAASnK,KAAKwE,SAASxC,OAClDwC,EAASxC,OAAS,EAEXwC,IAjRf,kCAmSQ,IATA,IAAI+a,EAAwB,GACxB4V,EAA6B,GAE7B5P,EAA+B,CAC/Bpb,OAAQ,EACRD,KAAM,IACNlI,OAAQ,IAGJhC,KAAKo1B,SAAS,CAElB,IAAIC,EAASr1B,KAAK8T,IAElB,GAAI9T,KAAKs1B,WAAWP,EAAOQ,6BAA8B,CACrD,IAAI9tB,EAAKzH,KAAKw1B,uBACJ,MAAN/tB,IAAY0tB,EAAmBA,EAAiBjtB,OAAOT,QACxD,CACH,IAAI4U,EAAKrc,KAAKy1B,iBAEJ,MAANpZ,IACAkD,EAAcA,EAAYrX,OAAOmU,IAErCkJ,EAAiBvlB,KAAKk1B,qBAItBl1B,KAAK8T,KAAOuhB,IACZr1B,KAAK8T,MACL9T,KAAKg0B,uBAKb,MAAO,CACHG,eAAgB5U,EAChB6U,mBAAoBe,EACpB5P,eAAgBA,KA9T5B,kDAoUgClJ,GAExB,IAAGrc,KAAK2zB,gBAER,GAAKtX,EAAGjc,MAAQnH,EAAUktB,UAAY4O,EAAOrC,oBAAoBttB,QAAQiX,EAAG+J,UAAY,EAAI,CACxF,IAAIptB,EAAI,eACR,OAAQqjB,EAAG+J,UACP,KAAKntB,EAAUoD,KAAMrD,EAAI,eAAgB,MACzC,KAAKC,EAAUkD,MAAOnD,EAAI,mBAAoB,MAC9C,KAAKC,EAAUqD,eAAgBtD,EAAI,kBAAmB,MACtD,KAAKC,EAAUsD,SAAUvD,EAAI,oBAEjCA,GAAK,cAAgBE,EAAkBmjB,EAAG+J,UAAY,IACtDpmB,KAAKoW,UAAL,mBAA2Bpd,EAA3B,qGACI,OAAQqjB,EAAG7X,cAEf,CAACvL,EAAUsvB,QAAStvB,EAAUwvB,aAC9BxvB,EAAUE,WAAYF,EAAU4vB,oBAAoBzjB,QAAQiX,EAAGjc,OAAS,GACxEJ,KAAKoW,UAAU,yHACX,OAAQiG,EAAG7X,YAvV3B,uCA2VkD,IAA/BkxB,IAA+B,yDAEtCC,EAA2B,KAE/B,OAAQ31B,KAAKyU,IACT,KAAKxb,EAAU0C,YACf,KAAK1C,EAAUE,WACf,KAAKF,EAAUW,YACf,KAAKX,EAAUY,aACf,KAAKZ,EAAUsC,aACf,KAAKtC,EAAUO,aACf,KAAKP,EAAUG,gBACf,KAAKH,EAAUM,eACf,KAAKN,EAAUK,gBACf,KAAKL,EAAUI,sBACf,KAAKJ,EAAUa,WACX,IAAI87B,EAAM51B,KAAK61B,iCACXH,GAAiB11B,KAAK81B,OAAO78B,EAAUwF,WAAW,GAAM,GAC5Dk3B,EAAgBC,EAChB,MACJ,KAAK38B,EAAU8C,iBACX,IAAI6I,EAAwB,GACxB+V,EAAe3a,KAAKk1B,qBAGxB,IAFAl1B,KAAK80B,YAEE90B,KAAKyU,IAAMxb,EAAU+C,mBAAqBgE,KAAKyU,IAAMxb,EAAUmG,iBAC/D21B,EAAOQ,4BAA4BnwB,QAAQpF,KAAKyU,IAAM,GACzD7P,EAAaA,EAAWsD,OAAOlI,KAAKy1B,kBAExC,IAAI7a,EAAa5a,KAAKk1B,qBACtBta,EAAWzQ,OAASyQ,EAAWzQ,OAASyQ,EAAW5Y,OACnD4Y,EAAW5Y,OAAS,EACpBhC,KAAK81B,OAAO78B,EAAU+C,mBAEtB25B,EAAgB,CAAC,CACbv1B,KAAMnH,EAAUmqB,UAChB5e,SAAUmW,EACVC,WAAYA,EACZhW,WAAYA,IAEhB,MAEJ,KAAK3L,EAAUyB,aACXi7B,EAAgB31B,KAAK+1B,aACrB,MACJ,KAAK98B,EAAU2B,WACX+6B,EAAgB31B,KAAKg2B,WACrB,MACJ,KAAK/8B,EAAU0B,UACXg7B,EAAgB31B,KAAKi2B,UACrB,MACJ,KAAKh9B,EAAU+B,UACX26B,EAAgB31B,KAAKk2B,UACrB,MACJ,KAAKj9B,EAAUkC,cACXw6B,EAAgB31B,KAAKm2B,cACrB,MACJ,KAAKl9B,EAAUwC,aACf,KAAKxC,EAAUyC,eACXi6B,EAAgB31B,KAAKo2B,aACrB,MACJ,KAAKn9B,EAAU4B,cACX86B,EAAgB31B,KAAKq2B,cACrB,MACJ,KAAKp9B,EAAUmC,aACX,IAAIoJ,EAAWxE,KAAKk1B,qBACpBl1B,KAAK80B,YACLa,EAAgB,CAAC,CACbv1B,KAAMnH,EAAUmC,aAChBoJ,SAAUA,IAEd,MACJ,KAAKvL,EAAUoC,gBACX,IAAIi7B,EAAYt2B,KAAKk1B,qBACrBl1B,KAAK80B,YACLa,EAAgB,CAAC,CACbv1B,KAAMnH,EAAUoC,gBAChBmJ,SAAU8xB,IAEd,MACJ,KAAKr9B,EAAUwF,UACX,MACJ,QACI,IAAIzF,EAAIE,EAAkB8G,KAAKyU,IAC3Bzb,GAAKgH,KAAKu0B,IAAIr8B,QAAOc,GAAK,IAAMgH,KAAKu0B,IAAIr8B,MAAQ,KACrDc,GAAK,6BACLgH,KAAKoW,UAAUpd,GAEf,IAAIu9B,EAAWxB,EAAOQ,4BAA4BnwB,QAAQpF,KAAKyU,KAAO,EACjE8hB,GACDv2B,KAAK80B,YAKjB,GAAoB,MAAjBa,EAEC,KAAO31B,KAAKyU,IAAMxb,EAAUwF,WAAai3B,GACrC11B,KAAK80B,YAIb,GAAoB,MAAjBa,GAAyBA,EAAc3zB,OAAS,EAAE,CACjD,IAAIw0B,EAAUb,EAAcA,EAAc3zB,OAAS,GACrC,MAAXw0B,EACCx2B,KAAKy2B,4BAA4Bd,EAAcA,EAAc3zB,OAAS,IAEtE2zB,EAAgB,KAIxB,OAAOA,IA1cf,oCAgdQ,IAIIvJ,EAJA5nB,EAAWxE,KAAKk1B,qBAWpB,OATAl1B,KAAK80B,YAIC90B,KAAKyU,IAAMxb,EAAUwF,YACvB2tB,EAAOpsB,KAAK02B,YACZ12B,KAAK81B,OAAO78B,EAAUwF,WAAW,GAAM,IAGpC,CAAC,CACJ2B,KAAMnH,EAAUkC,cAChBqJ,SAAUA,EACV4nB,KAAMA,MA9dlB,mCAqeQ,IAAI5nB,EAAWxE,KAAKk1B,qBAEpBl1B,KAAK80B,YACL,IAAIxU,EAAYtgB,KAAKk1B,qBAErB,GAAIl1B,KAAK81B,OAAO78B,EAAU0C,aAAa,GAAO,CAC1C,IAAI0wB,EAAYrsB,KAAK02B,YACjBnV,EAAwBvhB,KAAKk1B,qBAEjCl1B,KAAKhJ,OAAO6qB,uBAAuBrd,EAAU,GAAI,QAAS+c,GAE1DvhB,KAAK81B,OAAO78B,EAAU2C,cAAc,GAChCoE,KAAKyU,IAAMxb,EAAUwF,WACrBuB,KAAKoW,UAAU,qEAAsE,WAEzF,IAAIxR,EAAa5E,KAAKy1B,iBAClBlV,EAAUvgB,KAAKk1B,qBAOnB,OANA3U,EAAQve,OAAS,EAEC,MAAd4C,GAAsBA,EAAW5C,OAAS,GAAK4C,EAAW,GAAGxE,MAAQnH,EAAUmqB,YAC/E7C,EAAsB3b,EAAW,GAAIgW,YAGlC,CACH,CACIxa,KAAMnH,EAAUyB,aAChB8J,SAAUA,EACV8b,UAAWA,EACXC,QAASA,EACT8L,UAAWA,EACXznB,WAAYA,IAMxB,MAAO,KAzgBf,iCA+gBQ,IAAIJ,EAAWxE,KAAKk1B,qBAEhByB,EAAqC,GAEzC32B,KAAK80B,YAEL,IAAIxU,EAAYtgB,KAAKk1B,qBAErB,GAAIl1B,KAAK81B,OAAO78B,EAAU0C,aAAa,GAAO,CAE1C,GAAIqE,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAUyF,MAC3B,OAAOsB,KAAK42B,2BAA2BpyB,EAAU8b,GAGrD,IAAIqN,EAAmB3tB,KAAKy1B,gBAAe,GAC3CkB,EAAmBpyB,KAAKvE,KAAKk1B,sBAC7Bl1B,KAAK81B,OAAO78B,EAAUwF,WACtB,IAAI4tB,EAAYrsB,KAAK02B,YACrBC,EAAmBpyB,KAAKvE,KAAKk1B,sBAC7Bl1B,KAAK81B,OAAO78B,EAAUwF,WAAW,GACjC,IAAIwvB,EAAkBjuB,KAAKy1B,gBAAe,GAEtClU,EAAuBvhB,KAAKk1B,qBAChCl1B,KAAK81B,OAAO78B,EAAU2C,cAAc,GAEpCoE,KAAKhJ,OAAO6qB,uBAAuBrd,EAAUmyB,EAAoB,MAAOpV,GAEpEvhB,KAAKyU,IAAMxb,EAAUwF,WACrBuB,KAAKoW,UAAU,mEAAoE,WAIvF,IAAIxR,EAAa5E,KAAKy1B,iBAClBlV,EAAUvgB,KAAKk1B,qBAgBnB,OAfA3U,EAAQve,OAAS,EAEC,MAAd4C,GAAsBA,EAAW5C,OAAS,GAAK4C,EAAW,GAAGxE,MAAQnH,EAAUmqB,YAC/E7C,EAAsB3b,EAAW,GAAIgW,YAGxB,MAAbyR,IACAA,EAAY,CACRjsB,KAAMnH,EAAUwvB,aAChBjkB,SAAUxE,KAAKk1B,qBACf5C,aAAcr5B,EAAUK,gBACxB0M,UAAU,IAIX,CACH,CACI5F,KAAMnH,EAAU2B,WAChB4J,SAAUA,EACV8b,UAAWA,EACXC,QAASA,EACT8L,UAAWA,EACXsB,iBAAkBA,EAClBM,gBAAiBA,EACjBrpB,WAAYA,IAMxB,MAAO,KA/kBf,iDAmlB+BJ,EAAwB8b,GAE/C,IAAIuL,EAAe7rB,KAAK62B,YAEpBpI,EAA6BzuB,KAAKu0B,IAAIr8B,MACtC4+B,EAA6B92B,KAAKk1B,qBACtCl1B,KAAK80B,YAEL90B,KAAK81B,OAAO78B,EAAUyF,OAAO,GAE7B,IAAIyvB,EAAanuB,KAAK02B,YAEtB12B,KAAK81B,OAAO78B,EAAU2C,cAAc,GAEhCoE,KAAKyU,IAAMxb,EAAUwF,WACrBuB,KAAKoW,UAAU,mEAAoE,WAGvF,IAAIxR,EAAa5E,KAAKy1B,iBAClBlV,EAAUvgB,KAAKk1B,qBAOnB,OANA3U,EAAQve,OAAS,EAEC,MAAd4C,GAAsBA,EAAW5C,OAAS,GAAK4C,EAAW,GAAGxE,MAAQnH,EAAUmqB,YAC/E7C,EAAsB3b,EAAW,GAAIgW,YAGvB,MAAduT,GAAsC,MAAhBtC,GAAsC,MAAdjnB,EAA2B,GAEtE,CACH,CACIxE,KAAMnH,EAAUswB,sBAChB/kB,SAAUA,EACV8b,UAAWA,EACXC,QAASA,EACTkO,mBAAoBA,EACpB5C,aAAcA,EACd6C,iBAAkBoI,EAClB3I,WAAYA,EACZvpB,WAAYA,MAznB5B,mCAioBQ,IAAI6P,EAAKzU,KAAKyU,GACVjQ,EAAWxE,KAAKk1B,qBAIpB,GAFAl1B,KAAK80B,YAED90B,KAAK81B,OAAO78B,EAAU0C,aAAa,GAAQ,CAC3C,IAAIo7B,EAAM/2B,KAAKg3B,4BACXC,EAAcF,EAAI1Q,MAOtB,OANI4Q,EAAYj1B,OAAS,GACrBhC,KAAKoW,UAAU,+DAAgE,QAAS5R,GAG5FxE,KAAK81B,OAAO78B,EAAUwF,WAAW,GAAM,GAEhC,CAAC,CAEJ2B,KAAMqU,EACNjQ,SAAUA,EACVoR,KAA4B,GAAtBqhB,EAAYj1B,OAAc,KAAOi1B,EAAY,GACnDnM,MAAOmM,EAAYj1B,QAAU,EAAI,KAAOi1B,EAAY,GACpD3V,eAAgByV,EAAIzV,eACpBC,qBAAsBwV,EAAIxV,uBAIlC,OAAO,OA1pBf,oCAgqBQ,IAAI/c,EAAWxE,KAAKk1B,qBAEpB,GADAl1B,KAAK80B,YACD90B,KAAK81B,OAAO78B,EAAU0C,aAAa,GAAO,CAE1C,IAAIu7B,EAAal3B,KAAK02B,YAEtB12B,KAAKhJ,OAAO6qB,uBAAuBrd,EAAU,GAAI,SAAUxE,KAAKk1B,sBAEhEl1B,KAAK81B,OAAO78B,EAAU2C,cACtB,IAAI0kB,EAAYtgB,KAAKk1B,qBAErBl1B,KAAK81B,OAAO78B,EAAU8C,kBAAkB,GAaxC,IAXA,IAAIo7B,EAAyB,CACzB/2B,KAAMnH,EAAU4B,cAChB2J,SAAUA,EACV8b,UAAWA,EACXC,QAAS,KACT8L,UAAW6K,EACXrK,UAAW,IAGXuK,GAAsB,EAEnBp3B,KAAKyU,IAAMxb,EAAU6B,aAAekF,KAAKyU,IAAMxb,EAAU8B,gBAAgB,CAC5E,IAAIs8B,EAAer3B,KAAKk1B,qBAEpBoC,EAAYt3B,KAAKyU,IAAMxb,EAAU8B,eACjCu8B,IACIF,EACAp3B,KAAKoW,UAAU,oEAAqE,QAASihB,GAE7FD,GAAsB,GAI9Bp3B,KAAK80B,YAEL,IAAI/H,EAAW,KACVuK,IACDvK,EAAW/sB,KAAK02B,aAGpB12B,KAAK81B,OAAO78B,EAAUyF,OAAO,GAI7B,IAFA,IAAIkG,EAAwB,GAErB5E,KAAKyU,IAAMxb,EAAU+C,mBAAqBgE,KAAKyU,IAAMxb,EAAUmG,iBAC/DY,KAAKyU,IAAMxb,EAAU6B,aAAekF,KAAKyU,IAAMxb,EAAU8B,gBAC9D,CACE,IAAI6rB,EAAY5mB,KAAKy1B,iBACJ,MAAb7O,IACAhiB,EAAaA,EAAWsD,OAAO0e,IAIvC,IAAI2Q,EAAiC,CACjCn3B,KAAMnH,EAAU6B,YAChB0J,SAAU6yB,EACVtK,SAAUA,EACVnoB,WAAYA,GAGhBuyB,EAAWtK,UAAUtoB,KAAKgzB,GAO9B,OAHAJ,EAAW5W,QAAUvgB,KAAKw3B,uBAC1Bx3B,KAAK81B,OAAO78B,EAAU+C,mBAAmB,GAElC,CAACm7B,GAIZ,OAAO,OA1uBf,gCAgvBQ,IAAI3yB,EAAWxE,KAAKk1B,qBAGpB,GADAl1B,KAAK80B,YACD90B,KAAK81B,OAAO78B,EAAU0C,aAAa,GAAO,CAC1C,IAAI0wB,EAAYrsB,KAAK02B,YACjBnV,EAAuBvhB,KAAKk1B,qBAChCl1B,KAAKhJ,OAAO6qB,uBAAuBrd,EAAU,GAAI,KAAM+c,GACvDvhB,KAAK81B,OAAO78B,EAAU2C,cAAc,GAEhCoE,KAAKyU,IAAMxb,EAAUwF,WACrBuB,KAAKoW,UAAU,uFAAwF,WAG3G,IAAIxR,EAAa5E,KAAKy1B,iBAElBz1B,KAAKyU,IAAMxb,EAAUwF,WACrBuB,KAAK80B,YAGT,IAAI2C,EAA4B,KAgBhC,OAdIz3B,KAAKs1B,WAAWr8B,EAAUiC,eAC1B8E,KAAK80B,YACL2C,EAAiBz3B,KAAKy1B,kBAGT,MAAbpJ,GAA8C,GAAzBrsB,KAAK2T,UAAU3R,SACpCqqB,EAAY,CACRjsB,KAAMnH,EAAUwvB,aAChBjkB,SAAUxE,KAAKk1B,qBACf5C,aAAcr5B,EAAUK,gBACxB0M,UAAU,IAIX,CACH,CACI5F,KAAMnH,EAAU+B,UAChBwJ,SAAUA,EACV6nB,UAAWA,EACXoB,iBAAkB7oB,EAClB8oB,kBAAmB+J,IAM/B,MAAO,KA/xBf,gCA0yBQ,IAAIjzB,EAAWxE,KAAKk1B,qBAEhB5U,EAAYtgB,KAAKk1B,qBACrBl1B,KAAK80B,YACL,IAAIlwB,EAAa5E,KAAKy1B,iBAEtB,GAAIz1B,KAAK81B,OAAO78B,EAAUyB,cAAc,IAChCsF,KAAK81B,OAAO78B,EAAU0C,aAAa,GAAO,CAC1C,IAAI0wB,EAAYrsB,KAAK02B,YACjBnW,EAAUvgB,KAAKw3B,uBAInB,OAFAx3B,KAAK81B,OAAO78B,EAAU2C,cAAc,GAE7B,CACH,CACIwE,KAAMnH,EAAU0B,UAChB6J,SAAUA,EACV8b,UAAWA,EACXC,QAASA,EACT8L,UAAWA,EACXznB,WAAYA,IAM5B,MAAO,KAp0Bf,yCAy0BQ,OAAI5E,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAU2D,OAC3BoD,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAUE,aACxB6G,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAU4D,SAAWmD,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAU2F,SA30BhF,uDAk1BQ,GACKoB,KAAKyU,IAAMxb,EAAUE,YAAc6G,KAAKyU,IAAMxb,EAAUsC,cACxDyE,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAUE,YACrB6G,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAUgD,yBAC9B+D,KAAK03B,mBAeT,MAAO,CAAC13B,KAAK02B,aAZb,IAAId,EAAiB,GACjBx1B,EAAiB,KACrB,EAAG,CACa,MAARA,GAAcJ,KAAK81B,OAAO78B,EAAU2F,OAAO,GAC/C,IAAI+4B,EAAK33B,KAAK43B,yBAAyBx3B,GACvCw1B,EAAIrxB,KAAKozB,GACTv3B,EAAOu3B,aAAE,EAAFA,EAAI9L,mBAEN7rB,KAAKyU,IAAMxb,EAAU2F,OAE9B,OAAOg3B,IAn2BnB,kCA22BQ,OAAO51B,KAAK63B,gBAAgB,KA32BpC,sCA82BoBC,GAAkB,IAE1BC,EAF0B,OAI1BA,EADAD,EAAa/C,EAAOC,mBAAmBhzB,OAAS,EACzChC,KAAK63B,gBAAgBC,EAAa,GAElC93B,KAAKg4B,0BAGhB,IAAIC,EAAYlD,EAAOC,mBAAmB8C,GAE1C,GAAY,MAARC,GAAgBE,EAAU7yB,QAAQpF,KAAKyU,IAAM,EAC7C,OAAOsjB,EAGX,IAAIG,GAAQ,EAEZ,GAAIl4B,KAAKyU,IAAMxb,EAAUyF,MACrB,OAAOq5B,EAGX,IArB8B,iBAuB1B,IAAI3R,EAAsB,EAAK3R,GAE/ByjB,GAAQ,EACR,IAAI1zB,EAAW,EAAK0wB,qBAEpB,EAAKJ,YAEL,IA9B0B,iBA8BrB,IAAIqD,EAAM,KAEX,GAAI/R,GAAYntB,EAAUiE,YAAc,EAAKuX,IAAM0jB,EAAOlD,GAAI,CAC1D,IAAImD,EAAY,EAAKlD,qBACrB,EAAK9e,UAAL,uBAA+B+hB,EAAOE,MAAtC,+CAAkFF,EAAOG,OAAS,QAC9F3gC,OAAO8uB,OAAO,GAAIjiB,EAAU,CAAExC,OAAQ,IAAM,CAC5CuH,MAAO,GAAF,OAAK4uB,EAAOE,MAAZ,kBAA2BF,EAAOG,MAAlC,aACLzV,cAAe,SAACC,GACZ,MAAO,CACH,CACIC,SAAUD,EACVE,KAAM,CACFha,MAAO,CAAE4O,gBAAiBpT,EAAS0F,KAAM4N,YAAatT,EAAS2F,OAAQwN,cAAenT,EAAS0F,KAAM2N,UAAWugB,EAAUjuB,OAASiuB,EAAUp2B,QAC7I4T,KAAMuiB,EAAOG,YAMjC,EAAKxD,YACL1O,EAAW+R,EAAOI,YApB1B,MAAmB,CAAC,CAAEtD,GAAIh8B,EAAU2D,MAAOy7B,MAAO,KAAMC,MAAO,KAAMC,UAAWt/B,EAAU6D,cACtE,CAAEm4B,GAAIh8B,EAAU4D,QAASw7B,MAAO,KAAMC,MAAO,KAAMC,UAAWt/B,EAAU8D,iBAD5F,eAC+G,IAuB/G,IAAIu7B,OAAe,EAOnB,GAAa,OALTA,EADAR,EAAa/C,EAAOC,mBAAmBhzB,OAAS,EACxC,EAAK61B,gBAAgBC,EAAa,GAElC,EAAKE,2BAGE,CAEf,IAAIQ,GAAkB,EACtB,GAAI,EAAKC,WAAWV,IAAS,EAAKU,WAAWH,GAAQ,CACjD,IAAII,EAAuBX,EACvBY,EAAwBL,EACxB5tB,EAAW4I,GAAuBolB,EAAOpG,cACzC3nB,EAAY2I,GAAuBqlB,EAAQrG,cAC3CU,EAAatoB,EAASuoB,cAAc7M,EAAUzb,GAClD,GAAkB,MAAdqoB,EAAoB,CACpBwF,GAAkB,EAClB,IAAII,EAASluB,EAASmuB,QAAQzS,EAAU,CAAEhmB,KAAMsK,EAAUxS,MAAOwgC,EAAO1yB,UACpE,CAAE5F,KAAMuK,EAAWzS,MAAOygC,EAAQ3yB,WAEtC,EAAK8yB,2BAA2B1S,EAAU1b,EAAUguB,EAAO1yB,SAAU2E,EAAWguB,EAAQ3yB,SAAUxB,GAElGk0B,EAAOpG,aAA+BU,EAAY+F,cAClDL,EAAO1yB,SAAW4yB,EAClBF,EAAOl0B,SAASxC,OAAS22B,EAAQn0B,SAAS2F,OAASwuB,EAAQn0B,SAASxC,OAAS02B,EAAOl0B,SAAS2F,QAIhGquB,IACDT,EAAO,CACH33B,KAAMnH,EAAUktB,SAChB3hB,SAAUA,EACV4hB,SAAUA,EACVzjB,aAAco1B,EACdn1B,cAAe01B,MApExBJ,GAASD,EAAU7yB,QAAQpF,KAAKyU,KAAO,GAAG,IA4EjD,OAAOsjB,IA/8Bf,iDAm9B+B3R,EAAqB1b,EAAgBsuB,EAAmBruB,EAAiBsuB,EAAoBz0B,GAEjH4hB,GAAYntB,EAAUsD,UAClByD,KAAKk5B,cAAcxuB,IAAa1K,KAAKk5B,cAAcvuB,IAC9B,GAAjBsuB,GAAsBD,EAAaC,GAAiB3sB,KAAK6sB,MAAMH,EAAaC,IAC3Ej5B,KAAKoW,UAAU,MAAQ4iB,EAAe,QAAUC,EAAgB,oGAAsG3sB,KAAK6sB,MAAMH,EAAaC,GAAiB,sEAAuE,OAAQz0B,KAx9BlT,oCA+9BkBpE,GACV,OAAOA,GAAQgP,KAh+BvB,iCAm+BevK,GAEP,OAAgB,MAARA,GAAgBA,EAAKzE,MAAQnH,EAAUwvB,eAr+BvD,gDA2+BQ,IAAIK,EAAsC,KACtCtkB,EAAW,KAEXxE,KAAKs1B,WAAW,CAACr8B,EAAU0D,WAAY1D,EAAUyD,gBACjDosB,EAA2B9oB,KAAKyU,GAChCjQ,EAAWxE,KAAKk1B,qBAChBl1B,KAAK80B,aAGT,IAAI38B,EAAc6H,KAAKo5B,aAqBvB,OAnBgC,MAA5BtQ,IACA3wB,EAAI,CACAiI,KAAMnH,EAAU6vB,yBAChBtkB,SAAUA,EACV4hB,SAAU0C,EACVsI,QAASj5B,IAIb6H,KAAKs1B,WAAW,CAACr8B,EAAU0D,WAAY1D,EAAUyD,gBACjDvE,EAAI,CACAiI,KAAMnH,EAAU8vB,wBAChBvkB,SAAUxE,KAAKk1B,qBACf9O,SAAUpmB,KAAKyU,GACf2c,QAASj5B,GAEb6H,KAAK80B,aAGF38B,IAzgCf,mCAghCQ,IAAIi0B,EACA5nB,EAAyBxE,KAAKk1B,qBAElC,OAAQl1B,KAAKyU,IACT,KAAKxb,EAAU0C,YACX,OAAOqE,KAAKq5B,sBAAsBr5B,KAAKs5B,oBAC3C,KAAKrgC,EAAUkD,MACf,KAAKlD,EAAU0E,IACf,KAAK1E,EAAUmF,MACXoG,EAAWA,EACX,IAAI+0B,EAAMv5B,KAAKyU,GAIf,GAHAzU,KAAK80B,YACL1I,EAAOpsB,KAAKo5B,aAERp5B,KAAKy4B,WAAWrM,GAAO,CACvB,IAAIoN,EAAuBpN,EACvBqN,EAAWnmB,GAAuBkmB,EAAOlH,cACzCU,EAAayG,EAASxG,cAAcsG,GACxC,GAAkB,MAAdvG,EAAoB,CACpB,IAAI4F,EAASa,EAASZ,QAAQU,EAAK,CAAEn5B,KAAMq5B,EAAUvhC,MAAOshC,EAAOxzB,WAInE,OAHAwzB,EAAOlH,aAA+BU,EAAY+F,cAClDS,EAAOxzB,SAAW4yB,EAClBp0B,EAASxC,OAASw3B,EAAOh1B,SAAS2F,OAAS3F,EAAS2F,OAAS,EACtDqvB,GAIf,MAAO,CACHp5B,KAAMnH,EAAUsvB,QAChB/jB,SAAUA,EACV4sB,QAAShF,EACThG,SAAUmT,GAElB,KAAKtgC,EAAUY,aACX,GAAImG,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAU0C,YAAa,CACxCqE,KAAK80B,YACL,IAAIjzB,EAAa7B,KAAKg3B,4BAQtB,OAPA5K,EAAO,CACHhsB,KAAMnH,EAAUqqB,qBAChB9e,SAAUA,EACV0sB,SAAUrvB,EAAWwkB,MACrB/E,eAAgBzf,EAAWyf,eAC3BC,qBAAsB1f,EAAW0f,sBAUzC,OANI6K,EAAO,CACHhsB,KAAMnH,EAAUY,aAChB2K,SAAUA,GAGlBxE,KAAK80B,YACE90B,KAAKq5B,sBAAsBjN,GACtC,KAAKnzB,EAAUW,YACX,GAAIoG,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAU0C,YAAa,CACxCqE,KAAK80B,YACL,IAAI,EAAa90B,KAAKg3B,4BAQtB,OAPA5K,EAAO,CACHhsB,KAAMnH,EAAUsqB,gBAChB/e,SAAUA,EACV0sB,SAAU,EAAW7K,MACrB/E,eAAgB,EAAWA,eAC3BC,qBAAsB,EAAWA,sBAUzC,OANI6K,EAAO,CACHhsB,KAAMnH,EAAUW,YAChB4K,SAAUA,GAGlBxE,KAAK80B,YACE90B,KAAKq5B,sBAAsBjN,GACtC,KAAKnzB,EAAUa,WACX,OAAOkG,KAAKq5B,sBAAsBr5B,KAAK05B,YAC3C,KAAKzgC,EAAUG,gBACf,KAAKH,EAAUO,aACf,KAAKP,EAAUI,sBACf,KAAKJ,EAAUM,eACf,KAAKN,EAAUK,gBACX8yB,EAAO,CACHhsB,KAAMnH,EAAUwvB,aAChBjkB,SAAUxE,KAAKk1B,qBACf5C,aAActyB,KAAKyU,GACnBzO,SAAUhG,KAAKu0B,IAAIr8B,OAEvB,IAAIyhC,EAAmB35B,KAAKyU,IAAMxb,EAAUM,eAG5C,OAFAyG,KAAK80B,YAED6E,EAAyB35B,KAAKq5B,sBAAsBjN,GAEjDA,EACX,KAAKnzB,EAAUqC,YAQX,OAPA8wB,EAAO,CACHhsB,KAAMnH,EAAUwvB,aAChBjkB,SAAUxE,KAAKk1B,qBACf5C,aAAcr5B,EAAUqC,YACxB0K,SAAU,MAEdhG,KAAK80B,YACE1I,EACX,KAAKnzB,EAAUE,WAEX,IAAIygC,EAAsB55B,KAAKu0B,IAAIr8B,MAC/Bo+B,EAAYt2B,KAAKk1B,qBAIrB,GAFAl1B,KAAK80B,YAED90B,KAAKyU,IAAMxb,EAAU0C,YAAa,CAClC,IAAI,EAAaqE,KAAKg3B,4BAClBzV,EAAuB,EAAWA,qBAEtC6K,EAAO,CACHhsB,KAAMnH,EAAUmpB,WAChB5d,SAAU8xB,EACV/U,qBAAsBA,EACtB2P,SAAU,EAAW7K,MACrB1tB,OAAQyzB,EACRjzB,WAAYygC,EACZtY,eAAgB,EAAWA,qBAG/B8K,EAAO,CACHhsB,KAAMnH,EAAUE,WAChBA,WAAYygC,EACZp1B,SAAUA,GAIlB,OAAOxE,KAAKq5B,sBAAsBjN,GACtC,QAEI,OADApsB,KAAKoW,UAAU,yFAA2FpW,KAAKu0B,IAAIr8B,OAC5G,QAppCvB,yCA8pCQ,IAAIsM,EAAWxE,KAAKk1B,qBAIpB,GAFAl1B,KAAK80B,YAED90B,KAAKyU,IAAMxb,EAAUE,YAAc6G,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAU2C,cAC9DoE,KAAK8zB,sBAAsB1uB,QAAQpF,KAAK2f,GAAG,GAAGlL,IAAM,EAAG,CAEvD,IAAIgW,EAAazqB,KAAK62B,YAClBP,EAAYt2B,KAAKk1B,qBACrB1wB,EAASxC,OAASs0B,EAAUnsB,OAAS3F,EAAS2F,OAAS,EAEvDnK,KAAK81B,OAAO78B,EAAU2C,cAAc,GAEpC,IAAI4uB,EAAaxqB,KAAKg4B,0BAEtB,MAAO,CACH53B,KAAMnH,EAAUgpB,UAChBzd,SAAUA,EACVimB,WAAYA,EACZD,WAAYA,GAMhB,IAAI4B,EAAOpsB,KAAK02B,YACZnV,EAAuBvhB,KAAKk1B,qBAGhC,OAFAl1B,KAAK81B,OAAO78B,EAAU2C,cAAc,GAEhCoE,KAAKy4B,WAAWrM,GACTA,EAGsB,CAC7B5nB,SAAU+c,EACVnhB,KAAMnH,EAAU2C,aAChByuB,mBAAoB+B,KAlsCpC,iCA8sCQpsB,KAAK80B,YACL,IAAItwB,EAAWxE,KAAKk1B,qBAEpB,GAAIl1B,KAAK81B,OAAO78B,EAAUE,YAAY,GAAQ,CAC1C,IAAIA,EAAqB6G,KAAKu0B,IAAIr8B,MAC9B2hC,EAAqB75B,KAAKk1B,qBAC9Bl1B,KAAK80B,YAGL,IAAIgF,EAAoC,KAExC,GAAI95B,KAAKyU,IAAMxb,EAAU2D,MAAO,CAE5Bk9B,EAAwB,GACxB,IAAI5B,GAAiB,EAIrB,IAHAl4B,KAAK80B,YAGGoD,GAASl4B,KAAKyU,IAAMxb,EAAUE,aAAiB++B,GAASl4B,KAAKyU,IAAMxb,EAAU2F,OAE5Es5B,GAAOl4B,KAAK80B,YAEjBoD,GAAQ,EAER4B,EAAsBv1B,KAAKvE,KAAK62B,aAIpC72B,KAAK81B,OAAO78B,EAAU4D,SACc,GAAhCi9B,EAAsB93B,SAAa83B,EAAwB,MAGnE,GAAI95B,KAAKyU,IAAMxb,EAAU4C,mBAAqBmE,KAAKyU,IAAMxb,EAAUgD,uBAAwB,CAEvF,IAAI89B,EAAqB,CACrB35B,KAAMnH,EAAUmH,KAChBoE,SAAUA,EACVw1B,eAAgB,EAChB7gC,WAAYA,EACZ2gC,sBAAuBA,GAE3B95B,KAAK+zB,UAAUxvB,KAAKw1B,GAIpB,IAFA,IAAI9O,EAA2B,GAExBjrB,KAAKyU,IAAMxb,EAAU4C,mBAAqBmE,KAAKyU,IAAMxb,EAAUgD,wBAClE89B,EAASC,iBAGLh6B,KAAKyU,IAAMxb,EAAUgD,wBACrBgvB,EAAa1mB,KAAK,MAClBvE,KAAK80B,cAEL90B,KAAK80B,YACL7J,EAAa1mB,KAAKvE,KAAK02B,aACvB12B,KAAK81B,OAAO78B,EAAU6C,oBAAoB,IAKlD,IAAI2kB,EAAiB,KAcrB,OAZIzgB,KAAKyU,IAAMxb,EAAU8C,mBACrB0kB,EAAiBzgB,KAAKi6B,kBAAkBF,IAGX,CAC7B35B,KAAMnH,EAAU8wB,SAChBvlB,SAAUA,EACV4mB,UAAW2O,EACX9O,aAAcA,EACdxK,eAAgBA,GAMjB,GAAIzgB,KAAKyU,IAAMxb,EAAU0C,YAAa,CACzC,IAAIkG,EAAa7B,KAAKg3B,4BAElBvH,EAAsB,CACtBrvB,KAAMnH,EAAUmH,KAChBoE,SAAUq1B,EACVG,eAAgB,EAChB7gC,WAAYA,EACZ2gC,sBAAuBA,GAK3B,OAFA95B,KAAK+zB,UAAUxvB,KAAKkrB,GAEb,CACHrvB,KAAMnH,EAAUkwB,UAChB3kB,SAAUA,EACVirB,UAAWA,EACXK,oBAAqBjuB,EAAWwkB,MAChC9E,qBAAsB1f,EAAW0f,qBACjCD,eAAgBzf,EAAWyf,gBAG/BthB,KAAKoW,UAAU,oGAAqG,QAASpW,KAAKk1B,sBAI1I,OAAO,OArzCf,wCAwzCsB9J,GAGd,IAAI/E,EAAgD,GAChD7hB,EAAWxE,KAAKk1B,qBAChBlK,EAAY,KAGhB,GADAhrB,KAAK81B,OAAO78B,EAAU8C,kBAAkB,GACpCiE,KAAKyU,IAAMxb,EAAU+C,kBAGrB,IADA,IAAIk8B,GAAQ,EACLA,GAASl4B,KAAKyU,IAAMxb,EAAU2F,OAAO,CACxC,IAAI03B,EAAYt2B,KAAKk1B,qBAEhBgD,GACDl4B,KAAK80B,YAEToD,GAAQ,EAER,IAAIgC,OAAoB,EACxB,GAAIl6B,KAAKyU,IAAMxb,EAAU8C,iBAAkB,CACvC,IAAImmB,EAAoB,CACpB9hB,KAAMnH,EAAUmH,KAChBoE,SAAUxE,KAAKk1B,qBACf8E,eAAgB5O,EAAU4O,eAAiB,EAC3C7gC,WAAYiyB,EAAUjyB,YAE1B6G,KAAK+zB,UAAUxvB,KAAK2d,GACpB,IAAIiY,EAAKn6B,KAAKi6B,kBAAkB/X,GAChCgY,EAAeC,EAAGnP,UAAY,EAC9B3E,EAAM9hB,KAAK41B,QAEX9T,EAAM9hB,KAAKvE,KAAK02B,aAChBwD,EAAe,EAGF,MAAblP,GACIA,GAAakP,GACbl6B,KAAKoW,UAAU,yCAA2C8jB,EAAe,GAAK,iEAAmElP,EAAY,GAAK,KAAM,QAASsL,GAGzLtL,EAAYkP,EAgBpB,OAVAl6B,KAAK81B,OAAO78B,EAAU+C,mBAAmB,GAEN,CAC/BoE,KAAMnH,EAAU4wB,oBAChBrlB,SAAUA,EACV4mB,UAAWA,EACXJ,UAAWA,EACX3E,MAAOA,KA92CnB,kDAw3CQ,GADArmB,KAAK80B,YACD90B,KAAKyU,IAAMxb,EAAU2C,aAAc,CACnC,IAAI2lB,EAAuBvhB,KAAKk1B,qBAEhC,OADAl1B,KAAK80B,YACE,CAAEvT,qBAAsBA,EAAsB8E,MAAO,GAAI/E,eAAgB,IAMpF,IAHA,IAAIzf,EAAyB,GACzByf,EAAiC,KAExB,CACT,IAAIxN,EAAM9T,KAAK8T,IAEXsmB,EAAYp6B,KAAK02B,YAKrB,GAJiB,MAAb0D,GACAv4B,EAAW0C,KAAK61B,GAGhBp6B,KAAKyU,IAAMxb,EAAU2F,MACrB,MAEA0iB,EAAe/c,KAAKvE,KAAKk1B,sBACzBl1B,KAAK80B,YAIL90B,KAAK8T,KAAOA,GACZ9T,KAAK80B,YAKb,IAAItwB,EAAWxE,KAAKk1B,qBAGpB,MAAO,CAAE3T,qBAFevhB,KAAK81B,OAAO78B,EAAU2C,cAAc,GAET4I,EAAW,KAAM6hB,MAAOxkB,EAAYyf,eAAgBA,KA15C/G,4CA85C0B8K,GAElB,GAAY,MAARA,EAAc,OAAO,KAEzB,KAAOpsB,KAAKs1B,WAAW,CAACr8B,EAAUiD,IAAKjD,EAAU4C,qBAC7C,GAAImE,KAAKyU,IAAMxb,EAAUiD,IAAK,CAI1B,GAFA8D,KAAK80B,YAED90B,KAAKyU,IAAMxb,EAAUE,WAErB,OADA6G,KAAKoW,UAAU,oFAAsFpW,KAAKu0B,IAAIr8B,OACvGk0B,EAGX,IAAIjzB,EAAqB6G,KAAKu0B,IAAIr8B,MAC9BsM,EAAWxE,KAAKk1B,qBAGpB,GAFAl1B,KAAK80B,YAED90B,KAAKyU,IAAMxb,EAAU0C,YAAa,CAClC,IAAIkG,EAAa7B,KAAKg3B,4BACtB5K,EAAO,CACHhsB,KAAMnH,EAAUmpB,WAChB5d,SAAUA,EACV+c,qBAAsB1f,EAAW0f,qBACjC2P,SAAUrvB,EAAWwkB,MACrB1tB,OAAQyzB,EACRjzB,WAAYA,EACZmoB,eAAgBzf,EAAWyf,qBAG/B8K,EAAO,CACHhsB,KAAMnH,EAAU0rB,cAChBngB,SAAUA,EACVrL,WAAYA,EACZR,OAAQyzB,OAIb,CAEH,IAAI,EAAWA,EAAK5nB,SACpBxE,KAAK80B,YACL,IAAI1yB,EAAQpC,KAAK02B,YACb2D,EAAcr6B,KAAKk1B,qBACnBoB,EAA0B3+B,OAAO8uB,OAAO,GAAI,GAChDzmB,KAAK81B,OAAO78B,EAAU6C,oBAAoB,GACtCu+B,EAAYnwB,MAAQ,EAASA,KAC7BosB,EAAUt0B,OAASq4B,EAAYlwB,OAASkwB,EAAYr4B,OAASs0B,EAAUnsB,OAEvEmsB,EAAY+D,EAEhBjO,EAAO,CACHhsB,KAAMnH,EAAU4vB,mBAChBrkB,SAAU8xB,EACVl0B,MAAOA,EACPzJ,OAAQyzB,GAMpB,OAAOA,IA39Cf,+CA89C6BhsB,GAErB,IAAIU,GAAU,EAUd,GATId,KAAKyU,IAAMxb,EAAUsC,eACrBuF,GAAU,EACVd,KAAK80B,aAGG,MAAR10B,IACAA,EAAOJ,KAAK62B,aAGb72B,KAAKyU,IAAMxb,EAAUE,WAEpB,OADA6G,KAAKoW,UAAU,2DAA4D,QAASpW,KAAKk1B,sBAClF,KAGX,IAAI/7B,EAAqB6G,KAAKu0B,IAAIr8B,MAC9BsM,EAAWxE,KAAKk1B,qBACpBl1B,KAAK80B,YAEL,IAAIrU,EAA2B,KAc/B,OAXIzgB,KAAKyU,IAAMxb,EAAUiE,aACrB8C,KAAK80B,YAGDrU,EADArgB,EAAK45B,eAAiB,GAAKh6B,KAAKyU,IAAMxb,EAAU8C,iBAC/BiE,KAAKi6B,kBAAkB75B,GAEvBJ,KAAK02B,aAK1B12B,KAAKyU,IAAMxb,EAAUmG,iBAA2B,MAARgB,GAA8B,MAAdjH,EAA2B,KAEhF,CACHiH,KAAMnH,EAAU2wB,yBAChBplB,SAAUA,EACVrL,WAAYA,EACZ0yB,aAAczrB,EACdqgB,eAAgBA,EAChB3f,QAASA,KAzgDrB,kCAqhDQ,GAAGd,KAAKyU,IAAMxb,EAAUE,YAAc6G,KAAKyU,IAAMxb,EAAUgB,YAGvD,OAFA+F,KAAKoW,UAAU,0FAA4FpW,KAAKu0B,IAAIr8B,MAAO,QAAS8H,KAAKk1B,sBACrIl1B,KAAK80B,YACF,CACH10B,KAAMnH,EAAUmH,KAChBoE,SAAUxE,KAAKk1B,qBACf8E,eAAgB,EAChB7gC,WAAY,MACZ2gC,sBAAuB,IAI/B,IAAI3gC,EAAqB6G,KAAKu0B,IAAIr8B,MAC9BsM,EAAWxE,KAAKk1B,qBACpBl1B,KAAK80B,YAEL,IAAIgF,EAAoC,KAGxC,GAAI95B,KAAKyU,IAAMxb,EAAU2D,MAAO,CAE5Bk9B,EAAwB,GACxB,IAAI5B,GAAiB,EAIrB,IAHAl4B,KAAK80B,YAGGoD,GAASl4B,KAAKyU,IAAMxb,EAAUE,aAAiB++B,GAASl4B,KAAKyU,IAAMxb,EAAU2F,OAE5Es5B,GAAOl4B,KAAK80B,YAEjBoD,GAAQ,EAER4B,EAAsBv1B,KAAKvE,KAAK62B,aAIpC72B,KAAK81B,OAAO78B,EAAU4D,SAM1B,IAFA,IAAIm9B,EAAiB,EAEdh6B,KAAKyU,IAAMxb,EAAUgD,wBACxB+9B,IACAx1B,EAASxC,QAAU,EACnBhC,KAAK80B,YAGT,IAAIiF,EAAqB,CACrB35B,KAAMnH,EAAUmH,KAChBoE,SAAUA,EACVw1B,eAAgBA,EAChB7gC,WAAYA,EACZ2gC,sBAAuBA,GAK3B,OAFA95B,KAAK+zB,UAAUxvB,KAAKw1B,GAEbA,IA/kDf,6CAslDQ,IAAIzF,EAAgBt0B,KAAKu0B,IAAID,cACzBgG,EAAYt6B,KAAKu6B,mBAErB,IAAKv6B,KAAKs1B,WAAWP,EAAOyF,aAExB,OADAx6B,KAAKoW,UAAU,6DAA+DpW,KAAKu0B,IAAIr8B,OAChF,KAGX,IAAIu3B,EAAYzvB,KAAKyU,GAGrB,GAFAzU,KAAK80B,YAED90B,KAAK81B,OAAO78B,EAAUE,YAAY,GAAQ,CAE1C,IAAIA,EAAqB6G,KAAKu0B,IAAIr8B,MAC9BsM,EAAWxE,KAAKk1B,qBACpBl1B,KAAK80B,YAEL,IAAI2F,EAAsC,GAEtCz6B,KAAKyU,IAAMxb,EAAU2D,QACrB69B,EAAiBz6B,KAAK06B,gCAG1B,IAAIC,EAAoB36B,KAAK46B,uBAAuBnL,GAAax2B,EAAUc,kBAE3E,GAAI01B,GAAax2B,EAAUe,YACvB,OAAOgG,KAAK66B,UAAU1hC,EAAYwhC,EAAmBn2B,EAAU81B,EAAUz5B,WAAYyzB,GAGzF,IAAIhU,EAAYtgB,KAAKk1B,qBACrB,GAAIl1B,KAAK81B,OAAO78B,EAAU8C,kBAAkB,GAAO,CAE/C,IAAI++B,EAAuB96B,KAAK+6B,eAAetL,EAAWt2B,GACtDonB,EAAUvgB,KAAKw3B,uBAEnB,OADAx3B,KAAK81B,OAAO78B,EAAU+C,mBAAmB,GACjCyzB,GAEJ,KAAKx2B,EAAUU,aAAc,MAAO,CAChCyG,KAAMnH,EAAUU,aAChB6K,SAAUA,EACV8b,UAAWA,EACXC,QAASA,EACTpnB,WAAYA,EACZqK,WAAYs3B,EAAqBt3B,WACjCgD,QAASs0B,EAAqBt0B,QAC9BrF,WAAYm5B,EAAUn5B,WACtBN,WAAYy5B,EAAUz5B,WACtB+M,QAAS+sB,EAAkB/sB,QAC3BvH,WAAYs0B,EAAkBt0B,WAC9Bo0B,eAAgBA,EAChBnG,cAAeA,GAGnB,KAAKr7B,EAAUc,iBAAkB,MAAO,CACpCqG,KAAMnH,EAAUc,iBAChByK,SAAUA,EACVrL,WAAYA,EACZmnB,UAAWA,EACXC,QAASA,EACT/Z,QAASs0B,EAAqBt0B,QAC9Bi0B,eAAgBA,EAChB7sB,QAAS+sB,EAAkBt0B,WAC3BiuB,cAAeA,QAppDvC,qDA+pDgC,WAEpBmG,EAAsC,GAEtCO,EAAgB,GAEpBh7B,KAAK81B,OAAO78B,EAAU2D,OAAO,GAG7B,IAFA,IAAIs7B,GAAiB,EAPG,aAWfA,GAAO,EAAKpC,OAAO78B,EAAU2F,OAAO,GAEzC,IAAIq8B,EAAwB,CACxB76B,KAAMnH,EAAUiiC,cAChB12B,SAAU,EAAK0wB,qBACf/7B,WAAoB,EAAKo7B,IAAIr8B,MAC7B0V,QAAS,KACTvH,WAAY,MAGoB,MAAhC20B,EAAcC,EAAG9hC,aACjB,EAAKid,UAAU,8DAGnB4kB,EAAcC,EAAG9hC,aAAc,EAE/B,EAAK27B,YAEL,IAAI6F,EAAoB,EAAKQ,2BAE7BF,EAAGrtB,QAAU+sB,EAAkB/sB,QAEb,MAAdqtB,EAAGrtB,SAAmBqtB,EAAGrtB,QAAQosB,eAAiB,GAClD,EAAK5jB,UAAU,kCAAoC6kB,EAAG9hC,WAAa,0BAGvE8hC,EAAG50B,WAAas0B,EAAkBt0B,WAElC40B,EAAG50B,WAAW0L,SAAQ,SAACqpB,GACfA,EAAGpB,eAAiB,GACpB,EAAK5jB,UAAU,kCAAoC6kB,EAAG9hC,WAAa,6BAI3E++B,GAAQ,EAERuC,EAAel2B,KAAK02B,IAtChB/C,GAASl4B,KAAKyU,IAAMxb,EAAUE,aAAiB++B,GAASl4B,KAAKyU,IAAMxb,EAAU2F,OAAQ,IA4C7F,OAFAoB,KAAK81B,OAAO78B,EAAU4D,SAAS,GAExB49B,IAptDf,gCAutDcthC,EAAoBwhC,EAG3Bn2B,EAAwB3D,EAAwByzB,GAEd,MAA7BqG,EAAkB/sB,SAClB5N,KAAKoW,UAAU,qDAEfukB,EAAkBt0B,WAAWrE,OAAS,GACtChC,KAAKoW,UAAU,gDAGnB,IAAIkK,EAAYtgB,KAAKk1B,qBACrB,GAAIl1B,KAAK81B,OAAO78B,EAAU8C,kBAAkB,GAAO,CAE/C,IAAI8W,EAA0B7S,KAAKq7B,kBAE/BP,EAAuB96B,KAAK+6B,eAAe9hC,EAAUe,YAAab,GAElEonB,EAAUvgB,KAAKw3B,uBAKnB,OAHAx3B,KAAK81B,OAAO78B,EAAU+C,mBAAmB,GAGlC,CACHoE,KAAMnH,EAAUe,YAChBwK,SAAUA,EACV8b,UAAWA,EACXC,QAASA,EACT/c,WAAYs3B,EAAqBt3B,WACjCgD,QAASs0B,EAAqBt0B,QAC9BrN,WAAYA,EACZ0Z,OAAQA,EACRhS,WAAYA,EACZyzB,cAAeA,GAKvB,OAAO,OA9vDf,wCAywDQ,IALA,IAAIzhB,EAA0B,GAE1BiB,EAAc,EACdokB,GAAiB,EAEbA,GAASl4B,KAAKyU,IAAMxb,EAAUE,YAAe6G,KAAKyU,IAAMxb,EAAU2F,OAAO,CAK7E,GAJAkV,EAAM9T,KAAK8T,IACNokB,GAAOl4B,KAAK80B,YACjBoD,GAAQ,EAEJl4B,KAAK81B,OAAO78B,EAAUE,YAAY,GAAQ,CAE1C,IAAIA,EAAqB6G,KAAKu0B,IAAIr8B,MAC9BsM,EAAWxE,KAAKk1B,qBACpBl1B,KAAK80B,YACL,IAAI3T,EAAoC,KAEpCG,EAAiC,GACjCC,EAAqC,KAEzC,GAAIvhB,KAAKyU,IAAMxb,EAAU0C,YAAa,CAClC,IAAIo7B,EAAM/2B,KAAKg3B,4BACf7V,EAAwB4V,EAAI1Q,MAC5B/E,EAAiByV,EAAIzV,eACrBC,EAAuBwV,EAAIxV,qBAG/B1O,EAAOtO,KAAK,CACRnE,KAAMnH,EAAUmoB,cAChBD,sBAAuBA,EACvBhoB,WAAYA,EACZqL,SAAUA,EACV8c,eAAgBA,EAChBC,qBAAsBA,IAK1BvhB,KAAK8T,KAAOA,GACZ9T,KAAK80B,YAQb,OAJI90B,KAAKyU,IAAMxb,EAAUwF,WACrBuB,KAAK80B,YAGFjiB,IAnzDf,qCAuzDmB4c,EAAsB6L,GAOjC,IAHA,IAAI90B,EAAmC,GACnChD,EAAyC,GAIrCxD,KAAKyU,IAAMxb,EAAU+C,mBAAqBgE,KAAKyU,IAAMxb,EAAUmG,iBAF1D,CAMT,IAAIk1B,EAAuBt0B,KAAKu0B,IAAID,cAEhCiH,EAAa,KACdv7B,KAAKyU,IAAMxb,EAAU6F,KACpBy8B,EAAav7B,KAAKu0B,IAAIr8B,MACtB8H,KAAK80B,aAET,IAAIwF,EAAYt6B,KAAKu6B,mBAEjBn5B,GAAgB,EAChBoD,EAAWxE,KAAKk1B,qBAEhBl1B,KAAKyU,IAAMxb,EAAUE,YAAsB6G,KAAKu0B,IAAIr8B,OAASojC,GAAat7B,KAAK2f,GAAG,GAAGlL,IAAMxb,EAAU0C,cACrGyF,GAAgB,GAGpB,IAAIhB,EAAOJ,KAAK62B,YAWhB,GATGz1B,IACChB,EAAO,CACHjH,WAAY,OACZ6gC,eAAgB,EAChBx1B,SAAUpE,EAAKoE,SACfpE,KAAMnH,EAAUmH,OAIpBgB,GAAiBpB,KAAK81B,OAAO78B,EAAUE,YAAY,GAAQ,CAE3D,IAAIA,EAAamiC,EASjB,GAPKl6B,IACDoD,EAAWxE,KAAKk1B,qBAEhB/7B,EAAqB6G,KAAKu0B,IAAIr8B,MAC9B8H,KAAK80B,aAGL90B,KAAKyU,IAAMxb,EAAU0C,YAAa,CAE9ByF,GAAiBquB,GAAax2B,EAAUe,aAAesgC,EAAUz5B,YAAckD,EAAWoJ,SAC1FnN,KAAKoW,UAAU,8CAA+C,QAAS5R,GAG3E,IAAI3C,EAA8B7B,KAAKw7B,mCAEnC52B,OAAqB,EACrB0b,EAA0BtgB,KAAKk1B,qBAC/B3U,EAAwBD,EAE5B,GAAIga,EAAUn5B,WACVnB,KAAK81B,OAAO78B,EAAUwF,WAAW,GAC7B2C,GACApB,KAAKoW,UAAU,4CAA6C,QAAS5R,GAEzEI,EAAa,QAKb,GAHA0b,EAAYtgB,KAAKk1B,qBACjBtwB,EAAa5E,KAAKy1B,iBAClBlV,EAAUvgB,KAAKw3B,uBACG,MAAd5yB,GAAsBA,EAAW5C,OAAS,GAAK4C,EAAW,GAAGxE,MAAQnH,EAAUmqB,UAAW,CAC1F,IAAIA,EAAuBxe,EAAW,GACtC0b,EAAY8C,EAAU5e,SACtB+b,EAAU6C,EAAUxI,WAK5BpU,EAAQjC,KAAK,CACTnE,KAAMnH,EAAUwiC,kBAChBtiC,WAAYA,EACZqL,SAAUA,EACV8b,UAAWA,EACXC,QAASA,EACT1e,WAAYA,EACZ+C,WAAYA,EACZ/D,WAAYy5B,EAAUz5B,WACtBM,WAAYm5B,EAAUn5B,YAAcsuB,GAAax2B,EAAUc,iBAC3D6G,SAAU05B,EAAU15B,SACpBQ,cAAeA,EACfH,WAAYb,EACZm7B,WAAYA,EACZG,YAAapB,EAAUoB,YACvBpH,cAAeA,QAGhB,CAECn7B,GAAcmiC,GACdt7B,KAAKoW,UAAU,gBAAkBklB,EAAY,yDAA0D,QAAS92B,GAGpH,IAAIic,EAA2B,KAE3BzgB,KAAKyU,IAAMxb,EAAUiE,aACrB8C,KAAK80B,YAGDrU,EADArgB,EAAK45B,eAAiB,GAAKh6B,KAAKyU,IAAMxb,EAAU8C,iBAC/BiE,KAAKi6B,kBAAkB75B,GAEvBJ,KAAK02B,aAI9B12B,KAAK81B,OAAO78B,EAAUwF,WAEtB+E,EAAWe,KAAK,CACZnE,KAAMnH,EAAU0iC,qBAChBxiC,WAAYA,EACZqL,SAAUA,EACVugB,cAAe3kB,EACfQ,SAAU05B,EAAU15B,SACpBE,QAASw5B,EAAUx5B,QACnBD,WAAYy5B,EAAUz5B,WACtB4f,eAAgBA,EAChB8a,WAAYA,EACZG,YAAapB,EAAUoB,YACvBpH,cAAeA,IAGf7E,GAAax2B,EAAUc,kBACvBiG,KAAKoW,UAAU,+CAAgD,QAAS5R,KAWxF,MAAO,CAAEgC,QAASA,EAAShD,WAAYA,KAx8D/C,yDA+8DQ,IAAI3B,EAA8B,GAGlC,GAFA7B,KAAK80B,YAED90B,KAAKyU,IAAMxb,EAAU2C,aAErB,OADAoE,KAAK80B,YACE,GAKX,IAFA,IAAIn2B,GAAW,IAEF,CACLA,GACAqB,KAAKoW,UAAU,sEAEnB,IAAItV,EAAUd,KAAKyU,IAAMxb,EAAUsC,aAE/BuF,GAASd,KAAK80B,YAElB,IAAI10B,EAAiBJ,KAAK62B,YAQ1B,IANAl4B,EAAWqB,KAAKyU,IAAMxb,EAAU0F,YAE5BqB,KAAK80B,YACL10B,EAAK45B,kBAGLh6B,KAAK81B,OAAO78B,EAAUE,YAAY,GAAQ,CAC1C,IAAIA,EAAqB6G,KAAKu0B,IAAIr8B,MAClC2J,EAAW0C,KAAK,CACZnE,KAAMnH,EAAU2iC,qBAChBp3B,SAAUxE,KAAKk1B,qBACf/7B,WAAYA,EACZ0iC,cAAez7B,EACfU,QAASA,EACTqB,WAAYxD,IAEhBqB,KAAK80B,YAET,GAAI90B,KAAKyU,IAAMxb,EAAU2F,MACrB,MAEJoB,KAAK80B,YAKT,OAFA90B,KAAK81B,OAAO78B,EAAU2C,cAAc,GAE7BiG,IA7/Df,6CAigE2Bi6B,GAKnB,IALuC,WAEnCC,EAAqB,KACrBC,EAA0B,GAExBh8B,KAAKs1B,WAAW,CAACr8B,EAAUuB,eAAgBvB,EAAUwB,qBAYvD,GAXIuF,KAAKs1B,WAAWr8B,EAAUuB,kBAAoBshC,IAC/B,MAAZC,GACC/7B,KAAKoW,UAAU,uHAAwH,QAAS2lB,EAASv3B,UAE7JxE,KAAK80B,YAEW,OADhBiH,EAAW/7B,KAAK62B,cACQkF,EAAS/B,eAAiB,GAC9Ch6B,KAAKoW,UAAU,qDAAsD,QAAS2lB,EAASv3B,YAIzFs3B,GAAe97B,KAAKs1B,WAAWr8B,EAAUwB,oBAAwBqhC,GAAe97B,KAAKs1B,WAAWr8B,EAAUuB,gBAAkB,CAC3HwhC,EAAYh6B,OAAS,GACpBhC,KAAKoW,UAAU,gIAAiI,WAEpJpW,KAAK80B,YAEL,IADA,IAAIoD,GAAQ,EACJA,GAASl4B,KAAKyU,IAAMxb,EAAUE,aAAiB++B,GAASl4B,KAAKyU,IAAMxb,EAAU2F,OAC5Es5B,GAAOl4B,KAAK80B,YACjBoD,GAAQ,EACR8D,EAAYz3B,KAAKvE,KAAK62B,aAWlC,OANAmF,EAAYjqB,SAAQ,SAACqpB,GACbA,EAAGpB,eAAiB,GACpB,EAAK5jB,UAAUglB,EAAGjiC,WAAa,0FAIhC,CACHyU,QAASmuB,EAAU11B,WAAY21B,KAviE3C,iDA6iEQ,IAAID,EAAqB,KACrBC,EAA0B,GAO9B,IALIh8B,KAAKs1B,WAAWr8B,EAAUuB,kBAC1BwF,KAAK80B,YACLiH,EAAW/7B,KAAK62B,aAGb72B,KAAKs1B,WAAWr8B,EAAUuE,YAC7BwC,KAAK80B,YACLkH,EAAYz3B,KAAKvE,KAAK62B,aAG1B,MAAO,CACHjpB,QAASmuB,EAAU11B,WAAY21B,KA3jE3C,yCA0kEQ,IARA,IAAIn7B,EAAakD,EAAW4C,OACxBxF,GAAa,EACbP,GAAW,EACXE,GAAU,EACV46B,GAAc,EAEdO,GAAO,GAEHA,GAEJ,OAAQj8B,KAAKyU,IACT,KAAKxb,EAAUkB,cACX0G,EAAakD,EAAW4C,OACxB3G,KAAK80B,YACL,MACJ,KAAK77B,EAAUoB,eACXwG,EAAakD,EAAWoJ,QACxBnN,KAAK80B,YACL,MACJ,KAAK77B,EAAUmB,iBACXyG,EAAakD,EAAWgH,UACxB/K,KAAK80B,YACL,MACJ,KAAK77B,EAAUsB,cACXqG,GAAW,EACXZ,KAAK80B,YACL,MACJ,KAAK77B,EAAUiB,gBACXiH,GAAa,EACbnB,KAAK80B,YACL,MACJ,KAAK77B,EAAUsC,aACXuF,GAAU,EACVd,KAAK80B,YACL,MACJ,KAAK77B,EAAUqB,iBACXohC,GAAc,EACd17B,KAAK80B,YACL,MACJ,QAASmH,GAAO,EAKxB,MAAO,CAAE96B,WAAYA,EAAYP,SAAUA,EAAUC,WAAYA,EAAYC,QAASA,EAAS46B,YAAaA,Q,6BA9mEpH,K,uKAEW,GAAAhJ,oBAAsB,CAACz5B,EAAUiE,WAAYjE,EAAUkE,eAAgBlE,EAAUmE,gBACpFnE,EAAUoE,yBAA0BpE,EAAUqE,mBAAoBrE,EAAUsE,iBAC5EtE,EAAU2E,aAAc3E,EAAU4E,aAAc5E,EAAU6E,YAC1D7E,EAAU8E,mBAAoB9E,EAAU+E,oBAAqB/E,EAAUgF,6BAEpE,GAAA+2B,mBAAoC,CAAC,GAAOtC,oBACnD,CAACz5B,EAAUuF,iBAAkB,CAACvF,EAAUyF,OAExC,CAACzF,EAAUyE,IAAK,CAACzE,EAAUwE,KAAM,CAACxE,EAAUiF,IAAK,CAACjF,EAAUkF,KAAM,CAAClF,EAAUuE,WAC7E,CAACvE,EAAU+D,MAAO/D,EAAUgE,UAC5B,CAAChE,EAAUuC,kBAAmBvC,EAAU2D,MAAO3D,EAAU6D,aAAc7D,EAAU4D,QAAS5D,EAAU8D,gBACpG,CAAC9D,EAAUoF,UAAWpF,EAAUqF,WAAYrF,EAAUsF,oBAKtD,CAACtF,EAAUoD,KAAMpD,EAAUkD,OAAQ,CAAClD,EAAUqD,eAAgBrD,EAAUsD,SAAUtD,EAAUmD,SAGrF,GAAA8/B,0BAAA,SACFjjC,EAAUkB,cAAgB4J,EAAW4C,QADnC,MAEF1N,EAAUoB,eAAiB0J,EAAWoJ,SAFpC,MAGFlU,EAAUmB,iBAAmB2J,EAAWgH,WAHtC,IAMA,GAAAoxB,qBAAuB,CAACljC,EAAUkB,cAAelB,EAAUoB,eAAgBpB,EAAUmB,iBAAkBnB,EAAUgB,YACxHhB,EAAUE,WAAYF,EAAU+C,kBAAmB/C,EAAUsB,cAAetB,EAAUiB,gBACtFjB,EAAUU,aAAcV,EAAUe,YAAaf,EAAUc,kBAuPlD,GAAAygC,YAA2B,CAACvhC,EAAUU,aAAcV,EAAUe,YAAaf,EAAUc,kBACrF,GAAAqiC,iBAAgC,CAACnjC,EAAUoB,eAAgBpB,EAAUmB,iBAAkBnB,EAAUkB,eACjG,GAAAo7B,4BAA2C,GAAOiF,YAAYtyB,OAAO,GAAOk0B,kBAAkBl0B,OAAOjP,EAAUiB,iBAAiBgO,OAAO,GAAOsyB,aCpRlJ,IAAM,GAAb,yB,4FAAA,S,UAAA,O,EAAA,G,EAAA,8BASWtiC,GACH8H,KAAKq8B,iBAAmB,IAAIv8B,IAC5BE,KAAKs8B,UAAY,EACjB,IAAIC,EAAOC,KAAKC,UAAUz8B,KAAK08B,UAAUxkC,IAEzC,OADA8H,KAAKq8B,iBAAmB,KACjBE,IAdf,gCAiBcrkC,GAAY,WACdkI,EAAOlI,EAAMkI,KACbyD,EAAI3L,EAAMA,MACd,GAAS,MAAL2L,EAAW,OAAO,KAEtB,IAAKzD,aAAgB,GAASA,aAAgB,IAAiC,UAAnBA,EAAKjH,WAAwB,CAErF,GAAIiH,aAAgB,GAEhB,OADiCyD,EAClBwZ,UAAUQ,QAG7B,IAAI8e,EAAqB94B,EACzB,OAAO7D,KAAK48B,gBAAgBD,GACzB,OAAIv8B,aAAgB,EACIyD,EACRd,KAAI,SAAA7K,GAAK,OAAI,EAAKwkC,UAAUxkC,MAGxCA,EAAMA,QApCzB,sCAwCoBykC,GAEZ,IAAIv6B,EAAQpC,KAAKq8B,iBAAiBvkC,IAAI6kC,GACtC,GAAa,MAATv6B,EACA,MAAO,CAAE,KAAMA,GAGnBA,EAAQpC,KAAKs8B,YACbt8B,KAAKq8B,iBAAiBl3B,IAAIw3B,EAAKv6B,GAC/B,IAAIc,EAAsBy5B,EAAIv5B,MAG9B,GAAIF,EAAMlM,OAAOuQ,gBAAmE,MAAjDrE,EAAM+iB,qBAAqB,mBAC1D,OAAO,KAIX,IADA,IAAI4W,EAAqC,CAAE,KAAM35B,EAAM/J,WAAY,KAAMiJ,GACzD,MAATc,GAAe,CAClB,IAAIg1B,GAAiB,EACjB4E,OAAyB,EAFX,uBAGlB,YAAsB55B,EAAMM,WAA5B,+CAAwC,KAA/BiF,EAA+B,QAC/BA,EAAU7H,UAAa6H,EAAUizB,cAC9BxD,IACAA,GAAQ,EACR4E,EAAuB,GACvBD,EAAiB35B,EAAM/J,YAAc2jC,GAEzCA,EAAqBr0B,EAAUtP,YAAc6G,KAAK08B,UAAUC,EAAIn5B,WAAWiF,EAAUrG,UAV3E,kFAclBc,EAAQA,EAAMY,UAGlB,OAAO+4B,IA1Ef,+BA6EaE,EAAoB38B,EAAYoe,EAA0Bwe,GAC/Dh9B,KAAKi9B,iBAAmB,GACxBj9B,KAAKk9B,gBAAkB,GAEvB,IAAIC,EAAWX,KAAKY,MAAML,GACtBnH,EAAM51B,KAAKq9B,YAAYF,EAAK/8B,EAAMoe,EAAawe,GALoC,uBAOvF,YAAgBh9B,KAAKk9B,gBAArB,+CAAsC,KAA7BI,EAA6B,QAC9BplC,EAAQ8H,KAAKi9B,iBAAiBK,EAAIrmC,GACzB,MAATiB,IACAolC,EAAIz5B,EAAEzD,KAAOlI,EAAMkI,KACnBk9B,EAAIz5B,EAAE3L,MAAQA,EAAMA,QAX2D,kFAiBvF,OAFA8H,KAAKi9B,iBAAmB,KACxBj9B,KAAKk9B,gBAAkB,KAChBtH,EAAI19B,QA9FnB,kCAiGgBilC,EAAU/8B,EAAYoe,EAA0Bwe,GAAwB,WAChF,GAAW,MAAPG,EAAa,MAAO,CAAE/8B,KAAMA,EAAMlI,MAAO,MAE7C,IAAKkI,aAAgB,GAASA,aAAgB,IAAiC,UAAnBA,EAAKjH,WAAwB,CAErF,GAAIiH,aAAgB,GAChB,MAAO,CACHA,KAAMA,EACNlI,MAAOkI,EAAKqd,eAAe0f,GAAKxkC,QAIxC,IAAIkkC,EAAqCM,EACzC,OAAOn9B,KAAKu9B,kBAAkBV,EAAkBz8B,EAAMoe,EAAawe,GAEhE,OAAI58B,aAAgB,EAEhB,CACHA,KAAMA,EACNlI,MAHmBilC,EAGFp6B,KAAI,SAAAc,GAAC,OAAI,EAAKw5B,YAAYx5B,EAAGzD,EAAKmC,YAAaic,EAAawe,OAI1E,CAAE58B,KAAMA,EAAMlI,MAAOilC,KAxHxC,wCA6HsBN,EAAoCz8B,EAAyBoe,EAC3Ewe,GAEA,IAAI7jC,EAAqB0jC,EAAiB,MACtCz6B,EAAQy6B,EAAiB,MAC7B,GAAkB,MAAd1jC,EAAoB,CAOpB,IALA,IAAIqkC,EAAuBhf,EAAYF,QAAQnlB,GAAYiH,KACvD8C,EAAQs6B,EAERb,EAAqBK,EAAYS,6BAA6Bv6B,GAElD,MAATA,GAAe,CAClB,IAAIM,EAAam5B,EAAIn5B,WACjBs5B,EAAuBD,EAAiB35B,EAAM/J,YAClD,GAAkB,MAAdqK,GAA0C,MAApBq5B,EAA0B,4BAChD,YAAsB35B,EAAMM,WAA5B,+CAAwC,KAA/BiF,EAA+B,QAC/BA,EAAU7H,UAAa6H,EAAUizB,cAClCl4B,EAAWiF,EAAUrG,OAASpC,KAAKq9B,YAAYP,EAAqBr0B,EAAUtP,YAAasP,EAAUrI,KAAMoe,EAAawe,KAHhF,mFAQpD95B,EAAQA,EAAMY,UAGlB,IAAI5L,EAAe,CAAEkI,KAAMo9B,EAAQtlC,MAAOykC,GAE1C,OADA38B,KAAKi9B,iBAAiB76B,GAASlK,EACxBA,EAGP,IAAI,EAAQ2kC,EAAiB,MACzB,EAAQ78B,KAAKi9B,iBAAiB,GAClC,OAAa,MAAT,GACA,EAAQ,CAAE78B,KAAMA,EAAMlI,MAAO,MAC7B8H,KAAKk9B,gBAAgB34B,KAAK,CAAEV,EAAG,EAAO5M,EAAG,IAClC,GAEA,CAAEmJ,KAAM,EAAMA,KAAMlI,MAAO,EAAMA,Y,6BAnKxD,K,uKCSO,ICXKwlC,GDWC,GAAb,WAiBI,WAAoB/I,I,4FAAc,SAAd,KAAAA,OATpB,KAAAgJ,6BAA4D,IAAI79B,IAIhE,KAAA89B,aAAgC,GAChC,KAAAC,+BAAkD,GAElD,KAAAC,kBAAyC,G,UAf7C,O,EAAA,G,EAAA,6BAqBUtf,GAEFxe,KAAK+9B,QAAU,GACf/9B,KAAKg+B,WAAa,GAClBh+B,KAAKi+B,MAAQ,GACbj+B,KAAKk+B,gBAAkB,IAAIp+B,IAE3BE,KAAKwe,YAAcA,EAEnBxe,KAAKm+B,wBAELn+B,KAAKo+B,4BAEL,IAAIC,EAAkCr+B,KAAKs+B,uBAE3Ct+B,KAAKu+B,wBAAuB,GAE5Bv+B,KAAKw+B,oBAAoBH,GAEzBr+B,KAAKy+B,2BAEL,IAAIC,EAAyB1+B,KAAKw+B,oBAAoBx+B,KAAK49B,cAE3D59B,KAAKu+B,wBAAuB,GAE5Bv+B,KAAKw+B,oBAAoBE,GAEzB1+B,KAAK2+B,4BAEL3+B,KAAK4+B,kCAEL5+B,KAAK6+B,oCAEL7+B,KAAK8+B,0BAtDb,8CA0DyB,2BACjB,YAAc9+B,KAAK+9B,QAAnB,+CAA2B,KAAnBgB,EAAmB,QACvBA,EAAGnf,aAAa7Y,iCACkB,MAA/Bg4B,EAAGnf,aAAahZ,aACfm4B,EAAGnf,aAAahZ,YAAYG,kCAJnB,6GAOjB,YAAc/G,KAAKi+B,MAAnB,+CAAyB,KAAjB,EAAiB,QACrB,EAAGre,aAAa7Y,iCACkB,MAA/B,EAAG6Y,aAAahZ,aACf,EAAGgZ,aAAahZ,YAAYG,kCAVnB,qFA1DzB,0DA0EqC,2BAE7B,YAAe/G,KAAK49B,aAApB,+CAAkC,KAAzBoB,EAAyB,QAC9B,GAAyC,MAArCA,EAAGrd,SAASmY,sBAAhB,CAEA,IAAImF,EAA6BD,EAAGrd,SAAS/B,aAE7C,GAA+B,MAA3Bqf,EAAG/3B,qBAEP,GAAI+3B,EAAG/4B,cAAclE,QAAUi9B,EAAG/3B,qBAAqBhB,cAAclE,OAArE,CASA,IAAK,IAAI/K,EAAI,EAAGA,EAAIgoC,EAAG/4B,cAAclE,OAAQ/K,IAAK,CAE9C,IAAI8U,EAAgB,KAEhBmzB,EAAaD,EAAG/4B,cAAcjP,GAC9BkoC,EAAYF,EAAG/3B,qBAAqBhB,cAAcjP,GAClDmoC,EAAuBJ,EAAGrd,SAASmY,sBAAsB7iC,GAC7DioC,EAAW5e,UAAY6e,EAAU7e,UACjC4e,EAAW3e,QAAU4e,EAAU5e,QAC/B2e,EAAW/lC,WAAagmC,EAAUhmC,WAElC4S,EAAQ,GACHmzB,EAAW9+B,KAAK8O,gBAAgBiwB,EAAU/+B,QAC3C2L,GAAS,cAAgBmzB,EAAW9+B,KAAKjH,WAAa,8BAAgCgmC,EAAU/+B,KAAKjH,WAAa,yCAA2CgmC,EAAUhmC,WAAa,eAAiB8lC,EAAG/3B,qBAAqB/N,WAAa,MAG9O,IAAIkmC,EAAmB,GAhBuB,uBAiB9C,YAAwBF,EAAU/+B,KAAKiG,WAAvC,+CAAmD,KAA1Ci5B,EAA0C,QAC1CJ,EAAW9+B,KAAKm/B,oBAAoBD,IACrCD,EAAO96B,KAAK+6B,EAAYnmC,aAnBc,kFAuB1CkmC,EAAOr9B,OAAS,IAChB+J,GAAS,cAAgBmzB,EAAW/lC,WAAa,uCAAyCkmC,EAAOp8B,KAAK,OAG7F,IAAT8I,GACAizB,EAAGhoC,OAAOid,OAAO,GAAG1P,KAAK,CACrBC,SAAU46B,EAAqB56B,SAC/BoR,KAAM,qEAAuE7J,EAC7E+J,MAAO,UAMnB9V,KAAKw/B,2CAA2CP,QA7C5CD,EAAGhoC,OAAOid,OAAO,GAAG1P,KAAK,CACrBC,SAAUw6B,EAAGrd,SAASnd,SACtBoR,KAAM,sBAAwBqpB,EAAG/3B,qBAAqB/N,WAAa,QAAU8lC,EAAG/3B,qBAAqBhB,cAAclE,OAAS,mCAAqCi9B,EAAG/4B,cAAclE,OAAS,cAC3L8T,MAAO,YAbU,qFA1ErC,iEAuI+C2pB,GAEvC,GAAwB,MAApBA,GAAqE,MAAzCA,EAAiBv4B,sBAAyE,GAAzCu4B,EAAiBv5B,cAAclE,OAAa,CAEzH,IAAI09B,GAA6B,EAC7BC,EAA0B,GAH2F,uBAIzH,YAAcF,EAAiBj5B,QAA/B,+CAAwC,KAA/BnP,EAA+B,QAChCuoC,EAAY5/B,KAAK6/B,kBAAkBxoC,EAAGooC,EAAiBv5B,eAC3Dw5B,EAAoBA,GAAqBE,EAAUE,QACnDH,EAAcp7B,KAAKq7B,EAAUA,YAPwF,kFAYzH,GAFIF,IAAmBD,EAAiBj5B,QAAUm5B,GAE9CF,aAA4B,EAAO,CAEnC,IAAIM,EAA6B,GAC7BC,EAA0C,IAAIlgC,IAC9CmgC,GAA6B,EAJE,uBAMnC,YAAsBR,EAAiBj8B,WAAvC,+CAAmD,KAA1CiF,EAA0C,QAC3Cy3B,EAAelgC,KAAKmgC,qBAAqB13B,EAAWg3B,EAAiBv5B,eACzE+5B,EAAoBA,GAAqBC,EAAaJ,QACtDC,EAAcx7B,KAAK27B,EAAaA,cAChCF,EAAgB76B,IAAIsD,EAAUtP,WAAY+mC,EAAaA,eAVxB,kFAa/BD,IACAR,EAAiBj8B,WAAau8B,EAC9BN,EAAiB/4B,aAAes5B,GAGpChgC,KAAKw/B,2CAA2CC,EAAiB37B,eAK9D,4BACH,YAAgB27B,EAAiB7xB,QAAjC,+CAA0C,KAAjCwyB,EAAiC,QACtCpgC,KAAKw/B,2CAA2CY,IAFjD,uFA5KnB,2CAqLyB33B,EAAsBvC,GAEvC,IAAIm6B,EAAKrgC,KAAKsgC,gBAAgB73B,EAAUrI,KAAM8F,GAAe,GAC7D,GAAIm6B,EAAGP,QAAS,CACZ,IAAIl4B,EAAejQ,OAAOY,OAAOkQ,GAEjC,OADAb,EAAExH,KAAOigC,EAAGne,QACL,CAAE4d,SAAS,EAAMI,aAAct4B,GAEtC,MAAO,CAAEk4B,SAAS,EAAOI,aAAcz3B,KA7LnD,wCAkMsB/G,EAAgBwE,GAE9B,IAAIq6B,EAAMvgC,KAAKsgC,gBAAgB5+B,EAAOT,WAAYiF,GAAe,GAE7Ds6B,GAA4B,EAC5BC,EAA4B,GAL2B,uBAM3D,YAAc/+B,EAAOV,cAAca,WAAnC,+CAA+C,KAAtC9I,EAAsC,QACvCsnC,EAAKrgC,KAAKsgC,gBAAgBvnC,EAAEqH,KAAM8F,GAAe,GACrD,GAAIm6B,EAAGP,QAAS,CACZU,GAAmB,EACnB,IAAIE,EAAiB/oC,OAAOY,OAAOQ,GACnC2nC,EAAKtgC,KAAOigC,EAAGne,QACfue,EAAcl8B,KAAKm8B,QAEnBD,EAAcl8B,KAAKxL,IAdgC,kFAkB3D,GAAIwnC,EAAIT,SAAWU,EAAkB,CACjC,IAAIZ,EAAoBjoC,OAAOY,OAAOmJ,GAKtC,OAJI6+B,EAAIT,UAASF,EAAU3+B,WAAas/B,EAAIre,SACxCse,IACAZ,EAAU5+B,cAAgB,IAAI6B,EAAc49B,IAEzC,CAAEX,SAAS,EAAMF,UAAWA,GAEnC,MAAO,CAAEE,SAAS,EAAOF,UAAWl+B,KA5NhD,sCAiOoBtB,EAAY8F,EAA+By6B,GAEvD,GAAY,MAARvgC,EAAc,MAAO,CAAE0/B,SAAS,EAAO5d,QAAS9hB,GAEpD,GAA8B,GAA1BA,EAAI,eAA4B,4BAChC,YAAe8F,EAAf,+CAA8B,KAArBlD,EAAqB,QAC1B,GAAIA,EAAG7J,YAAciH,EAAKjH,WACtB,MAAO,CAAE2mC,SAAS,EAAM5d,QAASlf,EAAG5C,OAHZ,kFAMhC,MAAO,CAAE0/B,SAAS,EAAO5d,QAAS9hB,GAGtC,IAAKA,aAAgB,GAASA,aAAgB,IAAcA,EAAK8F,cAAclE,OAAS,EAAG,CACvF,IAAI4+B,EAAmC,GACnCd,GAAmB,EAFgE,uBAGvF,YAAe1/B,EAAK8F,cAApB,+CAAmC,KAA1B,EAA0B,QAC3Bm6B,EAAKrgC,KAAKsgC,gBAAgB,EAAGlgC,KAAM8F,GAAe,GAClDm6B,EAAGP,SACHc,EAAiBr8B,KAAK,CAClBpL,WAAY,EAAGA,WACfmnB,UAAW,EAAGA,UACdC,QAAS,EAAGA,QACZngB,KAAaigC,EAAGne,UAEpB4d,GAAU,GAEVc,EAAiBr8B,KAAK,IAdyD,kFAiBvF,GAAIu7B,EAAS,CACT,IAAIe,EAAoBzgC,EAAK0gC,QAG7B,OAFAD,EAAkB36B,cAAgB06B,EAC9BD,GAAqC3gC,KAAKw/B,2CAA2CqB,GAClF,CAAEf,SAAS,EAAM5d,QAAS2e,GAEjC,MAAO,CAAEf,SAAS,EAAO5d,QAAS9hB,GAI1C,GAAGA,aAAgB,EAAU,CACzB,IAAI,EAAKJ,KAAKsgC,gBAAgBlgC,EAAKmC,YAAa2D,EAAey6B,GAC/D,MAAO,CACHb,QAAS,EAAGA,QACZ5d,QAAS,EAAG4d,QAAU,IAAI,EAAU,EAAG5d,SAAW9hB,GAI1D,MAAO,CAAE0/B,SAAS,EAAO5d,QAAS9hB,KAjR1C,0CAoRwBw9B,GAGhB,IAFA,IAAI3B,GAAgB,EAChB8E,EAA4BnD,EAAarwB,MAAM,IAC3C0uB,GAAM,CACVA,GAAO,EACP,IAAK,IAAIhlC,EAAI,EAAGA,EAAI8pC,EAAS/+B,OAAQ/K,IAAK,CACtC,IAAI+nC,EAAK+B,EAAS9pC,GAEd+I,KAAKghC,mBAAmBhC,KACxB/C,GAAO,GAE8B,MAArC+C,EAAGrd,SAASmY,uBAA8E,MAA7CkF,EAAGrd,SAASsf,gCACzDF,EAAShpB,OAAOgpB,EAAS37B,QAAQ45B,GAAK,GACtC/nC,MAMZ,OAAO8pC,IAvSf,yCA2SuB/B,GAEf,GAAiD,MAA7CA,EAAGrd,SAASsf,8BAAuC,OAAO,EAC9D,GAAyC,MAArCjC,EAAGrd,SAASmY,sBAA+B,OAAO,EAOtD,IAAImF,EAA6BD,EAAGrd,SAAS/B,aAC7C,GAAU,MAANqf,KAAgBA,aAAc,GAAaA,aAAc,GAEzD,OADAD,EAAGrd,SAASmY,sBAAwB,MAC7B,EAGX,IAAKmF,EAAG74B,mBAAoB,OAAO,EAGnC,IADA,IAAIkF,EAAwC,GACnC,EAAI,EAAG,EAAI0zB,EAAGrd,SAASmY,sBAAsB93B,OAAQ,IAAK,CAC/D,IAAIo9B,EAAuBJ,EAAGrd,SAASmY,sBAAsB,GACzDla,EAAewf,EAAqBxf,aAExC,GAAoB,MAAhBA,EACA,OAAO,EAGX,GAAkD,MAA9Cwf,EAAqBtF,uBAAuF,MAAtDsF,EAAqB6B,8BAC3E,OAAO,EAGX,KAAMrhB,aAAwB,GAAaA,aAAwB,GAO/D,OANAof,EAAGhoC,OAAOid,OAAO,GAAG1P,KAAK,CACrBC,SAAU46B,EAAqB56B,SAC/BoR,KAAM,8DAAgEwpB,EAAqBjmC,WAAa,oBACxG2c,MAAO,UAEXkpB,EAAGrd,SAASmY,sBAAwB,MAC7B,EAGXxuB,EAAe/G,KAAU66B,EAAqBxf,cAIlD,IAAIshB,EAA8C,IAAIphC,IAEtD,GAAIm/B,EAAG/4B,cAAclE,QAAUsJ,EAAetJ,OAO1C,OANAg9B,EAAGhoC,OAAOid,OAAO,GAAG1P,KAAK,CACrBC,SAAUw6B,EAAGrd,SAASnd,SACtBoR,MAAOqpB,aAAc,EAAQ,cAAgB,kBAAoBA,EAAG9lC,WAAa,QAAU8lC,EAAG/4B,cAAclE,OAAS,iCAAmCsJ,EAAetJ,OAAS,cAChL8T,MAAO,UAEXkpB,EAAGrd,SAASmY,sBAAwB,MAC7B,EAIX,IADA,IAAI7iC,EAAI,EACR,MAAiBqU,EAAjB,eAAiC,CAA5B,IAAIlL,EAAI,KAEL+gC,EAAkBlC,EAAG/4B,cAAcjP,GAEvC,GAAImJ,aAAgB,EAAW,CAC3B,IAAIghC,EAAQ,GAAWN,QACvBM,EAAM/6B,WAAW9B,KAAKnE,GACtBA,EAAOghC,EAGX,IAAIC,EAAkB,CAClBloC,WAAYgoC,EAAgBhoC,WAC5BmnB,UAAW6gB,EAAgB7gB,UAC3BC,QAAS4gB,EAAgB5gB,QACzBngB,KAAMA,GAGV8gC,EAAyB/7B,IAAI85B,EAAG/4B,cAAcjP,GAAGmJ,KAAMihC,EAAgBjhC,MACvEnJ,IAGJ,IAAIqqC,EACAthC,KAAKuhC,4DAA4DtC,EAAIiC,GAKzE,OAHAlC,EAAGrd,SAAS/B,aAAe0hB,EAC3BtC,EAAGrd,SAASsf,+BAAgC,GAErC,IAhYf,kFAmYgExB,EACxDyB,GAEA,GAAIzB,aAA4B,EAAO,CACnC,IAAI+B,EAAkB/B,EAAiBqB,QAEvCU,EAASt7B,cAAgB,GAHU,2BAInC,YAAeu5B,EAAiBv5B,cAAhC,+CAA+C,KAAtClD,EAAsC,QACvCkf,EAAUgf,EAAyBppC,IAAIkL,EAAG5C,MAC1CqhC,EAAMz+B,EACK,MAAXkf,IACAuf,EAAM,CACFtoC,WAAY6J,EAAG7J,WACfmnB,UAAWtd,EAAGsd,UACdC,QAASvd,EAAGud,QACZngB,KAAM8hB,IAGdsf,EAASt7B,cAAc3B,KAAKk9B,IAfG,kFAkBnC,IAAIC,EAAYjC,EAAiB37B,UAChB,MAAb49B,GAAuD,MAAlCA,EAAUx6B,sBAE/Bs6B,EAASpjB,aAAoBpe,KAAKuhC,4DAA4DG,EAAWR,IAI7GM,EAASn7B,WAAa,GAzBa,2BA0BnC,YAAiBo5B,EAAiBp5B,WAAlC,+CAA8C,KAArCs7B,EAAqC,QACT,MAA7BA,EAAKz6B,qBACLs6B,EAASn7B,WAAW9B,KAAKo9B,GAEzBH,EAASn7B,WAAW9B,KAAgBvE,KAAKuhC,4DAA4DI,EAAMT,KA9BhF,kFAkCnC,OAAOM,EAGP,IAAI1zB,EAA0B2xB,EAAiBqB,QAE/ChzB,EAAa5H,cAAgB,GAH1B,2BAIH,YAAeu5B,EAAiBv5B,cAAhC,+CAA+C,KAAtC,EAAsC,QACvC,EAAUg7B,EAAyBppC,IAAI,EAAGsI,MAC1C,EAAM,EACK,MAAX,IACA,EAAM,CACFjH,WAAY,EAAGA,WACfmnB,UAAW,EAAGA,UACdC,QAAS,EAAGA,QACZngB,KAAM,IAGd0N,EAAa5H,cAAc3B,KAAK,IAfjC,kFAkBHuJ,EAAaF,QAAU,GAlBpB,2BAmBH,YAAiB6xB,EAAiB7xB,QAAlC,+CAA2C,KAAlC,EAAkC,QACN,MAA7B,EAAK1G,qBACL4G,EAAaF,QAAQrJ,KAAK,GAE1BuJ,EAAaF,QAAQrJ,KAAgBvE,KAAKuhC,4DAA4D,EAAML,KAvBjH,kFA2BH,OAAOpzB,IArcnB,wDA4cQ,IAAI8zB,EAA2C,IAAI9hC,IADxB,uBAG3B,YAAmBE,KAAKwe,YAAY8F,YAAW,GAA/C,+CAAuD,KAA9CttB,EAA8C,+BACnD,YAAiBA,EAAOqnB,UAAUmG,SAAlC,+CAA4C,KAAnCpkB,EAAmC,QACpCyhC,EAAcD,EAAoB9pC,IAAIsI,EAAKjH,YAC/C,GAAmB,MAAf0oC,EAAqB,CACrB7qC,EAAOid,OAAO,GAAG1P,KAAK,CAClBqR,KAAM,qBAAuBxV,EAAKjH,WAAa,qDAC3CnC,EAAO8qC,KAAKtqC,KAAO,QAAUqqC,EAAYC,KAAKtqC,KAAO,IACzDgN,SAAUpE,EAAK8P,YAAY1L,SAC3BsR,MAAO,UAEX,IAAIisB,EAAYF,EAAYxjB,UAAUC,QAAQle,EAAKjH,YAClC,MAAb4oC,GACAF,EAAY5tB,OAAO,GAAG1P,KAAK,CACvBqR,KAAM,qBAAuBxV,EAAKjH,WAAa,qDAC3C0oC,EAAYC,KAAKtqC,KAAO,QAAUR,EAAO8qC,KAAKtqC,KAAO,IACzDgN,SAAUu9B,EAAU7xB,YAAY1L,SAChCsR,MAAO,eAIf8rB,EAAoBz8B,IAAI/E,EAAKjH,WAAYnC,IApBE,oFAH5B,kFA4B3B,IAAIgrC,EAAahiC,KAAKwe,YAAYyjB,gBA5BP,uBA8B3B,YAAejiC,KAAK89B,kBAApB,+CAAuC,KAA9B7C,EAA8B,QAC/B,EAASA,EAAGgE,GAAGjoC,OACf,EAAc4qC,EAAoB9pC,IAAImjC,EAAGiH,IAAI/oC,YAKjD,GAJmB,MAAf,GAEkB,MADD6oC,EAAW3jB,UAAUC,QAAQ2c,EAAGiH,IAAI/oC,cAC7B,EAAc6oC,GAEvB,MAAf,EAAqB,CACrB,EAAO/tB,OAAO,GAAG1P,KAAK,CAClBqR,KAAM,qBAAuBqlB,EAAGiH,IAAI/oC,WAAa,qDAC7C,EAAO2oC,KAAKtqC,KAAO,QAAU,EAAYsqC,KAAKtqC,KAAO,IACzDgN,SAAUy2B,EAAGiH,IAAI19B,SACjBsR,MAAO,UAEX,IAAI,EAAY,EAAYuI,UAAUC,QAAQ2c,EAAGiH,IAAI/oC,YACpC,MAAb,GAAqB,GAAe6oC,GACpC,EAAY/tB,OAAO,GAAG1P,KAAK,CACvBqR,KAAM,qBAAuBqlB,EAAGiH,IAAI/oC,WAAa,qDAC7C,EAAY2oC,KAAKtqC,KAAO,QAAU,EAAOsqC,KAAKtqC,KAAO,IACzDgN,SAAU,EAAU0L,YAAY1L,SAChCsR,MAAO,YAlDI,qFA3cnC,6CAugB2BqsB,GAAiB,2BACpC,YAAmBniC,KAAKwe,YAAY8F,YAAW,GAA/C,+CAAuD,QAC5C8d,iBAAmB,IAAItiC,IAFE,6GAKpC,YAAmBE,KAAKwe,YAAY8F,YAAW,GAA/C,+CAAuD,KAA9C,EAA8C,QAC/C+d,EAAKriC,KAAKk+B,gBAAgBpmC,IAAI,GAC9BwqC,EAAoB,GAF2B,uBAGnD,YAAiBD,EAAjB,+CAAqB,KAAZjiC,EAAY,QACZJ,KAAKuiC,YAAYniC,EAAM,EAAQ+hC,IAChCG,EAAM/9B,KAAKnE,IALgC,kFAQnDJ,KAAKk+B,gBAAgB/4B,IAAI,EAAQm9B,IAbD,qFAvgB5C,wCAwhBsBp/B,GAAY,WACtB85B,EAAch9B,KAAK20B,KAAK6N,iBAC5Bt/B,EAAMoH,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,aAAciH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACzGoC,GACA,SAACrB,GACG,IAAI06B,EAAe16B,EAAW,GAAG3J,MACjC,OAAO,IAAI,IAAWuqC,SAASlG,EAAMr5B,EAAO,EAAKsb,YAAawe,MAC/D,GAAO,EANE,oDAMiD95B,EAAM/J,WANvD,0PAM0T,MAhiBlV,sCAoiBoB+J,GACZA,EAAMoH,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAAKwJ,IACxD,SAACxK,GACG,OAAO,IAAI,IAAW6gC,OAAO7gC,EAAW,OACzC,GAAO,EAHE,4NAriBxB,kDA+iBQ,IAAI8gC,EAAiE,GAErEA,GADAA,EAAiBA,EAAez6B,OAAOlI,KAAK+9B,UACZ71B,OAAOlI,KAAKi+B,OAJvB,2BAMrB,YAAe0E,EAAf,+CAA+B,KAAtBC,EAAsB,+BAC3B,YAAeA,EAAGp8B,QAAlB,+CAA2B,KAAlBq8B,EAAkB,QACnBxrC,EAAY2I,KAAK8iC,YAAYD,EAAID,EAAGhjB,aAAa5oB,OAAQ4rC,EAAGhjB,cACvD,MAALvoB,IACuB,MAApBwrC,EAAGvO,gBAAuBj9B,EAAE0I,cAAgB,GAAK8iC,EAAGvO,cAAcp8B,OACrE0qC,EAAGhjB,aAAatV,UAAUjT,KALP,kFAS3B2I,KAAK+iC,kBAAkBH,EAAGhjB,cAC1B5f,KAAKgjC,gBAAgBJ,EAAGhjB,cAVG,2BAY3B,YAAgBgjB,EAAGp/B,WAAnB,+CAA+B,KAAtBI,EAAsB,QAE3B5D,KAAKuiC,YAAY3+B,EAAImhB,cAAe6d,EAAGhjB,aAAa5oB,QAAQ,GAC5D,IAAIoJ,EAAOwD,EAAImhB,cAAcnF,aAC7B,GAAY,MAARxf,EAAJ,CAIA,IAAIqI,EAAuB,IAAI/H,EAAUkD,EAAIzK,WAAYiH,EAAM,KAAMwD,EAAIhD,SAAUgD,EAAI/C,WAAY+C,EAAI9C,SACvG8C,EAAIgc,aAAenX,EACK,MAArB7E,EAAI0wB,gBAAuB7rB,EAAU1I,cAAgB,GAAK6D,EAAI0wB,cAAcp8B,OAC/EuQ,EAAU8yB,WAAa33B,EAAI23B,WAC3B9yB,EAAUizB,YAAc93B,EAAI83B,YACkC,MAA1DkH,EAAGhjB,aAAalZ,aAAa5O,IAAI2Q,EAAUtP,aAC3CypC,EAAGhjB,aAAa5oB,OAAOid,OAAO,GAAG1P,KAAK,CAClCqR,KAAM,6DAA+DnN,EAAUtP,WAAa,gCAC5FqL,SAAUZ,EAAIY,SAAUsR,MAAO,UAGvC8sB,EAAGhjB,aAAarV,aAAa9B,GAE7BzI,KAAK+rB,kBAAkB6W,EAAGhjB,aAAa5oB,OAAQ4M,EAAIY,SAAUiE,GAC7DA,EAAUyH,YAAc,CAAElZ,OAAQ4rC,EAAGhjB,aAAa5oB,OAAQwN,SAAUZ,EAAIY,YAlCjD,oFANV,6GA6CrB,YAAexE,KAAKg+B,WAApB,+CAAgC,KAAvBiF,EAAuB,+BAC5B,YAAeA,EAAGz8B,QAAlB,+CAA2B,KAAlB,EAAkB,QACnB08B,EAAaljC,KAAK8iC,YAAY,EAAIG,EAAGrjB,aAAa5oB,OAAQisC,EAAGrjB,cACvD,MAANsjB,GACAD,EAAGrjB,aAAatV,UAAU44B,IAJN,oFA7CX,qFA7iB7B,kCAqmBgBL,EAA2BxrC,EAAWC,GAE9C,IAAI6rC,GAAU,EAEdA,EAAUA,GAAWnjC,KAAKuiC,YAAYM,EAAG5hC,WAAY5J,GAAG,GAExD,IAAIwK,EAAyB,GANqC,uBAOlE,YAAgBghC,EAAGhhC,WAAnB,+CAA+B,KAAtBuhC,EAAsB,QAE3B,GADAD,EAAUA,GAAWnjC,KAAKuiC,YAAYa,EAAIvH,cAAexkC,GAAG,GAC/C,CACT,IAAI+iC,EAAY,CACZiJ,WAAYD,EAAI5+B,SAChBrL,WAAYiqC,EAAIjqC,WAChB0G,eAAgB,IAAIC,IACpBM,KAAMgjC,EAAIvH,cAAcjc,aACxB1P,YAAa,CAAElZ,OAAQK,EAAGmN,SAAU4+B,EAAI5+B,UACxC1D,QAASsiC,EAAItiC,QACbqB,WAAYihC,EAAIjhC,YAEpBN,EAAW0C,KAAK61B,GAChBp6B,KAAK+rB,kBAAkB10B,EAAG+rC,EAAI5+B,SAAU41B,KApBkB,kFA0BlE,IAAIkJ,EAAoB,IAAIzgC,EAAchB,GAE1C,GAAIshC,EAAS,CACT,IAAIzhC,EAAS,IAAIX,EAAO8hC,EAAG1pC,WAAYmqC,EAAIT,EAAG5hC,WAAW2e,aAAc,KAAMijB,EAAG1hC,WAAY0hC,EAAGjiC,UAa/F,OAZAc,EAAON,cAAgByhC,EAAG1pC,YAAc7B,EAAE6B,WAC1CuI,EAAOb,WAAagiC,EAAGhiC,WACvBa,EAAON,cAAgByhC,EAAGzhC,cAC1ByhC,EAAGjjB,aAAele,EAClBA,EAAO65B,WAAasH,EAAGtH,WAEvBv7B,KAAK+rB,kBAAkB10B,EAAGwrC,EAAGr+B,SAAU9C,GACvCA,EAAOwO,YAAc,CACjBlZ,OAAQK,EACRmN,SAAUq+B,EAAGr+B,UAGV9C,EAGX,OAAO,OAlpBf,wCAqpBsBrK,EAAWmN,EAAwBosB,GAIjD,GAFAv5B,EAAEw5B,sBAAsBrsB,EAAUosB,KAE9BA,aAAmB3wB,GAAvB,CAIA,IAAIsxB,EAA+BX,EAAQ/wB,eAAe/H,IAAIT,GAC1C,MAAhBk6B,IACAA,EAAe,GACfX,EAAQ/wB,eAAesF,IAAI9N,EAAGk6B,IAGlCA,EAAahtB,KAAKC,MAnqB1B,kCAuqBgBw6B,EAAc3nC,EAAW8qC,GACjC,GAAuB,MAAnBnD,EAAGpf,aAAsB,CACzB,IAAI2jB,EAAavjC,KAAKwe,YAAYF,QAAQ0gB,EAAG7lC,YAC7C,GAAkB,MAAdoqC,EAAoB,CACpB,IAAInjC,EAAOmjC,EAAWnjC,KAMtB,OALA/I,EAAE+qC,iBAAiBj9B,IAAIo+B,EAAWvsC,QAAQ,GAC1CgJ,KAAK+rB,kBAAkB10B,EAAG2nC,EAAGx6B,SAAUpE,GACvCA,EAAOojC,GAAapjC,EAAM4+B,EAAGhF,gBAC7Bh6B,KAAKyjC,oBAAoBzE,EAAI3nC,GAAG,GAChC2nC,EAAGpf,aAAexf,GACX,EAGX,IAAI09B,EAAoB99B,KAAK29B,6BAA6B7lC,IAAIT,GAC9D,GAAyB,MAArBymC,EAA2B,4BAC3B,YAAeA,EAAf,+CAAkC,KAAzB4F,EAAyB,QAC9B,GAAIA,EAAGvqC,YAAc6lC,EAAG7lC,WAAY,CAChC,IAAIqL,EAAWw6B,EAAGx6B,SAClB,IAAIA,EAAS0F,KAAOw5B,EAAGpjB,UAAUpW,MAAQ1F,EAAS0F,MAAQw5B,EAAGpjB,UAAUpW,MAAQ1F,EAAS2F,QAAUu5B,EAAGpjB,UAAUnW,UACvG3F,EAAS0F,KAAOw5B,EAAGnjB,QAAQrW,MAAQ1F,EAAS0F,MAAQw5B,EAAGnjB,QAAQrW,MAAQ1F,EAAS2F,QAAUu5B,EAAGnjB,QAAQpW,QAGrG,OAFAnK,KAAK+rB,kBAAkB10B,EAAG2nC,EAAGx6B,SAAUk/B,EAAGtjC,MAC1C4+B,EAAGpf,aAAe8jB,EAAGtjC,MACd,IARI,mFAe/B,GAAI+hC,EAAU,CAEV,IAAIwB,EAAa3E,EAAG7lC,WAAW6I,OAAS,GAAKg9B,EAAG7lC,WAAW,GAAGyqC,eAAiB5E,EAAG7lC,WAAW,GAAM,aAAe,UAElH9B,EAAE4c,OAAO,GAAG1P,KAAK,CACbC,SAAUw6B,EAAGx6B,SACboR,KAAM+tB,EAAY,IAAM3E,EAAG7lC,WAAa,kCAClB,UAAjB6lC,EAAG7lC,WAAyB,yCAA2C,IAC5E2c,MAAO,QACP0N,SAA4B,UAAjBwb,EAAG7lC,WAA0B,CACpCoQ,MAAO,wBACPsZ,cAAe,SAACC,GACZ,MAAO,CACH,CACIC,SAAUD,EACVE,KAAM,CACFha,MAAO,CAAE4O,gBAAiBonB,EAAGx6B,SAAS0F,KAAM4N,YAAaknB,EAAGx6B,SAAS2F,OAAS,EAAGwN,cAAeqnB,EAAGx6B,SAAS0F,KAAM2N,UAAWmnB,EAAGx6B,SAAS2F,OAAS,GAClJyL,KAAM,cAMtB,OAIZ,OADAopB,EAAGpf,aAAe,MACX,EAGX,OAAO,IAluBf,iDAquB4B,2BACpB,YAAe5f,KAAK+9B,QAApB,+CAA6B,KAApB6E,EAAoB,QAErBtrC,EAAIsrC,EAAGhjB,aAFc,uBAGzB,YAAkBgjB,EAAGv8B,WAArB,+CAAiC,KAAxBw9B,EAAwB,QAC7B7jC,KAAKuiC,YAAYsB,EAAOvsC,EAAEN,QAAQ,GAClC,IAAI8sC,EAAQD,EAAMjkB,aACL,MAATkkB,IAGEA,aAAiB,GAQvBxsC,EAAE+O,WAAW9B,KAAgBu/B,GAC7BD,EAAMjkB,aAAekkB,GARjBxsC,EAAEN,OAAOid,OAAO,GAAG1P,KAAK,CACpBC,SAAUq/B,EAAMr/B,SAChBoR,KAAM,WAAaiuB,EAAM1qC,WAAa,iEACtC2c,MAAO,YAbM,kFAqBzB,GAAkB,MAAd8sB,EAAGh1B,QAAiB,CACpB5N,KAAKuiC,YAAYK,EAAGh1B,QAAStW,EAAEN,QAAQ,GACvC,IAAI+sC,EAAQnB,EAAGh1B,QAAQgS,aACvB,GAAa,MAATmkB,KAAmBA,aAAiB,GAAQ,CAC5CzsC,EAAEN,OAAOid,OAAO,GAAG1P,KAAK,CACpBC,SAAUo+B,EAAGh1B,QAAQpJ,SACrBoR,KAAM,WAAagtB,EAAGh1B,QAAQzU,WAAa,4DAC3C2c,MAAO,UAEX,SAGJxe,EAAE8mB,aAAoB2lB,GACtBnB,EAAGh1B,QAAQgS,aAAemkB,OAE1BzsC,EAAE8mB,aAAoBpe,KAAKwe,YAAYF,QAAQ,UAAUle,OArC7C,6GAyCpB,YAAmBJ,KAAKg+B,WAAxB,+CAAoC,KAA3Bt2B,EAA2B,QAE5B,EAAIA,EAAOkY,aAFiB,uBAGhC,YAAkBlY,EAAOkG,QAAzB,+CAAkC,KAAzB,EAAyB,QAC9B5N,KAAKuiC,YAAY,EAAO,EAAEvrC,QAAQ,GAClC,IAAI,EAAQ,EAAM4oB,aACL,MAAT,IAGE,aAAiB,GAQvB,EAAEhS,QAAQrJ,KAAgB,GAC1B,EAAMqb,aAAe,GARjB,EAAE5oB,OAAOid,OAAO,GAAG1P,KAAK,CACpBC,SAAU,EAAMA,SAChBoR,KAAM,WAAa,EAAMzc,WAAa,8DACtC2c,MAAO,YAba,oFAzChB,qFAruB5B,kDAsyB6B,2BACrB,YAAc9V,KAAKwe,YAAY8F,YAAW,GAA1C,+CAAkD,KAAzCjtB,EAAyC,QAC9C,GAA6B,MAAzBA,EAAEooB,oBAA6B,4BAC/B,YAAgBpoB,EAAEooB,oBAAlB,+CAAuC,KAA9BukB,EAA8B,QACnC,OAAQA,EAAI5jC,MACR,KAAKnH,EAAUU,aACXqG,KAAK+9B,QAAQx5B,KAAKy/B,GAClB,IAAI1sC,EAAI,IAAI,EAAM0sC,EAAI7qC,WAAY9B,GAUlC,GATwB,MAArB2sC,EAAI1P,gBAAuBh9B,EAAEyI,cAAgB,GAAKikC,EAAI1P,cAAcp8B,OACvE8rC,EAAIpkB,aAAetoB,EACnBA,EAAEuJ,WAAamjC,EAAInjC,WACnBvJ,EAAE6J,WAAa6iC,EAAI7iC,WACnB9J,EAAEgnB,UAAU4lB,QAAQ3sC,GACpB0I,KAAK+rB,kBAAkB10B,EAAG2sC,EAAIx/B,SAAUlN,GACxCA,EAAE4Y,YAAc,CAAElZ,OAAQK,EAAGmN,SAAUw/B,EAAIx/B,UAC3CxE,KAAKkkC,sBAAsBF,EAAK1sC,GACb,MAAf0sC,EAAIp2B,SAAiB5N,KAAKyjC,oBAAoBO,EAAIp2B,QAASvW,GAAG,GAC5C,MAAlB2sC,EAAI39B,WAAoB,4BACxB,YAAe29B,EAAI39B,WAAnB,oDAAS+0B,EAAT,QAA+Bp7B,KAAKyjC,oBAAoBrI,EAAI/jC,GAAG,IADvC,mFAG5B,MACJ,KAAK4B,EAAUe,YACXgG,KAAKi+B,MAAM15B,KAAKy/B,GAChB,IAAIvsB,EAAI,IAAI,GAAKusB,EAAI7qC,WAAY9B,EAAG2sC,EAAInxB,QAChB,MAArBmxB,EAAI1P,gBAAuB7c,EAAE1X,cAAgB,GAAKikC,EAAI1P,cAAcp8B,OACvE8rC,EAAIpkB,aAAenI,EACnBA,EAAE5W,WAAamjC,EAAInjC,WACnBxJ,EAAEgnB,UAAU4lB,QAAQxsB,GACpBzX,KAAK+rB,kBAAkB10B,EAAG2sC,EAAIx/B,SAAUiT,GACxCA,EAAEvH,YAAc,CAAElZ,OAAQK,EAAGmN,SAAUw/B,EAAIx/B,UAC3C,MACJ,KAAKvL,EAAUc,iBACXiG,KAAKg+B,WAAWz5B,KAAKy/B,GACrB,IAAI/sC,EAAI,IAAI,EAAU+sC,EAAI7qC,WAAY9B,GAOtC,GANwB,MAArB2sC,EAAI1P,gBAAuBr9B,EAAE8I,cAAgB,GAAKikC,EAAI1P,cAAcp8B,OACvE8rC,EAAIpkB,aAAe3oB,EACnBI,EAAEgnB,UAAU4lB,QAAQhtC,GACpB+I,KAAK+rB,kBAAkB10B,EAAG2sC,EAAIx/B,SAAUvN,GACxCA,EAAEiZ,YAAc,CAAElZ,OAAQK,EAAGmN,SAAUw/B,EAAIx/B,UAC3CxE,KAAKkkC,sBAAsBF,EAAK/sC,GACb,MAAf+sC,EAAIp2B,QAAiB,4BACrB,YAAeo2B,EAAIp2B,QAAnB,oDAAS,EAAT,QAA4B5N,KAAKyjC,oBAAoB,EAAIpsC,GAAG,IADvC,sFAtCN,qFAFlB,qFAtyB7B,6CAg2BQ,IALA,IAAI0pC,EAAW/gC,KAAK89B,kBAAkBvwB,MAAM,GACxC0uB,GAAO,EAEPyC,EAA0C1+B,KAAK69B,+BAA+BtwB,MAAM,IAEhF0uB,GAAM,CACVj8B,KAAKu+B,wBAAuB,GAC5BG,EAAyB1+B,KAAKw+B,oBAAoBE,GAElDzC,GAAO,EACP,IAAK,IAAIhlC,EAAI,EAAGA,EAAI8pC,EAAS/+B,OAAQ/K,IAAK,CACtC,IAAI+L,EAAK+9B,EAAS9pC,GACdktC,GAAiB,EACjB/D,EAAoC,MAAlBp9B,EAAGk/B,IAAIt0B,QAAkB,GAAK,CAAC5K,EAAGk/B,IAAIt0B,SACnC,MAArB5K,EAAGk/B,IAAI77B,aAAoB+5B,EAAMA,EAAIl4B,OAAOlF,EAAGk/B,IAAI77B,aAJjB,2BAKtC,YAAoB+5B,EAApB,+CAAyB,KAAhBgE,EAAgB,QACgB,MAAjCA,EAAQtK,uBAA4E,GAAzCsK,EAAQnD,gCACnDkD,GAAQ,IAPsB,kFAWlCA,IACAnkC,KAAKqkC,oBAAoBrhC,GACzB+9B,EAAShpB,OAAOgpB,EAAS37B,QAAQpC,GAAK,GACtC/L,IACAglC,GAAO,IAOnB,OAAOyC,IA33Bf,0CA+3BwBzD,GAGhB,IAAIqJ,EAgBJ,IAdIA,EADkB,MAAlBrJ,EAAGiH,IAAIt0B,SAAkD,MAA/BqtB,EAAGiH,IAAIt0B,QAAQgS,aACZqb,EAAGiH,IAAIt0B,QAAQgS,aAAckhB,QAErC,GAAWA,SAGjB3nC,WAAa8hC,EAAGiH,IAAI/oC,WACvCmrC,EAAmBn+B,gBAAiB,EAEpCm+B,EAAmBp0B,YAAc,CAC7BlZ,OAAQikC,EAAGgE,GAAGjoC,OACdwN,SAAUy2B,EAAGiH,IAAI19B,UAII,MAArBy2B,EAAGiH,IAAI77B,WAAoB,4BAC3B,YAAiB40B,EAAGiH,IAAI77B,WAAxB,+CAAoC,KAA3Bs7B,EAA2B,QAC5B2C,EAAmBj+B,WAAWjB,QAAmBu8B,EAAK/hB,cAAgB,GACtE0kB,EAAmBj+B,WAAW9B,KAAgBo9B,EAAK/hB,eAHhC,mFAQ/B,IAAI2kB,EAAoB,CACpBprC,WAAY8hC,EAAGiH,IAAI/oC,WACnBiH,KAAMkkC,EACNhkB,UAAW2a,EAAG+I,IAAIx/B,SAClB+b,QAAS0a,EAAG+I,IAAIzjB,SAGpB0a,EAAGgE,GAAG/4B,cAAc+0B,EAAG74B,OAASmiC,EAChCtJ,EAAGgE,GAAG74B,oBAAqB,EAnCU,2BAoCrC,YAAe60B,EAAGgE,GAAG/4B,cAArB,+CAA8C,MAA9C,UAAoD+0B,EAAGgE,GAAG74B,oBAAqB,GApC1C,kFAsCrC,IAAI03B,EAAoB99B,KAAK29B,6BAA6B7lC,IAAImjC,EAAGgE,GAAGjoC,QAC3C,MAArB8mC,IACAA,EAAoB,GACpB99B,KAAK29B,6BAA6Bx4B,IAAI81B,EAAGgE,GAAGjoC,OAAQ8mC,IAGxDA,EAAkBv5B,KAAKggC,GAEvBvkC,KAAK+rB,kBAAkBkP,EAAGgE,GAAGjoC,OAAQikC,EAAGiH,IAAI19B,SAAU8/B,KA76B9D,4CAi7B0BN,EAAsDvE,GACxE,IAAIr9B,EAAQ,EAD+F,uBAE3G,YAA0B4hC,EAAIvJ,eAA9B,+CAA8C,KAArCS,EAAqC,QAE1C,GAD6B,MAAzBA,EAActtB,SAAiB5N,KAAKyjC,oBAAoBvI,EAActtB,QAAS6xB,EAAiBzoC,QAAQ,GAC5E,MAA5BkkC,EAAc70B,WAAoB,4BAClC,YAAe60B,EAAc70B,WAA7B,+CAAyC,KAAhC+0B,EAAgC,QACrCp7B,KAAKyjC,oBAAoBrI,EAAIqE,EAAiBzoC,QAAQ,IAFxB,mFAMtCyoC,EAAiBr5B,oBAAqB,EACtCq5B,EAAiBv5B,cAAc3B,KAAK,MAEpCvE,KAAK89B,kBAAkBv5B,KAAK,CACxB29B,IAAKhH,EAAeD,GAAI,CACpB9hC,WAAY+hC,EAAc/hC,WAC1BiH,KAAM,KACNkgB,UAAW0jB,EAAIx/B,SACf+b,QAASyjB,EAAIzjB,SACd0e,GAAIQ,EAAkBuE,IAAKA,EAC9B5hC,MAAOA,OApB4F,qFAj7BnH,8CA08ByB,2BACjB,YAAcpC,KAAKwe,YAAY8F,YAAW,GAA1C,+CAAkD,KAAzCjtB,EAAyC,QAC1CgrC,EAAiB,GACrBriC,KAAKk+B,gBAAgB/4B,IAAI9N,EAAGgrC,GAFkB,2BAG9C,YAAehrC,EAAE08B,UAAjB,+CAA4B,KAAnBiL,EAAmB,QACxB,GAAuB,MAAnBA,EAAGpf,aAAsB,CACzB,IAAI2jB,EAAavjC,KAAKwe,YAAYF,QAAQ0gB,EAAG7lC,YAC7C,GAAkB,MAAdoqC,EAAoB,CACpB,IAAInjC,EAAOmjC,EAAWnjC,KACtBJ,KAAK+rB,kBAAkB10B,EAAG2nC,EAAGx6B,SAAUpE,GACvC4+B,EAAGpf,aAAe4jB,GAAapjC,EAAM4+B,EAAGhF,gBACxCh6B,KAAKyjC,oBAAoBzE,EAAI3nC,GAAG,QAEhCgrC,EAAG99B,KAAKy6B,KAZ0B,oFADjC,qFA18BzB,0CA89BwBrd,EAAoB3qB,EAAgBwtC,GACpD,GAAsC,MAAlC7iB,EAASmY,sBACL0K,EACAxkC,KAAK69B,+BAA+Bt5B,KAAK,CAAEod,SAAUA,EAAU3qB,OAAQA,IAEvEgJ,KAAK49B,aAAar5B,KAAK,CAAEod,SAAUA,EAAU3qB,OAAQA,QAEtD,CAEH,IAAIoJ,EAAOuhB,EAAS/B,aACpB,GAAY,MAARxf,GAAgBA,aAAgB,GAASA,EAAK8F,cAAclE,OAAS,EAAG,CACxE,IAAIo/B,EAAehhC,EAAK0gC,QACxBM,EAAMl7B,cAAgB,GACtByb,EAAS/B,aAAewhB,S,6BA3+BxC,KAk/BM,SAAUoC,GAAapjC,EAAY45B,GACrC,KAAOA,EAAiB,GACpB55B,EAAO,IAAI,EAAUA,GACrB45B,IAEJ,OAAO55B,E,wKClgCX,SAAYs9B,GACR,6BAAW,qBAAO,yDAAyB,+BAD/C,CAAYA,QAAc,KAInB,IAAM,GAAb,WAMI,WAAoB/I,I,4FAAc,SAAd,KAAAA,OAJpB,KAAA8P,eAAiC/G,GAAegH,wB,UAFpD,O,EAAA,G,EAAA,+BASYlmB,GAEJxe,KAAKykC,eAAiB/G,GAAeiH,UAErC,IAAIC,EAAKC,YAAYC,MAErBtmB,EAAYxW,sBAEZ,IAAI+8B,EAAQ,IAAI,GARY,uBAW5B,YAAcvmB,EAAY8F,YAAW,GAArC,+CAA6C,KAApC,EAAoC,QACzC,EAAEwd,KAAKkD,OAAQ,EACf,EAAEC,QAEF,IAAIC,EAAQH,EAAMzsB,IAAI,EAAE6sB,iCACxB,EAAElxB,OAAO,GAAKixB,EAAMjxB,OACpB,EAAEP,UAAYwxB,EAAMlxB,OACpB,EAAEJ,aAAesxB,EAAMtxB,aACpB,EAAEkuB,KAAKtqC,MAAQwI,KAAK20B,KAAKyQ,2BAA2BtD,KAAKtqC,MACzB,MAA5BwI,KAAK20B,KAAK0Q,gBAAwBrlC,KAAK20B,KAAK0Q,eAAeC,aAAaC,uBAAuBL,EAAMtxB,eApBpF,kFA0B5B5T,KAAK20B,KAAKC,oBAAoB4Q,mBAE9B,IAAIC,EAAiB,IAAI,IAAO,GA5BJ,uBA8B5B,YAAcjnB,EAAY8F,YAAW,GAArC,+CAA6C,KAApC,EAAoC,QACzCmhB,EAAOrI,MAAM,IA/BW,kFAoCK,IAAI,GAAap9B,KAAK20B,MAI1C+Q,MAAMlnB,GAKnB,IAAI/Z,EAAgB,IAAI,GA7CI,uBA+C5B,YAAc+Z,EAAY8F,YAAW,GAArC,+CAA6C,KAApC,EAAoC,QACzC7f,EAAcihC,MAAM,EAAGlnB,IAhDC,kFAmD5B,IAAImnB,GAAY,EAnDY,uBAoD5B,YAAcnnB,EAAY8F,YAAW,GAArC,+CAA6C,KAApC,EAAoC,QACzC,EAAEshB,2BAA6B,EAAEC,YAC9B,EAAED,6BAA4BD,GAAY,IAtDrB,kFA0D5B,IADA,IAAI1J,GAAO,GACJA,GAAK,CACRA,GAAO,EADC,2BAER,YAAczd,EAAY8F,YAAW,GAArC,+CAA6C,KAApCjtB,EAAoC,QACzC,IAAIA,EAAEuuC,2BAAN,4BACA,YAAepnB,EAAY8F,YAAW,GAAtC,+CAA8C,KAArC4e,EAAqC,QAC1C,GAAG7rC,EAAE+qC,iBAAiBtqC,IAAIorC,IAAOA,EAAG0C,2BAA2B,CAC3DvuC,EAAEuuC,4BAA6B,EAC/B3J,GAAO,EACP,QALR,qFAHI,mFAcZj8B,KAAK8lC,6BAA8B,EAxEP,2BAyE5B,YAActnB,EAAY8F,YAAW,GAArC,+CAA6C,KAApC,EAAoC,QACzC,EAAEyhB,YAAc,EAAE5gB,mBAAqB,EAAEygB,2BACtC,EAAEG,cACD/lC,KAAK8lC,6BAA8B,GAElC9lC,KAAK20B,gBAAgB,KAAiB30B,KAAK20B,KAAKqR,OAAOC,cACxD,EAAEC,qBA/EkB,kFAmFxBlmC,KAAK8lC,4BAEL9lC,KAAKykC,eAAiB/G,GAAeyI,WAIrCnmC,KAAKykC,eAAiBkB,EAAYjI,GAAe3xB,MAAQ2xB,GAAegH,wBAI5E,IAAI0B,EAAKvB,YAAYC,MAAQF,EAGzBn4B,EAAU,gBAFd25B,EAAK95B,KAAK+5B,MAAW,IAALD,GAAY,KAEQ,OAMpC,OAJApmC,KAAK20B,KAAK2R,sBAAsBC,gBAAkB95B,EAElDzM,KAAK20B,KAAKC,oBAAoB4R,iBAEvB,U,6BA/Gf,K,28BCLO,IAAM,GAAb,YAcI,WAAYxvC,GAAc,iBAEtB,0BAAM,mBAAoBA,IAE1B,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAE1C,EAAKF,aAAoBpP,GAEzB,IAAIy3B,EAAuBz3B,EAAY8xB,QACvC2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMqmC,GAGV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAIC,EAAgC3vC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QArBpD,OAsBtB6F,EAAkBzgC,cAAgB,CAACwgC,GAEnC,EAAKrgC,WAAW9B,KAAKoiC,GAErB,EAAKr8B,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACViL,cAAF,eAEfyjC,aAGd,GAAO,EAAO,4GAElB,EAAKt8B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChD4jC,GACA,SAAC5kC,GAKG,OAHuBA,EAAW,GAAG3J,MACViL,cAAF,eAEf2R,UAGd,GAAO,EAAO,oDAElB,EAAKxK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAClD,MACA,SAAChB,GAKG,OAHuBA,EAAW,GAAG3J,MACViL,cAAF,eAEf0jC,YAGd,GAAO,EAAO,qJA5DI,EAd9B,O,mOAAA,mDAE8BC,EAAwB9J,EAA0BhmC,EAAgB0R,GAExF,IAAIxF,EAAelM,EAAOqnB,UAAUC,QAAQ,oBACxC8F,EAAoB,IAAI,EAAclhB,GAG1C,OAFAkhB,EAAGjhB,cAAH,eAAqC,IAAI4jC,GAAeD,EAAY9J,EAAat0B,GAE1E,CACHxQ,MAAOksB,EACPhkB,KAAM8C,OAVlB,GAA2C,GAiFrC6jC,G,WAIF,WAAoBD,EAAgC9J,EAAkCt0B,GAClF,OADoG,WAApF,KAAAo+B,aAAgC,KAAA9J,cAAkC,KAAAt0B,OAC1EA,GACJ,IAAK,YAAa1I,KAAKgnC,QAAU,EAAG,MACpC,IAAK,aAAchnC,KAAKgnC,QAAUF,EAAWG,YAAYjlC,OAAS,G,4CAKtE,OAAQhC,KAAK0I,MACT,IAAK,YACmB,GAAhB1I,KAAKgnC,QACLhnC,KAAKg9B,YAAYkK,eAAe,iGACzBlnC,KAAKgnC,QAAUhnC,KAAK8mC,WAAWG,YAAYjlC,OAAS,EAC3DhC,KAAKg9B,YAAYkK,eAAe,0IAEhClnC,KAAK8mC,WAAWK,WAAWpvB,OAAO/X,KAAKgnC,QAAU,EAAG,GACpDhnC,KAAK8mC,WAAWG,YAAYlvB,OAAO/X,KAAKgnC,QAAU,EAAG,GACrDhnC,KAAKgnC,SAAW,GAEpB,MACJ,IAAK,aACGhnC,KAAKgnC,SAAWhnC,KAAK8mC,WAAWG,YAAYjlC,OAAS,EACrDhC,KAAKg9B,YAAYkK,eAAe,iGACzBlnC,KAAKgnC,QAAU,EACtBhnC,KAAKg9B,YAAYkK,eAAe,0IAEhClnC,KAAK8mC,WAAWK,WAAWpvB,OAAO/X,KAAKgnC,QAAU,EAAG,GACpDhnC,KAAK8mC,WAAWG,YAAYlvB,OAAO/X,KAAKgnC,QAAU,EAAG,GACrDhnC,KAAKgnC,SAAW,M,6BAO5B,OAAQhnC,KAAK0I,MACT,IAAK,YACD,OAAI1I,KAAKgnC,QAAUhnC,KAAK8mC,WAAWG,YAAYjlC,OAAS,GACpDhC,KAAKg9B,YAAYkK,eAAe,uIACzB,MAEJlnC,KAAK8mC,WAAWG,YAAYjnC,KAAKgnC,WAC5C,IAAK,aACD,OAAIhnC,KAAKgnC,QAAU,GACfhnC,KAAKg9B,YAAYkK,eAAe,uIACzB,MAEJlnC,KAAK8mC,WAAWG,YAAYjnC,KAAKgnC,c,gCAKhD,OAAQhnC,KAAK0I,MACT,IAAK,YACD,OAAO1I,KAAKgnC,QAAUhnC,KAAK8mC,WAAWG,YAAYjlC,OACtD,IAAK,aACD,OAAOhC,KAAKgnC,SAAW,O,+0BC3IhC,IAAM,GAAb,YAEI,WAAYhwC,GAAc,M,IAAA,W,EAEtB,S,EAAA,gBAAM,YAAaA,EAAQ,uH,+CAE3B,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAE1C,EAAKF,aAAoBpP,GAEzB,IAAIo4B,EAAuBp4B,EAAY8xB,QACvCsG,EAAMjuC,WAAa,IACnBiuC,EAAMjhC,gBAAiB,EAEvB,IAAIkhC,EAAoB,CACpBluC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMgnC,GAGV,EAAKlhC,cAAc3B,KAAK8iC,GAExB,IAAIC,EAA4BtwC,EAAOqnB,UAAUC,QAAQ,QAASwiB,QAClEwG,EAAcphC,cAAgB,CAACmhC,GAE/B,EAAKhhC,WAAW9B,KAAK+iC,GAErB,IAAIC,EAAuBvwC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QA1B3C,OA2BtByG,EAAarhC,cAAgB,CAACmhC,GAE9B,EAAK/8B,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IAErD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCsvC,EAAK,IAAI,GAAW9vC,EAAGV,EAAO29B,KAAK6N,iBAAkBxrC,GACzDU,EAAEyL,cAAF,WAAgCqkC,KAEjC,GAAO,EAAO,mCAAmC,IAExD,EAAKl9B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD0kC,GACA,SAAC1lC,GAEG,IACI2lC,EADmB3lC,EAAW,GAAG3J,MACdiL,cAAF,WAErB,OAAO,GAAsBskC,YAAYD,EAAIA,EAAGxK,YAAahmC,EAAQ,aAAakB,SAEnF,GAAM,EAAO,oEAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAW8J,EAAW,GAG1B,OAFqBnK,EAAEyL,cAAF,WAEXukC,IAAI3vC,MAEf,GAAO,EAAO,yHAErB,EAAKuS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkK,EAAgBP,EAAW,GAAG3J,MAC9BH,EAAW8J,EAAW,GAG1B,OAFqBnK,EAAEyL,cAAF,WAEXukC,IAAI3vC,EAAGqK,MAElB,GAAO,EAAO,4GAErB,EAAKkI,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGsmC,GACA,SAACvlC,G,MAEOnK,EAAmBmK,EAAW,GAAG3J,MACjCkK,EAAgBP,EAAW,GAAG3J,MAGlC,OAAoB,QAApB,EAFqBR,EAAEyL,cAAF,WAEXrL,IAAIsK,UAAM,eAAElK,SAEvB,GAAO,EAAO,4CAErB,EAAKoS,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkK,EAAgBP,EAAW,GAAG3J,MAKlC,OAJqBR,EAAEyL,cAAF,WAElB0jC,OAAOzkC,GAEH,QAER,GAAM,EAAO,qHAEpB,EAAKkI,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFsO,IACA,SAACvN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXiC,QAAQzM,MAEnB,GAAM,EAAO,oLAEpB,EAAK2R,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAwBkJ,EAAW,GAAG3J,MAG1C,OAFqBR,EAAEyL,cAAF,WAEXwkC,MAAMhvC,MAGpB,GAAM,EAAO,sDAEjB,EAAK2R,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX8hC,WAGd,GAAM,EAAO,iDAEjB,EAAK36B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXykC,SAASjvC,MAGvB,GAAM,EAAO,mDAEjB,EAAK2R,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEX0kC,aAAalvC,MAG3B,GAAM,EAAO,kHAEjB,EAAK2R,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX2kC,aAGd,GAAM,EAAO,4CAEjB,EAAKx9B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,IACA,SAACvN,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX4kC,UAGd,GAAM,EAAO,wDAEjB,EAAKz9B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,IACzD,SAACxK,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX6kC,eAEX,GAAO,IA/MQ,EAF9B,O,mOAAA,SAAoC,GAuNvB,GAAb,WAKI,WAAoBC,EAAqCjL,EAAkChmC,GAAc,WAArF,KAAAixC,gBAAqC,KAAAjL,cAAkC,KAAAhmC,SAH3F,KAAAmwC,WAAsB,GACtB,KAAAF,YAAqB,G,UAHzB,O,EAAA,G,EAAA,8CAQwB,2BAChB,YAAcjnC,KAAKmnC,WAAnB,+CAA+B,KAAtBtjC,EAAsB,QAC3B,KAAMA,EAAEzD,gBAAgBH,GAAiB,CAAC,SAAU,UAAW,UAAW,UAAW,aAAamF,QAAQvB,EAAEzD,KAAKjH,aAAe,GAC5H,OAAO,GAHC,kFAOhB,OAAO,IAff,kCAoBQ,GAAI6G,KAAKkoC,uBACL,MAAO,IAAMloC,KAAKinC,YAAYlkC,KAAI,SAAArL,GAAC,MAAI,GAAKA,KAAGuL,KAAK,MAAQ,IA0BhE,IAvBA,IAAIuB,EAAyB,CACzB0F,KAAM,EACNC,OAAQ,EACRnI,OAAQ,GAGR4C,EAA0B,CAC1B,CACIxE,KAAMnH,EAAUuM,KAChBhB,SAAUA,EACVM,cAAc,GAElB,CACI1E,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,IACPsM,SAAUA,EACVM,cAAc,IAIlBqjC,EAAqB,IAAItlC,EAAc,IAElC5L,EAAI,EAAGA,EAAI+I,KAAKmnC,WAAWnlC,OAAQ/K,IAAK,CAC7C,IAAIiB,EAAQ8H,KAAKmnC,WAAWlwC,GACT,MAAfiB,EAAMA,OAAiBA,EAAMkI,gBAAgBH,GAAiB/H,EAAMkI,gBAAgB,GACpFwE,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAsB,MAAfA,EAAMA,MAAgB,OAASA,EAAMkI,KAAKsP,OAAOxX,EAAOmU,IAAqBnU,MACpFsM,SAAUA,EACVM,cAAc,KAGlBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUr6B,EAAMkI,KAChBlI,MAAOA,EAAMA,MACb4M,cAAc,EACdN,SAAUA,IAEdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUmpB,WAChB1gB,OAAmCxJ,EAAMkI,KAAM4L,UAAU,WAAYm8B,GACrE9lB,aAAa,EACbC,iBAAkB,EAClBxd,cAAc,EACdN,SAAUA,KAKlBI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAGVvN,EAAI+I,KAAKmnC,WAAWnlC,OAAS,IAC7B4C,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,KACPsM,SAAUA,EACVM,cAAc,IAElBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,KAOtBI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,IACPsM,SAAUA,EACVM,cAAc,IAGlBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAWdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUyhB,OAChBkG,iCAAiC,EACjCC,wBAAwB,EACxB/b,cAAc,EACdN,SAAUA,EACV4jC,mBAAmB,IAGvB,IAAI3mC,EAAmB,CACnBzK,OAAQgJ,KAAKhJ,OACb4N,WAAYA,EACZkC,aAAc,MAGdpF,EAAiB,IAAIX,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,GAAqB5K,GAAS,GAAO,GAGxG,OAFAzB,KAAKg9B,YAAYqL,SAAS3mC,EAAQ,IAAI,eAAU,GAEzC,KAlJf,4BAqJU/I,GAEF,IAAI6uC,EAAiB7uC,EAAOwK,cAAP,WAMrB,OALU,MAANqkC,IACAxnC,KAAKmnC,WAAannC,KAAKmnC,WAAWj/B,OAAOs/B,EAAGL,YAC5CnnC,KAAKinC,YAAcjnC,KAAKinC,YAAY/+B,OAAOs/B,EAAGP,eAG3C,IA7Jf,0BAiKQ7kC,GACA,OAAIA,GAAS,GAAKA,EAAQpC,KAAKmnC,WAAWnlC,OAC/BhC,KAAKmnC,WAAW/kC,IAE3BpC,KAAKg9B,YAAYkK,eAAe,+DAAiElnC,KAAKmnC,WAAWnlC,OAAS,GAAK,MACxH,QAtKf,6BAyKWI,GAEH,OAAIA,GAAS,GAAKA,EAAQpC,KAAKmnC,WAAWnlC,QACtChC,KAAKmnC,WAAWpvB,OAAO3V,EAAO,GAC9BpC,KAAKinC,YAAYlvB,OAAO3V,EAAO,GACxB,OAGXpC,KAAKg9B,YAAYkK,eAAe,+DAAiElnC,KAAKmnC,WAAWnlC,OAAS,GAAK,MAExH,QAnLf,0BAsLQjK,EAAUqK,GAYV,OAXY,MAATA,GACCpC,KAAKmnC,WAAW5iC,KAAKxM,GACrBiI,KAAKinC,YAAY1iC,KAAKxM,EAAEG,QAErBkK,GAASpC,KAAKinC,YAAYjlC,QAAUI,GAAS,GAC5CpC,KAAKmnC,WAAWpvB,OAAO3V,EAAO,EAAGrK,GACjCiI,KAAKinC,YAAYlvB,OAAO3V,EAAO,EAAGrK,EAAEG,QAEpC8H,KAAKg9B,YAAYkK,eAAe,+DAAiElnC,KAAKmnC,WAAWnlC,OAAS,GAAK,OAGhI,IAlMf,4BAsMQ,OAA+B,GAA3BhC,KAAKinC,YAAYjlC,QACjBhC,KAAKg9B,YAAYkK,eAAe,+DAAiElnC,KAAKmnC,WAAWnlC,OAAS,GAAK,MACxH,OAEPhC,KAAKmnC,WAAW7yB,MACTtU,KAAKinC,YAAY3yB,SA3MpC,6BAgNQ,OAA+B,GAA3BtU,KAAKinC,YAAYjlC,QACjBhC,KAAKg9B,YAAYkK,eAAe,+DAAiElnC,KAAKmnC,WAAWnlC,OAAS,GAAK,MACxH,MAEAhC,KAAKinC,YAAYjnC,KAAKinC,YAAYjlC,OAAS,KApN9D,8BAwNYtK,GACJ,OAAOsI,KAAKinC,YAAY7hC,QAAQ1N,EAAEQ,SAzN1C,6BA6NQ,OAAO8H,KAAKinC,YAAYjlC,SA7NhC,gCAiOQ,OAAiC,GAA1BhC,KAAKmnC,WAAWnlC,SAjO/B,mCAoOiBrJ,GACT,IAAIyJ,EAAQpC,KAAKinC,YAAY7hC,QAAQzM,EAAOT,OACxCkK,GAAS,IACTpC,KAAKinC,YAAYlvB,OAAO3V,EAAO,GAC/BpC,KAAKmnC,WAAWpvB,OAAO3V,EAAO,MAxO1C,+BA4OazJ,GACL,OAAOqH,KAAKinC,YAAY7hC,QAAQzM,EAAOT,QAAU,IA7OzD,8BAiPQ8H,KAAKmnC,WAAa,GAClBnnC,KAAKinC,YAAc,KAlP3B,0CAsPQ,OAA+B,GAA3BjnC,KAAKinC,YAAYjlC,OACV,KAEAhC,KAAKinC,YAAYjnC,KAAKinC,YAAYjlC,OAAS,KAzP9D,2CA6PQ,OAA+B,GAA3BhC,KAAKinC,YAAYjlC,OACV,KAEAhC,KAAKinC,YAAY,KAhQpC,4CAqQQ,OAA+B,GAA3BjnC,KAAKinC,YAAYjlC,OACV,MAEPhC,KAAKmnC,WAAW7yB,MACTtU,KAAKinC,YAAY3yB,SAzQpC,8BA6QY3b,GAGJ,OAFAqH,KAAKmnC,WAAW5iC,KAAK5L,GACrBqH,KAAKinC,YAAY1iC,KAAK5L,EAAOT,QACtB,IAhRf,+BAkRaS,GAGL,OAFAqH,KAAKmnC,WAAWpvB,OAAO,EAAG,EAAGpf,GAC7BqH,KAAKinC,YAAYlvB,OAAO,EAAG,EAAGpf,EAAOT,QAC9B,IArRf,4CAuR0BS,GAClB,IAAIyJ,EAAQpC,KAAKinC,YAAY7hC,QAAQzM,EAAOT,OAC5C,OAAGkK,GAAS,IACRpC,KAAKmnC,WAAWpvB,OAAO3V,EAAO,GAC9BpC,KAAKinC,YAAYlvB,OAAO3V,EAAO,IACxB,KA5RnB,qCAkSQ,OAA+B,GAA3BpC,KAAKinC,YAAYjlC,OACV,KAEAhC,KAAKinC,YAAYjnC,KAAKinC,YAAYjlC,OAAS,KArS9D,qCA0SQ,OAA+B,GAA3BhC,KAAKinC,YAAYjlC,OACV,MAEPhC,KAAKmnC,WAAW7yB,MACTtU,KAAKinC,YAAY3yB,SA9SpC,6CAmTQ,GAA8B,GAA3BtU,KAAKinC,YAAYjlC,OAEb,CACH,IAAIrJ,EAASqH,KAAKinC,YAAY,GAG9B,OAFAjnC,KAAKinC,YAAYlvB,OAAO,EAAG,GAC3B/X,KAAKmnC,WAAWpvB,OAAO,EAAG,GACnBpf,EALPqH,KAAKg9B,YAAYkK,eAAe,+DAAiElnC,KAAKmnC,WAAWnlC,OAAS,GAAK,W,6BApT3I,K,okBC9NO,IAAM,GAAb,YAEI,WAAYhL,GAAc,M,iGAAA,S,EAEtB,S,EAAA,gBAAM,aAAcA,EAAQ,iJ,+CAE5B,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAEtCmoB,EAAuBz3B,EAAY8xB,QACvC2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAACpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACxCue,QAAS,CAACrW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACtC5B,KAAMqmC,GAEV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAI4B,EAAgCtxC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QAlBpD,OAmBtBwH,EAAkBpiC,cAAgB,CAACwgC,GAEnC,EAAK94B,QAAQrJ,KAAK+jC,GAGlB,EAAKh+B,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,GACA,MACA,GAAM,EAAO,mIAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjFwP,GACA,MACA,GAAM,EAAO,sDASjB,EAAKhG,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,KACA,MACA,GAAM,EAAO,iDAEjB,EAAKyH,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAM4O,EAAYkB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvFwP,GACA,MACA,GAAM,EAAO,mDAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM4O,EAAYkB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvFwP,GACA,MACA,GAAM,EAAO,kHAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,GACA,MACA,GAAM,EAAO,4CAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,GACA,MACA,GAAM,EAAO,wDApEK,EAF9B,O,mOAAA,SAAqC,G,yoBCA9B,IAAM,GAAb,YAEI,WAAYpY,GAAc,O,4FAAA,SAEtB,0BAAM,WAAYA,EAAQ,iFAE1B,IAAIyvC,EAAuBzvC,EAAOqnB,UAAUC,QAAQ,UAAWwiB,QAC/D2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAACpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACxCue,QAAS,CAACrW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACtC5B,KAAMqmC,GAEV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAIa,EAAuBvwC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QAhB3C,OAiBtByG,EAAarhC,cAAgB,CAACwgC,GAG9B,EAAKp8B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD0kC,EACA,MACA,GAAM,EAAO,oEAvBK,EAF9B,O,mOAAA,SAAmC,G,yoBCA5B,IAAM,GAAb,YAEI,WAAYvwC,GAAc,O,4FAAA,SAEtB,0BAAM,WAAYA,IAElB,IAAIowC,EAAuBpwC,EAAOqnB,UAAUC,QAAQ,UAAWwiB,QAC/DsG,EAAMjuC,WAAa,IACnBiuC,EAAMjhC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAACpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACxCue,QAAS,CAACrW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACtC5B,KAAMgnC,GAZY,OAetB,EAAKlhC,cAAc3B,KAAKmiC,GAGxB,EAAKp8B,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,GACA,MACA,GAAM,EAAO,4GAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAEhDukC,EACA,MACA,GAAM,EAAO,oDAEjB,EAAK98B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAElD,KACA,MACA,GAAM,EAAO,qJAjCK,EAF9B,O,mOAAA,SAAmC,G,yoBCA5B,IAAM,GAAb,YAEI,WAAY7L,GAAc,O,4FAAA,SAEtB,0BAAM,OAAQA,EAAQ,gFAEtB,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAEtCmoB,EAAuBzvC,EAAOqnB,UAAUC,QAAQ,UAAWwiB,QAC/D2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAACpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACxCue,QAAS,CAACrW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACtC5B,KAAMqmC,GAGV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAI6B,EAAkCvxC,EAAOqnB,UAAUC,QAAQ,cAAewiB,QAnBxD,OAoBtByH,EAAoBriC,cAAgB,CAACwgC,GAErC,EAAK94B,QAAQrJ,KAAKgkC,GAElB,EAAKj+B,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG2lC,EACA,MACA,GAAM,EAAO,kIAEjB,EAAKn8B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,KACA,MACA,GAAM,EAAO,qHAEb,EAAKwJ,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM4O,EAAYkB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvFsO,GACA,MACA,GAAM,EAAO,oLAxCK,EAF9B,O,mOAAA,SAA+B,G,yoBCExB,IAAM,GAAb,YAEI,WAAYpY,GAAc,O,4FAAA,SAEtB,0BAAM,QAASA,EAAQ,2BAENA,EAAOqnB,UAAUC,QAAQ,UAA1C,IACIkqB,EAAoBxxC,EAAOqnB,UAAUC,QAAQ,UAEjD,EAAKF,aAAaoqB,GAClB,EAAKtiC,cAAgBsiC,EAAWtiC,cAChC,IAAIugC,EAAQ,EAAKvgC,cAAc,GAAG9F,KATZ,OAWtB,EAAKkK,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxF2lC,GACA,SAAC5kC,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAW8J,EAAW,GAK1B,OAJqBnK,EAAEyL,cAAF,WAElBukC,IAAI3vC,GAEAA,EAAEG,SAEV,GAAO,EAAO,oFAErB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,IAC/C4jC,GACA,SAAC5kC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXmR,SAEX,GAAO,EAAO,4DAEjB,EAAKhK,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IACpD4jC,GACA,SAAC5kC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXslC,UAEX,GAAO,EAAO,wFAErB,EAAKn+B,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX2kC,aAGd,GAAM,EAAO,4CAEjB,EAAKx9B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFsO,IACA,SAACvN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAW8J,EAAW,GACtB2lC,EAAiB9vC,EAAEyL,cAAF,WAEjBf,EAAQolC,EAAGpiC,QAAQrN,GACvB,OAAiB,GAAVqK,EAAcA,EAAQolC,EAAGP,YAAYjlC,OAASI,KAGzD,GAAM,EAAO,oNAzEK,EAF9B,O,mOAAA,SAAgC,G,okBCEzB,IAAM,GAAb,YAEI,WAAYpL,GAAc,M,iGAAA,S,EAEtB,S,EAAA,gBAAM,SAAUA,EAAQ,+D,+CAExB,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAE1C,EAAKF,aAAoBpP,GAEzB,IAAIo4B,EAAuBp4B,EAAY8xB,QACvCsG,EAAMjuC,WAAa,IACnBiuC,EAAMjhC,gBAAiB,EAEvB,IAAIkhC,EAAoB,CACpBluC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMgnC,GAGV,EAAKlhC,cAAc3B,KAAK8iC,GAExB,IAAIC,EAA4BtwC,EAAOqnB,UAAUC,QAAQ,QAASwiB,QAClEwG,EAAcphC,cAAgB,CAACmhC,GAE/B,EAAKhhC,WAAW9B,KAAK+iC,GAErB,IAAIC,EAAuBvwC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QA1B3C,OA2BtByG,EAAarhC,cAAgB,CAACmhC,GAE9B,EAAK/8B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAElD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCsvC,EAAK,IAAI,GAAW9vC,EAAGV,EAAO29B,KAAK6N,iBAAkBxrC,GACzDU,EAAEyL,cAAF,WAAgCqkC,KAEjC,GAAO,EAAO,uCAAuC,IAExD,EAAKl9B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD0kC,GACA,SAAC1lC,GAEG,IACI2lC,EADmB3lC,EAAW,GAAG3J,MACdiL,cAAF,WAErB,OAAO,GAAsBskC,YAAYD,EAAIA,EAAGxK,YAAahmC,EAAQ,aAAakB,SAEnF,GAAO,EAAO,oEAGzB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAW8J,EAAW,GAG1B,OAFqBnK,EAAEyL,cAAF,WAEXukC,IAAI3vC,MAEf,GAAO,EAAO,yHAErB,EAAKuS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGsmC,GACA,SAACvlC,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkK,EAAgBP,EAAW,GAAG3J,MAGlC,OAFqBR,EAAEyL,cAAF,WAEXrL,IAAIsK,GAAOlK,SAEtB,GAAO,EAAO,4CAErB,EAAKoS,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkK,EAAgBP,EAAW,GAAG3J,MAKlC,OAJqBR,EAAEyL,cAAF,WAElB0jC,OAAOzkC,GAAOlK,MAEV,QAER,GAAO,EAAO,qHAErB,EAAKoS,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFsO,IACA,SAACvN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXiC,QAAQzM,MAEnB,GAAO,EAAO,oLAErB,EAAK2R,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAwBkJ,EAAW,GAAG3J,MAG1C,OAFqBR,EAAEyL,cAAF,WAEXwkC,MAAMhvC,MAGpB,GAAO,EAAO,sDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX8hC,WAGd,GAAO,EAAO,iDAElB,EAAK36B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXykC,SAASjvC,MAGvB,GAAO,EAAO,mDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEX0kC,aAAalvC,MAG3B,GAAO,EAAO,kHAElB,EAAK2R,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX2kC,aAGd,GAAO,EAAO,4CAElB,EAAKx9B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,IACA,SAACvN,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX4kC,UAGd,GAAO,EAAO,wDAvLI,EAF9B,O,mOAAA,SAAiC,G,yoBCJ1B,IAAM,GAAb,YAEI,WAAY/wC,GAAc,O,4FAAA,SAEtB,0BAAM,MAAOA,EAAQ,iGAErB,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAEtCmoB,EAAuBzvC,EAAOqnB,UAAUC,QAAQ,UAAWwiB,QAC/D2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMqmC,GAGV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAI6B,EAAkCvxC,EAAOqnB,UAAUC,QAAQ,cAAewiB,QAnBxD,OAoBtByH,EAAoBriC,cAAgB,CAACwgC,GAErC,EAAK94B,QAAQrJ,KAAKgkC,GAElB,EAAKj+B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAM4O,EAAYkB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvFwP,GACA,MACA,GAAM,EAAO,oEAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAMmoC,EAAqBr4B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGwP,GACA,MACA,GAAM,EAAO,gGAlCK,EAF9B,O,mOAAA,SAA8B,G,28BCKvB,IAAM,GAAb,YAcI,WAAYtZ,GAAc,iBAEtB,0BAAM,kBAAmBA,IAEzB,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAE1C,EAAKF,aAAoBpP,GAEzB,IAAIy3B,EAAuBz3B,EAAY8xB,QACvC2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMqmC,GAGV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAIC,EAAgC3vC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QArBpD,OAsBtB6F,EAAkBzgC,cAAgB,CAACwgC,GAEnC,EAAKrgC,WAAW9B,KAAKoiC,GAErB,EAAKr8B,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACPiL,cAAF,kBAElByjC,aAGd,GAAO,EAAO,4GAElB,EAAKt8B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChD4jC,GACA,SAAC5kC,GAKG,OAHuBA,EAAW,GAAG3J,MACPiL,cAAF,kBAElB2R,UAGd,GAAO,EAAO,oDAElB,EAAKxK,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAClD,MACA,SAAChB,GAKG,OAHuBA,EAAW,GAAG3J,MACPiL,cAAF,kBAElB0jC,YAGd,GAAO,EAAO,qJA5DI,EAd9B,O,mOAAA,mDAE8B6B,EAAsB1L,EAA0BhmC,EAAgB0R,GAEtF,IAAIxF,EAAelM,EAAOqnB,UAAUC,QAAQ,mBACxC8F,EAAoB,IAAI,EAAclhB,GAG1C,OAFAkhB,EAAGjhB,cAAH,kBAAwC,IAAIwlC,GAAkBD,EAAW1L,EAAat0B,GAE/E,CACHxQ,MAAOksB,EACPhkB,KAAM8C,OAVlB,GAA0C,GAiFpCylC,G,WAIF,WAAoBD,EAA8B1L,EAAkCt0B,GAChF,OADkG,WAAlF,KAAAggC,YAA8B,KAAA1L,cAAkC,KAAAt0B,OACxEA,GACJ,IAAK,YAAa1I,KAAKgnC,QAAU,EAAG,MACpC,IAAK,aAAchnC,KAAKgnC,QAAU0B,EAAUvB,WAAWnlC,OAAS,G,4CAKpE,OAAQhC,KAAK0I,MACT,IAAK,YACmB,GAAhB1I,KAAKgnC,QACLhnC,KAAKg9B,YAAYkK,eAAe,iGACzBlnC,KAAKgnC,QAAUhnC,KAAK0oC,UAAUvB,WAAWnlC,OAAS,EACzDhC,KAAKg9B,YAAYkK,eAAe,0IAEhClnC,KAAK0oC,UAAUb,aAAa7nC,KAAK0oC,UAAUvB,WAAWnnC,KAAKgnC,QAAU,GAAG9uC,OACxE8H,KAAKgnC,SAAW,GAEpB,MACJ,IAAK,aACGhnC,KAAKgnC,SAAWhnC,KAAK0oC,UAAUvB,WAAWnlC,OAAS,EACnDhC,KAAKg9B,YAAYkK,eAAe,iGACzBlnC,KAAKgnC,QAAU,EACtBhnC,KAAKg9B,YAAYkK,eAAe,0IAEhClnC,KAAK0oC,UAAUb,aAAa7nC,KAAK0oC,UAAUvB,WAAWnnC,KAAKgnC,QAAU,GAAG9uC,OACxE8H,KAAKgnC,SAAW,M,6BAO5B,OAAQhnC,KAAK0I,MACT,IAAK,YACD,OAAI1I,KAAKgnC,QAAUhnC,KAAK0oC,UAAUvB,WAAWnlC,OAAS,GAClDhC,KAAKg9B,YAAYkK,eAAe,uIACzB,MAEJlnC,KAAK0oC,UAAUvB,WAAWnnC,KAAKgnC,WAC1C,IAAK,aACD,OAAIhnC,KAAKgnC,QAAU,GACfhnC,KAAKg9B,YAAYkK,eAAe,uIACzB,MAEJlnC,KAAK0oC,UAAUvB,WAAWnnC,KAAKgnC,c,gCAK9C,OAAQhnC,KAAK0I,MACT,IAAK,YACD,OAAO1I,KAAKgnC,QAAUhnC,KAAK0oC,UAAUvB,WAAWnlC,OACpD,IAAK,aACD,OAAOhC,KAAKgnC,SAAW,O,4KCzIhC,IAAM,GAAb,WAMI,WAAoBiB,EAAqCjL,EAAkChmC,I,4FAAc,SAArF,KAAAixC,gBAAqC,KAAAjL,cAAkC,KAAAhmC,SAJ3F,KAAAmwC,WAAsB,GAEtB,KAAApkC,IAAyB,IAAIjD,I,UAJjC,O,EAAA,G,EAAA,8CASwB,2BAChB,YAAcE,KAAKmnC,WAAnB,+CAA+B,KAAtBtjC,EAAsB,QAC3B,KAAMA,EAAEzD,gBAAgBH,GAAiB,CAAC,SAAU,UAAW,UAAW,UAAW,aAAamF,QAAQvB,EAAEzD,KAAKjH,aAAe,GAC5H,OAAO,GAHC,kFAMhB,OAAO,IAff,kCAoBQ,GAAI6G,KAAKkoC,uBACL,MAAO,IAAMloC,KAAKmnC,WAAWpkC,KAAI,SAAArL,GAAC,MAAI,GAAKA,EAAEQ,SAAO+K,KAAK,MAAQ,IA0BrE,IAvBA,IAAIuB,EAAyB,CACzB0F,KAAM,EACNC,OAAQ,EACRnI,OAAQ,GAGR4C,EAA0B,CAC1B,CACIxE,KAAMnH,EAAUuM,KAChBhB,SAAUA,EACVM,cAAc,GAElB,CACI1E,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,IACPsM,SAAUA,EACVM,cAAc,IAIlBqjC,EAAqB,IAAItlC,EAAc,IAElC5L,EAAI,EAAGA,EAAI+I,KAAKmnC,WAAWnlC,OAAQ/K,IAAK,CAE7C,IAAIuB,EAAMwH,KAAKmnC,WAAWlwC,GACtBuB,EAAI4H,gBAAgBH,GAAiBzH,EAAI4H,gBAAgB,GACzDwE,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAOM,EAAI4H,KAAKsP,OAAOlX,EAAK6T,IAAqBnU,MACjDsM,SAAUA,EACVM,cAAc,KAGlBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAU/5B,EAAI4H,KACdlI,MAAOM,EAAIN,MACX4M,cAAc,EACdN,SAAUA,IAEdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUmpB,WAChB1gB,OAAmClJ,EAAI4H,KAAM4L,UAAU,WAAYm8B,GACnE9lB,aAAa,EACbC,iBAAkB,EAClBxd,cAAc,EACdN,SAAUA,KAKlBI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAGdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAGVvN,EAAI+I,KAAKmnC,WAAWnlC,OAAS,IAC7B4C,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,KACPsM,SAAUA,EACVM,cAAc,IAElBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,KAOtBI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,IACPsM,SAAUA,EACVM,cAAc,IAGlBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAWdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUyhB,OAChBkG,iCAAiC,EACjCC,wBAAwB,EACxB/b,cAAc,EACdN,SAAUA,EACV4jC,mBAAmB,IAGvB,IAAI3mC,EAAmB,CACnBzK,OAAQgJ,KAAKhJ,OACb4N,WAAYA,EACZkC,aAAc,MAGdpF,EAAiB,IAAIX,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,GAAqB5K,GAAS,GAAO,GAGxG,OAFAzB,KAAKg9B,YAAYqL,SAAS3mC,EAAQ,IAAI,kBAAMknC,QAAQC,IAAI,4BAA0B,GAE3E,KA3Jf,4BA+JUlwC,GAEF,IAAIi9B,GAAe,EACf4R,EAA6B7uC,EAAOwK,cAAP,WACjC,GAAU,MAANqkC,EAAY,4BACZ,YAAkBA,EAAGL,WAArB,+CAAiC,KAAxBjvC,EAAwB,QAC7B09B,EAAMA,GAAO51B,KAAK8oC,SAAS5wC,IAFnB,mFAMhB,OAAO09B,IAzKf,+BA4Ka79B,GACL,OAAIiI,KAAK4nC,SAAS7vC,KAElBiI,KAAKmnC,WAAW5iC,KAAKxM,GACrBiI,KAAK+C,IAAIoC,IAAIpN,EAAEG,OAAO,IACf,KAjLf,6BAqLQ,OAAO8H,KAAKmnC,WAAWnlC,SArL/B,gCAyLQ,OAAiC,GAA1BhC,KAAKmnC,WAAWnlC,SAzL/B,mCA4LiBrJ,GAET,GAAiC,MAA9BqH,KAAK+C,IAAIjL,IAAIa,EAAOT,OAAgB,OAAO,EAE9C,IAAI,IAAIjB,EAAI,EAAGA,EAAI+I,KAAKmnC,WAAWnlC,OAAQ/K,IACpC+I,KAAKmnC,WAAWlwC,GAAGiB,OAASS,EAAOT,OAClC8H,KAAKmnC,WAAWpvB,OAAO9gB,EAAG,GAIlC+I,KAAK+C,IAAIgmC,OAAOpwC,EAAOT,SAtM/B,+BAyMaS,GACL,OAAqC,MAA9BqH,KAAK+C,IAAIjL,IAAIa,EAAOT,SA1MnC,8BA8MQ8H,KAAKmnC,WAAa,GAClBnnC,KAAK+C,IAAIkiC,a,6BA/MjB,K,okBCJO,IAAM,GAAb,YAEI,WAAYjuC,GAAc,M,iGAAA,S,EAEtB,S,EAAA,gBAAM,UAAWA,EAAQ,mE,+CAEzB,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAE1C,EAAKF,aAAoBpP,GAEzB,IAAIy3B,EAAuBz3B,EAAY8xB,QACvC2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMqmC,GAGV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAIsC,EAA2BhyC,EAAOqnB,UAAUC,QAAQ,OAAQwiB,QAChEkI,EAAa9iC,cAAgB,CAACwgC,GAE9B,EAAKrgC,WAAW9B,KAAKykC,GAErB,IAAIzB,EAAuBvwC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QA1B3C,OA2BtByG,EAAarhC,cAAgB,CAACwgC,GAE9B,EAAKp8B,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IAEnD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjC+wC,EAAK,IAAI,GAAUvxC,EAAGV,EAAO29B,KAAK6N,iBAAkBxrC,GACxDU,EAAEyL,cAAF,WAAgC8lC,KAEjC,GAAO,EAAO,iCAAiC,IAEtD,EAAK3+B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD0kC,GACA,SAAC1lC,GAEG,IACI2lC,EADmB3lC,EAAW,GAAG3J,MACfiL,cAAF,WAEpB,OAAO,GAAqBskC,YAAYD,EAAIA,EAAGxK,YAAahmC,EAAQ,aAAakB,SAElF,GAAO,EAAO,oEAErB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAW8J,EAAW,GAG1B,OAFoBnK,EAAEyL,cAAF,WAEV2lC,SAAS/wC,MAEpB,GAAO,EAAO,yHAErB,EAAKuS,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAwBkJ,EAAW,GAAG3J,MAG1C,OAFoBR,EAAEyL,cAAF,WAEVwkC,MAAMhvC,MAGpB,GAAO,EAAO,sDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,WAEV8hC,WAGd,GAAO,EAAO,iDAElB,EAAK36B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFoBnK,EAAEyL,cAAF,WAEVykC,SAASjvC,MAGvB,GAAO,EAAO,mDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFoBnK,EAAEyL,cAAF,WAEV0kC,aAAalvC,MAG3B,GAAO,EAAO,kHAElB,EAAK2R,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,WAEV2kC,aAGd,GAAO,EAAO,4CAElB,EAAKx9B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,IACA,SAACvN,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,WAEV4kC,UAGd,GAAO,EAAO,wDAElB,EAAKz9B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,IACzD,SAACxK,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,WAEV6kC,eAEX,GAAO,IAvJQ,EAF9B,O,mOAAA,SAAkC,G,okBCA3B,IAAM,GAAb,YAEI,WAAYhxC,GAAc,M,iGAAA,S,EAEtB,S,EAAA,gBAAM,gBAAiBA,EAAQ,kE,+CAE/B,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAE1C,EAAKF,aAAoBpP,GAEzB,IAAIy3B,EAAuBz3B,EAAY8xB,QACvC2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMqmC,GAGV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAIsC,EAA2BhyC,EAAOqnB,UAAUC,QAAQ,OAAQwiB,QAChEkI,EAAa9iC,cAAgB,CAACwgC,GAE9B,EAAKrgC,WAAW9B,KAAKykC,GAErB,IAAIzB,EAAuBvwC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QA1B3C,OA2BtByG,EAAarhC,cAAgB,CAACwgC,GAE9B,EAAKp8B,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IAEzD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjC+wC,EAAK,IAAI,GAAUvxC,EAAGV,EAAO29B,KAAK6N,iBAAkBxrC,GACxDU,EAAEyL,cAAF,UAA+B8lC,KAEhC,GAAO,EAAO,uCAAuC,IAE5D,EAAK3+B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD0kC,GACA,SAAC1lC,GAEG,IACI2lC,EADmB3lC,EAAW,GAAG3J,MACfiL,cAAF,WAEpB,OAAO,GAAqBskC,YAAYD,EAAIA,EAAGxK,YAAahmC,EAAQ,aAAakB,SAElF,GAAO,EAAO,oEAErB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAW8J,EAAW,GAG1B,OAFoBnK,EAAEyL,cAAF,WAEV2lC,SAAS/wC,MAEpB,GAAO,EAAO,yHAErB,EAAKuS,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAwBkJ,EAAW,GAAG3J,MAG1C,OAFoBR,EAAEyL,cAAF,WAEVwkC,MAAMhvC,MAGpB,GAAO,EAAO,sDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,WAEV8hC,WAGd,GAAO,EAAO,iDAElB,EAAK36B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFoBnK,EAAEyL,cAAF,WAEVykC,SAASjvC,MAGvB,GAAO,EAAO,mDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFoBnK,EAAEyL,cAAF,WAEV0kC,aAAalvC,MAG3B,GAAO,EAAO,kHAElB,EAAK2R,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,WAEV2kC,aAGd,GAAO,EAAO,4CAElB,EAAKx9B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,IACA,SAACvN,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,WAEV4kC,UAGd,GAAO,EAAO,wDAElB,EAAKz9B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,IACzD,SAACxK,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,WAEV6kC,eAEX,GAAO,IAvJQ,EAF9B,O,mOAAA,SAAwC,G,yoBCHjC,IAAM,GAAb,YAEI,WAAYhxC,GAAc,O,4FAAA,SAEtB,0BAAM,QAASA,IAEf,IAEIyvC,EAFoBzvC,EAAOqnB,UAAUC,QAAQ,UAEnBwiB,QAC9B2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMqmC,GAGV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAI6B,EAAkCvxC,EAAOqnB,UAAUC,QAAQ,cAAewiB,QAnBxD,OAoBtByH,EAAoBriC,cAAgB,CAACwgC,GAErC,EAAK94B,QAAQrJ,KAAKgkC,GAGlB,EAAKj+B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAClD4jC,EACA,MACA,GAAM,EAAO,0GAEjB,EAAKn8B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxF2lC,EACA,MACA,GAAM,EAAO,0GAEjB,EAAKn8B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChD4jC,EACA,MACA,GAAM,EAAO,iHAvCK,EAF9B,O,mOAAA,SAAgC,G,yoBCAzB,IAAM,GAAb,YAEI,WAAYzvC,GAAc,O,4FAAA,SAEtB,0BAAM,QAASA,EAAQ,wFAEvB,IAEIyvC,EAFoBzvC,EAAOqnB,UAAUC,QAAQ,UAEnBwiB,QAC9B2F,EAAMttC,WAAa,IACnBstC,EAAMtgC,gBAAiB,EAEvB,IAAIugC,EAAoB,CACpBvtC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMqmC,GAGV,EAAKvgC,cAAc3B,KAAKmiC,GAExB,IAAIwC,EAA6BlyC,EAAOqnB,UAAUC,QAAQ,SAAUwiB,QACpEoI,EAAehjC,cAAgB,CAACwgC,GAEhC,EAAK94B,QAAQrJ,KAAK2kC,GAGlB,EAAK5+B,UAAU,IAAIvJ,EAAO,wBAAyB,IAAI8B,EAAc,CACjE,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,GACA,MACA,GAAM,EAAO,sGAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,uBAAwB,IAAI8B,EAAc,CAChE,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,GACA,MACA,GAAM,EAAO,uGAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxF,KACA,MACA,GAAM,EAAO,gDAEjB,EAAKwJ,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxF,KACA,MACA,GAAM,EAAO,8CAEjB,EAAKwJ,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvD4jC,EACA,MACA,GAAM,EAAO,4GAEjB,EAAKn8B,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtD4jC,EACA,MACA,GAAM,EAAO,0GAEjB,EAAKn8B,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrD4jC,EACA,MACA,GAAM,EAAO,mHAEjB,EAAKn8B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD4jC,EACA,MACA,GAAM,EAAO,iHAEjB,EAAKn8B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,UAAWiH,KAAMqmC,EAAOv2B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxF,KACA,MACA,GAAM,EAAO,8CAEjB,EAAKwJ,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,IAC/C4jC,EACA,MACA,GAAM,EAAO,4HAEjB,IAAIc,EAAuBvwC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QAhF3C,OAiFtByG,EAAarhC,cAAgB,CAACwgC,GAE9B,EAAKp8B,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,IAC9D0kC,EACA,MACA,GAAM,EAAO,0IAtFK,EAF9B,O,mOAAA,SAAgC,G,okBCQzB,IAAM,GAAb,YAEI,WAAYvwC,GAAc,M,iGAAA,S,EAEtB,S,EAAA,gBAAM,aAAcA,EAAQ,sB,+CAE5B,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAE1C,EAAKF,aAAoBpP,GAEzB,IAAIo4B,EAAuBp4B,EAAY8xB,QACvCsG,EAAMjuC,WAAa,IACnBiuC,EAAMjhC,gBAAiB,EAEvB,IAAIkhC,EAAoB,CACpBluC,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMgnC,GAGV,EAAKlhC,cAAc3B,KAAK8iC,GAExB,IAAI8B,EAA6BnyC,EAAOqnB,UAAUC,QAAQ,SAAUwiB,QACpEqI,EAAejjC,cAAgB,CAACmhC,GAEhC,EAAKhhC,WAAW9B,KAAK4kC,GAErB,IAAI5B,EAAuBvwC,EAAOqnB,UAAUC,QAAQ,YAAawiB,QA1B3C,OA2BtByG,EAAarhC,cAAgB,CAACmhC,GAE9B,EAAK/8B,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCsvC,EAAK,IAAI,GAAW9vC,EAAGV,EAAO29B,KAAK6N,iBAAkBxrC,GACzDU,EAAEyL,cAAF,WAAgCqkC,KAEjC,GAAO,EAAO,oCAAoC,IAEzD,EAAKl9B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD0kC,GACA,SAAC1lC,GAEG,IACI2lC,EADmB3lC,EAAW,GAAG3J,MACdiL,cAAF,WAErB,OAAO,GAAsBskC,YAAYD,EAAIA,EAAGxK,YAAahmC,EAAQ,aAAakB,SAEnF,GAAO,EAAO,oEAErB,EAAKoS,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,IAC9D0kC,GACA,SAAC1lC,GAEG,IACI2lC,EADmB3lC,EAAW,GAAG3J,MACdiL,cAAF,WAErB,OAAO,GAAsBskC,YAAYD,EAAIA,EAAGxK,YAAahmC,EAAQ,cAAckB,SAEpF,GAAO,EAAO,0IAErB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAW8J,EAAW,GAG1B,OAFqBnK,EAAEyL,cAAF,WAEXukC,IAAI3vC,MAEf,GAAO,EAAO,iIAErB,EAAKuS,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAwBkJ,EAAW,GAAG3J,MAG1C,OAFqBR,EAAEyL,cAAF,WAEXwkC,MAAMhvC,MAGpB,GAAO,EAAO,sDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX8hC,WAGd,GAAO,EAAO,iDAElB,EAAK36B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXykC,SAASjvC,MAGvB,GAAO,EAAO,mDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEX0kC,aAAalvC,MAG3B,GAAO,EAAO,kHAElB,EAAK2R,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX2kC,aAGd,GAAO,EAAO,4CAElB,EAAKx9B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,IACA,SAACvN,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX4kC,UAGd,GAAO,EAAO,wDAElB,EAAKz9B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,IACzD,SAACxK,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEX6kC,eAEX,GAAO,IAGd,EAAK19B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAClDukC,GACA,SAACvlC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXimC,0BAGd,GAAO,EAAO,0GAElB,EAAK9+B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDukC,GACA,SAACvlC,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjB2J,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXkmC,kBAGd,GAAO,EAAO,0GAElB,EAAK/+B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDukC,GACA,SAACvlC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXmmC,kBAGd,GAAO,EAAO,iHAElB,EAAKh/B,UAAU,IAAIvJ,EAAO,wBAAyB,IAAI8B,EAAc,CACjE,CAAE1J,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXomC,sBAAsB5wC,MAGpC,GAAO,EAAO,sGAElB,EAAK2R,UAAU,IAAIvJ,EAAO,uBAAwB,IAAI8B,EAAc,CAChE,CAAE1J,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXomC,sBAAsB5wC,MAGpC,GAAO,EAAO,uGAElB,EAAK2R,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxF,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXqmC,SAAS7wC,MAGvB,GAAO,EAAO,gDAElB,EAAK2R,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxF,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXsmC,QAAQ9wC,MAGtB,GAAO,EAAO,8CAElB,EAAK2R,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDukC,GACA,SAACvlC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXimC,0BAGd,GAAO,EAAO,4GAElB,EAAK9+B,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDukC,GACA,SAACvlC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXumC,yBAGd,GAAO,EAAO,0GAElB,EAAKp/B,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDukC,GACA,SAACvlC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXwmC,wBAGd,GAAO,EAAO,mHAElB,EAAKr/B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDukC,GACA,SAACvlC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXymC,uBAGd,GAAO,EAAO,iHAElB,EAAKt/B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,UAAWiH,KAAMgnC,EAAOl3B,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxF,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAgBkJ,EAAW,GAG/B,OAFqBnK,EAAEyL,cAAF,WAEXukC,IAAI/uC,MAGlB,GAAO,EAAO,8CAElB,EAAK2R,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,IAC/CukC,GACA,SAACvlC,GAKG,OAHuBA,EAAW,GAAG3J,MACdiL,cAAF,WAEXmR,SAGd,GAAO,EAAO,4HAzUI,EAF9B,O,mOAAA,SAAqC,G,yoBCP9B,IAAM,GAAb,YAEI,WAAYtd,GAAc,a,4FAAA,UACtB,0BAAM,UAAWA,EAAQ,4CAEpBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAKhU,UAAW,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAAC,CAAC1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAAU,MACzJ,SAACe,G,MAE6B,QAA1B,EAAA7K,EAAO29B,KAAK0Q,sBAAc,SAAEuD,QAAQiB,YAAYnZ,KAAK,mBAAmBoZ,OAAO,QAAmBjoC,EAAW,GAAG3J,MAAS,aAC1H,GAAO,IATI,EAF9B,O,mOAAA,SAAkC,G,uKCE3B,IAAM6xC,GAAb,WAmBI,WAAoBC,EAAsCrV,GAAc,Y,4FAAA,SAApD,KAAAqV,UAAsC,KAAArV,OAjB1D,KAAA7J,MAAgB,GAChB,KAAAmf,SAAmB,GAMnB,KAAAC,SAAmB,IACnB,KAAAC,OAAgC,GAEhC,KAAAC,SAAmB,EAEnB,KAAAC,cAAgC,GAEhC,KAAAC,kBAA4B,EAC5B,KAAAC,kBAA4B,EAGxBC,QAAO,WACH,EAAKC,WAAaT,EAAQtZ,KAAK,cAC/B,EAAKuU,QAEL,IAAIlnB,EAAO,EAEPrlB,EAAY,EAEZssC,GAAQ,EACR0F,EAAe7F,YAAYC,MAE/B6F,aAAY,WACJ5sB,EAAKssB,cAAcroC,OAAS,IAC5B+b,EAAK6sB,aACD/F,YAAYC,MAAQ4F,EAAe,IACnC3sB,EAAK0sB,WAAW,GAAGI,UAAY9sB,EAAK0sB,WAAW,GAAGK,aAElD9F,GAAQ,EAEZ0F,EAAe7F,YAAYC,OAG3BpsC,IAAM,IAAM,GAAKssC,GACjB+F,YAAW,WACPhtB,EAAK0sB,WAAW,GAAGI,UAAY9sB,EAAK0sB,WAAW,GAAGK,aAClD9F,GAAQ,IACT,OAGR,O,UAjDf,O,EAAA,G,EAAA,wCAwDQ,OAAOhlC,KAAKgqC,QAAQtZ,KAAK,kBAxDjC,uCA4DQ,IAAIsa,EAAiBhrC,KAAKgqC,QAAQtZ,KAAK,sBACvCsa,EAAeC,OACfD,EAAeE,SAAS,mBACxBH,YAAW,WACPC,EAAeG,YAAY,mBAC3BH,EAAeI,SAChB,OAlEX,mCAyEQ,GAAIprC,KAAKoqC,UAAYpqC,KAAKkqC,SAAU,CAEhClqC,KAAKyqC,WAAW1f,QAKhB,IAHA,IAAI9zB,EAAI+I,KAAKqqC,cAAcroC,OAAS,EAChCqpC,EAAK,EAEFp0C,GAAK,GAAG,CAEX,GAAI+I,KAAKqqC,cAAcpzC,GAAGq0C,WACtBD,GACUrrC,KAAKkqC,SAAU,CACrBlqC,KAAKqqC,cAActyB,OAAO,EAAG9gB,EAAI,GACjC,MAGRA,KAKR+I,KAAKoqC,SAAW,EAGK,MAAlBpqC,KAAKurC,YACJvrC,KAAKurC,UAAU1E,SACZ7mC,KAAKiqC,SAAS93B,SAAS,aAAYnS,KAAKiqC,SAAWjqC,KAAKiqC,SAAS53B,UAAU,EAAGrS,KAAKiqC,SAASjoC,OAAS,KA9BtG,2BAkCN,YAAehC,KAAKqqC,cAApB,+CAAmC,KAA1BmB,EAA0B,QA8B/B,GAxBIxrC,KAAKuqC,kBAAoBiB,EAAG51B,KAAKxD,WAAW,KAChCo5B,EAAG51B,KAAKvE,MAAM,cAChB,GAAGrP,OAAS,IAAGhC,KAAKuqC,kBAAmB,GAE7CiB,EAAG51B,KAAK5T,OAAS,IAAGhC,KAAKuqC,kBAAmB,GAGpDiB,EAAG51B,KAAO41B,EAAG51B,KAAK9L,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAEtC,MAAZ0hC,EAAG1gB,QAAe0gB,EAAG1gB,MAAQ,6BAEZ,IAAjB9qB,KAAKiqC,UAAkBjqC,KAAK8qB,OAAS0gB,EAAG1gB,QACnB,IAAjB9qB,KAAKiqC,WAAgBjqC,KAAKiqC,UAAY,WAC1CjqC,KAAKiqC,UAAY,uBAAyBuB,EAAG1gB,MAAQ,KAClD0gB,EAAGF,SAAsB,IAAXE,EAAG51B,OAAY5V,KAAKiqC,UAAY,KACjDjqC,KAAK8qB,MAAQ0gB,EAAG1gB,OAGhB9qB,KAAKsqC,mBAAqB,MAC1BtqC,KAAKiqC,UAAYuB,EAAG51B,KACpB5V,KAAKsqC,mBAAqBkB,EAAG51B,KAAK5T,QAIlCwpC,EAAGF,QAAS,CACZtrC,KAAKuqC,kBAAmB,EACnBvqC,KAAKiqC,SAAS93B,SAAS,aAAYnS,KAAKiqC,UAAY,WACzDjqC,KAAKurC,UAAYf,OAAOxqC,KAAKiqC,UAC7BjqC,KAAKyrC,SAAS3B,OAAO9pC,KAAKurC,WAE1BvrC,KAAKiqC,SAAW,GAChBjqC,KAAKurC,UAAY,KAEjBvrC,KAAKyrC,SAAWjB,OAAO,eAEvB,IAAIkB,EAAS1rC,KAAK20B,KAAK6N,iBAAiBmJ,aAAaD,OACxC,MAAVA,EACC1rC,KAAKyrC,SAASG,aAAaF,GAE3B1rC,KAAKyqC,WAAWX,OAAO9pC,KAAKyrC,UAGhCzrC,KAAKmqC,OAAO5lC,KAAKvE,KAAKyrC,UACtBzrC,KAAKsqC,kBAAoB,IAnF3B,kFA8FN,GANqB,IAAjBtqC,KAAKiqC,WACAjqC,KAAKiqC,SAAS93B,SAAS,aAAYnS,KAAKiqC,UAAY,WACzDjqC,KAAKurC,UAAYf,OAAOxqC,KAAKiqC,UAC7BjqC,KAAKyrC,SAAS3B,OAAO9pC,KAAKurC,YAG1BvrC,KAAKmqC,OAAOnoC,OAAyB,IAAhBhC,KAAKkqC,SAAgB,CAC1C,IACI2B,EADO7rC,KACcmqC,OAAOnoC,OADrBhC,KACmCkqC,SAE1C4B,EAHO9rC,KAGemqC,OAAOpyB,OAAO,EAAG8zB,GAJD,uBAM1C,YAAkBC,EAAlB,+CAAkC,QACxBjF,SAPgC,mFAY9C7mC,KAAKqqC,cAAgB,KA/K7B,8BAmLQrqC,KAAKyqC,WAAW1f,QAChB/qB,KAAKyrC,SAAWjB,OAAO,eACvBxqC,KAAKmqC,OAAO5lC,KAAKvE,KAAKyrC,UACtBzrC,KAAKyqC,WAAWX,OAAO9pC,KAAKyrC,UAC5BzrC,KAAKsqC,kBAAoB,EACzBtqC,KAAK8qB,MAAQ,GACb9qB,KAAKiqC,SAAW,GAChBjqC,KAAKqqC,cAAgB,KA1L7B,4BA6LUz0B,EAAqBkV,GACvB,GAAY,MAARlV,EAAJ,CAEA,GAAmB,iBAATkV,EAAkB,CAExB,IADAA,EAAQA,EAAMta,SAAS,IACjBsa,EAAM9oB,OAAS,GAAG8oB,EAAQ,IAAMA,EACtCA,EAAQ,IAAMA,EAIlB,IADAlV,EAAOA,EAAKpF,YACHpL,QAAQ,OAAS,EAEtB,IADA,IAAI2mC,EAAQn2B,EAAKhD,MAAM,MACd3b,EAAI,EAAGA,EAAI80C,EAAM/pC,OAAQ/K,IAAK,CACnC,IAAIkB,EAAI4zC,EAAM90C,GACVq0C,EAAUr0C,EAAI80C,EAAM/pC,OAAS,EACxB,IAAL7J,GAAWlB,GAAK80C,EAAM/pC,OAAS,IACnChC,KAAKqqC,cAAc9lC,KAAK,CACpBqR,KAAMzd,EACN2yB,MAAOA,EACPwgB,QAASA,IAETA,GAAStrC,KAAKoqC,iBAGtBpqC,KAAKqqC,cAAc9lC,KAAK,CACpBqR,KAAMA,EACNkV,MAAOA,EACPwgB,SAAS,OAxNzB,8BA6NY11B,EAAqBkV,GACb,MAARlV,IAAcA,EAAO,IACzB5V,KAAK2qB,MAAM/U,EAAO,KAAMkV,Q,6BA/NhC,K,uKCHO,IAAM,GAAb,WAII,WAAoBkf,EAAsCrV,I,4FAAc,SAApD,KAAAqV,UAAsC,KAAArV,O,UAJ9D,O,EAAA,G,EAAA,iCAQqBjzB,EAAgBG,EAAqBmqC,GAElD,IAAI/qC,EAAaS,EAAO2iB,gBACpB5X,EAAU5K,EAAW,GAAG3J,MACxB+zC,EAAoC,GAArBpqC,EAAWG,OAAcH,EAAW,GAAG3J,MAAQ,KAE9Dg0C,EAA6BlsC,KAAK20B,KAAK6N,iBAAiB0J,aAC9C,MAAXz/B,GAA8B,IAAXA,IAClBy/B,EAAa3B,kBAAmB,EAChC2B,EAAathB,QAAQ,KAAOne,GAC5By/B,EAAatB,cAGjB5qC,KAAK0rC,OAASlB,OAAO,4CAEX0B,EAAazB,WACnBX,OAAO9pC,KAAK0rC,QAEhB,IAAIS,EAAsB,MAAhBF,EAAuB,GAAKA,EACtCjsC,KAAK0rC,OAAOU,IAAID,GAEhB,IAAIpuB,EAAO/d,KAOXA,KAAK0rC,OAAOW,GAAG,WAAW,SAAC50B,GACX,SAATA,EAAEjf,KACDulB,EAAKuuB,SAASrrC,EAAY+qC,MAIlCjB,YAAW,WACPhtB,EAAK2tB,OAAOa,UACb,KAEHL,EAAazB,WAAW4B,GAAG,0BAA0B,SAAC50B,GAClDszB,YAAW,WACPhtB,EAAK2tB,OAAOa,UACb,UAjDf,+BAsDansC,EAAY4rC,GACjB,IAAInoC,EAAqB7D,KAAK0rC,OAAOU,MACjCF,EAAelsC,KAAK20B,KAAK6N,iBAAiB0J,aAE1CM,EAAgBxsC,KAAKo9B,MAAMv5B,EAAGzD,GAElC,GAA0B,MAAvBosC,EAAczgC,MAQb,OANA/L,KAAK0rC,OAAOe,SACZP,EAAathB,QAAQ4hB,EAAczgC,MAAO,WAC1CmgC,EAAatB,aACbsB,EAAazB,WAAWX,OAAO9pC,KAAK0rC,QACpC1rC,KAAK0rC,OAAO,GAAGgB,sBACf1sC,KAAK0rC,OAAOa,QAIhBL,EAAazB,WAAWkC,IAAI,0BAC5BT,EAAathB,QAAQ/mB,GACrB7D,KAAK0rC,OAAOiB,IAAI,WAChB3sC,KAAKorC,OAELY,EAASQ,EAAct0C,SA5E/B,4BAgFU2L,EAAWzD,GAEb,GAAGA,GAAQiM,GACP,MAAO,CACHN,MAAO,KACP7T,MAAO,CAACA,MAAO2L,EAAGzD,KAAMA,IAIhC,GAAGA,GAAQ8Q,GACP,OAAe,GAAZrN,EAAE7B,OAAoB,CAAC+J,MAAO,4CAA6C7T,MAAO,MAClF2L,EAAE7B,OAAS,EAAU,CAAC+J,MAAO,+CAAgD7T,MAAO,MAChF,CACH6T,MAAO,KACP7T,MAAO,CAACA,MAAO2L,EAAGzD,KAAMA,IAIhC,GAAGA,GAAQ8Q,GACP,MAAQ,QAALrN,GAAoB,SAALA,EAAqB,CAACkI,MAAO,iCAAkC7T,MAAO,MACjF,CACH6T,MAAO,KACP7T,MAAO,CAACA,MAAY,QAAL2L,EAAazD,KAAMA,IAI1CyD,EAAIA,EAAEiG,QAAQ,IAAK,KAEnB,IAAIpR,EAAImX,OAAOhM,GAEf,OAAQ,MAALnL,EACQ,CAACqT,MAAO,2BAA4B7T,MAAO,MAGnDkI,GAAQgP,GACJ1W,GAAK4T,KAAK+5B,MAAM3tC,GAAW,CAACqT,MAAO,iCAAkC7T,MAAO,MACxE,CACH6T,MAAO,KACP7T,MAAO,CAACA,MAAOoU,KAAK+5B,MAAM3tC,GAAI0H,KAAMA,IAIrC,CACH2L,MAAO,KACP7T,MAAO,CAACA,MAAOQ,EAAG0H,KAAMA,MA5HpC,6BAoI0B,MAAfJ,KAAK0rC,SACJ1rC,KAAK0rC,OAAO7E,SACZ7mC,KAAK0rC,OAAS,W,6BAtI1B,KCAM,SAAUkB,GAAKC,EAAaC,EAAcC,EAC5CC,GACAC,IAAgB,GAChBC,EAAEN,KAAK,CACHxsC,KAAM,OACN+sC,OAAO,EACPC,KAAM5Q,KAAKC,UAAUqQ,GACrBO,YAAa,mBACbR,IAAKA,EACLS,QAAS,SAAUC,GAEf,GADAN,IAAgB,GACQ,MAApBM,EAASD,SAAuC,GAApBC,EAASD,SAAyC,iBAAbC,GAAqC,IAAZA,EAAgB,CAC1G,IAAIxhC,EAAQ,yCACY,MAApBwhC,EAAS9gC,UAAiBV,EAAQwhC,EAAS9gC,SAO3CugC,GAAeA,EAAcjhC,QAEjCghC,EAAgBQ,IAKxBxhC,MAAO,SAAUyhC,EAAO/gC,GAEpB,GADAwgC,IAAgB,GACZD,EAAe,CACf,IAAIS,EAAa,2BAKjB,OAJoB,GAAhBD,EAAME,SACND,EAAa,GAAKD,EAAME,aAE5BV,EAAcvgC,EAAU,KAAOghC,OAOzC,SAAUR,GAAgBU,GACxBA,EACAnD,OAAO,oBAAoBS,OAE3BT,OAAO,oBAAoBY,O,uKC5C5B,IAAM,GAAb,WAeI,WAAoBzW,EAAoBiZ,I,4FAAoC,SAAxD,KAAAjZ,OAAoB,KAAAiZ,kBAXxC,KAAAC,4BAAsC,GACtC,KAAAC,gCAA0C,EAE1C,KAAAC,yBAAmC,GACnC,KAAAC,kBAA4B,EAC5B,KAAAC,oBAA8B,EAC9B,KAAAC,sBAAgCluC,KAAK+tC,yBACrC,KAAAI,eAAyB,E,UAX7B,O,EAAA,G,EAAA,yCAmBmB,WAEPpwB,EAAO/d,KACXA,KAAK4tC,gBAAgBld,KAAK,OAAO0d,KAAK,QAASrwB,EAAKgwB,0BAEhC,MAAjB/tC,KAAKquC,UAAkBC,cAActuC,KAAKquC,UAE7C,IAAIE,EAAkCvuC,KAAKguC,kBAE3ChuC,KAAKquC,SAAW1D,aAAY,WAExB,GAAqB,MAAlB5sB,EAAK4W,KAAK6Z,KAAb,CAIA,GAFAzwB,EAAKmwB,wBAEFnwB,EAAKmwB,sBAAwB,EAAG,CAC/BnwB,EAAKmwB,sBAAwBnwB,EAAKgwB,yBAElC,IAAIU,EAAyC,KAD7CF,EAEGE,IACC,EAAKR,sBACLM,EAA0B,EAAKP,kBAC5B,EAAKC,oBAAsB,KAC1BM,EAAmD,GAAzB,EAAKP,oBAGvCjwB,EAAK2wB,aAAY,cAAUD,GAG/B,IAAIE,EAAQ,EAAKf,gBAAgBld,KAAK,uBAEtCie,EAAMP,KAAK,QAASrwB,EAAKmwB,sBAAwB,MAE9CnwB,EAAKowB,eACJQ,EAAMC,IAAI,OAAQ,WAClB,EAAKhB,gBAAgBQ,KAAK,QAAQ,oEAElCO,EAAMC,IAAI,OAAQ,WAClB,EAAKhB,gBAAgBQ,KAAK,QAAQrwB,EAAKmwB,sBAAwB,4CAGpE,OA5DX,kCAgEgBlC,GAA0D,I,EAAA,OAArC6C,EAAqC,wDAElE,GAAqB,MAAlB7uC,KAAK20B,KAAK6Z,MAAgBxuC,KAAK20B,KAAK6Z,KAAKM,YACzB,MAAZ9C,GAAkBA,QADzB,CAKAhsC,KAAK20B,KAAKoa,gBAAgBC,wBAE1B,IAAIC,EAAiC,QAArB,EAAGjvC,KAAK20B,KAAKua,gBAAQ,eAAED,aACnCE,EAAenvC,KAAK20B,KAAK6Z,KAAKY,WAE/BH,aAAY,EAAZA,EAAcjK,QAAShlC,KAAK20B,KAAK0a,iBAEhCrvC,KAAK20B,KAAK0a,eAAgB,EAC1BF,EAAaF,aAAeA,aAAY,EAAZA,EAAcK,YAC1CtvC,KAAKuvC,wBAAuB,eAC5BvvC,KAAKiuC,oBAAsB,GAG/BgB,EAAajK,OAAQ,EAErB,IAAIwK,EAA0B,GAC1BC,EAAqB,GAvByC,uBAyBlE,YAAczvC,KAAK20B,KAAK+a,cAAxB,+CAAsC,KAA9BC,EAA8B,QAE9BA,EAAGC,QACHJ,EAAOjrC,KAAKorC,EAAGE,kBAAiB,IAChCF,EAAGC,OAAQ,EACX5vC,KAAKiuC,oBAAsB,GALG,2BAQlC,YAAa0B,EAAGnxB,YAAY8F,YAAW,GAAvC,+CAA8C,KAAtCjtB,EAAsC,QACtCA,EAAEyqC,KAAK8N,QACP5vC,KAAKiuC,oBAAsB,EAC3B52C,EAAEyqC,KAAKlsB,KAAOve,EAAE8tC,gCAChBsK,EAAOlrC,KAAKlN,EAAEy4C,YAAYH,IAE1Bt4C,EAAEyqC,KAAK8N,OAAQ,IAdW,oFAzB4B,kFA4ClE,IAAI9C,EAA8B,CAC9BiD,uBAAwBP,EACxBQ,MAAOP,EACPQ,SAAUjwC,KAAK20B,KAAKub,kBACpBC,OAAQnwC,KAAK20B,KAAK6Z,KAAK5sC,GACvBwuC,SAAU,GAGVryB,EAAO/d,KACX,GAAGwvC,EAAOxtC,OAAS,GAAKytC,EAAOztC,OAAS,GAAK6sC,EACzCjC,GAAK,cAAeE,GAAS,SAACS,GAC1BxvB,EAAKowB,eAAiBZ,EAASD,QAC3BvvB,EAAKowB,gBAEF,EAAKxZ,KAAKub,mBAAqB,EAAKvb,KAAK6Z,KAAK5sC,IAC7Cmc,EAAKsyB,iBAAiBvD,EAASS,GAGpB,MAAZvB,IACCA,OAIT,WACCjuB,EAAKowB,eAAgB,UAGzB,GAAe,MAAZnC,EAEC,YADAA,OAxIhB,0CA+IwBsE,EAAcL,EAAkBjE,GAEhD,GAAGhsC,KAAK20B,KAAK6Z,KAAKM,YAGd,OAFAwB,EAAE1uC,GAAK0K,KAAK+5B,MAAsB,IAAhB/5B,KAAKikC,eACvBvE,EAAS,MAabY,GAAK,gCAR+C,CAChDxsC,KAAM,SACNowC,OAAQ,YACRpD,KAJoBkD,EAAET,kBAAiB,GAKvCI,SAAUA,EACVE,OAAQnwC,KAAK20B,KAAK6Z,KAAK5sC,KAGoB,SAAC2rC,GAC5C+C,EAAE1uC,GAAK2rC,EAAS3rC,GAChBoqC,EAAS,QACVA,KAnKX,qCAuKmB30C,EAAWs4C,EAAeM,EAAkBjE,GAEvD,GAAGhsC,KAAK20B,KAAK6Z,KAAKM,YAGd,OAFAz3C,EAAEyqC,KAAKlgC,GAAK0K,KAAK+5B,MAAsB,IAAhB/5B,KAAKikC,eAC5BvE,EAAS,MAcbY,GAAK,gCAR+C,CAChDxsC,KAAM,SACNowC,OAAQ,OACRpD,KAJe/1C,EAAEy4C,YAAYH,GAK7BM,SAAUA,EACVE,OAAQnwC,KAAK20B,KAAK6Z,KAAK5sC,KAGoB,SAAC2rC,GAC5Cl2C,EAAEyqC,KAAKlgC,GAAK2rC,EAAS3rC,GACrBoqC,EAAS,QACVA,KA5LX,6CAgM2B2D,EAAe3D,GAE/BhsC,KAAK20B,KAAK6Z,KAAKM,YACd9C,EAAS,mDAAoD,MAUjEY,GAAK,qBALoC,CACrC6D,aAAcd,EAAG/tC,GACjBwuC,SAAU,IAGsB,SAAC7C,GACjCvB,EAASuB,EAAS9gC,QAAS8gC,EAASmD,aACrC1E,KA/MX,8CAmN4B2D,EAAegB,EAAmBC,EAAuB5E,GAE1EhsC,KAAK20B,KAAK6Z,KAAKM,YACd9C,EAAS,oDAKbhsC,KAAK0uC,aAAY,WASb9B,GAAK,sBAPqC,CACtC6D,aAAcd,EAAG/tC,GACjBivC,SAAUF,aAAM,EAANA,EAAQ/uC,GAClBgvC,YAAaA,EACbR,SAAU,IAGuB,SAAC7C,GAClCvB,EAASuB,EAAS9gC,WACnBu/B,MAEJ,KAxOX,2CA6OyB2D,EAAemB,EAAoBC,EAAkBC,EAAyBhF,GAE5FhsC,KAAK20B,KAAK6Z,KAAKM,YACd9C,EAAS,oDAKbhsC,KAAK0uC,aAAY,WASb9B,GAAK,mBAPS,CACV6D,aAAcd,EAAG/tC,GACjBkvC,WAAYA,EACZt5C,KAAMu5C,EACN5wC,YAAa6wC,IAGiB,SAACzD,GAC/BoC,EAAGnxB,YAAY8F,YAAW,GAAOvS,SAAQ,SAAA1a,GACrCA,EAAEyqC,KAAKmP,cAAgB55C,EAAEyqC,KAAKlgC,GAC9BvK,EAAEyqC,KAAKoP,wBAA0B,KAErCvB,EAAGwB,cAAgB5D,EAAS4D,cAC5BxB,EAAGyB,oCAAqC,EACxCpF,EAASuB,EAAS9gC,QAAS8gC,EAAS4D,iBACrCnF,MAEJ,KAxQX,gDA6Q8B5rC,EAA4BwB,EAAYoqC,GAE3DhsC,KAAK20B,KAAK6Z,KAAKM,YACd9C,EAAS,MAYbY,GAAK,gCAP+C,CAChDxsC,KAAM,SACNowC,OAAQpwC,EACRwB,GAAIA,EACJuuC,OAAQnwC,KAAK20B,KAAK6Z,KAAK5sC,KAGoB,SAAC2rC,GACzCA,EAASD,QACRtB,EAAS,MAETA,EAAS,qBAEdA,KAlSX,6CAsS2BA,GAEhBhsC,KAAK20B,KAAK6Z,KAAKM,YACd9C,EAAS,MASbY,GAAK,qBALoC,CACrCwC,SAAUpvC,KAAK20B,KAAK6Z,KAAKY,SACzBe,OAAQnwC,KAAK20B,KAAK6Z,KAAK5sC,KAGS,SAAC2rC,GAC9BA,EAASD,QACRtB,EAAS,MAETA,EAAS,qBAEdA,KAxTX,uCA6T6BqF,EAAwCC,GAAwC,WAEjGC,EAAyD,IAAIzxC,IAE7D0xC,EAAgB,GACpBH,EAAmBrB,MAAMj+B,SAAQ,SAAA+vB,GAAI,OAAI0P,EAAcjtC,KAAKu9B,EAAKlgC,OAEjE0vC,EAAoBG,WAAWA,WAAW1/B,SAAQ,SAAA2/B,GAAE,OAAIH,EAA2BpsC,IAAIusC,EAAG9vC,GAAI8vC,MAE9F,IAAIC,EAA8B,GATmE,uBAWrG,IAXqG,IAWrG,EAXqG,iBAW5FC,EAX4F,QAgBnE,GAHR,EAAKjd,KAAK+a,cAAc7kC,QAAO,SAAA8kC,GAAE,OAAIA,EAAG/tC,IAAMgwC,EAAgBhwC,MAGhEI,SAChB2vC,EAAkBptC,KAAKqtC,EAAgBp6C,MACvC,EAAKq6C,oCAAoCD,KAPjD,EAA4BN,EAAoBG,WAAWA,WAA3D,+CAAuE,IAX8B,6GAyBrG,YAAqBzxC,KAAK20B,KAAK+a,cAA/B,+CAA6C,KAArCgB,EAAqC,QACrCkB,EAAiCL,EAA2Bz5C,IAAI44C,EAAU9uC,IACxD,MAAnBgwC,GAAwB,WACvB,IAAIE,EAA+C,IAAIhyC,IACvD8xC,EAAgB5B,MAAMj+B,SAAQ,SAAAggC,GAAE,OAAID,EAAsB3sC,IAAI4sC,EAAGnwC,GAAImwC,MAErE,IAAIC,EAAqC,IAAIlyC,IAJtB,uBAMvB,YAAkB4wC,EAAUlyB,YAAY8F,YAAW,GAAnD,+CAA0D,KAAlDttB,EAAkD,QAClDi7C,EAASj7C,EAAO8qC,KAAKlgC,GACzBowC,EAAc7sC,IAAI8sC,EAAQj7C,GAC1B,IAAIk7C,EAAiBJ,EAAsBh6C,IAAIm6C,GAC1B,MAAlBC,GACC,EAAKvd,KAAKoa,gBAAgBoD,cAAcC,cAAcp7C,GACtD,EAAK29B,KAAK0d,iBAAiB7zB,YAAY8zB,aAAat7C,IAC9Ck7C,EAAeK,QAAUv7C,EAAO8qC,KAAKyQ,WACxCf,EAAcpsC,QAAQ6sC,GAAU,GAAKC,EAAezD,eACnDz3C,EAAO8qC,KAAKlsB,KAAOs8B,EAAet8B,KAClC5e,EAAOigB,MAAMu7B,SAASN,EAAet8B,MAErC5e,EAAO8qC,KAAK8N,OAAQ,EACpB54C,EAAOy7C,mBAAqBz7C,EAAOigB,MAAMy7B,2BAE7C17C,EAAO8qC,KAAKyQ,QAAUL,EAAeK,UArBtB,6GA0BvB,YAAsBX,EAAgB5B,MAAtC,+CAA4C,KAApC2C,EAAoC,QACD,MAApCX,EAAcl6C,IAAI66C,EAAW/wC,KAC5B,EAAKgxC,WAAWlC,EAAWiC,IA5BZ,uFA3BsE,kFA6DrG,GAAGhB,EAAkB3vC,OAAS,EAAE,CAC5B,IAAIyK,EAAkBklC,EAAkB3vC,OAAS,EAAI,yDAA2D,yDAChHyK,GAAWklC,EAAkB1uC,KAAK,MAClC4vC,MAAMpmC,GAGVzM,KAAK20B,KAAKoa,gBAAgB+D,mBAAmBC,eAC7C/yC,KAAK20B,KAAKoa,gBAAgBoD,cAAcY,iBAjYhD,0DAqY+CnB,GAAyD,IAAzBoB,EAAyB,wDAC5F1C,EAAItwC,KAAK20B,KAAKse,mBAAmBrB,EAAgBp6C,KAAMo6C,EAAgB3B,UAC3EK,EAAE1uC,GAAKgwC,EAAgBhwC,GACvB0uC,EAAEa,cAAgBS,EAAgBT,cAClCb,EAAEc,mCAAqCQ,EAAgBR,mCACvDd,EAAE4C,KAAOtB,EAAgBsB,KACzB5C,EAAE6C,SAAWvB,EAAgBuB,SAE7BnzC,KAAK20B,KAAK+a,cAAcnrC,KAAK+rC,GAC7B,IAAI4C,EAAOtB,EAAgBsB,KAAKtgC,MAAM,KACpB,GAAfsgC,EAAKlxC,QAA0B,IAAXkxC,EAAK,KAAUA,EAAO,IAC7ClzC,KAAK20B,KAAKoa,gBAAgB+D,mBAAmBM,WAAW,CACpD57C,KAAMo6C,EAAgBp6C,KACtB67C,gBAAiB/C,EACjBgD,UAA4C,MAAjC1B,EAAgBT,cAAwB,YAAc,aACjEgC,SAAUvB,EAAgBuB,SAC1BD,KAAMA,IAhBsF,2BAmBhG,YAAqBtB,EAAgB5B,MAArC,+CAA4C,KAAnCuD,EAAmC,QACxCvzC,KAAK4yC,WAAWtC,EAAGiD,IApByE,kFA2BhG,OAJGP,IACChzC,KAAK20B,KAAKoa,gBAAgB+D,mBAAmBC,eAC7C/yC,KAAK20B,KAAKoa,gBAAgBoD,cAAcY,gBAErCzC,IAhaf,iCAmauBI,EAAsBiC,GACrC,IAAIa,EAAU,KACV9C,GAAa1wC,KAAK20B,KAAK0d,mBACvBmB,EAAK,CACDh8C,KAAMm7C,EAAWn7C,KACjB67C,gBAAiB,MAGrBrzC,KAAK20B,KAAKoa,gBAAgBoD,cAAciB,WAAWI,IAGvD,IAAIC,EAAS,CACT7xC,GAAI+wC,EAAW/wC,GACfpK,KAAMm7C,EAAWn7C,KACjBwtC,OAAO,EACP4K,OAAO,EACPh6B,KAAM+8B,EAAW/8B,KACjB28B,QAASI,EAAWJ,QACpBtB,cAAe0B,EAAW1B,cAC1BC,wBAAyByB,EAAWzB,wBACpCwC,iCAAiC,EACjCjD,aAAcC,EAAU9uC,GACxB+xC,aAAcH,GAEdn8C,EAAI2I,KAAK20B,KAAKoa,gBAAgB6E,aAAaH,GACrC,MAAND,IAAYA,EAAGH,gBAAkBh8C,GACpBq5C,EAAUlyB,YAChBq1B,UAAUx8C,Q,6BA9b7B,K,uKCEO,IAAM,GAAb,WAmBI,WAAYy8C,EAAiB33B,EAAyBhjB,EAAoBjB,EAAckI,EAAYmc,I,4FAAkB,SAbtH,KAAAw3B,SAA8B,GAG9B,KAAAC,QAAkB,EAWdh0C,KAAK8zC,QAAUA,EACf9zC,KAAKmc,OAASA,EACA,MAAVA,GACAA,EAAO43B,SAASxvC,KAAKvE,MAEzBA,KAAK9H,MAAQA,EACb8H,KAAKI,KAAOA,EACZJ,KAAKuc,SAAWA,EAChBvc,KAAK7G,WAAaA,E,UA5B1B,O,EAAA,G,EAAA,kCAgCQ,OAAsB,MAAf6G,KAAKmc,OAAiB,EAAInc,KAAKmc,OAAO83B,WAAa,IAhClE,kCAqCQ,OAA0B,GAAnBj0C,KAAKi0C,WAAkB,EAAI,KArC1C,+BAwCU,WAEF,GAA6B,MAAzBj0C,KAAKk0C,iBAA0B,CAC/Bl0C,KAAKk0C,iBAAmB1J,OAAO,SAC/BxqC,KAAKk0C,iBAAiBhJ,SAAS,sBAC/BlrC,KAAKk0C,iBAAiBtF,IAAI,cAAoB5uC,KAAKm0C,YAAc,MAEjE,IAAIC,EAAe5J,OAAO,6DACtBxqC,KAAK7G,WAAa,wDAEtB6G,KAAKk0C,iBAAiBpK,OAAOsK,IAGzBp0C,KAAKI,gBAAgB,GACpBJ,KAAKI,gBAAgB,KAAWJ,KAAKI,gBAAgB,KAAWJ,KAAKI,MAAQiM,IAC3ErM,KAAKI,gBAAgB,GACrBJ,KAAKI,gBAAgB,KAExBJ,KAAKq0C,SAAU,EACfr0C,KAAKk0C,iBAAiBhJ,SAAS,cAC/BlrC,KAAKk0C,iBAAiBpK,OAAOU,OAAO,4CAEpCxqC,KAAKk0C,iBAAiBxjB,KAAK,mBAAmB2b,GAAG,aAAa,SAACiI,GACzC,MAAd,EAAKp8C,OAAqC,MAApB,EAAKA,MAAMA,OACL,GAAxB,EAAK67C,SAAS/xC,QACd,EAAKuyC,iBAET,EAAKL,iBAAiBM,YAAY,eAClC,EAAKR,QAAU,EAAKA,QAEpB,EAAKD,SAAW,GAGpBO,EAAMG,sBAOlBz0C,KAAK00C,gBAhFb,uCAwFQ,GAFA10C,KAAK+zC,SAAW,GAEZ/zC,KAAKI,gBAAgB,EAAO,CAE5B,IAAIu0C,EAAoB30C,KAAK9H,MAAMA,MAC/B4uC,EAA6C,MAApB6N,EAAGxxC,cAAwB,KAAOwxC,EAAGxxC,cAAH,WAC/D,GAAkB,MAAd2jC,EACA9mC,KAAK40C,mBAAmB9N,OACrB,4BACH,YAAsB9mC,KAAK9H,MAAMkI,KAAMoI,cAAczE,EAAWoJ,SAAhE,+CAA0E,KAAjEvF,EAAiE,QAClEitC,EAAK,IAAIC,EAAgB,KAAM90C,KAAM4H,EAAEzO,WAAYw7C,EAAGvnC,SAASxF,EAAExF,OAAQwF,EAAExH,KAAM,MACrFy0C,EAAGE,SACH/0C,KAAKk0C,iBAAiBxjB,KAAK,wBAAwBoZ,OAAO+K,EAAGX,mBAJ9D,yFASJ,GAAIl0C,KAAKI,gBAAgB,EAK5B,IAHA,IAAI,EAAaJ,KAAK9H,MAAMA,MAExB88C,EAAkBh1C,KAAKk0C,iBAAiBxjB,KAAK,wBACxCz5B,EAAI,EAAGA,EAAI,EAAE+K,QAAU/K,EAAI,IAAKA,IAAK,CAE1C,IAAI,EAAK,IAAI69C,EAAgB,KAAM90C,KAAM,IAAM/I,EAAI,IAAK,EAAEA,GAAI+I,KAAKI,KAAKmC,YAAa,MACrF,EAAGwyC,SACHC,EAAgBlL,OAAO,EAAGoK,uBAI3B,GAAIl0C,KAAKI,gBAAgB,EAAa,4BAEzC,YAAcJ,KAAKI,KAAKoI,cAAczE,EAAWoJ,SAAjD,+CAA2D,KAAlD,EAAkD,QACnD,EAAKnN,KAAKI,KAAKoN,YACf,EAAK,IAAIsnC,EAAgB,KAAM90C,KAAM,EAAE7G,WAAY,EAAGiU,SAAS,EAAEhL,OAAQ,EAAEhC,KAAM,MACrF,EAAG20C,SACH/0C,KAAKk0C,iBAAiBxjB,KAAK,wBAAwBoZ,OAAO,EAAGoK,mBANxB,wFAStC,GAAIl0C,KAAKI,gBAAgB,EAE5B,GAAwB,MAApBJ,KAAK9H,MAAMA,OAAiB8H,KAAK9H,MAAMA,iBAAiB,EAAe,CACvE,IAAI,EAAoB8H,KAAK9H,MAAMA,MADoC,uBAGvE,YAAsB,EAAGkL,MAAOoF,cAAczE,EAAWoJ,SAAzD,+CAAmE,KAA1D,EAA0D,QAC3D,EAAK,IAAI2nC,EAAgB,KAAM90C,KAAM,EAAE7G,WAAY,EAAGiU,SAAS,EAAEhL,OAAQ,EAAEhC,KAAM,MACrF,EAAG20C,SACH/0C,KAAKk0C,iBAAiBxjB,KAAK,wBAAwBoZ,OAAO,EAAGoK,mBANM,wFAUvEl0C,KAAK+zC,WAzIrB,yCAgJuBjN,GAEf,IAAIK,EAAaL,EAAWK,WAC5B,GAAInnC,KAAK+zC,SAAS/xC,OAASmlC,EAAWnlC,OAAQ,CAC1C,IAAK,IAAI/K,EAAIkwC,EAAWnlC,OAAQ/K,EAAI+I,KAAK+zC,SAAS/xC,OAAQ/K,IACnC+I,KAAK+zC,SAAS98C,GACpBi9C,iBAAiBrN,SAElC7mC,KAAK+zC,SAASh8B,OAAOovB,EAAWnlC,QAGpC,GAAIhC,KAAK+zC,SAAS/xC,OAASmlC,EAAWnlC,QAAUhC,KAAK+zC,SAAS/xC,OAAS,IACnE,IAAK,IAAI,EAAIhC,KAAK+zC,SAAS/xC,OAAQ,EAAImlC,EAAWnlC,QAAU,GAAK,IAAK,IAAK,CACvE,IAAI6B,EAAWsjC,EAAW,GACtB59B,EAAQ,GAAK,EACR,KAAL,IACA1F,EAAI,CAAEzD,KAAMiM,GAAqBnU,MAAa4uC,EAAWK,WAAWnlC,OAAS,IAAO,eACpFuH,EAAQ,OAEZ,IAAIsrC,EAAK,IAAIC,EAAgB,KAAM90C,KAAMuJ,EAAO1F,EAAGA,EAAEzD,KAAM,MAC3Dy0C,EAAGE,SACH/0C,KAAKk0C,iBAAiBxjB,KAAK,wBAAwBwH,QAAQ4R,OAAO+K,EAAGX,qBArKrF,oCA4KQ,IAAIl7C,EACA6K,EAAI7D,KAAK9H,MAEb,GAAS,MAAL2L,EAAJ,CAMA,GADA7D,KAAKk0C,iBAAiBjJ,OACP,MAAXpnC,EAAE3L,MACFc,EAAI,OACJgH,KAAKi1C,yBASL,GANqB,MAAjBpxC,EAAElD,aACFkD,EAAElD,YAAYkD,GAGlB7K,EAAI6K,EAAEzD,KAAKiN,YAAYxJ,GAEnB7D,KAAKI,gBAAgB,EAAO,CAE5B,IAAIu0C,EAAoB30C,KAAK9H,MAAMA,MAC/B4uC,EAA6C,MAApB6N,EAAGxxC,cAAwB,KAAOwxC,EAAGxxC,cAAH,WAC7C,MAAd2jC,IACA9mC,KAAK40C,mBAAmB9N,GACrBA,EAAWoB,wBACVlvC,EAAQ8tC,EAAWK,WAAWnlC,OAAS,QACvChJ,GAAK,IAAM8tC,EAAWG,YAAY15B,MAAM,EAAG,IAAIxK,KAAI,SAAArL,GAAC,MAAI,GAAKA,KAAGuL,KAAK,MAAQ,KAE7EjK,EAAI6K,EAAEzD,KAAKjH,WAAa,KAAM2tC,EAAWK,WAAWnlC,OAAS,cAO7EhC,KAAKk0C,iBAAiBxjB,KAAK,eAAewH,QAAQgd,KAAKl8C,GAtChD,2BAyCP,YAAkBgH,KAAK+zC,SAAvB,+CAAiC,QACvBW,cA1CH,wFAKH10C,KAAKk0C,iBAAiB9I,SAhLlC,0CAyNqB,2BACb,YAAeprC,KAAK+zC,SAApB,+CAA8B,QACvBG,iBAAiBrN,SAFX,kFAIb7mC,KAAK+zC,SAAW,Q,6BA7NxB,KCGM,SAAUoB,GAAWC,GACzB,OAAOA,EACFtrC,QAAQ,SAAU,IACjBA,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UAWtB,SAASurC,GAAOC,GACd,OAAGA,EAAI,GAAW,IAAMA,EACjB,GAAKA,EAYR,SAAUC,GAAWv8C,EAAWgJ,GACpC,OAAOhJ,EAAE8Q,QACP,IAAI4I,OAAJ,sBAA0B1Q,EAA1B,wBAAgDA,EAAhD,SAA+D,KAAM,QAInE,SAAUwzC,GAAuBx8C,GAAqC,IAA1By8C,EAA0B,uDAAF,GACpEC,EAAe,GAEnB,GAAoB,iBAAVD,EACRC,EAAeD,OAEf,IAAI,IAAIx+C,EAAI,EAAGA,EAAIw+C,EAAQx+C,IACzBy+C,GAAgB,IAOpB,OAHA18C,EAAIu8C,GAAWv8C,EAAG,KACbgJ,OAAS,IAAGhJ,EAAI,KAAOA,GAC5BA,EAAI08C,EAAe,MAAQ18C,EAAE8Q,QAAQ,MAAO,KAAO4rC,EAAe,OAAS,KAAOA,EAAe,MC5D7F,SAAUC,GAAaC,EACzBC,EACAC,GAAuG,IAArDC,EAAqD,uDAAJ,KAE/FC,EAAeC,OAAOC,aAAe,UAAY,QAE7B,MAApBL,IACAA,EAAmBD,GAGvB,IAAIlK,EAASlB,OAAO,mEACpBkB,EAAOkD,IAAI,CACPuH,MAAON,EAAiBjH,IAAI,SAC5BwH,OAAQP,EAAiBjH,IAAI,UAC7B9jB,MAAO+qB,EAAiBjH,IAAI,SAC5BpqC,SAAUqxC,EAAiBjH,IAAI,YAC/B,mBAAoBiH,EAAiBjH,IAAI,oBACzC,YAAaiH,EAAiBjH,IAAI,aAClC,cAAeiH,EAAiBjH,IAAI,eACpC,aAAc,eAElBlD,EAAOU,IAAIwJ,EAAgBhgC,QAC3B81B,EAAOW,GAAG2J,EAAe,QAAQ,SAACv+B,GAAQA,EAAEg9B,qBAEtB,MAAlBsB,GACmBrK,EAAO,GAAI2K,kBAAkBN,EAAerQ,MAAOqQ,EAAeO,KAGzFT,EAAiBU,MAAM7K,GACvBmK,EAAiBzK,OACjBL,YAAW,WACPW,EAAOa,UACR,KAEHb,EAAOW,GAAG,cAAc,SAACzuB,GACrB,GAAc,SAAVA,EAAGplB,KAA4B,UAAVolB,EAAGplB,SAA5B,CACIkzC,EAAOiB,IAAI,cACXjB,EAAOiB,IAAI,eACXjB,EAAO7E,SACPgP,EAAiB5K,OACjB,IAAIuL,EAAWrB,GAAmBzJ,EAAOU,OACzC0J,EAAmBU,OAK3B9K,EAAOW,GAAG,eAAe,SAACzuB,GACtB8tB,EAAOiB,IAAI,cACXjB,EAAOiB,IAAI,eACXjB,EAAO7E,SACPgP,EAAiB5K,OACjB,IAAIuL,EAAWrB,GAAmBzJ,EAAOU,OACzC0J,EAAmBU,MAcrB,SAAUC,GAAgBC,EAA0BC,EAAWC,GAEjE,IAAIZ,EAAeC,OAAOC,aAAe,UAAY,QAEjDW,EAAerM,OAAO,sCAEtBsM,EAAoC,KACpCC,EAAkC,KAPoC,uBAS1E,IAT0E,IAS1E,EAT0E,iBASjEC,EATiE,QAUlElD,EAAkBkD,EAAGlD,QACV,MAAXkD,EAAGC,OACHnD,EAAU,YAAH,OAAekD,EAAGC,KAAlB,iDAA+DD,EAAGlD,QAAlE,SAEX,IAAIoD,EAAQ1M,OAAO,QAAUsJ,GAAyB,MAAdkD,EAAGG,QAAkB,wDAA0D,IAAM,WAC7G,MAAZH,EAAGlsB,OACHosB,EAAMtI,IAAI,QAASoI,EAAGlsB,OAEX,MAAXksB,EAAGC,MACHC,EAAM7K,GAAG2J,EAAe,oBAAoB,WACxCxL,OAAO,mBAAmB3D,SAC1B2D,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,oBACpCxL,OAAOlvB,UAAUqxB,IAAI,uBACrBqK,EAAGhL,cAGKkL,EAAMxmB,KAAK,KACjB2b,GAAG2J,EAAe,QAAQ,SAAC1B,GAC7BA,EAAMG,kBACN1J,YAAW,WACPmM,EAAM9L,SACP,QAKX8L,EAAM7K,GAAG2J,EAAe,oBAAoB,WACpCgB,GAAMD,GAAkC,MAAhBD,IACxBA,EAAajQ,SACbkQ,EAAiB,KACjBD,EAAe,MAED,MAAdE,EAAGG,UACHL,EAAeL,GAAgBO,EAAGG,QAASD,EAAMjyC,SAAS8yB,KAAOmf,EAAMf,QAASe,EAAMjyC,SAASmyC,SAIvGP,EAAa/M,OAAOoN,IAtCxB,EAAeR,EAAf,+CAAsB,IAToD,kFAkD1ElM,OAAOlvB,UAAU+wB,GAAG2J,EAAe,oBAAoB,WACnDxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,oBACpCxL,OAAOlvB,UAAUqxB,IAAI,uBACrBnC,OAAO,mBAAmB3D,YAG9B2D,OAAOlvB,UAAU+wB,GAAG,uBAAuB,SAACzuB,GAC1B,UAAVA,EAAGplB,MACHgyC,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,oBACpCxL,OAAOlvB,UAAUqxB,IAAI,uBACrBnC,OAAO,mBAAmB3D,aAIlC,IAAIwQ,EAAYV,EAAwB,GAApBV,OAAOqB,WAAmB,QAAU,OACpDC,EAAKZ,EAAwB,GAApBV,OAAOqB,WAAmBrB,OAAOqB,WAAaX,EAAIA,EAC3Da,EAAYZ,EAAyB,GAArBX,OAAOwB,YAAoB,SAAW,MACtDC,EAAKd,EAAyB,GAArBX,OAAOwB,YAAoBxB,OAAOwB,YAAcb,EAAIA,EAE7DhI,EAAM,GAUV,OATAA,EAAIyI,GAAaE,EAAK,KACtB3I,EAAI4I,GAAaE,EAAK,KAEtBb,EAAajI,IAAIA,GAGjBpE,OAAO,QAAQV,OAAO+M,GACtBA,EAAa5L,OAEN4L,EAGL,SAAUc,GAASC,GACrB,IAAIC,EAAWD,EAAOlnB,KAAK,uBAAuB/yB,IAAI,iBAClDm6C,EAAOF,EAAOlnB,KAAK,gBAEnBslB,EAAeC,OAAOC,aAAe,UAAY,QAErD2B,EAASxL,GAAG2J,EAAe,QAAQ,SAACp4B,GAChC,IAAIm6B,EAASvN,OAAO5sB,EAAGm6B,QACvBF,EAAS1M,YAAY,aACrB4M,EAAO7M,SAAS,aAChB,IAAIlsC,EAAM44C,EAAOlnB,KAAK,IAAMqnB,EAAO3K,KAAK,WACxC0K,EAAK3M,YAAY,aACjB2M,EAAKE,QAAQ,UACbh5C,EAAIksC,SAAS,aACblsC,EAAIg5C,QAAQ,aAKd,SAAUC,GAAkBC,GAE9B,OADAA,EAAWA,EAASpuC,QAAQ,KAAM,IAAIwI,OAC/BzC,OAAOM,SAAS+nC,GAGrB,SAAUC,GAAQv2C,GAA8E,IAAlEsB,EAAkE,uDAAlD,GAAI0S,EAA8C,uDAA/B,GAAIg5B,EAA2B,uCAE9F51C,EAAI,GACE,MAAN4I,GAAoB,IAANA,IAAU5I,GAAK,QAAJ,OAAY4I,EAAZ,MAEhB,MAATsB,GAA0B,IAATA,IAAalK,GAAK,WAAJ,OAAekK,EAAf,MAEnC,IAAIk1C,EAAM5N,OAAO,OAAD,OAAQxxC,EAAR,YAUhB,OARW,MAAP41C,GACAwJ,EAAIxJ,IAAIA,GAGA,MAARh5B,GAAwB,IAARA,GAChBwiC,EAAIxiC,KAAKA,GAGDwiC,EAmCT,IAAIC,IAA4B,E,kUC1MhC,IAAM,GAAb,WAyBI,WAAoBC,EAA8BxE,EAAyByE,EAC/DC,EAAgCC,EAChCC,EAAkCC,EAAmCC,GAAoB,sBAFjF,KAAAN,YAA8B,KAAAxE,UAAyB,KAAAyE,aAC/D,KAAAC,iBAAgC,KAAAC,iBAChC,KAAAC,mBAAkC,KAAAC,mBAAmC,KAAAC,cAzBjF,KAAAC,SAA+B,GAQ/B,KAAAC,kBAA4B,EAmBxBR,EAAUS,SAAS/4C,MAEnB,IAAIg2C,EAAeC,OAAOC,aAAe,UAAY,QAEjD0C,IACA54C,KAAKg5C,iBAAmBxO,OAAO,gHAE/BxqC,KAAKg5C,iBAAiB3M,GAAG2J,EAAe,QAAQ,SAACv+B,GAC7CA,EAAEg9B,kBACFh9B,EAAEwhC,iBAEF,IAAIC,EAAY,EAAKC,2BAErB,EAAKC,UAAU,eAAgBF,GAAW,SAACG,GACvC,EAAKC,kBAAkBD,GAAY,WAAQ,EAAKtG,wBAKxD/yC,KAAKu5C,UAAUv5C,KAAKg5C,mBAhDhC,4CAuDQh5C,KAAKw5C,gBAAgB3S,SACrB7mC,KAAKy5C,aAAa5S,WAxD1B,+BA2Da6S,GACL15C,KAAK05C,MAAQA,EACT15C,KAAK05C,OACL15C,KAAK25C,OACL35C,KAAKw5C,gBAAgBtO,SAAS,aAE9BlrC,KAAKw5C,gBAAgBrO,YAAY,cAjE7C,sCAiFoByO,GACW,MAAnB55C,KAAK65C,aACDD,EACA55C,KAAK65C,WAAW5O,OAEhBjrC,KAAK65C,WAAWzO,UAtFhC,iDA4FQ,IAAI8N,EAAsB,GACtBY,EAAkB95C,KAAK+5C,qBAK3B,OAJuB,MAAnBD,IACAZ,EAAYY,EAAgB5G,KAAK3lC,MAAM,GACnCusC,EAAgB3G,UAAU+F,EAAU30C,KAAKu1C,EAAgBtiD,OAE1D0hD,IAlGf,sCAqGoBc,EAAeC,EAAiBC,EAAeC,GAE3D,IAAIC,EAAgBH,EAAMh3C,KAAK,KACV,IAAjBm3C,IAAqBA,GAAiB,KAC1CA,GAAiBJ,EAEjB,IAAIK,EAAgBF,EAAMl3C,KAAK,KAI/B,MAHqB,IAAjBo3C,IAAqBA,GAAiB,KAC1CA,GAAiBH,EAEVE,EAAcpoC,cAAcqoC,KA/G3C,sCAmHoB7iD,EAAc07C,GAE1B,IAAK,IAAIj8C,EAAI,EAAGA,EAAI+I,KAAK64C,SAAS72C,OAAQ/K,IAAK,CAC3C,IAAI25B,EAAU5wB,KAAK64C,SAAS5hD,GAE5B,GAAI+I,KAAKs6C,gBAAgB9iD,EAAM07C,EAAMtiB,EAAQp5B,KAAMo5B,EAAQsiB,MAAQ,EAAG,OAAOj8C,EAAI,EAGrF,OAAO+I,KAAK64C,SAAS72C,SA3H7B,oCA8HkBwxC,GACV,IAAI+G,EAAcv6C,KAAKw6C,gBAAgBhH,EAAGh8C,KAAMg8C,EAAGN,MAGnD,GAFAlzC,KAAK64C,SAAS9gC,OAAOwiC,EAAa,EAAG/G,GAElB,GAAf+G,EACAv6C,KAAKy5C,aAAagB,QAAQjH,EAAGkH,oBAC1B,CACH,IAAIC,EAAiB36C,KAAKy5C,aAAa/oB,KAAK,YAAY54B,IAAIyiD,GAC5D/P,OAAOmQ,GAAgBpE,MAAM/C,EAAGkH,mBAtI5C,gCA2IcljD,EAAc07C,EAAgBlH,GAEpC,IAAIwH,EAAuB,CACvBh8C,KAAMA,EACN27C,UAAU,EACVD,KAAMA,GAGN0H,EAAW56C,KAAK66C,cAAcrH,GAElCxzC,KAAK86C,cAActH,GAEnBoH,EAAS,GAAGlO,iBAEZ1sC,KAAK+6C,cAAcvH,GAAI,WAEnBxH,EAASwH,QA3JrB,8CAsK4BwH,GAAkC,WAClDj9B,EAAO/d,KAKX,GAHAA,KAAKw5C,gBAAkBhP,OAAO,gEACpBxqC,KAAK8zC,QADe,+CAGH,MAAvB9zC,KAAKw4C,eAAwB,CAC7Bx4C,KAAK65C,WAAarP,OAAO,mCAAqCxqC,KAAKw4C,eAAiB,YAAcx4C,KAAKy4C,eAAiB,MACxHz4C,KAAKw5C,gBAAgB9oB,KAAK,eAAeoZ,OAAO9pC,KAAK65C,YAErD,IAAI,EAAe5D,OAAOC,aAAe,UAAY,QACrDl2C,KAAK65C,WAAWxN,GAAG,EAAe,QAAQ,SAACzuB,GAEvC,GAAOq9B,QACPr9B,EAAG62B,kBAEH,IAAIvB,EAAOn1B,EAAKo7B,2BAEZ3F,EAAuB,CACvBh8C,KAAM,MACN27C,UAAU,EACVD,KAAMA,GAGNqH,EAAc,EAAKC,gBAAgB,GAAItH,GAC3C,EAAK2F,SAAS9gC,OAAOwiC,EAAa,EAAG/G,GACrC,IAAIoH,EAAW,EAAKC,cAAcrH,GAGlC,GAAmB,GAAf+G,EACA,EAAKd,aAAagB,QAAQG,OACvB,CACH,IAAID,EAAiB,EAAKlB,aAAa/oB,KAAK,YAAY54B,IAAIyiD,GAC5D/P,OAAOmQ,GAAgBpE,MAAMqE,GAGjCA,EAAS,GAAGlO,iBAEZ3uB,EAAKg9B,cAAcvH,GAAI,WAEnBz1B,EAAKm9B,mBAAmB1H,GAAI,SAACH,GAEzBG,EAAGH,gBAAkBA,EAEK,MAAtBG,EAAG2H,iBACH3H,EAAG2H,gBAAgBC,YAAYR,GAGR,MAAvB78B,EAAKs9B,gBAAwBt9B,EAAKu9B,OAAO9H,EAAGH,0BAUhE,IAAIkI,EAAa/Q,OAAO,kFAClBxqC,KAAKu4C,WAAa,uBAAyBv4C,KAAKu4C,WAAa,YACnEv4C,KAAKy5C,aAAejP,OAAO,mCAE3B+Q,EAAWzR,OAAO9pC,KAAKy5C,cAEvBuB,EAAclR,OAAO9pC,KAAKw5C,iBAC1BwB,EAAclR,OAAOyR,GAErB,IAAIC,EAAMx7C,KAAKw5C,gBACXiC,EAAMz7C,KAAKy5C,aAAat9B,SACxB65B,EAAeC,OAAOC,aAAe,UAAY,QAErDsF,EAAInP,GAAG2J,EAAe,QAAQ,SAACp4B,GAC3B,GAAiB,GAAbA,EAAG89B,SAIF,EAAKhC,MAAO,CACb,IAAIiC,EAAaF,EAAIrO,KAAK,QACtBoO,EAAII,SAAS,eACT79B,EAAKu6B,UAAUuD,MAAM75C,OAAS,GAC9By5C,EAAIK,QAAQ,CACR,YAAa,MACd,KAAM,WAAQN,EAAIhH,YAAY,mBAGrCgH,EAAIhH,YAAY,eAChBiH,EAAIK,QAAQ,CACR,YAAaH,GACd,UAKZ37C,KAAK44C,cACJ4C,EAAInP,GAAG,YAAY,SAACiI,GAChBkH,EAAItQ,SAAS,oBACboJ,EAAM2E,oBAGVuC,EAAInP,GAAG,aAAa,SAACiI,GACjBkH,EAAIrQ,YAAY,uBAGpBqQ,EAAInP,GAAG,QAAQ,SAACiI,GACZA,EAAM2E,iBACNuC,EAAIrQ,YAAY,oBAChB,IAAI4Q,EAAWh+B,EAAKi+B,wBACJ,MAAZD,GACAh+B,EAAKk+B,YAAYF,EAAU,YAlR/C,6BA4RQ,IAAIN,EAAMz7C,KAAKy5C,aAAat9B,SACxBw/B,EAAaF,EAAIrO,KAAK,QAC1BqO,EAAI7M,IAAI,YAAa+M,GACrB37C,KAAKw5C,gBAAgBtO,SAAS,iBA/RtC,iCAkSeta,GACP5wB,KAAK64C,SAASt0C,KAAKqsB,GACnBA,EAAQ8pB,eAAiB16C,KAAK66C,cAAcjqB,GAC5C5wB,KAAKy5C,aAAagB,QAAQ7pB,EAAQ8pB,kBArS1C,qCAwSgB,WACJ16C,KAAK84C,mBACT94C,KAAK64C,SAASqD,MAAK,SAACt0C,EAAGu0C,GACnB,IAAIC,EAAQx0C,EAAEy0C,SAAWz0C,EAAEy0C,SAAWz0C,EAAEpQ,KACpC8kD,EAAQH,EAAEE,SAAWF,EAAEE,SAAWF,EAAE3kD,KAExC,OAAO,EAAK8iD,gBAAgB8B,EAAOx0C,EAAEsrC,KAAMoJ,EAAOH,EAAEjJ,SAGxDlzC,KAAK64C,SAAS9mC,SAAQ,SAAC6e,GAAc,EAAK6oB,aAAa3P,OAAOlZ,EAAQ8pB,sBAjT9E,2CAoTyB9pB,EAA2Bhb,EAAc2mC,GAC1D,IAAIC,EAAO5rB,EAAQ8pB,eAAehqB,KAAK,qBACvC8rB,EAAKtR,SAASqR,GACdC,EAAKtH,KAAKt/B,KAvTlB,gCA0TcglC,GACN56C,KAAKw5C,gBAAgB9oB,KAAK,eAAe+pB,QAAQG,KA3TzD,oCA8TkBhqB,GAAyB,WAE/BolB,EAAeC,OAAOC,aAAe,UAAY,QACjDn4B,EAAO/d,KAEPy8C,EAAoB,GAEC,MAArB7rB,EAAQ0iB,YAAmB1iB,EAAQ0iB,UAAYtzC,KAAK04C,kBACpD9nB,EAAQuiB,WACRviB,EAAQ0iB,UAAY,SACpBmJ,EAAoB,gBAIxB,IADA,IAAIC,EAAW,GACNzlD,EAAI,EAAGA,EAAI25B,EAAQsiB,KAAKlxC,OAAQ/K,IACrCylD,GAAY,oCAehB,GAZA9rB,EAAQ8pB,eAAiBlQ,OAAO,0BAAD,OAA2B5Z,EAAQ0iB,UAAnC,YAAgDmJ,EAAhD,mDACDC,EADC,oGAGDvH,GAAWvkB,EAAQp5B,MAHlB,kQAQ1BwI,KAAK24C,iBAAmB,+DAA2G,GARzG,wBASzBN,GAAoG,GAAjF,+EATM,wBAYM,MAAjCr4C,KAAK28C,yBAAkC,CACvC,IAAIC,EAAiB58C,KAAK28C,yBAAyB/rB,GACnDA,EAAQ8pB,eAAe5Q,OAAO8S,GAGlC,GAAI58C,KAAK44C,YAAa,CACdhoB,EAAQuiB,WACRviB,EAAQ8pB,eAAerO,GAAG,YAAY,SAACiI,GACnC1jB,EAAQ8pB,eAAexP,SAAS,oBAChCoJ,EAAM2E,oBAGVroB,EAAQ8pB,eAAerO,GAAG,aAAa,SAACiI,GACpC1jB,EAAQ8pB,eAAevP,YAAY,uBAGvCva,EAAQ8pB,eAAerO,GAAG,QAAQ,SAACiI,GAC/BA,EAAM2E,iBACNroB,EAAQ8pB,eAAevP,YAAY,oBACnC,IAAI4Q,EAAWh+B,EAAKi+B,wBACJ,MAAZD,GACAh+B,EAAKk+B,YAAYF,EAAUnrB,OAKvC,IAAIisB,EAAgBjsB,EAAQ8pB,eAAehqB,KAAK,gBAChDmsB,EAAczO,KAAK,YAAa,QAChCyO,EAAcxQ,GAAG,QAAQ,SAACiI,GACtBv2B,EAAKi+B,wBAA0BprB,KAKvCA,EAAQ8pB,eAAerO,GAAG2J,EAAe,QAAQ,SAACp4B,GAE9C,GAAiB,GAAbA,EAAG89B,QAAsC,MAAvB39B,EAAKs9B,eAAwB,CAC/Ct9B,EAAKs9B,eAAezqB,EAAQyiB,iBADmB,2BAG/C,YAAet1B,EAAK86B,SAApB,+CAA8B,KAArBrF,EAAqB,QACtBA,GAAM5iB,GAAW4iB,EAAGkH,eAAekB,SAAS,cAC5CpI,EAAGkH,eAAevP,YAAY,cALS,kFAW/C,GAFAva,EAAQ8pB,eAAexP,SAAS,aAE5Bta,EAAQuiB,SAAU,CAEdviB,EAAQ8pB,eAAekB,SAAS,gBAChChrB,EAAQ8pB,eAAevP,YAAY,eACnCva,EAAQ8pB,eAAexP,SAAS,kBAEhCta,EAAQ8pB,eAAexP,SAAS,eAChCta,EAAQ8pB,eAAevP,YAAY,iBAGvC,IAAI2R,EAA+C,GAVjC,uBAWlB,YAAc,EAAKjE,SAAnB,+CAA6B,KAApBphC,EAAoB,QACzB,GAAIA,EAAE07B,SAAU,CACZ,IAAID,EAAOz7B,EAAEy7B,KAAKjwC,KAAK,KACX,IAARiwC,IAAYA,GAAQ,KAExB4J,EADA5J,GAAQz7B,EAAEjgB,MACcigB,EAAEijC,eAAekB,SAAS,gBAC9CkB,EAAgBrlC,EAAEy7B,KAAKjwC,KAAK,QAAO65C,EAAgB5J,IAAQ,KAjBrD,kFAoBlB4J,EAAgB,KAAM,EApBJ,2BAsBlB,YAAc,EAAKjE,SAAnB,+CAA6B,KAApB,EAAoB,QACrBiE,EAAgB,EAAE5J,KAAKjwC,KAAK,MAC5B,EAAEy3C,eAAetP,OAEjB,EAAEsP,eAAezP,QA1BP,wFAoC9B,IAiEI8R,EAjEAC,EAAqB,SAAU1I,GAE/B,IAAI2I,EAAsC,GACf,MAAvBl/B,EAAKm/B,gBACLD,EAAiB14C,KAAK,CAClBuvC,QAAS,aACT9H,SAAU,WACNjuB,EAAKg9B,cAAcnqB,MAK/B,IAAIolB,EAAeC,OAAOC,aAAe,UAAY,QAqBrD,GAnBItlB,EAAQuiB,WACR8J,EAAmBA,EAAiB/0C,OAAO,CACvC,CACI4rC,QAAS,kBACT9H,SAAU,WACNjuB,EAAKu9B,OAAO1qB,EAAQyiB,iBACpBt1B,EAAKi7B,iBAAiBhB,QAAQhC,EAAe,UAElD,CACClC,QAAS,qBACT9H,SAAU,WACNjuB,EAAKu9B,OAAO1qB,EAAQyiB,iBACpBt1B,EAAK87B,WAAW7B,QAAQhC,EAAe,aAOvB,MAA5Bj4B,EAAKo/B,sBAAgCvsB,EAAQuiB,SAAU,4BAEvD,IAFuD,IAEvD,EAFuD,iBAE9CiK,EAF8C,QAGnDH,EAAiB14C,KAAK,CAClBuvC,QAASsJ,EAAItJ,QACb9H,SAAU,WACNoR,EAAIpR,SAASpb,IAEjB9F,MAAOsyB,EAAItyB,MACXqsB,QAAwB,MAAfiG,EAAIjG,QAAkB,KAAOiG,EAAIjG,QAAQp0C,KAAI,SAACi0C,GACnD,MAAO,CACHlD,QAASkD,EAAGlD,QACZ9H,SAAU,WACNgL,EAAGhL,SAASpb,IAEhB9F,MAAOksB,EAAGlsB,aAb1B,EAAgB/M,EAAKo/B,oBAAoBvsB,GAAzC,+CAAmD,IAFI,mFAsBvDqsB,EAAiBj7C,OAAS,IAC1BsyC,EAAM2E,iBACN3E,EAAMG,kBACNgC,GAAgBwG,EAAkB3I,EAAM+I,MAAO/I,EAAMgJ,SAqE7D,OAjEA1sB,EAAQ8pB,eAAe,GAAG6C,iBAAiB,cAAeP,GAAoB,GAIzE3E,IACDznB,EAAQ8pB,eAAerO,GAAG,aAAa,WAEnC,OADAmR,aAAaT,IACN,KACR1Q,GAAG,eAAe,SAACiI,GAIlB,OAHAyI,EAAa9G,OAAOlL,YAAW,WAC3BiS,EAAmB1I,KACpB,MACI,KAIV+D,KACDznB,EAAQ8pB,eAAehqB,KAAK,uBAAuB2b,GAAG,eAAe,SAAC50B,GAClEulC,EAAmBvlC,MAEvBmZ,EAAQ8pB,eAAehqB,KAAK,uBAAuB2b,GAAG,mBAAmB,SAAC50B,GACtEA,EAAEwhC,iBACFxhC,EAAEg9B,sBAIN12B,EAAK46B,kBACL/nB,EAAQ8pB,eAAehqB,KAAK,cAAc2b,GAAG2J,EAAe,QAAQ,SAACp4B,GACjEA,EAAGq7B,iBACHxC,GAAgB,CAAC,CACb3C,QAAS,YACT9H,SAAU,cAGX,CACC8H,QAAS,+BACThpB,MAAO,UACPkhB,SAAU,WAEFpb,EAAQuiB,UACJp1B,EAAK0/B,iBAAiB7sB,GAAS5uB,OAAS,EACxC6wC,MAAM,mEAKd90B,EAAK2/B,eAAe9sB,EAAQyiB,iBAAiB,WACzCziB,EAAQ8pB,eAAe7T,SACQ,MAA3BjW,EAAQuqB,iBAAyBvqB,EAAQuqB,gBAAgBtU,SAC7D9oB,EAAK86B,SAAS9gC,OAAOgG,EAAK86B,SAASzzC,QAAQwrB,GAAU,GAE1B,MAAvB7S,EAAKs9B,iBACDt9B,EAAK86B,SAAS72C,OAAS,EACvB+b,EAAKu9B,OAAOv9B,EAAK86B,SAAS,GAAGxF,iBAE7Bt1B,EAAKu9B,OAAO,aAK5B19B,EAAGy/B,MAAQ,EAAGz/B,EAAG0/B,MAAQ,GAC7B1/B,EAAG62B,qBAIJ7jB,EAAQ8pB,iBA9iBvB,kCAkjBgBiD,EAAiCC,GACzC,IAAIC,EAAiD,MAArBD,EAA4B,GAAKA,EAAkB1K,KAAK3lC,MAAM,GAAGrF,OAAO,CAAC01C,EAAkBpmD,OAC3H,GAAImmD,EAAcxK,SAAU,CACxB,IAAI2K,EAAoC,CAACH,GAErCI,EAAaJ,EAAczK,KAAKhrC,OAAO,CAACy1C,EAAcnmD,OAAOyL,KAAK,KAClE+6C,EAAgBL,EAAczK,KAAKlxC,OACvC27C,EAAczK,KAAO2K,EAAgBtwC,MAAM,GALnB,2BAOxB,YAAmBvN,KAAK64C,SAAxB,+CAAiC,KAAzBjoB,EAAyB,QAC1BA,EAAQsiB,KAAKjwC,KAAK,KAAKmP,WAAW2rC,KACjCntB,EAAQsiB,KAAKn7B,OAAO,EAAGimC,GACvBptB,EAAQsiB,KAAO2K,EAAgB31C,OAAO0oB,EAAQsiB,MAC9C4K,EAAcv5C,KAAKqsB,KAXH,kFAexB,cAAcktB,EAAd,eAA4B,CAAxB,IAAIG,EAAE,KACNA,EAAGvD,eAAe7T,SAClB7mC,KAAK64C,SAAS9gC,OAAO/X,KAAK64C,SAASzzC,QAAQ64C,GAAK,GAChDj+C,KAAK66C,cAAcoD,GACnBj+C,KAAK86C,cAAcmD,GAGvBj+C,KAAKk+C,aAAaJ,QAElBH,EAAczK,KAAO2K,EACrBF,EAAcjD,eAAe7T,SAC7B7mC,KAAK64C,SAAS9gC,OAAO/X,KAAK64C,SAASzzC,QAAQu4C,GAAgB,GAC3D39C,KAAK66C,cAAc8C,GACnB39C,KAAK86C,cAAc6C,GACnB39C,KAAKs7C,OAAOqC,EAActK,iBAC1BsK,EAAcjD,eAAe,GAAGhO,iBAChC1sC,KAAKk+C,aAAaP,KAnlB9B,uCAulBqBQ,GACb,IAAIjL,EAAOiL,EAAOjL,KAAK3lC,MAAM,GAAGrF,OAAOi2C,EAAO3mD,MAAMyL,KAAK,KACzD,OAAOjD,KAAK64C,SAAShuC,QAAO,SAAC+lB,GAAD,OAAaA,EAAQsiB,KAAKjwC,KAAK,KAAKmP,WAAW8gC,QAzlBnF,oCA4lBkBtiB,EAA2Bob,GAAqB,WACtDjuB,EAAO/d,KACPw8C,EAAO5rB,EAAQ8pB,eAAehqB,KAAK,gBACnC0tB,EAAWxtB,EAAQp5B,KAAK4N,QAAQ,KAChCi5C,EAAwB,MAAZD,EAAmB,KAAO,CAAE1Y,MAAO,EAAG4Q,IAAK8H,GAC3Dp+C,KAAK84C,kBAAmB,EACxBnD,GAAa6G,EAAMA,GAAM,SAAC8B,GACS,MAA3B1tB,EAAQyiB,kBAAyBiL,EAAUvgC,EAAKm/B,eAAetsB,EAAQyiB,gBAAiBiL,IAC5F1tB,EAAQp5B,KAAO8mD,EACf9B,EAAKtH,KAAKtkB,EAAQp5B,MACF,MAAZw0C,GAAkBA,IACtBjuB,EAAKg1B,eACLyJ,EAAK,GAAG9P,iBACR,EAAKoM,kBAAmB,IACzBuF,KA1mBX,6BA6mBWhL,GAAqF,IAA/DkL,IAA+D,yDAA/B7R,EAA+B,wDAExF,GAAuB,MAAnB2G,EAAyB,4BACzB,YAAgBrzC,KAAK64C,SAArB,+CAA+B,KAAtB2F,EAAsB,QACvBA,EAAI9D,eAAekB,SAAS,cAAc4C,EAAI9D,eAAevP,YAAY,cAFxD,uFAItB,CACH,IAAIqI,EAAKxzC,KAAKy+C,YAAYpL,GAE1B,GAAU,MAANG,EAAY,4BACZ,YAAgBxzC,KAAK64C,SAArB,+CAA+B,KAAtB,EAAsB,QACvB,EAAI6B,eAAekB,SAAS,cAAc,EAAIlB,eAAevP,YAAY,cAFrE,kFAMZ,GADAqI,EAAGkH,eAAexP,SAAS,aACvBwB,EAAgB,CAChB,IAAIgS,EAAalL,EAAGN,KAAKjwC,KAAK,KADd,uBAEhB,YAAcjD,KAAK64C,SAAnB,+CAA4B,KAApBoF,EAAoB,QAErBS,EAAWtsC,WAAW6rC,EAAG/K,KAAKjwC,KAAK,QAC/Bg7C,EAAG9K,WACF8K,EAAGvD,eAAevP,YAAY,gBAC9B8S,EAAGvD,eAAexP,SAAS,gBAE/B+S,EAAGvD,eAAezP,SATV,kFAchBuI,EAAGkH,eAAe,GAAGhO,mBAM7B6R,GAAyC,MAAvBv+C,KAAKq7C,gBAAwBr7C,KAAKq7C,eAAehI,KAhpB/E,oCAopBkBG,GACV,IAAImL,EAAanL,EAAGN,KAAKjwC,KAAK,KAK9B,OAJGuwC,EAAGL,WACO,IAANwL,IAAUA,GAAM,KACnBA,GAAMnL,EAAGh8C,MAENmnD,IA1pBf,sCA6pBoB/tB,EAA2B0iB,G,MACxB,MAAX1iB,IACsB,QAAtB,EAAAA,EAAQ8pB,sBAAc,SAAEvP,YAAY,MAAQva,EAAQ0iB,WAAWpI,SAAS,MAAQoI,GAChF1iB,EAAQ0iB,UAAYA,KAhqBhC,kCAqqBgBD,GAAoB,2BAC5B,YAAerzC,KAAK64C,SAApB,+CAA8B,KAArBrF,EAAqB,QAC1B,GAAIA,EAAGH,iBAAmBA,EACtB,OAAOG,GAHa,kFAO5B,OAAO,OA5qBf,oCAgrBkBH,GAAoB,2BAC9B,YAAerzC,KAAK64C,SAApB,+CAA8B,KAArBrF,EAAqB,QAC1B,GAAIA,EAAGH,iBAAmBA,EAYtB,OAXAG,EAAGkH,eAAe7T,SACQ,MAAtB2M,EAAG2H,iBAAyB3H,EAAG2H,gBAAgBtU,SACnD7mC,KAAK64C,SAAS9gC,OAAO/X,KAAK64C,SAASzzC,QAAQouC,GAAK,QAErB,MAAvBxzC,KAAKq7C,iBACDr7C,KAAK64C,SAAS72C,OAAS,EACvBhC,KAAKs7C,OAAOt7C,KAAK64C,SAAS,GAAGxF,iBAE7BrzC,KAAKs7C,OAAO,SAXE,qFAhrBtC,8BAosBQt7C,KAAKy5C,aAAa1uB,QAClB/qB,KAAK64C,SAAW,KArsBxB,iCAwsBejjC,GACP5V,KAAKw5C,gBAAgB9oB,KAAK,QAAQwkB,KAAKt/B,KAzsB/C,2CA4sBsB,2BACd,YAAe5V,KAAK64C,SAApB,+CAA8B,KAArBrF,EAAqB,QAC1B,GAAIA,EAAGkH,eAAekB,SAAS,aAC3B,OAAOpI,GAHD,kFAMd,OAAO,SAltBf,KAwtBaoL,GAAb,WAKI,WAAYC,GAA0B,WAHtC,KAAAhD,MAA0B,GAItB77C,KAAK6+C,MAAQA,EACbA,EAAM3T,SAAS,qBAPvB,4CAUa4T,GACLA,EAAMC,wBAAwB/+C,KAAK6+C,OACnC7+C,KAAK67C,MAAMt3C,KAAKu6C,OAZxB,K,uKC5uBO,IAAME,GAAb,WAEI,WAAmBC,EAA2BC,EAClCvqB,EAAwBwqB,EAA0CC,I,4FAA0C,SADrG,KAAAH,aAA2B,KAAAC,mBAClC,KAAAvqB,OAAwB,KAAAwqB,cAA0C,KAAAC,wB,UAHlF,O,EAAA,G,EAAA,gCAOarzC,GACL/L,KAAKm/C,YAAYp0B,QACjB/qB,KAAKm/C,YAAYrV,OAAOU,OAAO,8CATvC,iCAYY,WAGA5R,EADY54B,KAAK20B,KAAK2R,sBAAsB+Y,UACzBC,SAASt/C,KAAKi/C,YACrC,GAAoB,MAAhBrmB,EAAO7sB,MACP/L,KAAKu/C,SAAS3mB,EAAO7sB,WAClB,CAEH,IAAIlI,EAAI,MACY,MAAhB+0B,EAAO1gC,QACP2L,EAAI+0B,EAAO1gC,MAAMkI,KAAKiN,YAAYurB,EAAO1gC,QAG7C8H,KAAKm/C,YAAYp0B,QACjB/qB,KAAKo/C,sBAAsBr0B,QAE3BpiB,OAAOuP,OAAOsnC,SAAS37C,EAAG,SAAU,CAAE47C,QAAS,IAAKC,MAAK,SAACp2C,GAEtD,IAAIq2C,EAAUnV,OAAO,iCAAmClhC,EAAU,UAE9D,EAAK21C,WAAWj9C,OAAS6B,EAAE7B,OAAS,GACpC,EAAKo9C,sBAAsBtV,OAAO6V,GAElC,EAAKR,YAAYrV,OAAO6V,Y,6BAnC5C,K,uKCUO,IAAM,GAAb,WAWI,WAAoBhrB,EAAwBirB,EAA2CC,I,4FAAyC,SAA5G,KAAAlrB,OAAwB,KAAAirB,eAA2C,KAAAC,sBARvF,KAAAC,qBAA0C,GAUtC9/C,KAAKs4C,UAAY,IAAIsG,GAAUgB,GAE/B5/C,KAAK+/C,cAAgB,IAAI,GAAe//C,KAAKs4C,UAAW,YAAa,IAAK,KAAM,KAAM,IAAI,GAAO,GACjGt4C,KAAK+/C,cAActG,aAAa7K,IAAI,cAAe,OAEnD5uC,KAAKggD,WAAa,IAAI,GAAehgD,KAAKs4C,UAAW,aAAc,IAC/D,eAAgB,8BAChB,WAAW,GAAM,GACrBt4C,KAAKggD,WAAWvG,aAAa7K,IAAI,cAAe,OAEhD,IAAI7wB,EAAO/d,KACXA,KAAKggD,WAAW9E,mBAAqB,SAACgE,EAAkBe,GAGpD,OAFAliC,EAAKmiC,mBAAmBhB,GACxBe,EAAoBf,EAAiB7L,iBAC9B,MAGXrzC,KAAKggD,WAAWtC,eAAiB,SAACyC,EAAiBF,GAC/CliC,EAAKqiC,sBAAsBD,GAC3BF,KAGJjgD,KAAKggD,WAAW9C,eAAiB,SAACiD,EAAiBE,GAE/C,OADAtiC,EAAKuiC,sBAAsBH,EAAiBE,GACrCA,GAGXrgD,KAAK4/C,aAAaxU,O,UAxC1B,O,EAAA,G,EAAA,gCA4CwC,MAA5BprC,KAAK6/C,qBACL7/C,KAAK6/C,oBAAoBzU,OAE7BprC,KAAK4/C,aAAa3U,OAClBjrC,KAAK4/C,aAAazjC,SAASuU,KAAK,uBAAuB0a,SAhD/D,gCAoDwC,MAA5BprC,KAAK6/C,qBACL7/C,KAAK6/C,oBAAoB5U,OAE7BjrC,KAAK4/C,aAAaxU,OAClBprC,KAAK4/C,aAAazjC,SAASuU,KAAK,uBAAuBua,SAxD/D,+BA2DalsB,EAAyB9U,EAC9Bs2C,EAAgBC,EAAoB9hC,GAAU,WAE9C,GAAkC,MAA9BK,EAAe/nB,OAAO8qC,KAA1B,CAEA,IAAI2e,EAAgC,GAGhChiC,EADSM,EAAe/nB,OACH0pD,0BAA0Bz2C,EAAaC,KAAMD,EAAaE,QAE/Ew2C,EAAsB3gD,KAAK8/C,qBAE/B9/C,KAAK8/C,qBAAuB,GAC5B,IAAIc,EAAgB5gD,KAAK+/C,cAActG,aAEnCp9B,EAAKoC,EAET,GAAkB,MAAfA,EAAH,CAEA,GAAuB,MAAnBpC,EAAGH,aAAsB,CAEzB,IAAIvjB,EAAS4nD,EAAMC,GAEnB,GAAIG,EAAoB3+C,OAAS,GAAK2+C,EAAoB,GAAGzoD,OAASS,GAA6C,MAAnCgoD,EAAoB,GAAGpkC,SAEnGvc,KAAK8/C,qBAAqBv7C,KAAKo8C,EAAoB,IACnDF,EAAel8C,KAAKvE,KAAK8/C,qBAAqB,GAAG5L,iBAAiB,QAC/D,CAEH,IAAI2M,EAAcxkC,EAAGH,wBAAwB,EAAeG,EAAGH,aAAa/iB,WAAa,OACrF07C,EAAsB,IAAI,GAAgB,KAAM,KAAMgM,EAAYloD,EAAQ0jB,EAAGH,aAAc,MAC/Flc,KAAK8/C,qBAAqBv7C,KAAKswC,IAYvC,IAHA,IAAIiM,EAAyD,GAGhD,MAANzkC,GAEHA,EAAGJ,YAAYlK,SAAQ,SAACwK,EAAUpjB,GAG9B,GAAgD,MAA5C2nD,EAAoBvkC,EAASpjB,YAAqB,CAIlD,IAAI,EAFJ2nD,EAAoBvkC,EAASpjB,aAAc,EAFO,2BAOlD,YAAkBwnD,EAAlB,+CAAuC,KAA9BI,EAA8B,QAC/BA,EAAMxkC,UAAYA,IAClB,EAAKwkC,EACLN,EAAel8C,KAAK,EAAG2vC,iBAAiB,IAExB,MAAZ,EAAGh8C,OAAgC,MAAf,EAAGqkB,WACvB,EAAGrkB,MAAQqoD,EAAMC,EAAa,EAAGjkC,SAASC,aAbJ,kFAoBlD,GAAU,MAAN,EAAY,CACZ,IAAItkB,EAAQqoD,EAAMC,EAAajkC,EAASC,UACxC,EAAK,IAAI,GAAgB,KAAM,KAAMrjB,EAAYjB,EAAOqkB,EAASnc,KAAMmc,GAG3E,EAAKujC,qBAAqBv7C,KAAK,MAIpCvE,MAGHqc,EAAKA,EAAGF,OAIZ,GAAgC,MAA5BsC,EAAYvC,aACZ,IAAK,IAAI/iB,KAAculB,EAAM,CAEzB,IAAInC,EAAWmC,EAAKvlB,GAEpB,GAAgD,GAA5C2nD,EAAoBvkC,EAASpjB,YAAqB,CAElD2nD,EAAoBvkC,EAASpjB,aAAc,EAE3C,IAAI,OAAmB,EAJ2B,uBAMlD,YAAkBwnD,EAAlB,+CAAuC,KAA9BI,EAA8B,QAC/BA,EAAMxkC,UAAYA,IAClB,EAAKwkC,EACLN,EAAel8C,KAAK,EAAG2vC,iBAAiB,IAExC,EAAGh8C,MAAQ,EAAGqkB,SAASrkB,QAXmB,kFAgBlD,GAAU,MAAN,EAAY,CACZ,IAAIA,EAAQqkB,EAASrkB,MACrB,EAAK,IAAI,GAAgB,KAAM,KAAMiB,EAAYjB,EAAOqkB,EAASnc,KAAMmc,GAG3Evc,KAAK8/C,qBAAqBv7C,KAAK,IA7GG,2BAoH9C,YAAkBq8C,EAAc7M,WAAhC,+CAA4C,KAAnCiN,EAAmC,QAClCP,EAAer7C,QAAQ47C,IAAU,GACnCA,EAAMna,UAtHgC,6GA2H9C,YAAe7mC,KAAK8/C,qBAApB,+CAA0C,KAAjC,EAAiC,QAEnB,MAAf,EAAGvjC,WACyB,MAAxB,EAAGA,SAASC,SACZ,EAAGtkB,MAAQqoD,EAAMC,EAAa,EAAGjkC,SAASC,UAE1C,EAAGtkB,MAAQ,EAAGqkB,SAASrkB,OAI/B,EAAG68C,SAIC0L,EAAer7C,QAAQ,EAAG8uC,iBAAiB,IAAM,GACjD0M,EAAc9W,OAAO,EAAGoK,mBA1Ic,kFA8I9Cl0C,KAAKihD,gBAAkBxiC,EAGvBze,KAAKkhD,iCA7Mb,4CAiN0BC,EAAgCd,GAClDc,EAAelC,WAAaoB,EAE5B13C,OAAOuP,OAAOsnC,SAASa,EAAS,SAAU,CAAEZ,QAAS,IAAKC,MAAK,SAACp2C,GAE5D,IAAIkzC,EAAO2E,EAAejC,iBAAiBxE,eAAehqB,KAAK,gBAC/DpnB,EAAU,sCAAwCA,EAAU,UAC5DkzC,EAAKtH,KAAK5rC,GACVkzC,EAAKpO,KAAK,QAAS+S,EAAelC,eAIlCj/C,KAAK20B,KAAK6N,iBAAiB4e,OAASC,GAAiBC,QACrDH,EAAe7B,aA9N3B,4CAoO0Ba,MApO1B,yCAwOuBjB,GAEfA,EAAiB/D,gBAAkB3Q,OAAO,eAC1C,IAAI+W,EAA0BrC,EAAiBxE,eAAev+B,SAASuU,KAAK,qBAAqBwH,QAE7FspB,EAAK,IAAIxC,GAAeE,EAAiB1nD,KAAM0nD,EAC/Cl/C,KAAK20B,KAAMuqB,EAAiB/D,gBAAiBoG,GAEjDrC,EAAiB7L,gBAAkBmO,EAEnC74C,OAAOuP,OAAOsnC,SAASN,EAAiB1nD,KAAM,SAAU,CAAEioD,QAAS,IAAKC,MAAK,SAACp2C,GAE1E,IAAIkzC,EAAO0C,EAAiBxE,eAAehqB,KAAK,gBAChDpnB,EAAU,sCAAwCA,EAAU,UAC5DkzC,EAAKtH,KAAK5rC,GACVkzC,EAAKpO,KAAK,QAAS8Q,EAAiB7L,gBAAgB4L,eAIxDuC,EAAGlC,aA3PX,mDA+P8B,2BAEtB,YAAet/C,KAAKggD,WAAWnH,SAA/B,+CAAyC,QACTxF,gBACzBiM,WAJe,wF,6BA/P9B,K,uKCKO,IAAM,GAAb,WAQI,WAAoB3qB,I,4FAAc,SAAd,KAAAA,OAChB30B,KAAKwe,YAAc,IAAI,GAAYxe,KAAK20B,MAAM,GAC9C30B,KAAK+kC,MAAQ,IAAI,GACjB/kC,KAAKylC,OAAS,IAAI,IAAO,GACzBzlC,KAAKyE,cAAgB,IAAI,GACzBzE,KAAKhJ,OAAS,IAAI,GAAO,KAAM29B,G,UAbvC,O,EAAA,G,EAAA,+BAgBY8sB,EAAcjjC,EAA0BE,EAAYD,GAExD,IAAImmB,EAAKC,YAAYC,MAEjB7wB,EAAkB,GAEtBjU,KAAKhJ,OAAOiuC,QACO,MAAfxmB,GACAA,EAAc,IAAI,GAAY,KAAM,CAAEtU,OAAQ,EAAGD,KAAM,EAAGlI,OAAQ,GAAK,CAAEmI,OAAQ,EAAGD,KAAM,IAAKlI,OAAQ,KAC3F+Z,qBAAsB,EAElC0C,EAAcA,EAAYijC,eAI9B,IAAIxc,EAAQllC,KAAK+kC,MAAMzsB,IAAImpC,GAC3BxtC,EAASixB,EAAMjxB,OACfjU,KAAKhJ,OAAO0c,UAAYwxB,EAAMlxB,OAIT,IAAI,IAAO,GACzBopB,MAAMp9B,KAAKhJ,QAClBid,EAASA,EAAO/L,OAAOlI,KAAKhJ,OAAOid,OAAO,IAvBuC,2BA2BjF,YAAqBjU,KAAKhJ,OAAO+8B,UAAjC,+CAA4C,KAAnCgG,EAAmC,QACxC,GAA6B,MAAzBA,EAASna,aAAsB,CAC/B,IAAI+hC,EAAwBnjC,EAAYF,QAAQyb,EAAS5gC,YAC5B,MAAzBwoD,EACA1tC,EAAO1P,KAAK,CACRqR,KAAM,gBAAkBmkB,EAAS5gC,WAAa,sBAC9CqL,SAAUu1B,EAASv1B,SACnBsR,MAAO,UAGXikB,EAASna,aAAe4jB,GAAame,EAAsBvhD,KAAM25B,EAASC,kBArCL,kFA8CjF,IAAI4nB,EAAsB5hD,KAAKyE,cAC1Bo9C,sBAAsB7hD,KAAKhJ,OAAQwnB,EAAaC,EAAaC,GAKlE,GAAqB,IAJrBzK,EAASA,EAAO/L,OAAO05C,IAIZ5/C,OAAa,CAEpB,IAAI4C,EAAa5E,KAAKhJ,OAAOuoB,YAAY3a,WAFrB,uBAGpB,YAAsBA,EAAtB,+CAAkC,QACpBE,cAAe,EAJT,kFAOhBF,EAAW5C,OAAS,GAAK4C,EAAWA,EAAW5C,OAAS,GAAG5B,MAAQnH,EAAUuoB,YAC7E5c,EAAWmT,OAAOnT,EAAW5C,OAAS,EAAG,GAKjD,IAAIokC,EAAKvB,YAAYC,MAAQF,EAG7B,OAFAwB,EAAK95B,KAAK+5B,MAAW,IAALD,GAAY,IAErB,CACH3kC,QAASzB,KAAKhJ,OAAOuoB,YACrBtL,OAAQA,EACRwK,YAAaA,Q,6BAvFzB,K,uKCXO,IAAM,GAAb,WAKI,WAAoBiyB,EAA8B/b,I,4FAAc,SAA5C,KAAA+b,YAA8B,KAAA/b,OAH1C,KAAAmtB,WAAgD,IAAIhiD,IAIxDE,KAAK+hD,SAAW,IAAI,GAAcptB,G,UAN1C,O,EAAA,G,EAAA,+BASYsqB,EAAoBxgC,GAExB,GAAkB,MAAfA,EAAH,CAEA,IAAIujC,EAAUhiD,KAAK8hD,WAAWhqD,IAAImnD,GAClC,GAAc,MAAX+C,EAAgB,CACf,IAAIvgD,EAAUugD,EAAQlqD,IAAI2mB,EAAY7c,IACtC,GAAc,MAAXH,EACC,MAAO,CAACsK,MAAO,KAAMtK,QAASA,QAGlCugD,EAAU,IAAIliD,IACdE,KAAK8hD,WAAW38C,IAAI85C,EAAY+C,GAGpC,IAAIxjC,EAAcxe,KAAK0wC,UAAUlyB,YAC7BE,EAAa1e,KAAK20B,KAAK6N,iBAAiB9jB,KAE5C,GAAIugC,EAAWj9C,OAAS,GAAoB,MAAfwc,EAAqB,CAE9C,IAAIyjC,EAAcjiD,KAAK+hD,SAASG,QAAQjD,EAAYzgC,EAAaE,EAAMD,GAEvE,OAAIwjC,EAAYhuC,OAAOjS,OAAS,EACrB,CAAE+J,MAAOk2C,EAAYhuC,OAAO,GAAG2B,KAAMnU,QAAS,OAGrDugD,EAAQ78C,IAAIsZ,EAAY7c,GAAIqgD,EAAYxgD,SAEjC,CAACsK,MAAO,KAAMtK,QAASwgD,EAAYxgD,UAI9C,MAAO,CAACsK,MAAO,kBAAmBtK,QAAS,SAzCvD,+BA6Caw9C,EAAoBxgC,GAEP,MAAfA,IAAqBA,EAAcze,KAAK20B,KAAKwtB,cAAclB,iBAE9D,IAAI3pD,EAAI0I,KAAKkiD,QAAQjD,EAAYxgC,GAEjC,OAAe,OAAZnnB,aAAC,EAADA,EAAGyU,OACK,CAAEA,MAAOzU,EAAEyU,MAAO7T,MAAO,MAG5B,MAALZ,EACQ,CAAEyU,MAAO,0BAA2B7T,MAAO,MAGpC8H,KAAK20B,KAAK6N,iBAET8c,SAAShoD,EAAEmK,c,6BA7DtC,K,uKCAO,IAAM,GAAb,WA4BI,WAAYjK,EAAsBm9B,EAAgBsb,I,4FAAgB,SAAhC,KAAAtb,OAVlC,KAAAib,OAAiB,EAMjB,KAAAR,SAA8B,CAC1BgT,UAAW,IAIXpiD,KAAKxI,KAAOA,EACZwI,KAAKiwC,SAAWA,EAChBjwC,KAAKwe,YAAc,IAAI,GAAYmW,GAAM,EAAM30B,KAAKovC,SAASgT,WAC7DpiD,KAAKq/C,UAAY,IAAI,GAAUr/C,KAAM20B,G,UAhC7C,O,EAAA,E,EAAA,uCAwG2Bgb,EAAmBhb,GAEtC,IAAIya,EAA8C,MAAfO,EAAGP,UAAoBO,EAAGP,SAASh9B,WAAW,KAAQoqB,KAAKY,MAAMuS,EAAGP,UAAY,CAACgT,UAAW,IAG5HhT,EAASiT,WAERjT,EAASgT,UAAYhT,EAASiT,UAGlC,IAAI/R,EAAI,IAAIgS,EAAU3S,EAAGn4C,KAAMm9B,EAAMgb,EAAGM,UACxCK,EAAE1uC,GAAK+tC,EAAG/tC,GACV0uC,EAAE4C,KAAOvD,EAAGuD,KACZ5C,EAAE6C,SAAWxD,EAAGwD,SAChB7C,EAAEL,SAAWN,EAAGM,SAChBK,EAAEiC,QAAU5C,EAAG4C,QACfjC,EAAEa,cAAgBxB,EAAGwB,cACrBb,EAAEc,mCAAqCzB,EAAGyB,mCAC1Cd,EAAElB,SAAWA,EAEc,MAAxBkB,EAAElB,SAASgT,YACV9R,EAAElB,SAASgT,UAAY,IAGxB9R,EAAElB,SAASgT,UAAUpgD,OAAS,GAC7BsuC,EAAE9xB,YAAY+jC,uBAAuBjS,EAAElB,SAASgT,WAzBJ,2BA4BhD,YAAazS,EAAGK,MAAhB,+CAAsB,KAAdyD,EAAc,QAEdp8C,EAAY,GAAOmrD,gBAAgB/O,EAAG9e,GAC1C2b,EAAE9xB,YAAYq1B,UAAUx8C,GAErBo8C,EAAE7xC,IAAM+tC,EAAG8S,gBACVnS,EAAEoS,oBAAsBrrD,IAlCgB,kFAuChD,OAAOi5C,M,EA/If,kDAoCQtwC,KAAKwe,YAAY+jC,uBAAuBviD,KAAKovC,SAASgT,WACtDpiD,KAAKwe,YAAYwmB,OAAQ,IArCjC,uCAwCqB2d,GACb,IAAIjR,EAAoB,CACpBl6C,KAAMwI,KAAKxI,KACX07C,KAAMlzC,KAAKkzC,KACXC,SAAUnzC,KAAKmzC,SACfvxC,GAAI5B,KAAK4B,GACTquC,SAAUjwC,KAAKiwC,SACfwS,cAA2C,MAA5BziD,KAAK0iD,oBAA8B,KAAO1iD,KAAK0iD,oBAAoB5gB,KAAKlgC,GACvFouC,MAAO,GACPuC,QAASvyC,KAAKuyC,QACdpB,cAAenxC,KAAKmxC,cACpBC,mCAAoCpxC,KAAKoxC,mCACzChB,SAAU,EACVwS,iBAAkB,GAClBC,YAAa,GACbC,iCAAkC,GAClC1T,SAAU5S,KAAKC,UAAUz8B,KAAKovC,WAGlC,GAAGuT,EAAU,4BACT,YAAa3iD,KAAKwe,YAAY8F,YAAW,GAAzC,+CAAgD,KAAxCjtB,EAAwC,QAE5Cq6C,EAAG1B,MAAMzrC,KAAKlN,EAAEy4C,YAAY9vC,QAHvB,mFAQb,OAAO0xC,IAnEf,8CAuE4BiC,G,MAChBoP,EAAyC,QAA/B,EAAGpP,aAAY,EAAZA,EAAc+G,sBAAc,eAAEhqB,KAAK,kCACpD,GAAkB,MAAdqyB,EAAJ,CAEA,IACIC,EAAqBhjD,KAAK20B,KAE9B,GAA0B,MAAtB30B,KAAKmxC,eAAyBnxC,KAAKiwC,UAAY+S,EAAOxU,KAAK5sC,GAAI,CAC/D,IAAIqhD,EAAUzY,OAAO,2HACrBuY,EAAWjZ,OAAOmZ,GAClB,IAAI,EAAOjjD,KACXijD,EAAQ5W,GAAG,aAAa,SAAC50B,GAAD,OAAOA,EAAEg9B,qBACjCwO,EAAQ5W,GAAG,SAAS,SAAC50B,GACjBA,EAAEg9B,kBAEF,EAAKyO,oCAKTH,EAAWryB,KAAK,mBAAmBmW,YA3F/C,kDA+F6B,WACjBmc,EAAqBhjD,KAAK20B,KACL,MAAtB30B,KAAKmxC,eAAyBnxC,KAAKiwC,UAAY+S,EAAOxU,KAAK5sC,IAC1DohD,EAAOG,eAAezU,aAAY,WAC9BsU,EAAOI,uBAAuBC,yBAAyB,MACxD,KApGf,kCAqJQ,OAAOrjD,KAAKwe,YAAYqnB,cArJhC,6CAyJ2B5uB,GAA+B,2BAClD,YAAajX,KAAKwe,YAAY8F,YAAW,GAAzC,+CAAgD,KAAxCjtB,EAAwC,QAC5C,GAAGA,EAAE4f,OAASA,EACV,OAAO5f,GAHmC,kFAOlD,OAAO,U,6BAhKf,K,uKCAO,IAAMisD,GAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,8BAuFsB,2BAEd,YAAiBA,EAAWC,OAA5B,+CAAmC,KAA3BC,EAA2B,QAE/BA,EAAMC,OAAS,IAAIC,KAAK,CAACC,IAAK,CAACH,EAAM3W,KAAM+W,SAAS,IACpDN,EAAWO,SAAS1+C,IAAIq+C,EAAMhsD,KAAMgsD,IAL1B,qFAvFtB,2BAiGuBhsD,GACf,IAAI6kB,EAAgBinC,EAAWO,SAAS/rD,IAAIN,GACnC,MAAN6kB,GACCA,EAAGonC,OAAOK,W,EApGtB,O,6BAAA,K,uKAEW,GAAAP,OAAsB,CACzB,CACI1W,IAAK,8CACLr1C,KAAM,+BACN2I,YAAa,8CAEjB,CACI0sC,IAAK,kCACLr1C,KAAM,mBACN2I,YAAa,kBAEjB,CACI0sC,IAAK,0BACLr1C,KAAM,WACN2I,YAAa,+BAEjB,CACI0sC,IAAK,6BACLr1C,KAAM,cACN2I,YAAa,2BAEjB,CACI0sC,IAAK,+BACLr1C,KAAM,gBACN2I,YAAa,mBAEjB,CACI0sC,IAAK,6BACLr1C,KAAM,cACN2I,YAAa,4CAEjB,CACI0sC,IAAK,4BACLr1C,KAAM,aACN2I,YAAa,+CAEjB,CACI0sC,IAAK,8BACLr1C,KAAM,eACN2I,YAAa,iBAEjB,CACI0sC,IAAK,yBACLr1C,KAAM,UACN2I,YAAa,+BAEjB,CACI0sC,IAAK,+BACLr1C,KAAM,gBACN2I,YAAa,sCAEjB,CACI0sC,IAAK,uBACLr1C,KAAM,QACN2I,YAAa,kBAEjB,CACI0sC,IAAK,6BACLr1C,KAAM,cACN2I,YAAa,qBAEjB,CACI0sC,IAAK,sBACLr1C,KAAM,OACN2I,YAAa,eAEjB,CACI0sC,IAAK,yBACLr1C,KAAM,UACN2I,YAAa,sDAEjB,CACI0sC,IAAK,yBACLr1C,KAAM,SACN2I,YAAa,mBAEjB,CACI0sC,IAAK,yBACLr1C,KAAM,SACN2I,YAAa,mBAId,GAAA0jD,SAAmC,IAAI/jD,IC5E3C,IAAM,GAAb,WAQI,WAAoBikD,EAA2CpvB,I,4FAAc,SAAzD,KAAAovB,eAA2C,KAAApvB,OAN/D,KAAAqvB,QAAuD,GAEvD,KAAAC,WAA+C,GAE/C,KAAAC,QAAiE,G,UANrE,O,EAAA,G,EAAA,8BAcQ,IAAItJ,EAAuB56C,KAAK+jD,aAEjB,MAAZnJ,IAAkBA,EAAWpQ,OAAOlvB,WAEvC,IAAIyC,EAAO/d,KACX46C,EAASvO,GAAG,WAAW,SAAUiI,GACjB,MAATA,IACCv2B,EAAKomC,oBAAoB7P,GAOT,KAAbA,EAAM97C,KAAculB,EAAK4W,KAAKyvB,cAC9BrmC,EAAK4W,KAAK6N,iBAAiB4e,OAASC,GAAiBgD,UAAYtmC,EAAK4W,KAAK2vB,kBAAkBC,gBAC5FjQ,EAAM2E,uBA9B1B,8BAqCYuL,GACJ,IAAIhR,EAAKxzC,KAAKgkD,QAAQQ,GACb,MAANhR,GACCA,EAAGiR,OAAOD,EAAkB,KAAM,MAxC9C,qCA6C0BrrD,EAAoBqiB,EAAgBipC,GAA+D,WAA/C7uC,EAA+C,uDAAhC,GAAI8lC,EAA4B,uCACjHlI,EAAkB,CAClBiR,OAAQA,EACRtrD,WAAYA,EACZqiB,KAAMA,EACN5F,KAAMA,EACN8uC,QAAQ,GAGZ1kD,KAAKgkD,QAAQ7qD,GAAcq6C,EAT0F,2BAWrH,YAAeh4B,EAAf,+CAAoB,KAAZhjB,EAAY,QACyB,MAAtCwH,KAAKikD,WAAWzrD,EAAIgZ,iBACnBxR,KAAKikD,WAAWzrD,EAAIgZ,eAAiB,IAEzCxR,KAAKikD,WAAWzrD,EAAIgZ,eAAejN,KAAKivC,IAfyE,kFAkBrH,GAAa,MAAVkI,EAAe,CACiB,MAA5B17C,KAAKkkD,QAAQ/qD,KACZ6G,KAAKkkD,QAAQ/qD,GAAc,IAE/B6G,KAAKkkD,QAAQ/qD,GAAYoL,KAAKm3C,GAE9B,IAAIvjD,EAAIyd,EACL4F,EAAKxZ,OAAS,IACb7J,GAAK,KAAOqjB,EAAKvY,KAAK,MAAQ,KAGlCy4C,EAAOtN,KAAK,QAASj2C,GAErB,IAAI69C,EAAeC,OAAOC,aAAe,UAAY,QAErDwF,EAAOrP,GAAG2J,EAAe,QAAQ,WAC1BxC,EAAGkR,QACFD,EAAOtrD,EAAY,KAAM,aAEZ,qBAAdA,GAAqC,EAAKw7B,KAAKyvB,cAC9Cd,GAAWqB,aAnF/B,+BA2FoBH,GAEZ,IAAIhR,EAAkBxzC,KAAKgkD,QAAQQ,GAEnC,OAAS,MAANhR,GAEIA,EAAGkR,SAjGlB,gCAqGqBF,EAA0BE,GACvC,IAAIlR,EAAkBxzC,KAAKgkD,QAAQQ,GAE1B,MAANhR,IACCA,EAAGkR,OAASA,GAGhB,IAAIR,EAAUlkD,KAAKkkD,QAAQM,GAC3B,GAAc,MAAXN,EAAgB,4BACf,YAAkBA,EAAlB,+CAA0B,KAAlBxI,EAAkB,QACnBgJ,EACChJ,EAAOxQ,SAAS,aAEhBwQ,EAAOvQ,YAAY,cALZ,sFA7G3B,0CAyH+BmJ,GAEvB,GAAmD,SAAhDh5B,SAASspC,cAAcC,QAAQrzC,iBAI9B8iC,EAAMwQ,SAAW,IAAMxQ,EAAMwQ,SAAW,IAA5C,CAIA,IAAItsD,EAAc,GAEd87C,EAAMyQ,UACNvsD,GAAO,SAGP87C,EAAM0Q,WACNxsD,GAAO,UAGP87C,EAAM2Q,SACNzsD,GAAO,QAGK,MAAb87C,EAAM97C,MACLA,GAAO87C,EAAM97C,IAAIgZ,eAGrB,IAAI0zC,EAAgBllD,KAAKikD,WAAWzrD,GAEpC,GAAoB,MAAjB0sD,EAAsB,4BACrB,YAAuBA,EAAvB,+CAAqC,KAA7BC,EAA6B,QACjC,GAAIA,EAAYT,OAAQ,CACpBpQ,EAAMG,kBACNH,EAAM2E,iBACNkM,EAAYV,OAAOU,EAAYhsD,WAAY,KAAMX,GACjD,QANa,0F,6BAvJjC,K,uKCJO,IAAM,GAAb,WAMI,WAAoBm8B,EAAwBywB,I,4FAA+B,SAAvD,KAAAzwB,OAAwB,KAAAywB,aACxCplD,KAAKqlD,UAAYrlD,KAAKolD,WAAW10B,KAAK,yB,UAP9C,O,EAAA,G,EAAA,gCAWa7rB,GAEL,GAAI7E,KAAKqlD,UAAUzJ,SAAS,aAA5B,CAEgB57C,KAAKolD,WAAW10B,KAAK,yBAC3BA,KAAK,OAAOya,YAAY,2BAClC,IAAIqR,EAA2B33C,EAAI,KACnC,GAAW,MAAR23C,EAAa,CACZA,EAAKtR,SAAS,2BACd,IAAIp3B,EAAM0oC,EAAKh4C,WAAW4yC,IAAMp3C,KAAKqlD,UAAUxa,YAC/C/2B,GAAO9T,KAAKqlD,UAAUjP,SAAS,EAC/Bp2C,KAAKqlD,UAAUxa,UAAU/2B,OAtBrC,gCA4BW,WACH9T,KAAKqlD,UAAUhZ,GAAG,UAAU,WACxB,EAAK1X,KAAK2wB,oBA9BtB,6CAmC2B5U,EAAsBr5C,GAAS,WAElD,GAAQ,MAALA,GAEC2I,KAAKqlD,UAAUzJ,SAAS,aAA5B,CAEA,IAAI2J,EAASvlD,KAAKolD,WAAW10B,KAAK,yBAElC60B,EAAOrQ,KAAK,IACZqQ,EAAOzb,OAAO9pC,KAAKwlD,YAAYnuD,IAEf,MAAbq5C,GAAkD,MAA7BA,EAAUnK,iBAC9Bgf,EAAO9K,QAAQ,QAAU/J,EAAUnK,gBAAkB,UAIzDgf,EAAO70B,KAAK,yBAAyB2b,GAAG,SAAS,SAACzuB,GAC9C,IAAIlY,EAAO8kC,OAAO5sB,EAAGm6B,QAAQ3K,KAAK,eACvB,MAAR1nC,IACCA,EAAO8kC,OAAO5sB,EAAGm6B,QAAQ57B,SAASixB,KAAK,gBAEhC,MAAR1nC,GACa,EAAK2/C,UAAU30B,KAAK,IAAMhrB,GAChC,GAAGgnC,uBA1DzB,kCAiEgBr1C,GAER,GAAS,MAALA,EACA,MAAO,CAACmzC,OAAO,gBAGnB,IAAIxxC,EAA2B,GAO/B,GALqB,MAAjB3B,EAAEkoB,cACFvmB,EAAEuL,KAAKimC,OAAO,4BACdxxC,EAAIA,EAAEkP,OAAOlI,KAAK2qB,MAAMtzB,EAAEkoB,YAAY3a,cAGvB,MAAfvN,EAAEgnB,WAA6C,MAAxBhnB,EAAEgnB,UAAUmG,SAAkB,4BAErD,YAAcntB,EAAEgnB,UAAUmG,SAA1B,+CAAoC,KAA3BltB,EAA2B,QAChC,GAAIA,aAAa,EAAO,CACpB0B,EAAEuL,KAAKimC,OAAO,aAAelzC,EAAE6B,WAAa,WAEzC7B,EAAEuP,+BAA+BjC,WAAW5C,OAAS,IACpDhJ,EAAEuL,KAAKimC,OAAO,uCACdxxC,EAAIA,EAAEkP,OAAOlI,KAAK2qB,MAAMrzB,EAAEuP,+BAA+BjC,cALzC,2BAQpB,YAActN,EAAEkP,QAAhB,+CAAyB,KAAhB,EAAgB,QACJ,MAAb,EAAE/E,UACFzI,EAAEuL,KAAKimC,OAAO,cAAgB,EAAE7oC,UAAY,WAC5C3I,EAAIA,EAAEkP,OAAOlI,KAAK2qB,MAAM,EAAElpB,QAAQmD,eAXtB,6GAcpB,YAActN,EAAEsP,YAAYJ,QAA5B,+CAAqC,KAA5B,EAA4B,QAChB,MAAb,EAAE/E,UACFzI,EAAEuL,KAAKimC,OAAO,qBAAuB,EAAE7oC,UAAY,WACnD3I,EAAIA,EAAEkP,OAAOlI,KAAK2qB,MAAM,EAAElpB,QAAQmD,eAjBtB,qFAHyB,mFA4BzD,OAAO5L,IA1Gf,4BA8GU4L,GAA4C,IAAnB6wC,EAAmB,uDAAF,GAExCgQ,EAA6B,IAAI3lD,IACjC4lD,EAA0B,EAHgB,uBAK9C,YAAqB9gD,EAArB,+CAAgC,KAAxBgiB,EAAwB,QAC5B,GAAGA,EAAUxmB,MAAQnH,EAAU8tB,YAAcH,EAAUxmB,MAAQnH,EAAUyuB,aACrEd,EAAUxmB,MAAQnH,EAAUwuB,YAAcb,EAAUxmB,MAAQnH,EAAU0uB,4BACtEf,EAAUxmB,MAAQnH,EAAU2uB,2BAA6BhB,EAAUxmB,MAAOnH,EAAUm2B,yCAA0C,CAC9H,IAAI1pB,EAAOkhB,EAAUjhB,YACjBtD,EAAQojD,EAAO3tD,IAAI4N,GACX,MAATrD,GACCojD,EAAOtgD,IAAIO,EAAM,CACbigD,OAAQD,MAIpB,GAAG9+B,EAAUxmB,MAAQnH,EAAU4B,cAAc,CACzC,IAAI,IAAI3C,KAAS0uB,EAAU7gB,eAAe,CACtC,IAAI,EAAO6gB,EAAU7gB,eAAe7N,GAChC,EAAQutD,EAAO3tD,IAAI,GACX,MAAT,GACC2tD,EAAOtgD,IAAI,EAAM,CACbwgD,OAAQD,MAIpB,GAAmC,MAAhC9+B,EAAU3gB,mBAA2B,CACpC,IAAI,EAAQw/C,EAAO3tD,IAAI8uB,EAAU3gB,oBACrB,MAAT,GACCw/C,EAAOtgD,IAAIyhB,EAAU3gB,mBAAoB,CACrC0/C,OAAQD,SA/BkB,kFAsC9C,IAAI1sD,EAA2B,GAC3B/B,EAAI,EAvCsC,uBAyC9C,YAAsB2N,EAAtB,+CAAkC,KAAzB,EAAyB,QAC9B5L,EAAEuL,KAAKvE,KAAK4lD,UAAU,EAAWnQ,EAAQx+C,EAAGwuD,IAC5CxuD,KA3C0C,kFA8C9C,OAAO+B,IA5Jf,gCA+Jc6L,EAAiB4wC,EAAgB/8C,EAAW+sD,GAElD,IAAIzsD,EAAIy8C,EAEJpzC,EAAQojD,EAAO3tD,IAAIY,GACX,MAAT2J,IACCrJ,GAAK,+CAAiDqJ,EAAMsjD,OAAS,2CAA6CtjD,EAAMsjD,OAAS,uBAGhH,MAAjB9gD,EAAKL,SACLxL,GAAK,KAAOgH,KAAK6lD,QAAQhhD,EAAKL,SAAS0F,MAAQ,WAAalK,KAAK6lD,QAAQhhD,EAAKL,SAAS2F,QAAU,MAEjGnR,GAAK,iCAGTA,GAAK,kDAAoDC,EAAU4L,EAAKzE,MAAQ,gBAEhF,IAAIuP,EAAa,GACjB,OAAQ9K,EAAKzE,MACT,KAAKnH,EAAU2wB,yBAGf,KAAK3wB,EAAU+yB,wBACXrc,GAAM,MAAQ3P,KAAK8lD,cAAcjhD,EAAK0X,UAAY,+BAAiC1X,EAAKonB,kCACxF,MACJ,KAAKhzB,EAAU6qB,yBACXnU,GAAM,aAAe9K,EAAKkf,mBAC1B,MACJ,KAAK9qB,EAAUw4B,oBACX9hB,GAAM,MAAQ9K,EAAK1L,WACvB,MACA,KAAKF,EAAU0rB,cACXhV,GAAM,aAAe9K,EAAK6f,oBAAsB,sBAAwB7f,EAAK+f,cAC7E,MACJ,KAAK3rB,EAAUiE,WACf,KAAKjE,EAAUkE,eACf,KAAKlE,EAAUmE,gBACf,KAAKnE,EAAUoE,yBACf,KAAKpE,EAAUqE,mBACXqS,GAAM,mBAAqBzW,EAAkB2L,EAAKzE,MAAQ,eACvDyE,EAAKzE,MAAQnH,EAAUiE,aACtByS,GAAM,wBAA0B9K,EAAKmgB,mBAGzC,MACJ,KAAK/rB,EAAUktB,SACf,KAAKltB,EAAUsvB,QACX5Y,GAAM,aAAezW,EAAkB2L,EAAKuhB,UAC5C,MACJ,KAAKntB,EAAUwvB,aACX9Y,GAAM,UAAY9K,EAAK3M,MACvB,MACJ,KAAKe,EAAU64B,sBACXniB,GAAM,iBAAmB9K,EAAK3B,MAAM/J,WACpC,MACJ,KAAKF,EAAUgpB,UACXtS,GAAM,aAAe9K,EAAKqd,QAAQ/oB,WAClC,MACJ,KAAKF,EAAU4vB,mBACX,MACJ,KAAK5vB,EAAUmpB,WACXzS,GAAM9K,EAAKnD,OAAOvI,WAClBwW,GAAM,sBAAwB9K,EAAKyd,gBACnC,MACJ,KAAKrpB,EAAUmsB,qBACXzV,GAAM,UAAY9K,EAAK6hB,SACvB,MACJ,KAAKztB,EAAUyhB,OACX/K,GAAM,oCAAsC9K,EAAK+b,gCACjD,MACJ,KAAK3nB,EAAUm2B,yCACf,KAAKn2B,EAAU8tB,WACf,KAAK9tB,EAAUyuB,YACf,KAAKzuB,EAAUwuB,WACf,KAAKxuB,EAAU0uB,2BACf,KAAK1uB,EAAU2uB,0BACX,IAAI+9B,EAAiBF,EAAO3tD,IAAI+M,EAAKc,aAAaggD,OAClDh2C,GAAM,oGAAsGg2C,EAAS,2CAA6CA,EAAS,iBAC3K,MACJ,KAAK1sD,EAAU6vB,yBACf,KAAK7vB,EAAU8vB,wBACXpZ,GAAM,WAAa9K,EAAKwsB,qBACxB,MACJ,KAAKp4B,EAAUqyB,WACX3b,GAAM,SAAW9K,EAAKumB,UAAUjyB,WAChC,MACJ,KAAKF,EAAUyyB,WACX/b,GAAM,UAAY9K,EAAK8mB,sBACvB,MACJ,KAAK1yB,EAAUkyB,eACXxb,GAAM,SAAW9K,EAAKumB,UAAUjyB,WAChCwW,GAAM,gBAAkB9K,EAAKmmB,UAC7B,MACJ,KAAK/xB,EAAU4B,cAEX,IAAI,IAAIrC,KADRmX,GAAM,oBACS9K,EAAKkB,eAAe,CAC/B,IAAI,EAAiB0/C,EAAO3tD,IAAI+M,EAAKkB,eAAevN,IAAMmtD,OAC1Dh2C,GAAMnX,EAAM,yFAA2F,EAAS,2CAA6C,EAAS,mBAM1K,GAHGmX,EAAGwC,SAAS,QAAOxC,EAAKA,EAAG0C,UAAU,EAAG1C,EAAG3N,OAAS,IAEvD2N,GAAM,IACwB,MAA3B9K,EAAKoB,mBAA2B,CAC/B,IAAI,EAASw/C,EAAO3tD,IAAI+M,EAAKoB,oBAAoB0/C,OACjDh2C,GAAM,6GAA+G,EAAS,2CAA6C,EAAS,iBAExL,MACJ,KAAK1W,EAAUwrB,oBACM,MAAd5f,EAAK3B,QACRyM,GAAM,UAAY9K,EAAK3B,MAAM/J,WAAa,gBAAkB0L,EAAK6f,qBACjE,MACJ,KAAKzrB,EAAUkwB,UACXxZ,GAAM,UAAY9K,EAAKzB,MAAMjK,WAK5B,IAANwW,IAAU3W,GAAK,KAAJ,OAAS2W,EAAT,MAEW,GAArB9K,EAAKC,eACL9L,GAAK,MAGTA,EAAI,QAAUA,EAAI,SAElB,IAAIwjD,EAAOhS,OAAOxxC,GAIlB,OAFA6L,EAAI,KAAW23C,EAERA,IAjSf,oCAoSkB34C,GACV,OAAOA,EAAEzD,KAAKjH,WAAa,IAAM0K,EAAE1K,YAA4B,MAAd0K,EAAE2Y,SAAmB,GAAI,SAAW3Y,EAAE2Y,SAAW,OArS1G,8BAwSY9jB,GACJ,OAAGA,GAAK,IAAY,GAAKA,EACtBA,GAAK,GAAW,SAAWA,EACvB,eAAiBA,O,6BA3ShC,K,sQCNO,IAAM,GAAb,WAgBI,WAAYo7C,EAAqC57C,EAAciB,EAAoBgjB,EACvE4pC,GAAuD,IAApBj7B,EAAoB,uDAAJ,KAAI,WAAvD,KAAAi7B,mBAAmC,KAAAj7B,QAR/C,KAAAkpB,QAAkB,EASdh0C,KAAK8zC,QAAUA,EACf9zC,KAAKmc,OAASA,EACA,MAAVA,GACAA,EAAO43B,SAASxvC,KAAKvE,MAEzBA,KAAK9H,MAAQA,EAEb8H,KAAK7G,WAAaA,EAElB6G,KAAK+0C,S,UA3Bb,O,EAAA,G,EAAA,kCA+BQ,OAAsB,MAAf/0C,KAAKmc,OAAiB,EAAInc,KAAKmc,OAAO83B,WAAa,IA/BlE,kCAoCQ,OAA0B,GAAnBj0C,KAAKi0C,WAAkB,EAAI,KApC1C,+BAuCU,WAEFj0C,KAAKgmD,cAAgBxb,OAAO,SAC5BxqC,KAAKgmD,cAAc9a,SAAS,mBAC5BlrC,KAAKgmD,cAAcpX,IAAI,cAAoB5uC,KAAKm0C,YAAc,MAE7C,MAAdn0C,KAAK8qB,OACJ9qB,KAAKgmD,cAAcpX,IAAI,mBAAoB5uC,KAAK8qB,OAGjD9qB,KAAK+lD,kBACJ/lD,KAAKgmD,cAAc9a,SAAS,iBAGhC,IAAIkJ,EAAe5J,OAAO,sCAE1BxqC,KAAKgmD,cAAclc,OAAOsK,GAGR,MAAdp0C,KAAK9H,OAAoC,MAAnB8H,KAAK9H,MAAMkI,OAAiBJ,KAAK9H,MAAMkI,gBAAgB,GAC5EJ,KAAK9H,MAAMkI,gBAAgB,KAAWJ,KAAK9H,MAAMkI,gBAAgB,KAAWJ,KAAK9H,MAAMkI,MAAQiM,IAC7FrM,KAAK9H,MAAMkI,gBAAgB,IAE9BJ,KAAKq0C,SAAU,EACfr0C,KAAKgmD,cAAc9a,SAAS,cAC5BlrC,KAAKgmD,cAAclc,OAAOU,OAAO,4CAEjCxqC,KAAKgmD,cAAct1B,KAAK,mBAAmB2b,GAAG,aAAa,SAACiI,GACtC,MAAd,EAAKp8C,OAAqC,MAApB,EAAKA,MAAMA,OACZ,MAAjB,EAAK67C,UACL,EAAKQ,iBAET,EAAKyR,cAAcxR,YAAY,eAC/B,EAAKR,QAAU,EAAKA,QAEpB,EAAKD,SAAW,KAGpBO,EAAMG,sBAKS,MAAhBz0C,KAAK8zC,SAAsC,GAAnB9zC,KAAKi0C,YAC5Bj0C,KAAKgmD,cAAc9a,SAAS,iBAIpClrC,KAAK00C,gBAvFb,uCA6FQ10C,KAAK+zC,SAAW,GAEhB,IAAI3zC,EAAOJ,KAAK9H,MAAMkI,KAEtB,GAAIA,aAAgB,EAAO,4BAEvB,YAAsBJ,KAAK9H,MAAMkI,KAAMoI,cAAczE,EAAWoJ,SAAhE,+CAA0E,KAAjEvF,EAAiE,QAElEitC,EAAK,IAAIoR,EAAa,KADFjmD,KAAK9H,MAAMA,MACAkV,SAASxF,EAAExF,OAAQwF,EAAEzO,WAAY6G,MAAM,GAC1E60C,EAAGE,SACH/0C,KAAKgmD,cAAct1B,KAAK,wBAAwBoZ,OAAO+K,EAAGmR,gBANvC,wFASpB,GAAI5lD,aAAgB,EAKvB,IAHA,IAAI,EAAaJ,KAAK9H,MAAMA,MAExB88C,EAAkBh1C,KAAKgmD,cAAct1B,KAAK,wBACrCz5B,EAAI,EAAGA,EAAI,EAAE+K,QAAU/K,EAAI,IAAKA,IAAK,CAE1C,IAAI,EAAK,IAAIgvD,EAAa,KAAM,EAAEhvD,GAAI,IAAMA,EAAI,IAAK+I,MAAM,GAC3D,EAAG+0C,SACHC,EAAgBlL,OAAO,EAAGkc,oBAI3B,GAAI5lD,aAAgB,EAAa,CAEpC,IAAI,EAAkBJ,KAAKgmD,cAAct1B,KAAK,wBAFV,uBAGpC,YAActwB,EAAKoI,cAAczE,EAAWoJ,SAA5C,+CAAsD,KAA7C,EAA6C,QAE9C,EAAK,IAAI84C,EAAa,KADjB7lD,EAAKoN,YACqBJ,SAAS,EAAEhL,OAAQ,EAAEjJ,WAAY6G,MAAM,GAC1E,EAAG+0C,SACH,EAAgBjL,OAAO,EAAGkc,gBAPM,wFAUjC,GAAI5lD,aAAgB,EAEvB,GAAuB,MAApBJ,KAAK9H,MAAMA,OAAiB8H,KAAK9H,MAAMA,iBAAiB,EAAc,CAErE,IAAI,EAAkB8H,KAAKgmD,cAAct1B,KAAK,wBAE1C,EAAoB1wB,KAAK9H,MAAMA,MAJkC,uBAMrE,YAAsB,EAAGkL,MAAOoF,cAAczE,EAAWoJ,SAAzD,+CAAmE,KAA1D,EAA0D,QAC3D,EAAK,IAAI84C,EAAa,KAAM,EAAG74C,SAAS,EAAEhL,OAAQ,EAAEjJ,WAAY6G,MAAM,GAC1E,EAAG+0C,SACH,EAAgBjL,OAAO,EAAGkc,gBATuC,wFAarEhmD,KAAK+zC,WAhJrB,oCAyJQ,IAAImS,EAAalmD,KAAKgmD,cAAct1B,KAAK,mBAErC7sB,EAAI7D,KAAK9H,MAEb,GAAS,MAAL2L,EAAJ,CAeA,IAAIsiD,EAAc,GAEdA,EADW,MAAXtiD,EAAE3L,MACY,OAEA2L,EAAEzD,KAAKiN,YAAYxJ,EAAG,KAGlB,MAAnB7D,KAAK7G,YACJ+sD,EAAWpc,OAAOU,OAAO,iCAAmCxqC,KAAK7G,WAAa,mBAElF+sD,EAAWpc,OAAOU,OAAO,4BAA8B2b,EAAc,iBAxBjE,GAAmB,MAAhBnmD,KAAK8zC,QACJ,GAA0B,iBAAhB9zC,KAAK8zC,QACXoS,EAAWpc,OAAOU,OAAO,8BAAgCxqC,KAAK8zC,QAAU,gBACrE,CACH,IAAIsS,EAAO5b,OAAO,sCAClB4b,EAAKtc,OAAO9pC,KAAK8zC,SACjBoS,EAAWpc,OAAOsc,QAGtBF,EAAWpc,OAAOU,OAAO,iEAvKzC,oCA0LQxqC,KAAK9H,WAAQ+Q,EACbjJ,KAAKgmD,cAAc7a,YAAY,cACT,GAAnBnrC,KAAKi0C,YAAmC,MAAhBj0C,KAAK8zC,SAC5B9zC,KAAKgmD,cAAc9a,SAAS,sB,6BA7LxC,K,uKCKO,IAAM,GAAb,WAkBI,WAAoBvW,EAAuBywB,I,4FAA+B,SAAtD,KAAAzwB,OAAuB,KAAAywB,aAf3C,KAAAiB,QAAoB,GACpB,KAAAC,WAAqB,EAGrB,KAAAC,SAAmB,EACnB,KAAAC,gBAA0B,EAI1B,KAAAC,eAAiC,GAEjC,KAAAC,gBAA4B,GAKP,MAAdtB,IAEHplD,KAAK2mD,mBAAqBvB,EAAW10B,KAAK,mCAC1C1wB,KAAK6pC,YAAcub,EAAW10B,KAAK,4B,UAtB3C,O,EAAA,G,EAAA,gDA2BQ,IAAI3S,EAAO/d,KAEP4mD,EAAgB5mD,KAAK2mD,mBAAmBxqC,SAASuU,KAAK,qBAE1D1wB,KAAK6pC,YAAYwC,GAAG,UAAU,WAC1Bua,EAAc3b,OACdltB,EAAK7F,OAAO2uC,YAGhB7mD,KAAK6pC,YAAYwC,GAAG,UAAU,WAC1Bua,EAAcxb,UAGlBwb,EAAcva,GAAG,aAAa,SAAC50B,GAC3BA,EAAEg9B,kBACF12B,EAAKknB,aA1CjB,gCA+CW,WAEH,GAAsB,MAAnBjlC,KAAKolD,WAAR,CAEAplD,KAAK8mD,yBAEL,IAAIC,EAAa/mD,KAAK6pC,YAAYnZ,KAAK,mBAEvC1wB,KAAKkY,OAASvP,OAAOuP,OAAO3f,OAAOwuD,EAAW,GAAI,CAC9C7uD,MAAO,CACH,IACF+K,KAAK,MACP+jD,iBAAiB,EACjBC,oBAAqB,OACrBC,oBAAoB,EACpBC,mBAAoB,EACpBC,YAAa,MACbC,aAAa,EACbC,SAAS,EAETC,qBAAsB,EACtBC,oBAAqB,EACrBC,sBAAsB,EACtBrX,SAAU,SAEVsX,SAAU,GACVC,WAAY,cACZC,WAAY,MACZC,kBAAkB,EAClBC,sBAAsB,EACtBC,QAAS,CACLC,eAAe,EACfC,iCAAiC,GAErCC,QAAS,CACLtO,SAAS,GAEbuO,UAAW,CACPC,SAAU,SACVC,WAAY,UAEhBptC,MAAO,sBAKXjb,KAAKkY,OAAO2uC,SAEZ,IAAI9oC,EAAO/d,KAEXA,KAAKkY,OAAOowC,WAAW3/C,OAAO4/C,QAAQC,OAAO,WAIzC,GAFAzqC,EAAK0qC,iBAED1qC,EAAKyoC,eAAgB,CACrB,IAAIl9C,EAAUyU,EAAK7F,OAAOwwC,WAAWt7C,SAASzE,OAAOuP,OAAOC,oBAAoBC,IAAI,GAEpF,GAAc,IAAX9O,EACC,OAGJyU,EAAKsoC,QAAQ9hD,KAAK+E,GAClByU,EAAKuoC,WAAa,EAElBvoC,EAAK4qC,UAEL5qC,EAAK7F,OAAOs6B,SAAS,OAO1B,yBAEHxyC,KAAKkY,OAAOowC,WAAW3/C,OAAO4/C,QAAQK,SAAS,WAE3C,IAAIC,EAAiB9qC,EAAKsoC,QAAQrkD,QAAU+b,EAAKuoC,WAAa,GAC9D,GAAIuC,GAAkB,EAAG,CACrB9qC,EAAKuoC,aACL,IAAI1wC,EAAOmI,EAAKsoC,QAAQwC,GACxB9qC,EAAK7F,OAAOs6B,SAAS58B,GACrBmI,EAAK7F,OAAO4wC,YAAY,CACpBC,WAAY,EACZ5+C,OAAQyL,EAAK5T,OAAS,OAI/B,yBAEHhC,KAAKkY,OAAOowC,WAAW3/C,OAAO4/C,QAAQS,WAAW,WAE7C,IAAIH,EAAiB9qC,EAAKsoC,QAAQrkD,QAAU+b,EAAKuoC,WAAa,GAC9D,GAAIuC,GAAkB9qC,EAAKsoC,QAAQrkD,OAAS,EAAG,CAC3C+b,EAAKuoC,aACL,IAAI1wC,EAAOmI,EAAKsoC,QAAQwC,GACxB9qC,EAAK7F,OAAOs6B,SAAS58B,GACrBmI,EAAK7F,OAAO4wC,YAAY,CACpBC,WAAY,EACZ5+C,OAAQyL,EAAK5T,OAAS,SAG1B+b,EAAK7F,OAAOs6B,SAAS,IACrBz0B,EAAKuoC,WAAa,IAGvB,yBAEHtmD,KAAK+hD,SAAW,IAAI,GAAc/hD,KAAK20B,MAEvC,IAAI1d,EAAQjX,KAAKkY,OAAOwwC,WACpBO,EAAgB,EAEpBhyC,EAAMiyC,oBAAmB,WACrB,IAAIC,EAAYlyC,EAAMy7B,0BAElByW,GAAaF,IACblrC,EAAKwoC,SAAU,EACf0C,EAAgBE,MAIxBnpD,KAAKopD,aAELppD,KAAK2mD,mBAAmBta,GAAG,aAAa,WACpC,GAAOgd,WAAW,gBAAiB,EAAK10B,MAExCoW,YAAW,WACPhtB,EAAK7F,OAAOq0B,UACb,WAhLf,mCAsLQvsC,KAAKspD,YAEL,IAAIvrC,EAAO/d,KACXA,KAAKupD,YAAc5e,aAAY,WAE3B5sB,EAAK0qC,mBAEN,OA7LX,kCAkMgC,MAApBzoD,KAAKupD,cACLjb,cAActuC,KAAKupD,aACnBvpD,KAAKupD,YAAc,QApM/B,uCA4MQ,GAAIvpD,KAAKumD,QAAS,CAEd,IAAIj9C,EAAUtJ,KAAKkY,OAAOwwC,WAAWt7C,SAASzE,OAAOuP,OAAOC,oBAAoBC,IAAI,GAChFoG,EAAcxe,KAAK20B,KAAK2R,sBAAsB9nB,YAC9CC,EAAcze,KAAK20B,KAAKwtB,cAAclB,gBACtCviC,EAAO1e,KAAK20B,KAAK6N,iBAAiB9jB,KAEtC,GAAIpV,EAAQtH,OAAS,GAAoB,MAAfwc,EAAqB,CAE3C,IAAIyjC,EAAcjiD,KAAK+hD,SAASG,QAAQ54C,EAASkV,EAAaE,EAAMD,GAEpEze,KAAKwmD,eAA8C,GAA7BvE,EAAYhuC,OAAOjS,OAEzChC,KAAKwpD,WAAWvH,EAAYhuC,QAE5BjU,KAAKumD,SAAU,OAGfvmD,KAAKwpD,WAAW,OA9NhC,iCAqOev1C,GAEP,IAAIw1C,EAAuC,GAFrB,uBAItB,YAAkBx1C,EAAlB,+CAA0B,KAAjBlI,EAAiB,QACtB09C,EAAQllD,KAAK,CACTqT,gBAAiB7L,EAAMvH,SAAS0F,KAChC4N,YAAa/L,EAAMvH,SAAS2F,OAC5BwN,cAAe5L,EAAMvH,SAAS0F,KAC9B2N,UAAW9L,EAAMvH,SAAS2F,OAAS4B,EAAMvH,SAASxC,OAClDyK,QAASV,EAAM6J,KACf8N,SAAU/a,OAAOgb,eAAeC,SAXlB,kFAgBtBjb,OAAOuP,OAAOwxC,gBAAgB1pD,KAAKkY,OAAOwwC,WAAY,SAAUe,KArPxE,gCAyPW,WAECzsB,EAAch9B,KAAK20B,KAAK6N,iBACxBxrC,EAASgJ,KAAK+hD,SAAS/qD,OACvBsS,EAAUtJ,KAAKkY,OAAOwwC,WAAWt7C,SAASzE,OAAOuP,OAAOC,oBAAoBC,IAAI,GAChF3W,EAAUzK,EAAOuoB,YAErB5W,OAAOuP,OAAOsnC,SAASl2C,EAAS,SAAU,CAAEm2C,QAAS,IAAKC,MAAK,SAACp2C,GAKxD,EAAKqgD,eAAe3sB,EAAav7B,EAAS6H,GAC1C0zB,EAAY4sB,sCAtQ5B,4CA4Q0BnoD,GAAgB,2BAElC,YAAqBA,EAAQmD,WAA7B,+CAAwC,KAAhCgiB,EAAgC,QACpC,GAAGA,EAAUxmB,MAAQnH,EAAUmpB,YAAyC,MAA3BwE,EAAUllB,OAAOF,OAC1D,OAAO,GAJmB,kFAQlC,OAAO,IApRf,wCAwRsBw7B,EAA0Bv7B,EAAkB6H,GAAe,WAEzE0zB,EAAY6sB,qBAEZ7sB,EAAYje,eAAiBtd,EAC7Bu7B,EAAY8sB,uBAAyB,EAErC,IAAIC,EAAkB/sB,EAAYujB,MAAMv+C,OACpCgoD,EAAsBhtB,EAAYokB,MAEtCpkB,EAAYitB,SAAS5I,GAAiBC,QAEtCtkB,EAAY0I,OAAM,WAEd,IAAIwkB,EACJ,GAAIltB,EAAYujB,MAAMv+C,OAAS+nD,EAG3B,IAFAG,EAAWltB,EAAYujB,MAAMjsC,MAEtB0oB,EAAYujB,MAAMv+C,OAAS+nD,GAC9B/sB,EAAYujB,MAAMjsC,MAK1B,EAAK61C,kBAAkB7gD,EAAS4gD,GAEhCltB,EAAYitB,SAASD,GACjBA,GAAuB3I,GAAiBC,QACxCtkB,EAAY4sB,sCApT5B,qCA2TmB5sB,EAA0Bv7B,EAAkB6H,GAEvD,IAAIsvB,EAASoE,EAAYsiB,SAAS79C,GAElC,GAAmB,MAAhBm3B,EAAO7sB,MAEN/L,KAAKmqD,kBAAkB7gD,EAASsvB,EAAO1gC,WAEpC,CAEH,IAAIkyD,EAAS5f,OAAO,aAAelhC,EAAU,gBAC7C8gD,EAAOtgB,OAAOU,OAAO,kCAAoC5R,EAAO7sB,MAAQ,WAExE/L,KAAKmqD,kBAAkBC,EAAQ,SAxU3C,gCAgVQ,IAAIpU,EAAeC,OAAOC,aAAe,UAAY,QACrDl2C,KAAK2mD,mBAAmB3O,QAAQhC,EAAe,UAjVvD,wCAoVsB1sC,EAAqC4gD,GAAqC,IAApBp/B,EAAoB,uDAAJ,KAEpF,GAAuB,MAApB9qB,KAAK6pC,YAAR,CAGA,IAAIwgB,EAAarqD,KAAK6pC,YAAYnZ,KAAK,mBAEnC45B,EAAe,IAAI,GAAahhD,EAAS,KAAM,KAAM,KAAkB,MAAZ4gD,EAAkBp/B,GAIjF,GAHA9qB,KAAKymD,eAAeliD,KAAK+lD,GACzBD,EAAWvgB,OAAOwgB,EAAatE,eAEhB,MAAZkE,EAAiB,CAChB,IAAIK,EAAc,IAAI,GAAa,KAAML,EAAU,KAAM,MAAM,EAAMp/B,GACrE9qB,KAAKymD,eAAeliD,KAAKgmD,GACzBF,EAAWvgB,OAAOygB,EAAYvE,eAGlC,IAAI5P,EAASiU,EAAW,GAAGvf,aAC3Buf,EAAWxf,UAAUuL,MAtW7B,8BA2WyBp2C,KAAK6pC,YAAYnZ,KAAK,mBAC5BqjB,WAAWlN,SACtB7mC,KAAKymD,eAAiB,KA7W9B,qCAgXgB,2BACR,YAAczmD,KAAKymD,eAAnB,+CAAkC,QAC3B+D,cAFC,qFAhXhB,gCAsXcnzD,EAAWmN,G,UAEdxE,KAAK20B,gBAAgB,KACT,QAAP,EAAAt9B,aAAC,EAADA,EAAGyqC,YAAI,eAAEtqC,QAAkE,QAA9D,EAAwD,QAAxD,EAAIwI,KAAK20B,KAAKoa,gBAAgB3J,kCAA0B,eAAEtD,YAAI,eAAEtqC,QAC7EwI,KAAK20B,KAAKzc,OAAOuyC,uBACjBzqD,KAAK20B,KAAKoa,gBAAgB2b,gBAAgBrzD,IAKlD,IAAI2R,EAAQ,CACR8O,YAAatT,EAAS2F,OAAQyN,gBAAiBpT,EAAS0F,KACxD2N,UAAWrT,EAAS2F,OAAS3F,EAASxC,OAAQ2V,cAAenT,EAAS0F,MAG1ElK,KAAK20B,KAAK2vB,kBAAkBqG,oBAAoB3hD,GAChDhJ,KAAK0mD,gBAAkB1mD,KAAK20B,KAAK2vB,kBAAkBsG,iBAAiB5qD,KAAK0mD,gBAAiB,CACtF,CACI19C,MAAOA,EACPmO,QAAS,CAAEmkB,UAAW,mBAG1B,CACItyB,MAAOA,EACPmO,QAAS,CAAEmkB,UAAW,0BAA2BuvB,aAAa,QA9Y9E,oCAuZQ7qD,KAAK0mD,gBAAkB1mD,KAAK20B,KAAK2vB,kBAAkBsG,iBAAiB5qD,KAAK0mD,gBAAiB,MAvZlG,wCA4Z8B,MAAnB1mD,KAAKolD,YACUplD,KAAK6pC,YAAYnZ,KAAK,mBAC5BA,KAAK,iBAAiBo6B,QAAQ,oBAAoBjkB,c,6BA9ZtE,K,uKCNO,IAAM,GAAb,WAYI,WAAoBlS,EAAwBywB,EAAyC2F,I,4FAA6B,SAA9F,KAAAp2B,OAAwB,KAAAywB,aAAyC,KAAA2F,WAVrF,KAAAC,eAA2B,GAC3B,KAAAC,oBAAgC,GAKhC,KAAAC,aAAwC,GAExC,KAAAC,6BAA8F,GAG1FnrD,KAAKkrD,aAAL,MAA6B,UAC7BlrD,KAAKkrD,aAAL,QAA+B,UAC/BlrD,KAAKkrD,aAAL,KAA4B,UAE5BlrD,KAAKorD,iBAAmBL,EAASr6B,KAAK,2BAEtC1wB,KAAKorD,iBAAiBhd,KAAK,QAAS,iBACpCpuC,KAAKorD,iBAAiBrX,WAAW3F,KAAK,QAAS,iBAE/C,IAAIrwB,EAAO/d,KACX+qD,EAASr6B,KAAK,eAAe2b,GAAG,SAAS,WACxBtuB,EAAK4W,KAAK2vB,kBAChBtM,QAAQ,IAAK,OAAQ,OAC7B5J,KAAK,QAAS,Q,UA1BzB,O,EAAA,G,EAAA,8CA6B2BriC,GACP,MAATA,GACC/L,KAAKorD,iBAAiBxc,IAAI,aAAc,WACxC5uC,KAAKorD,iBAAiB16B,KAAK,kBAAkB9a,KAAK7J,IAElD/L,KAAKorD,iBAAiBxc,IAAI,aAAc,YAlCpD,iCAsCe8B,GAAoB,WAE3B1wC,KAAKmrD,6BAA+B,GAEpC,IAAIE,EAAqC,IAAIvrD,IAE7CE,KAAKsrD,UAAYtrD,KAAKolD,WAAW10B,KAAK,0BACtC1wB,KAAKsrD,UAAUvgC,QAEf,IAAI8a,GAAY,EAEZ0lB,EAAK7a,EAAUlyB,YACftG,EAA8ClY,KAAK20B,KAAK2vB,kBAZjC,uBAc3B,IAd2B,IAc3B,EAd2B,iBAclBjtD,EAdkB,QAenBoyD,EAAuC,GACvC+B,EAAqD,GACrDC,EAAoC,GAEpCx3C,EAAS5c,EAAEq0D,6BACfL,EAAclmD,IAAI9N,EAAGA,EAAEs0D,iBApBA,2BAsBvB,YAAkB13C,EAAlB,+CAA0B,KAAjBlI,EAAiB,QAElB6/C,OAAiC,EACjCC,OAAuB,EACvBX,EAAuB,EAAKA,aAAan/C,EAAM+J,OAEnD,OAAQ/J,EAAM+J,OACV,IAAK,QAAS81C,EAA4B,qBAAsBC,EAAkB,qBAAsB,MACxG,IAAK,UAAWD,EAA4B,uBAAwBC,EAAkB,uBAAwB,MAC9G,IAAK,OAAQD,EAA4B,oBAAqBC,EAAkB,oBAG9D,MAAlB9/C,EAAMyX,UAAkB,WACxB,IAAIA,EAAWzX,EAAMyX,SACjBsoC,EAAiB,MAAQx/C,KAAKyE,MAAsB,IAAhBzE,KAAKikC,UAC7Cqb,EAA4B,sBAAwBC,EAAkB,IAAMC,EAE5E,EAAKX,6BAA6B5mD,KAAK,CAACnB,MAAO,IAAM0oD,EACrDC,gBAAiB,WAEb,IAAI10C,EAAQmM,EAASX,cAAcxrB,EAAE4f,MAAM6L,KAC3C5K,EAAO8zC,aAAa,GAAI30C,EAAMtU,KAAI,SAACigB,GAC/B,IAAIjrB,EAAIirB,EAAKA,KAAKha,MAClB,MAAO,CACHA,MAAO,IAAIL,OAAOsjD,MAAMl0D,EAAE6f,gBAAiB7f,EAAE+f,YAAa/f,EAAE4f,cAAe5f,EAAE8f,WAC7EjC,KAAMoN,EAAKA,KAAKpN,KAChBs2C,kBAAkB,QAM9B3iD,MAAOia,EAASja,QApBQ,GA0B5B,EAAK4iD,aAAapgD,EAAO1U,EAAGo0D,GAE5B,IAAI/nC,OAA+B,EACnC,OAAQ3X,EAAM+J,OACV,IAAK,QAAS4N,EAAW/a,OAAOgb,eAAeC,MAAO,MACtD,IAAK,UAAWF,EAAW/a,OAAOgb,eAAeyoC,QAAS,MAC1D,IAAK,OAAQ1oC,EAAW/a,OAAOgb,eAAe0oC,KAGlD5C,EAAQllD,KAAK,CACTqT,gBAAiB7L,EAAMvH,SAAS0F,KAChC4N,YAAa/L,EAAMvH,SAAS2F,OAC5BwN,cAAe5L,EAAMvH,SAAS0F,KAC9B2N,UAAW9L,EAAMvH,SAAS2F,OAAS4B,EAAMvH,SAASxC,OAClDyK,QAASV,EAAM6J,KACf8N,SAAUA,EAEV4oC,mBAAoBvgD,EAAMyX,WAG9BgoC,EAAYjnD,KAAK,CACbyE,MAAO,CACH4O,gBAAiB7L,EAAMvH,SAAS0F,KAChC4N,YAAa/L,EAAMvH,SAAS2F,OAC5BwN,cAAe5L,EAAMvH,SAAS0F,KAC9B2N,UAAW9L,EAAMvH,SAAS2F,OAAS4B,EAAMvH,SAASxC,QAEtDmV,QAAS,CACLy0C,0BAA2BA,EAC3B1D,QAAS,CACL1jD,SAAUmE,OAAOuP,OAAOq0C,gBAAgBC,OACxC1hC,MAAOogC,OA3FA,kFA2GvB,GAPAviD,OAAOuP,OAAOwxC,gBAAgBryD,EAAE4f,MAAO,OAAQwyC,GAC/CpyD,EAAE4zD,oBAAsB5zD,EAAE4f,MAAM2zC,iBAAiBvzD,EAAE4zD,oBAAqBO,GAGxE,EAAKR,eAAiB,EAAKr2B,KAAK2vB,kBAAkBsG,iBAAiB,EAAKI,eAAgB,IAGpFS,EAAWzpD,OAAS,GAAK,EAAKspD,UAAUtpD,OAAS,EAAG,CACpD6jC,GAAY,EACZ,IAAI4mB,EAAQjiB,OAAO,kCAAoCnzC,EAAEyqC,KAAKtqC,KAAO,gBACrE,EAAK8zD,UAAUxhB,OAAO2iB,GAH8B,2BAIpD,YAAmBhB,EAAnB,+CAA+B,KAAtBiB,EAAsB,QAC3B,EAAKpB,UAAUxhB,OAAO4iB,IAL0B,qFA7F5D,EAAcnB,EAAGjnC,YAAW,GAA5B,+CAAoC,IAdT,kFA4H3B,OANKuhB,GAAa7lC,KAAKsrD,UAAUtpD,OAAS,GACtChC,KAAKsrD,UAAUxhB,OAAOU,OAAO,mEAGjCxqC,KAAK2sD,oCAEEtB,IAlKf,0DAwKQ,IAAIttC,EAAO/d,KACX+qC,YAAW,WAAK,2BACZ,YAAgBhtB,EAAKotC,6BAArB,+CAAkD,KAA1CyB,EAA0C,QAC1CpiB,OAAOoiB,EAAKxpD,OAAOupC,IAAI,QAASigB,EAAKb,iBACrCvhB,OAAOoiB,EAAKxpD,OAAOipC,GAAG,QAASugB,EAAKb,iBAAiB3d,KAAK,QAASwe,EAAKrjD,QAHpE,qFAKb,OA9KX,mCAmLiBwC,EAAc1U,EAAWw1D,GAAiC,WAE/DrQ,EAAOhS,OAAO,qCACdsiB,EAActiB,OAAO,uEAAyEz+B,EAAMvH,SAAS0F,KAAO,+CAC1E6B,EAAMvH,SAAS2F,OAAS,0BAClE4iD,EAAW,GACf,OAAQhhD,EAAM+J,OACV,IAAK,QAAS,MACd,IAAK,UAAWi3C,EAAW,qDAAsD,MACjF,IAAK,OAAQA,EAAW,+CAE5B,IAAIC,EAAWxiB,OAAO,8BAAgCuiB,EAAWhhD,EAAM6J,KAAO,UAE9E4mC,EAAK1S,OAAOgjB,GAAahjB,OAAOkjB,GAEhC,IAAIjvC,EAAO/d,KACXw8C,EAAKnQ,GAAG,aAAa,SAACzuB,GAClB,EAAK0tC,UAAU56B,KAAK,kBAAkBya,YAAY,aAClDqR,EAAKtR,SAAS,aACdntB,EAAKkvC,UAAU51D,EAAG0U,MAGtB8gD,EAAWtoD,KAAKi4C,KAzMxB,gCA4McnlD,EAAW0U,GAEb/L,KAAK20B,gBAAgB,IACjBt9B,GAAK2I,KAAK20B,KAAKoa,gBAAgB3J,6BAC/BplC,KAAK20B,KAAKzc,OAAOuyC,uBACjBzqD,KAAK20B,KAAKoa,gBAAgB2b,gBAAgBrzD,IAGlD,IAAImN,EAAWuH,EAAMvH,SACjBwE,EAAQ,CACR8O,YAAatT,EAAS2F,OAAQyN,gBAAiBpT,EAAS0F,KACxD2N,UAAWrT,EAAS2F,OAAS3F,EAASxC,OAAQ2V,cAAenT,EAAS0F,MAG1ElK,KAAK20B,KAAK2vB,kBAAkBqG,oBAAoB3hD,GAEhD,IAAIsyB,EAAoB,GACxB,OAAQvvB,EAAM+J,OACV,IAAK,QAASwlB,EAAY,iBAAkB,MAC5C,IAAK,UAAWA,EAAY,mBAAoB,MAChD,IAAK,OAAQA,EAAY,gBAI7Bt7B,KAAKgrD,eAAiBhrD,KAAK20B,KAAK2vB,kBAAkBsG,iBAAiB5qD,KAAKgrD,eAAgB,CACpF,CACIhiD,MAAOA,EACPmO,QAAS,CAAEmkB,UAAWA,W,6BAvOtC,K,uKCYO,IAAM,GAAb,WAWI,WAAoB3G,EAAmBywB,I,4FAA+B,SAAlD,KAAAzwB,OAAmB,KAAAywB,aAJvC,KAAA8H,oBAA8B,EAK1BltD,KAAKmtD,aAAe/H,EAAW10B,KAAK,4B,UAZ5C,O,EAAA,G,EAAA,iCAeW,WACC3S,EAAO/d,KACXA,KAAKmtD,aAAarjB,OAAO9pC,KAAKotD,iBAAmBjV,GAAQ,GAAI,qCAC7Dn4C,KAAKmtD,aAAarjB,OAAO9pC,KAAKqtD,kBAAoBlV,GAAQ,GAAI,sCAC9Dn4C,KAAKstD,oBAAsBnV,GAAQ,GAAI,gDAAiD,IACxF3N,OAAO,cAAciQ,QAAQz6C,KAAKstD,qBAClCttD,KAAKstD,oBAAoBjhB,GAAG,SAAS,WAC7B,EAAK6gB,mBACL,EAAKK,eAEL,EAAKC,aAAazvC,EAAK4W,KAAKyQ,+BAGpCplC,KAAKstD,oBAAoBliB,OACzBZ,OAAO,eAAeY,SA7B9B,mDAiCQprC,KAAKstD,oBAAoB13C,KAAK5V,KAAKktD,mBAAqB,gBAAkB,sBAC1EltD,KAAKstD,oBAAoBriB,SAlCjC,mDAsCQjrC,KAAKstD,oBAAoBliB,SAtCjC,mCAyCiBp0C,GAETA,EAAO8qC,KAAKlsB,KAAO5e,EAAOmuC,gCAC1B,IAAIrD,EAAO9qC,EAAO8qC,KAElB0I,OAAO,WAAWY,OAClBZ,OAAO,eAAeS,OAEtB,IAAIwiB,EAAgB9kD,OAAOuP,OAAOw1C,YAAY5rB,EAAK6rB,qBAAsB,UACrEC,EAAgBjlD,OAAOuP,OAAOw1C,YAAY5rB,EAAKlsB,KAAM,UAEzD5V,KAAK6tD,WAAallD,OAAOuP,OAAO41C,iBAAiBxyC,SAASyyC,eAAe,cAAe,CAEpFC,yBAAyB,EACzBC,kBAAkB,EAClBC,UAAU,EAEVC,kBAAkB,IAGtBnuD,KAAK6tD,WAAWO,SAAS,CACrBC,SAAUZ,EACVa,SAAUV,IAGd5tD,KAAKktD,oBAAqB,EAC1BltD,KAAKuuD,+BAnEb,qCAuEYvuD,KAAKktD,qBAEL1iB,OAAO,eAAeY,OACtBprC,KAAK6tD,WAAWW,UAChBxuD,KAAK6tD,WAAa,KAClBrjB,OAAO,WAAWS,OAElBjrC,KAAKktD,oBAAqB,EAC1BltD,KAAKuuD,gCA/EjB,yCAoFuB9c,GAAuB,WAElCgd,EAAoC,GACpC1rD,EAAyC,GAE7C0uC,EAAW1/B,SAAQ,SAAA49B,GACfA,EAAGnxB,YAAY8F,YAAW,GAAOvS,SAAQ,SAAA/a,GAErC,Id1EVqa,Ec0Ecq9C,EAAa13D,EAAO8qC,KAAK6sB,eAC7B,GAAkB,MAAdD,EAAoB,CAEpB,IAAIE,Gd7ElBv9C,Ec6E4Cq9C,Ed7E/Br9C,MAAM,gDAEN,IAAIw9C,KAAKh/C,OAAOM,SAASkB,EAAM,IAAKxB,OAAOM,SAASkB,EAAM,IAAKxB,OAAOM,SAASkB,EAAM,IAAKxB,OAAOM,SAASkB,EAAM,IAAKxB,OAAOM,SAASkB,EAAM,Mc4EtIy9C,EdzFlB,SAAkCF,GACtC,gBAAUvZ,GAAOuZ,EAAKG,WAAtB,YAAoC1Z,GAAOuZ,EAAKI,YAAhD,YAA+DJ,EAAKK,ecwF5BC,CAAwBN,GAC1CO,EAAsBpsD,EAAI+rD,GACnB,MAAPK,IACAA,EAAM,CACFP,KAAMA,EACNQ,IAAKN,EACL33D,QAAS,IAEb4L,EAAI+rD,GAAmBK,EACvBV,EAAgBlqD,KAAK4qD,IAEzBA,EAAIh4D,QAAQoN,KAAK,CAACvN,OAAQA,EAAQ05C,UAAWf,WAQzD3vC,KAAKotD,iBAAiBriC,QACtB/qB,KAAKqtD,kBAAkBtiC,QAEvB,IAAIhN,EAAO/d,KAEXA,KAAKotD,iBAAiBtjB,OAAOqO,GAAQ,GAAI,qBAAsB,gBAG/DsW,EAAgBvS,MAAK,SAACt0C,EAAGu0C,GACrB,OAAIv0C,EAAEgnD,KAAKK,eAAiB9S,EAAEyS,KAAKK,eAAuB3iD,KAAKiE,KAAK3I,EAAEgnD,KAAKK,cAAgB9S,EAAEyS,KAAKK,eAC9FrnD,EAAEgnD,KAAKI,YAAc7S,EAAEyS,KAAKI,YAAoB1iD,KAAKiE,KAAK3I,EAAEgnD,KAAKI,WAAa7S,EAAEyS,KAAKI,YACrFpnD,EAAEgnD,KAAKG,WAAa5S,EAAEyS,KAAKG,WAAmBziD,KAAKiE,KAAK3I,EAAEgnD,KAAKG,UAAY5S,EAAEyS,KAAKG,WAC/E,KAGX,IAAI72B,GAAiB,EAErBu2B,EAAgB18C,SAAQ,SAAAo9C,GAEpBA,EAAIh4D,QAAQ+kD,MAAK,SAAChZ,EAAImsB,GAAL,OAAYnsB,EAAGlsC,OAAO8qC,KAAKtqC,KAAKwa,cAAcq9C,EAAGr4D,OAAO8qC,KAAKtqC,SAE9E,IAAIglD,EAAOrE,GAAQ,GAAI,kBAAmBgX,EAAIC,KAC9C,EAAKhC,iBAAiBtjB,OAAO0S,GAE7BA,EAAKnQ,GAAG,SAAS,SAAC50B,GACd,EAAK21C,iBAAiB18B,KAAK,oBAAoBya,YAAY,aAC3DqR,EAAKtR,SAAS,aACdntB,EAAKu9B,OAAO6T,MAGZj3B,IACAA,GAAQ,EACRskB,EAAKtR,SAAS,aACdntB,EAAKu9B,OAAO6T,SApJ5B,6BA2JWA,GACHnvD,KAAKqtD,kBAAkBtiC,QACvB/qB,KAAKqtD,kBAAkBvjB,OAAOqO,GAAQ,GAAI,qBAAsB,wBAChE,IAAIp6B,EAAO/d,KACXmvD,EAAIh4D,QAAQ4a,SAAQ,SAAAu9C,GAChB,IAAI9S,EAAOhS,OAAO,qGAAD,OACP8kB,EAAoB5e,UAAUl5C,KADvB,+EAEP83D,EAAoBt4D,OAAO8qC,KAAKtqC,KAFzB,4BAEiD83D,EAAoBt4D,OAAO8qC,KAAK6sB,eAFjF,aAGjB5wC,EAAKsvC,kBAAkBvjB,OAAO0S,GAC9BA,EAAKnQ,GAAG,SAAS,WACTtuB,EAAK4W,KAAKoa,gBAAgBwgB,mBAAmBD,EAAoB5e,WAAW,GAC5E3yB,EAAK4W,KAAKoa,gBAAgB2b,gBAAgB4E,EAAoBt4D,QAC9D+mB,EAAK4W,KAAKoa,gBAAgBoD,cAAcmJ,OAAOgU,EAAoBt4D,QAAQ,c,6BAvK/F,K,uKCNO,IAAM,GAAb,WAOI,WAAoB29B,EAAuBywB,EAAwC2F,I,4FAA6B,SAA5F,KAAAp2B,OAAuB,KAAAywB,aAAwC,KAAA2F,WAE3E/qD,KAAKolD,WAAW10B,KAAK,yBAAyB1uB,OAAS,IACvDhC,KAAKwvD,eAAiB,IAAI,GAAe76B,EAAMywB,IAG/CplD,KAAKolD,WAAW10B,KAAK,mCAAmC1uB,OAAS,EACjEhC,KAAK4oC,QAAU,IAAI,GAAUjU,EAAMywB,GAEnCplD,KAAK4oC,QAAU,IAAI,GAAUjU,EAAM,MAGnC30B,KAAKolD,WAAW10B,KAAK,0CAA0C1uB,OAAS,IACxEhC,KAAKyvD,gBAAkB,IAAI,GAAsB96B,EAAMywB,IAG3DplD,KAAKslC,aAAe,IAAI,GAAa3Q,EAAMywB,EAAY2F,G,UAvB/D,O,EAAA,G,EAAA,iCA2BQpT,GAAS33C,KAAKolD,YACa,MAAvBplD,KAAKwvD,gBAAwBxvD,KAAKwvD,eAAeE,UACjC,MAAhB1vD,KAAK4oC,SAAiB5oC,KAAK4oC,QAAQ8mB,UACZ,MAAxB1vD,KAAKyvD,iBAAyBzvD,KAAKyvD,gBAAgBC,UAEtD1vD,KAAKolD,WAAW10B,KAAK,YAAYqjB,WAAW7b,QAAQ8f,QAAQ,SAE5D,IAAIj6B,EAAO/d,KACXwqC,OAAO,gBAAgB6B,GAAG,UAAU,WAChCtuB,EAAK4xC,oCApCjB,qD,MA0CY3yB,EAAch9B,KAAK20B,KAAK6N,iBAC5B,GAAIxF,EAAYokB,OAASC,GAAiBgD,SAAWrnB,EAAYokB,OAASC,GAAiBC,OAAQ,CAC/F,IAAItqD,EAAmC,QAA7B,EAAGgmC,EAAYje,sBAAc,eAAE/nB,OACzCgJ,KAAK4vD,uBAAuB,KAAM54D,MA7C9C,6CAiD2Bq7C,EAA6Br7C,GACrB,MAAvBgJ,KAAKwvD,gBAAwBxvD,KAAKwvD,eAAeI,uBAAuBvd,EAAkBr7C,KAlDtG,wCAwDQwzC,OAAO,0BAA0BoE,IAAI,aAAc,WACnD,IAAIoH,EAAeC,OAAOC,aAAe,UAAY,QACrD1L,OAAO,0BAA0BwN,QAAQhC,EAAe,UA1DhE,wCAgEQxL,OAAO,0BAA0BoE,IAAI,aAAc,UACnD,IAAIoH,EAAeC,OAAOC,aAAe,UAAY,QACrD1L,OAAO,mBAAmBuJ,WAAW7b,QAAQ8f,QAAQhC,EAAe,a,6BAlE5E,K,uKCFO,IAAM,GAAb,WAMI,WAAoBrhB,I,4FAAc,SAAd,KAAAA,OAFb,KAAAk7B,kBAA8B,CAAC,IAAK,+DAAgE,KAK3G,KAAA33B,OAAiB,E,UATrB,O,EAAA,G,EAAA,8CAU2BjhB,EAAiCzS,EAA2BsrD,EAA6C14C,GAA+B,I,cAAA,OAE3J2zB,YAAW,WAEP,IAAInlC,EAAK,EAAK+uB,KAAK2vB,kBAAkByL,gBAAgB,+BAA+BC,OAChF,EAAK93B,QACLtyB,EAAGqqD,gBACH,EAAK/3B,OAAQ,KAMlB,KAEH,IAAIg4B,EAAwD,QAA5C,EAAoC,QAApC,EAA2B,QAA3B,EAAGlwD,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,eAAE1wB,cAAM,eAAEwwC,WAC9D1oD,KAAKmwD,UAAYl5C,GAASi5C,EAE1B,IAAIE,EAAen5C,GAASjX,KAAK20B,KAAK2vB,kBAAkBoE,WAExD,GAAM1oD,KAAKmwD,WAAaC,EAAxB,CAEA,IAAIp5D,EAAiBgJ,KAAKmwD,UAA6C,QAAlC,EAAyB,QAAzB,EAACnwD,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,eAAEmZ,SAAS/qD,OAC9EgJ,KAAK20B,KAAK2R,sBAAsB+pB,uBAAuBp5C,GAE3D,GAAc,MAAVjgB,EACA,OAAO,KAGX,GAAIgJ,KAAKswD,gBAAgBt5D,EAAQwN,GAAW,OAAO,KAEnD,IAAI+rD,EAAoBt5C,EAAMu5C,gBAAgB,CAAE54C,gBAAiB,EAAGE,YAAa,EAAGH,cAAenT,EAASukD,WAAYlxC,UAAWrT,EAAS2F,SACxIsmD,EAAoBx5C,EAAMu5C,gBAAgB,CAAE54C,gBAAiBpT,EAASukD,WAAYjxC,YAAatT,EAAS2F,OAAQwN,cAAenT,EAASukD,WAAa,EAAGlxC,UAAW,IAEvK,GAAgC,KAA5Bi4C,EAAQY,iBAAyB,CAEjC,GAAgB,MADDH,EAAkBl/C,MAAM,aAEnC,OAAOrR,KAAK2wD,2BAA2B35D,GAG3C,GAAkB,MADDu5D,EAAkBl/C,MAAM,8CACjB,CAKpB,IAHA,IACIu/C,EAAa,EACbC,EAAe,EACV55D,EAHQs5D,EAAkBh+C,YAAY,SAGtBtb,EAAIs5D,EAAkBvuD,OAAQ/K,IAEnD,OADQs5D,EAAkBn/C,OAAOna,IAE7B,IAAK,IAAK25D,IAAc,MACxB,IAAK,IAAKC,IAIlB,OAAO7wD,KAAK8wD,6BAA6B95D,EAAQ45D,EAAaC,EAAcJ,GAEhF,OAAO,KAGX,IAAIM,EAAUN,EAAkBp/C,MAAM,sBAClCjJ,EAAkC,GACvB,MAAX2oD,GAAmBA,EAAQ/uD,OAAS,IACpCoG,EAAkC2oD,EAAQ,IAG9C,IAAIvuD,EAA0B4F,EAAgC+J,SAAS,KAGnE6+C,EAAWT,EAAkBl/C,MAAM,yBACvB,MAAZ2/C,IACIhxD,KAAKmwD,UAC4B,QAAjC,EAAwB,QAAxB,EAAAnwD,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAE6f,iBAEnCzoD,KAAK20B,KAAK8zB,kBAIlB,IAAIhqC,EAAcze,KAAKmwD,UAAYnwD,KAAK20B,KAAKwtB,cAAclB,gBAAkBjqD,EAAO0pD,0BAA0Bl8C,EAASukD,WAAYvkD,EAAS2F,QACxI+R,EAA8B,MAAfuC,EAAsB,KAAOA,EAAYvC,aAG5D,GAAgB,MAAZ80C,EACA,OAAOhxD,KAAKixD,2BAA2BD,EAAUxsD,EAAUxN,EACvDoR,EAAiC8T,EAAc1Z,GAGvD,IAAI0uD,EAAkBX,EAAkBl/C,MAAM,iCAM9C,OAJuB,MAAnB6/C,IACAA,EAAkBX,EAAkBl/C,MAAM,qBAGvB,MAAnB6/C,EAEOlxD,KAAKmxD,mCAAmCD,EAAiB1sD,EAAUxN,EACtEoR,EAAiC8T,EAAc1Z,EAAyBic,QAHhF,KArGR,sCA+GoBznB,EAAgBwN,GAE5B,IAAIkP,EAAY1c,EAAO0c,UACvB,GAAiB,MAAbA,GAAyC,GAApBA,EAAU1R,OAAa,OAAO,EAQvD,IANA,IAEI8R,EAFAs9C,EAAS,EACTC,EAAS39C,EAAU1R,OAAS,EAG5BsvD,EAAW,MAEF,CAIT,GAHax9C,IACbA,EAAMxH,KAAK+5B,OAAOgrB,EAASD,GAAU,IAElB,OAAO,EAG1B,GAAgB,KADhBE,EACmB,OAAO,EAE1B,IAAIn5D,EAAIub,EAAUI,GACd/a,EAAIZ,EAAEqM,SAEV,GAAIzL,EAAEmR,KAAO1F,EAASukD,YAAchwD,EAAEmR,MAAQ1F,EAASukD,YAAchwD,EAAEoR,OAASpR,EAAEiJ,OAASwC,EAAS2F,OAChGinD,EAASt9C,MADb,CAKA,KAAI/a,EAAEmR,KAAO1F,EAASukD,YAAchwD,EAAEmR,MAAQ1F,EAASukD,YAAchwD,EAAEoR,OAAS3F,EAAS2F,QAKzF,OAAOhS,EAAEsc,IAAMxb,EAAUM,eAJrB83D,EAASv9C,MA5IzB,iDAsJ+B9c,GACvB,IAAI0lB,EAAqD,GAEzDA,EAAkBA,EAAgBxU,OAAOlI,KAAK20B,KAAK2R,sBAAsB9nB,YAAY+yC,uBAAuBv6D,OAAQiS,IAEpH,IAAK,IAAIhS,EAAI,EAAGA,EAAIylB,EAAgB1a,OAAQ/K,IAAK,CAC7C,IAAIu6D,EAAO90C,EAAgBzlB,GACvBu6D,EAAKC,OAAOpgD,MAAM,aAClBqL,EAAgB3E,OAAO9gB,EAAG,GAC1BA,MAGAu6D,EAAI,QACJA,EAAKzoD,YAAc,SAEnByoD,EAAKzoD,YAAc,OAEvByoD,EAAK9nD,gBAAkBf,OAAOC,UAAUe,6BAA6BC,gBACrE4nD,EAAKloD,QAAU,CACX1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,KAKnB,OAAO+N,QAAQC,QAAQ,CACnBk6C,YAAah1C,MAjLzB,mDAqLiC1lB,EAAgB26D,EAA2ClB,GACpF,IAAI/zC,EAAqD,GAErDk1C,EAAgCnB,EAAkBoB,WAAWz/C,WAAW,KAyC5E,OAvCAsK,EAAkBA,EAAgBxU,OAAO,CACrC,CACI7F,MAAO,UACP0G,WAAY,cAAgB4oD,GAAoCC,EAAuB,GAAK,eAC5FH,OAAQ,mBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,EACPK,QAAS,CACL1H,GAAI,+BACJ2H,MAAO,MACPC,UAAW,KAGnB,CACInH,MAAO,aACP0G,WAAY,iBAAmB4oD,GAAoCC,EAAuB,GAAK,eAC/FH,OAAQ,sBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,EACPK,QAAS,CACL1H,GAAI,+BACJ2H,MAAO,MACPC,UAAW,KAGnB,CACInH,MAAO,KACP0G,WAAY,aACZ0oD,OAAQ,eACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,KAMRsO,QAAQC,QAAQ,CACnBk6C,YAAah1C,MAlOzB,yDAsOuCw0C,EAAmC1sD,EAA2BxN,EAAgBoR,EAAyC8T,EACtJ1Z,EAAkCic,G,MAC9B7I,EAAOs7C,EAAgB,GAEvB7oD,EACJ,CACIuP,gBAAiBpT,EAASukD,WAAYjxC,YAAatT,EAAS2F,OAASyL,EAAK5T,OAC1E2V,cAAenT,EAASukD,WAAYlxC,UAAWrT,EAAS2F,OAAS/B,EAAgCpG,QAKjG0a,EAAqD,GAezD,GAbiC,OAA7B+B,aAAW,EAAXA,EAAavC,eAA+C,OAAvBuC,aAAW,EAAXA,EAAa/c,SAAkB+c,EAAYvC,wBAAwB,IACxGQ,EAAkBA,EAAgBxU,OAAOlI,KAAK8xD,gCAAgCrzC,EAAYvC,gBAG3E,MAAfuC,IACA/B,EAAkBA,EAAgBxU,OAAOuW,EAAY5B,gCAAgCxU,GAAgBtF,KAAI,SAAAk8B,GAErG,OADAA,EAAG8yB,SAAW,MAAQ9yB,EAAG58B,MAClB48B,OAIfviB,EAAkBA,EAAgBxU,OAAOlI,KAAK20B,KAAK2R,sBAAsB9nB,YAAY+yC,uBAAuBv6D,EAAQqR,IAEhG,MAAhB6T,GAA+C,OAAvBuC,aAAW,EAAXA,EAAa/c,SACrCgb,EAAkBA,EAAgBxU,OAC9BgU,EAAarS,mBAAmB9F,EAAWoJ,QAAS3K,EAAyB4F,EAAiCC,EAAgBoW,EAAY/c,QACrIqB,KAAI,SAAAk8B,GAED,OADAA,EAAG8yB,SAAW,KAAO9yB,EAAG58B,MACjB48B,OAGH16B,KACZ,CACIlC,MAAO,QACPgH,WAAY,QACZN,WAAY,SACZ0oD,OAAQ,yCACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,EACPK,QAAS,CACL1H,GAAI,+BACJ2H,MAAO,MACPC,UAAW,UAIpB,CAEH,IAAIhS,EAAkB,QAAd,EAAGR,EAAO8qC,YAAI,eAAEtqC,KACxB,GAAY,MAARA,EAAc,CACVA,EAAK2a,SAAS,WAAU3a,EAAOA,EAAKygB,OAAO,EAAGzgB,EAAK4N,QAAQ,WAC/D,IAAI/N,EAAIG,EAAK6Z,MAAM,mBACsB,GAArCra,EAAOyoB,oBAAoBzd,QAAoB,MAAL3K,GAAaA,EAAE2K,OAAS,GAAK3K,EAAE,IAAMG,GAAQA,EAAKwK,OAAS,IACrGxK,EAAOA,EAAK4Z,OAAO,GAAGwyB,cAAgBpsC,EAAK6a,UAAU,GACrDqK,EAAgBnY,KAAK,CACjBlC,MAAO,SAAW7K,EAClB6R,WAAY,QACZN,WAAY,aAAevR,EAAO,iBAClCi6D,OAAQ,yBAA2Bj6D,EACnCkS,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,MAYvB,OALAyT,EAAkBA,EAAgBxU,OAAOlI,KAAKgyD,qBAAqBvzC,IAK5DlH,QAAQC,QAAQ,CACnBk6C,YAAah1C,MArTzB,iDAyT+Bs0C,EAA4BxsD,EAA2BxN,EAC9EoR,EAAyC8T,EACzC1Z,GACA,IAAIyvD,EAAejB,EAAS,GACxBkB,EAAY1tD,EAAS2F,OAAS8nD,EAAajwD,OAAS,EACpDmwD,EAAUn7D,EAAOo7D,kBAAkB5tD,EAASukD,WAAYmJ,GACxD7pD,EACJ,CACIuP,gBAAiBpT,EAASukD,WAAYjxC,YAAatT,EAAS2F,OAAS8nD,EAAajwD,OAClF2V,cAAenT,EAASukD,WAAYlxC,UAAWrT,EAAS2F,OAAS/B,EAAgCpG,QAGrG,GAAe,MAAXmwD,EAAiB,OAAO,KAVI,IAY1B/xD,EAAmB+xD,EAAnB/xD,KAAMQ,EAAauxD,EAAbvxD,SAMZ,GAAIR,aAAgB,EAAO,CAEvB,IAAI+H,EAAiB4G,EAAkB3O,EAAM8b,GAE7C,OAAItb,EACO2W,QAAQC,QAAQ,CACnBk6C,YAAatxD,EAAKwG,YAAYiD,mBAAmB1B,EAAgB3F,EAC7D4F,EAAiCC,KAGlCkP,QAAQC,QAAQ,CACnBk6C,YAAatxD,EAAKyJ,mBAAmB1B,EAAgB3F,EACjD4F,EAAiCC,EAAgB,QAKjE,OAAIjI,aAAgB,EACTmX,QAAQC,QAAQ,CACnBk6C,YAAatxD,EAAKyJ,mBAAmBrH,EACjC4F,EAAiCC,KAIzCjI,aAAgB,EACTmX,QAAQC,QAAQ,CACnBk6C,YAAa,CACT,CACIrvD,MAAO,SACPgH,WAAY,SACZX,KAAMC,OAAOC,UAAUC,mBAAmBC,MAC1CC,WAAY,SACZC,MAAOX,EACPtI,cAAe,CACX7H,MAAO,sCAOpB,OAtXf,2CAyXyBumB,GACjB,IAAI4zC,EAA4D,GA4NhE,OA3NKryD,KAAKmwD,WAA2C,OAA7B1xC,aAAW,EAAXA,EAAavC,eAA+C,OAAvBuC,aAAW,EAAXA,EAAa/c,UACtE2wD,EAAyBA,EAAuBnqD,OAAO,CACnD,CACI7F,MAAO,gCACPovD,OAAQ,qBACRpoD,WAAY,QAEZN,WAAY,sBACZO,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfE,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,UAEP0G,WAAY,gCACZ0oD,OAAQ,mBACRpoD,WAAY,MAMZK,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,gCAEP0G,WAAY,4DACZ0oD,OAAQ,oBACRpoD,WAAY,MAMZK,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,oBAEP0G,WAAY,wGACZ0oD,OAAQ,mBACRpoD,WAAY,SACZC,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfE,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,SAEP0G,WAAY,mBACZ0oD,OAAQ,YACRpoD,WAAY,KACZC,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfE,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,iBACP0G,WAAY,oCACZ0oD,OAAQ,wBACRpoD,WAAY,KACZC,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfE,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,MAGc,OAA7BwV,aAAW,EAAXA,EAAavC,eAA+C,OAAvBuC,aAAW,EAAXA,EAAa/c,UAElD2wD,EAAyBA,EAAuBnqD,OAAO,CACnD,CACI7F,MAAO,aACP0G,WAAY,gBACZ0oD,OAAQ,sBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,QACP0G,WAAY,eACZ0oD,OAAQ,mDACRnoD,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfE,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,UACP0G,WAAY,iBACZ0oD,OAAQ,qEACRnoD,QAAS,CACL1H,GAAI,sCACJ2H,MAAO,MACPC,UAAW,IAEfE,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,MAMdjJ,KAAKmwD,WAA6B,MAAf1xC,GAAmD,MAA5BA,EAAYvC,aAsB/Clc,KAAKmwD,WAAoC,OAAvB1xC,aAAW,EAAXA,EAAa/c,UACvC2wD,EAAyBA,EAAuBnqD,OAAO,CACnD,CACI7F,MAAO,SACPgH,WAAY,SACZN,WAAY,UACZ0oD,OAAQ,uBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,yBACPgH,WAAY,SACZN,WAAY,gEACZ0oD,OAAQ,qBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,YACPgH,WAAY,YACZN,WAAY,aACZ0oD,OAAQ,0BACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,SACPgH,WAAY,SACZN,WAAY,UACZ0oD,OAAQ,uBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,UACPgH,WAAY,UACZN,WAAY,WACZ0oD,OAAQ,wBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,MAlEfopD,EAAyBA,EAAuBnqD,OAAO,CACnD,CACI7F,MAAO,QACPgH,WAAY,QACZN,WAAY,qCACZ0oD,OAAQ,oBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,GAEX,CACI5G,MAAO,eACPgH,WAAY,eACZN,WAAY,4CACZ0oD,OAAQ,gCACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,KAsDA,MAAfwV,GAA6C,MAAtBA,EAAY/c,SACnC2wD,EAAyBA,EAAuBnqD,OAAO,CACnD,CACI7F,MAAO,SACPgH,WAAY,SACZN,WAAY,SACZ0oD,OAAQ,uBACR/nD,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,MAKZopD,IAtlBf,sDA0lBoCn2C,GAM5B,IAJA,IAAIm2C,EAA4D,GAE5D7rD,EAAoB,GACpBlP,EAAI4kB,EAAapY,UACT,MAALxM,GACHkP,EAAUA,EAAQ0B,OAAO5Q,EAAEkP,QAAQqE,QAAO,SAACxT,GACvC,SAAIA,EAAE8J,YAA4B,MAAb9J,EAAEoK,SAA+B,MAAZpK,EAAEmK,YAKhDlK,EAAIA,EAAEwM,UAbqC,2BAgB/C,YAAcoY,EAAa7V,WAA3B,+CAAuC,KAA9BpP,EAA8B,QACnCuP,EAAUA,EAAQ0B,OAAOjR,EAAEiS,eAjBgB,6GAoB/C,YAAc1C,EAAd,+CAAuB,KAAdnP,EAAc,QAEfi7D,GAAqB,EAFN,uBAGnB,YAAep2C,EAAa1V,QAA5B,+CACI,GADiC,QAC1B7E,WAAatK,EAAEsK,UAAW,CAC7B2wD,GAAqB,EACrB,OANW,kFAUnB,IAAIA,EAAJ,CAEA,IAAIjwD,GAAiBhL,EAAE8J,WAAa,aAAe,aAAe9J,EAAE+R,qBAChEC,EAAahS,EAAE8B,WACf4P,EAAahF,EAAW1M,EAAEwJ,YAAc,KAA4B,MAArBxJ,EAAEgtB,gBAA0B,OAAShtB,EAAEgtB,gBAAgBlrB,YAAc,IACxH4P,GAAc1R,EAAE8B,WAAa,IAC7B,IAAK,IAAI,EAAI,EAAG,EAAI9B,EAAE6rB,mBAAmBrhB,WAAWG,OAAQ,IAAK,CAC7D,IAAIjJ,EAAI1B,EAAE6rB,mBAAmBrhB,WAAW,GACxCkH,GAAc1R,EAAEoX,iBAAiB,GAAGtV,WAAa,IAAMJ,EAAEI,WACrD,EAAI9B,EAAEiX,oBAAsB,IAC5BvF,GAAc,MAGtBA,GAAc,eAEdspD,EAAuB9tD,KACnB,CACIlC,MAAOA,EACPovD,QAASp6D,EAAE8J,WAAa,iBAAmB,iBAAmB,eAAiBkB,EAAQ,oBACvFgH,WAAYA,EACZN,WAAYA,EACZW,gBAAiBf,OAAOC,UAAUe,6BAA6BC,gBAC/DlB,KAAMC,OAAOC,UAAUC,mBAAmB8T,QAC1C3T,WAAOC,MArD4B,kFA2D/C,OAAOopD,O,6BArpBf,KCJM,SAAUE,GAAuB3hC,GACQ,IAA3C6kB,EAA2C,uDAA1B,GAAI+c,EAAsB,wDAE3C,GAAI5hC,aAAmB,EAAO,CAE1B,GAAIA,EAAQzqB,eACR,OAAOssD,GAA2B7hC,GAGtC,IAAI53B,EAAI,GA2BR,GAzB6B,MAAzB43B,EAAQ7wB,eAAkD,IAAzB6wB,EAAQ7wB,gBACtC6wB,EAAQ7wB,cAAcqS,WAAW,MAChCpZ,IAAMy8C,EAAS7kB,EAAQ7wB,eAAe+J,QAAQ,MAAO,KAAO2rC,GAAU,KAGtEz8C,GAAKw8C,GAAuB5kB,EAAQ7wB,cAAe01C,GAAU,MAI3C,MAAtB7kB,EAAQ/vB,aAAoB7H,GAAK+K,EAAW6sB,EAAQ/vB,YAAc,KAClE+vB,EAAQzvB,aAAYnI,GAAK,aAC7BA,GAAK,SAAW43B,EAAQz3B,WAAa,IAEjCy3B,EAAQ1qB,cAAclE,OAAS,IAC/BhJ,GAAK05D,GAA8B9hC,IAId,MAArBA,EAAQ9sB,WAAqD,UAAhC8sB,EAAQ9sB,UAAU3K,aAC/CH,GAAK,WAAa43B,EAAQ9sB,UAAU3K,WAAa,IAC7Cy3B,EAAQ9sB,UAAUoC,cAAclE,OAAS,IACzChJ,GAAK05D,GAA8B9hC,EAAQ9sB,aAIzB,MAAtB8sB,EAAQvqB,YAAsBuqB,EAAQvqB,WAAWrE,OAAS,EAAG,CAC7DhJ,GAAK,cACL,IAAK,IAAI/B,EAAI,EAAGA,EAAI25B,EAAQvqB,WAAWrE,OAAQ/K,IAC3C+B,GAAK43B,EAAQvqB,WAAWpP,GAAGkC,WACvBy3B,EAAQvqB,WAAWpP,GAAGiP,cAAclE,OAAS,IAC7ChJ,GAAK05D,GAA8B9hC,EAAQvqB,WAAWpP,KAEtDA,EAAI25B,EAAQvqB,WAAWrE,OAAS,IAChChJ,GAAK,MAKjB,GAAIw5D,EAAO,OAAOx5D,EAElBA,GAAKy8C,EAAS,QAhDY,2BAkD1B,YAAc7kB,EAAQpoB,cAAczE,EAAWgH,WAA/C,+CAA2D,KAAlD,EAAkD,QACvD/R,GAAKy8C,EAAS,KAAO8c,GAAuB,EAAG,MAAQ,OAnDjC,kFAsD1B,GAA2B,MAAvB3hC,EAAQhqB,YAAqB,4BAC7B,YAAcgqB,EAAQhqB,YAAY4B,cAAczE,EAAWgH,WAA3D,+CAAuE,KAA9DnD,EAA8D,QACnE5O,GAAKy8C,EAAS,KAAO8c,GAAuB3qD,EAAG,MAAQ,OAF9B,mFAtDP,2BA4D1B,YAAcgpB,EAAQ1nB,WAAWnF,EAAWgH,WAA5C,+CAAwD,KAA/C,EAA+C,QACpD/R,GAAKy8C,EAAS,KAAO8c,GAAuB,EAAG,MAAQ,OA7DjC,kFAgE1B,GAA2B,MAAvB3hC,EAAQhqB,YAAqB,4BAC7B,YAAcgqB,EAAQhqB,YAAYsC,WAAWnF,EAAWgH,WAAxD,+CAAoE,KAA3D1T,EAA2D,QAChE2B,GAAKy8C,EAAS,KAAO8c,GAAuBl7D,EAAG,MAAQ,OAF9B,mFASjC,OAFA2B,GAAK,MAMT,GAAI43B,aAAmB,EAAW,CAE9B,IAAI+hC,EAAO,GAgBX,GAd6B,MAAzB/hC,EAAQ7wB,eAAkD,IAAzB6wB,EAAQ7wB,eAAwByyD,IAC9D5hC,EAAQ7wB,cAAcqS,WAAW,MAChCugD,IAASld,EAAS7kB,EAAQ7wB,eAAe+J,QAAQ,MAAO,KAAO2rC,GAAU,KAEzEkd,GAAQnd,GAAuB5kB,EAAQ7wB,cAAe01C,GAAU,MAIxEkd,GAAQld,EAAS,aAAe7kB,EAAQz3B,WAEpCy3B,EAAQ1qB,cAAclE,OAAS,IAC/B2wD,GAAQD,GAA8B9hC,IAGnB,MAAnBA,EAAQhjB,SAAmBgjB,EAAQhjB,QAAQ5L,OAAS,EAAG,CACvD2wD,GAAQ,WACR,IAAK,IAAI,EAAI,EAAG,EAAI/hC,EAAQhjB,QAAQ5L,OAAQ,IACxC2wD,GAAQ/hC,EAAQhjB,QAAQ,GAAGzU,WACvBy3B,EAAQhjB,QAAQ,GAAG1H,cAAclE,OAAS,IAC1C2wD,GAAQD,GAA8B9hC,EAAQhjB,QAAQ,KAEtD,EAAIgjB,EAAQhjB,QAAQ5L,OAAS,IAC7B2wD,GAAQ,MAKpB,IAAKH,EAAO,CAERG,GAAQ,MAFA,2BAIR,YAAc/hC,EAAQ1nB,aAAtB,+CAAoC,KAA3B,EAA2B,QAChCypD,GAAQld,EAAS,KAAO8c,GAAuB,EAAG,MAAQ,OALtD,kFAQRI,GAAQ,MAGZ,OAAOA,EAIX,GAAI/hC,aAAmBlwB,EAAW,CAC9B,IAAI,EAAI,GAkBR,OAhB6B,MAAzBkwB,EAAQ7wB,eAAkD,IAAzB6wB,EAAQ7wB,eAAwByyD,IAC9D5hC,EAAQ7wB,cAAcqS,WAAW,MAChC,GAAKqjC,EAAS7kB,EAAQ7wB,cAAc+J,QAAQ,MAAO,KAAO2rC,GAAU,KAEpE,GAAKD,GAAuB5kB,EAAQ7wB,cAAe01C,GAAU,MAIrE,GAAKA,EAEqB,MAAtB7kB,EAAQ/vB,aAAoB,GAAKkD,EAAW6sB,EAAQ/vB,YAAc,KAElE+vB,EAAQhwB,WAAU,GAAK,WAE3B,GAAK,GAAkBgwB,EAAQxwB,MAAQ,IAAMwwB,EAAQz3B,WAKzD,GAAIy3B,aAAmB7vB,EAAQ,CAE3B,IAAI,EAAI,GAEqB,MAAzB6vB,EAAQ7wB,eAAkD,IAAzB6wB,EAAQ7wB,eAAwByyD,IAC9D5hC,EAAQ7wB,cAAcqS,WAAW,MAChC,GAAKqjC,EAAS7kB,EAAQ7wB,cAAc+J,QAAQ,MAAO,KAAO2rC,GAAU,KAEpE,GAAKD,GAAuB5kB,EAAQ7wB,cAAe01C,GAAU,MAIrE,GAAKA,EAEqB,MAAtB7kB,EAAQ/vB,aAAoB,GAAKkD,EAAW6sB,EAAQ/vB,YAAc,KAElE+vB,EAAQhwB,WAAU,GAAK,WAEI,MAA3BgwB,EAAQvM,gBACR,GAAK,GAAkBuM,EAAQvM,iBAAmB,IAElD,GAAKuM,EAAQxvB,cAAgB,GAAK,QAGtC,GAAKwvB,EAAQz3B,WAAa,IAG1B,IADA,IAAI0I,EAAa+uB,EAAQ1N,mBAAmBrhB,WACnC,EAAI,EAAG,EAAIA,EAAWG,OAAQ,IAAK,CAExC,IAAIjJ,EAAI8I,EAAW,GACfzB,EAAawwB,EAAQniB,iBAAiB,GAEtC1V,EAAEoJ,aACF/B,EAAmBA,EAAMmC,aAG7B,GAAK,GAAkBnC,IAASrH,EAAEoJ,WAAa,MAAQ,IAAM,IAAMpJ,EAAEI,WAEjE,EAAI0I,EAAWG,OAAS,IACxB,GAAK,MAOb,OAFA,GAAK,IAOT,MAAO,GAGX,SAASywD,GAA2B7hC,GAChC,IAAI53B,EAAY43B,EAAQz3B,WAGxB,GADIy3B,EAAQ1pB,sBAAwB,KAAYlO,GAAK,YAAc,GAAkB43B,EAAQ1pB,uBACzF0pB,EAAQvqB,WAAWrE,OAAS,EAAG,CAC/B,IAAI4wD,EAAWhiC,EAAQvqB,WAAWwE,QAAO,SAAA82B,GAAI,OAAI/Q,EAAQ1pB,qBAAqBb,WAAWjB,QAAQu8B,GAAQ,KACpG5+B,KAAI,SAAA4+B,GAAI,OAAI,GAAkBA,MAAO1+B,KAAK,MAC/B,IAAZ2vD,IACA55D,GAAK,eAAiB45D,GAI9B,OAAO55D,EAGL,SAAU,GAAkBoH,G,QAC9B,IAAIA,aAAgB,GAASA,aAAgB,IACrCA,EAAK8F,cAAclE,OAAS,EAAG,CAC/B,IAAIhJ,GAAaoH,EAAI,eAAsBA,EAAKjH,WAAa,aAAuC,QAA5B,EAAGiH,EAAK8G,4BAAoB,eAAE/N,YAAciH,EAAKjH,YACnH,IAEN,OADAH,GAAKoH,EAAK8F,cAAcnD,KAAI,SAAAC,GAAE,OAAI,GAAkBA,EAAG5C,SAAO6C,KAAK,OACxD,IAInB,OAAO7C,EAAI,eAAsBA,EAAKjH,WAAa,aAA0C,QAA/B,EAAGiH,EAAI,4BAAwB,eAAEjH,YAAciH,EAAKjH,WAGhH,SAAUu5D,GAA8B9hC,GAE1C,IAAI53B,EAAY,GAEhB,GAAI43B,EAAQ1qB,cAAclE,OAAS,EAAG,CAClChJ,EAAI,IAEJ,IAAIwrB,EAAqB,GAHS,uBAIlC,IAJkC,IAIlC,EAJkC,iBAIzBxhB,EAJyB,QAK1B7K,EAAY6K,EAAG5C,KAAKjH,WACpB8N,EAAWjE,EAAG5C,KAIlB,GAH8B,MAA1B6G,EAAEC,sBAAqE,UAArCD,EAAEC,qBAAqB/N,aACzDhB,GAAK,YAAc8O,EAAEC,qBAAqB/N,YAE1B,MAAhB8N,EAAEZ,WAAoB,CAEtB,IAAIusD,EAAW3rD,EAAEZ,WACa,MAA1BY,EAAEC,uBACF0rD,EAAWA,EAAS/nD,QAAO,SAAA82B,GAAI,OAAI16B,EAAEC,qBAAqBb,WAAWjB,QAAQu8B,GAAQ,MAJnE,2BAOtB,YAAeixB,EAAf,+CAAyB,CACrBz6D,GAAK,MADgB,QACLgB,YARE,mFAW1BqrB,EAASjgB,KAAKpM,IAjBlB,EAAey4B,EAAQ1qB,cAAvB,+CAAsC,IAJJ,kFAwBlClN,GAAKwrB,EAASvhB,KAAK,MACnBjK,GAAK,KAGT,OAAOA,E,uKChQJ,IAAM,GAAb,WAKI,WAAoB27B,I,4FAAc,SAAd,KAAAA,OAHpB,KAAAk+B,+BAAqD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/E,KAAAC,iCAAuD,G,UAH3D,O,EAAA,G,EAAA,4CAQyB77C,EAAiCzS,EAClD4S,EACA04C,GAA8C,I,MAAA,OAG1CK,EAAal5C,IAAkD,QAA7C,EAAqC,QAArC,EAA4B,QAA5B,EAAIjX,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,eAAE1wB,cAAM,eAAEwwC,YAErE,GAAKyH,GAAal5C,GAASjX,KAAK20B,KAAK2vB,kBAAkBoE,WAAvD,CAIA,IAAI3qC,EAAO/d,KAEX,OAAO,IAAIuX,SAAQ,SAACC,EAASu7C,GAEzBhoB,YAAW,W,QAEHolB,EACiC,QAAjC,EAAwB,QAAxB,IAAKx7B,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAE6f,iBAEnC,EAAK9zB,KAAK8zB,iBAGdjxC,EAAQuG,EAAKi1C,0BAA0B/7C,EAAOzS,EAAU4S,EAAO04C,MAEhE,WAjCf,gDAwC8B74C,EAAiCzS,EACvD4S,EACA04C,G,QAKI94D,EAFaigB,GAASjX,KAAK20B,KAAK2vB,kBAAkBoE,WAEY,QAAlC,EAAyB,QAAzB,EAAC1oD,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,eAAEmZ,SAAS/qD,OACzEgJ,KAAK20B,KAAK2R,sBAAsB+pB,uBAAuBp5C,GAE3D,GAAc,MAAVjgB,EACA,OAAO,KAMX,IAAIi8D,EAAsBj8D,EAAOi8D,oBAAoBzuD,EAASukD,YAE9D,GAA2B,MAAvBkK,EAA6B,OAAO,KAKxC,IAHA,IAAIC,EAAyC,KACzCC,GAA6B,EAExBl8D,EAAIg8D,EAAoBjxD,OAAS,EAAG/K,GAAK,EAAGA,IAAK,CACtD,IAAI8/B,EAAMk8B,EAAoBh8D,GAC1B8/B,EAAI8C,mBAAmB1vB,OAAS4sB,EAAI8C,mBAAmB73B,OAASwC,EAAS2F,QACtE4sB,EAAI8C,mBAAmB1vB,OAASgpD,IACH,MAA5Bp8B,EAAIxV,sBACH/c,EAASukD,YAAchyB,EAAIxV,qBAAqBrX,MAAQ1F,EAAS2F,QAAU4sB,EAAIxV,qBAAqBpX,QACjG3F,EAASukD,WAAahyB,EAAIxV,qBAAqBrX,QACnDgpD,EAAqBn8B,EACrBo8B,EAAoBp8B,EAAI8C,mBAAmB1vB,QAKvD,OAA0B,MAAtB+oD,EAAmC,KAEhClzD,KAAKozD,iBAAiBF,EAAoB1uD,KA/EzD,uCAqFqB0uD,EACb1uD,GAEA,IAAI6uD,EAAyB,EAFJ,uBAIzB,YAAeH,EAAmB5xC,eAAlC,+CAAkD,KAAzCgyC,EAAyC,SAC1CA,EAAGppD,KAAO1F,EAASukD,YAAeuK,EAAGppD,MAAQ1F,EAASukD,YAAcuK,EAAGnpD,OAAS3F,EAAS2F,SACzFkpD,KANiB,kFAUzB,IAAIE,EAAoE,GAExE,GAAmD,iBAAvCL,EAAmBM,gBAC3BD,EAA2BA,EAAyBrrD,OAAOlI,KAAKyzD,kCAA0CP,EAAmBM,gBAAiBH,QAC3I,4BACH,YAAmBH,EAAmBM,gBAAtC,+CAAuD,KAC/Cn8D,EAD+C,QAE/CA,EAAEiX,oBAAsB+kD,IAExBE,EAA2BA,EAAyBrrD,OAAOlI,KAAK0zD,yBAAyBr8D,MAL9F,mFAWP,OAAOkgB,QAAQC,QAAQ,CACnBtf,MAAO,CACHy7D,gBAAiBN,EACjBO,gBAAiB,EACjBC,WAAYN,GAEhB/E,QAAS,iBArHrB,wDAyHsC9sD,EAAgB2xD,GAE9C,OAAQ3xD,GACJ,IAAK,QACD,MAAO,CACH,CACIW,MAAO,kCACPtC,cAAe,iDACf8B,WAAY,CACR,CAAEQ,MAAO,YAAatC,cAAe,mOAGrD,IAAK,KACD,MAAO,CACH,CACIsC,MAAO,sDACPtC,cAAe,mCACf8B,WAAY,CACR,CAAEQ,MAAO,YAAatC,cAAe,yMAGrD,IAAK,SACD,MAAO,CACH,CACIsC,MAAO,2HACPtC,cAAe,mCACf8B,WAAY,CACR,CAAEQ,MAAO,WAAYtC,cAAe,qRAGpD,IAAK,MACD,MAAO,CACH,CACIsC,MAAO,sFACPtC,cAAe,kCACf8B,WAAY,CACR,CAAEQ,MAAO,iBAAkBtC,cAAe,uEAC1C,CAAEsC,MAAO,YAAatC,cAAe,gOACrC,CAAEsC,MAAO,uCAAwCtC,cAAe,wEAGhF,IAAK,QA2BD,MAzBI,CACI,CACIsC,MAAO,qCACPtC,cAAe,sCACf8B,WAAY,CACR,CAAEQ,MAAO,eAAgBtC,cAAe,0CACxC,CAAEsC,MAAO,gBAAiBtC,cAAe,0HAGjD,CACIsC,MAAO,kCACPtC,cAAe,sCACf8B,WAAY,CACR,CAAEQ,MAAO,eAAgBtC,cAAe,0CACxC,CAAEsC,MAAO,gBAAiBtC,cAAe,+CAGjD,CACIsC,MAAO,sBACPtC,cAAe,+BACf8B,WAAY,CACR,CAAEQ,MAAO,eAAgBtC,cAAe,6CAK5D,IAAK,UAED,MAAO,CACH,CACIsC,MAAO,uCACPtC,cAAe,kFACf8B,WAAY,CACR,CAAEQ,MAAO,eAAgBtC,cAAe,0CACxC,CAAEsC,MAAO,gBAAiBtC,cAAe,0HAGjD,CACIsC,MAAO,oCACPtC,cAAe,kFACf8B,WAAY,CACR,CAAEQ,MAAO,eAAgBtC,cAAe,0CACxC,CAAEsC,MAAO,aAActC,cAAe,iDAG9C,CACIsC,MAAO,wBACPtC,cAAe,kFACf8B,WAAY,CACR,CAAEQ,MAAO,eAAgBtC,cAAe,gDArNpE,+CA8N6B2B,GAErB,IAAIW,EAAgB,GAEU,MAA1BX,EAAO2iB,iBAA4B3iB,EAAON,gBAC1CiB,GAAS,GAAkBX,EAAO2iB,iBAAmB,KAGzDhiB,GAASX,EAAOvI,WAAa,IAM7B,IAJA,IAAI26D,EAAoE,GAEpExwB,EAAK5hC,EAAOwhB,mBAAmBrhB,WAE1B5K,EAAI,EAAGA,EAAIqsC,EAAGthC,OAAQ/K,IAAK,CAEhC,IAAI8B,EAAIuqC,EAAGrsC,GACP88D,EAAU1xD,EAAML,OAChB5B,EAAOrH,EAAEqH,KACTrH,EAAEoJ,aACF/B,EAAmBA,EAAMmC,aAK7B,IAAIyxD,GADJ3xD,GADa,GAAkBjC,IAASrH,EAAEoJ,WAAa,MAAQ,IAAM,IAAMpJ,EAAEI,YAE3D6I,OAEd/K,EAAIqsC,EAAGthC,OAAS,IAChBK,GAAS,MAGb,IAAI4xD,EAA4C,CAC5C5xD,MAAO,CAAC0xD,EAASC,GACjBj0D,cAAe,IAGnB+zD,EAAyBvvD,KAAK0vD,GAQlC,MAAO,CAAC,CACJ5xD,MAHJA,GAAS,IAILR,WAAYiyD,EACZ/zD,cAAuC,MAAxB2B,EAAO3B,cAAwB,GAAK2B,EAAO3B,qB,6BA7QtE,K,uKCHO,IAAM,GAAb,WA4CI,WAAoBmY,I,4FAAc,SAAd,KAAAA,S,UA5CxB,O,EAAA,G,EAAA,oCAgDiBjB,EAAiCzS,EAA2B4S,G,QAGjEinC,EAA8Br+C,KAAKkY,OAAOA,OAAOg8C,eAIrD,GAAgB,MAAb7V,GACIA,EAAUzmC,iBAAmBymC,EAAU1mC,eAAiB0mC,EAAUvmC,aAAeumC,EAAUxmC,aAErFwmC,EAAUzmC,gBAAkBpT,EAASukD,YAAc1K,EAAUzmC,iBAAmBpT,EAASukD,YAAc1K,EAAUvmC,aAAetT,EAAS2F,WACzIk0C,EAAU1mC,cAAgBnT,EAASukD,YAAc1K,EAAU1mC,eAAiBnT,EAASukD,YAAc1K,EAAUxmC,WAAarT,EAAS2F,QAJhJ,CAWA,IAAInT,EAAuD,QAAjD,EAAWgJ,KAAKkY,OAAOyc,KAAK2R,6BAAqB,eAAE+pB,uBAAuBp5C,GAEpF,GAAc,MAAVjgB,EACA,OAAO,KArByF,2BAwBpG,YAAqBA,EAAOid,OAA5B,+CAAmC,KAA3BN,EAA2B,+BAC/B,YAAiBA,EAAjB,+CAA2B,KAAnB5H,EAAmB,QACvB,GAAGA,EAAMvH,SAAS0F,MAAQ1F,EAASukD,YAC/Bh9C,EAAMvH,SAAS2F,QAAU3F,EAAS2F,QAClC4B,EAAMvH,SAAS2F,OAAS4B,EAAMvH,SAASxC,QAAUwC,EAAS2F,OACtD,OAAO,MALY,oFAxBiE,kFAkCpG,IAAIymB,EAAU55B,EAAOm9D,qBAAqB3vD,EAASukD,WAAYvkD,EAAS2F,QAEpEiqD,EAAsB,GAE1B,GAAe,MAAXxjC,EACA,GAAIA,aAAmB,GAASA,aAAmB7vB,GAAU6vB,aAAmB,GACzEA,aAAmBlwB,EACtB0zD,EAAsB7B,GAAuB3hC,OAC1C,IAAIA,aAAmB3wB,EAE1B,MAAO,CACH+I,MAAO,KACPqrD,SAAU,CAAC,CAAEn8D,MAHjBk8D,EAAsB,QAAUxjC,EAAQz3B,WAAa,iCAAmCy3B,EAAQzwB,eAOhG,IAAIm0D,EAAsC,QAAxB,EAAW1jC,aAAO,EAAPA,EAASxwB,YAAI,eAAEjH,aACzCy3B,aAAO,EAAPA,EAASxwB,gBAAgB,IAASwwB,aAAO,EAAPA,EAASxwB,gBAAgB,KAC1Dk0D,GAAkB,IAAM5B,GAA8B9hC,EAAQxwB,OAG5C,MAAlBk0D,EACAA,EAAiB,GAEjBA,GAAkB,IAGtBF,EAAsBE,GAAiB1jC,aAAO,EAAPA,EAASz3B,gBAEjD,CACH,IAAIo7D,EAAOv0D,KAAKw0D,mBAAmBv9C,EAAOzS,GACtCiwD,EAAOC,EAAgBC,oBAAoBJ,GAC/C,GAAY,MAARE,EACA,MAAO,CACHzrD,MAAO,KACPqrD,SAAU,CAAC,CAAEn8D,MAAOu8D,KAKhC,IAEIv8D,EAAgB,KAEpB,GAJY8H,KAAKkY,OAAOyc,KAAK6N,iBAAiB4e,OAIjCC,GAAiBC,OAAQ,CAClC,IAAIjC,EAAYr/C,KAAKkY,OAAOyc,KAAK2R,sBAAsB+Y,UAEnDlmD,EAAqB6G,KAAK40D,iBAAiB39C,EAAOzS,EAAUosB,aAAO,EAAPA,EAASz3B,YAEzE,GAAiB,MAAdA,EACC,OAAO,KAGX,IAAIy/B,EAASymB,EAAUC,SAASnmD,GACZ,MAAhBy/B,EAAO7sB,OAAiC,MAAhB6sB,EAAO1gC,QAC/BA,EAAQ0gC,EAAO1gC,MAAMkI,KAAKiN,YAAYurB,EAAO1gC,OAC7Ck8D,EAAsBj7D,GAK9B,IAAIk7D,EAAW,GAEf,OAAa,MAATn8D,GAA+C,GAA9Bk8D,EAAoBpyD,OAC9B,MAGE,MAAT9J,EACIA,EAAM8J,OAASoyD,EAAoBpyD,OAAS,IAC5CqyD,EAAS9vD,KAAK,CAAErM,MAAO,QAAUk8D,EAAsB,aACvDC,EAAS9vD,KAAK,CAAErM,MAAO,QAAUA,EAAM4R,QAAQ,UAAW,KAAO,WAEjEuqD,EAAS9vD,KAAK,CAAErM,MAAO,QAAUk8D,EAAsB,OAASl8D,EAAM4R,QAAQ,UAAW,KAAO,UAGpGuqD,EAAS9vD,KAAK,CAAErM,MAAO,QAAUk8D,EAAsB,UAKpD,CACHprD,MAHQ,KAIRqrD,SAAUA,OApKtB,yCAyKuBp9C,EAAiCzS,GAehD,IAZA,IAAIsP,EAAMmD,EAAM49C,sBAAsB,CAClC/8C,YAAa,EACbF,gBAAiB,EACjBD,cAAenT,EAASukD,WACxBlxC,UAAWrT,EAAS2F,SAGpByL,EAAOqB,EAAM7J,WAEbmnD,EAAO,GAEPje,EAAMxiC,EACHwiC,EAAM1gC,EAAK5T,QAAUhC,KAAK80D,oCAAoCl/C,EAAKxE,OAAOklC,KAC7EA,IAIJ,IADA,IAAIye,EAAQjhD,EACLihD,EAAQ,GAAK/0D,KAAK80D,oCAAoCl/C,EAAKxE,OAAO2jD,EAAQ,KAC7EA,IAGJ,GAAIze,EAAMye,EAAQ,EACdR,EAAO3+C,EAAKvD,UAAU0iD,EAAOze,OAC1B,CAEH,IADAA,EAAMxiC,EACCwiC,EAAM1gC,EAAK5T,QAAUhC,KAAKg1D,iBAAiBp/C,EAAKxE,OAAOklC,KAC1DA,IAIJ,IADAye,EAAQjhD,EACDihD,EAAQ,GAAK/0D,KAAKg1D,iBAAiBp/C,EAAKxE,OAAO2jD,EAAQ,KAC1DA,IAGAze,EAAMye,EAAQ,IACdR,EAAO3+C,EAAKvD,UAAU0iD,EAAOze,IAIrC,OAAOie,IAnNf,uCAuNqBt9C,EAAiCzS,EAC9CrL,GAYA,IAVA,IAAI2a,EAAMmD,EAAM49C,sBAAsB,CAClC/8C,YAAa,EACbF,gBAAiB,EACjBD,cAAenT,EAASukD,WACxBlxC,UAAWrT,EAAS2F,SAGpByL,EAAOqB,EAAM7J,WAEbkpC,EAAMxiC,EACHwiC,EAAM1gC,EAAK5T,QAAUhC,KAAK80D,oCAAoCl/C,EAAKxE,OAAOklC,KAC7EA,IAIJ,IADA,IAAIye,EAAQjhD,EACLihD,EAAQ,GAAK/0D,KAAKi1D,wBAAwBr/C,EAAKxE,OAAO2jD,EAAQ,KACjEA,IAKJ,OAF2C,OAAtB57D,aAAU,EAAVA,EAAY6I,SAAqB7I,EAAW6I,OAE7Ds0C,EAAMye,EAAQ/yD,OACP4T,EAAKvD,UAAU0iD,EAAOze,GAG1Bn9C,IAnPf,8CAsP4BhB,GAEpB,OAAOA,EAAEoZ,oBAAoBF,MAAM,0BAxP3C,uCA4PqBlZ,GAEb,OAAOA,EAAEoZ,oBAAoBF,MAAM,sBA9P3C,0DAkQwClZ,GAEhC,OAAOA,EAAEoZ,oBAAoBF,MAAM,0B,6BApQ3C,K,uKAEmB,GAAAsjD,oBAAqD,CAChE,MAAS,wDACT,IAAO,2GACP,QAAW,0FACX,MAAS,6HACT,IAAO,6QAEP,GAAM,0RACN,KAAQ,qOACR,OAAU,uVACV,IAAK,mGACL,IAAK,wGACL,IAAK,wGACL,IAAK,kHACL,KAAM,gPACN,KAAM,8OACN,IAAK,+GACL,KAAM,gRACN,KAAM,4HACN,KAAM,2HACN,KAAM,uSACN,KAAM,2LACN,KAAM,+LACN,KAAM,mMACN,KAAM,iMACN,KAAM,6GACN,KAAM,gHACN,IAAK,wMACL,IAAK,qHACL,OAAU,yIACV,QAAW,mJACX,UAAa,mMACb,OAAU,wIACV,MAAS,iRAET,MAAS,iFACT,QAAW,iHACX,WAAc,6LACd,KAAQ,mKC9CT,IAAMO,GAAb,WAEI,WAAoBvgC,I,4FAAc,SAAd,KAAAA,O,UAFxB,O,EAAA,G,EAAA,0CAMuB1d,EAAiCjO,EAAqB8mD,EAA6C14C,GAgBlH,MAAO,CACH4sC,QAhBY8L,EAAQrG,QAAQ1mD,KAAI,SAAAgJ,GAChC,IAAIyX,EAA0BzX,EAAMugD,mBACpC,OAAgB,MAAZ9oC,EAAyB,KAEiB,CAC1Cja,MAAOia,EAASja,MAChB4rD,YAAa,CAACppD,GACdrD,KAAM,WACNsa,KAAM,CACF3L,MAAOmM,EAASX,cAAc5L,EAAM6L,MAExCsyC,aAAa,MAMjB5G,QAAS,mB,6BAxBrB,K,uKCCO,IAAM6G,GAAb,WAEI,WAAoB1gC,I,4FAAc,SAAd,KAAAA,O,UAFxB,O,EAAA,G,EAAA,yCAMsB1d,EAAiCzS,EAA2BsrD,EAA4C14C,GAGtH,IAAIpgB,EAAiBgJ,KAAK20B,KAAK2R,sBAAsB+pB,uBAAuBp5C,GAE5E,GAAc,MAAVjgB,EAAgB,OAAO,KAE3B,IAAI45B,EAAU55B,EAAOm9D,qBAAqB3vD,EAASukD,WAAYvkD,EAAS2F,QACxE,GAAe,MAAXymB,EAAJ,CAIA,IAAI/wB,EAAiB+wB,EAAQ/wB,eAGzBy1D,EAAkD,GAetD,OAbAz1D,EAAekS,SAAQ,SAACwjD,EAAmBv+D,GACvC,GAAyB,MAArBu+D,EAA2B,4BAC3B,YAAeA,EAAf,+CAAkC,KAAzBC,EAAyB,QAC9BF,EAAmB/wD,KACf,CACIue,IAAK9rB,EAAO8rB,IACZ9Z,MAAO,CAAE8O,YAAa09C,EAAGrrD,OAAQyN,gBAAiB49C,EAAGtrD,KAAMyN,cAAe69C,EAAGtrD,KAAM2N,UAAW29C,EAAGrrD,OAASqrD,EAAGxzD,WAL9F,uFAY5BszD,Q,6BApCf,K,uKCkBO,IAAM,GAAb,WAWI,WAAmB3gC,EAAwB8gC,EAA8BrR,I,4FAAmB,SAAzE,KAAAzvB,OAAwB,KAAA8gC,cAA8B,KAAArR,aAPzE,KAAAsR,wBAAkC,EAElC,KAAAC,GAAmC,KAGnC,KAAAC,uBAAiC,EA6SjC,KAAAC,aAAuB,EA+DvB,KAAAC,SAAmB,EAoLnB,KAAAC,kBAA8B,G,UAziBlC,O,EAAA,G,EAAA,+BAcYnb,GAA6B,YChCnC,WACFjyC,OAAOC,UAAUisB,SAAS,CAAEjzB,GAAI,SAChCo0D,WAAY,CAAC,gBAIb,IAAIC,EAA+C,CAC/CC,iBAAkB,CAEdC,sBAAuB,qBAEvBC,sBAAuB,iBAE3BC,aAAc,CACV,CAEIC,WAAY,qCACZC,UAAW,YACX9R,OAAQ,CAAE+R,aAAc7tD,OAAOC,UAAU6tD,aAAaC,cAAeC,WAAY,QAErF,CAEIL,WAAY,qCACZ7R,OAAQ,CAAE+R,aAAc7tD,OAAOC,UAAU6tD,aAAaG,KAAMD,WAAY,QAE5E,CAGIL,WAAY,yCACZ7R,OAAQ,CAAE+R,aAAc7tD,OAAOC,UAAU6tD,aAAaG,KAAMD,WAAY,OAE5E,CAEIL,WAAY,0BACZ7R,OAAQ,CAAE+R,aAAc7tD,OAAOC,UAAU6tD,aAAaG,KAAMC,WAAY,IAE5E,CAEIP,WAAY,iCACZ7R,OAAQ,CAAE+R,aAAc7tD,OAAOC,UAAU6tD,aAAaG,KAAMC,WAAY,KAIhFC,YAAa,qFACbC,SAAU,CACNC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEzBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKnc,MAAO,KACpB,CAAEmc,KAAM,IAAKnc,MAAO,KACpB,CAAEmc,KAAM,IAAKnc,MAAO,KACpB,CAAEmc,KAAM,IAAKnc,MAAO,KACpB,CAAEmc,KAAM,IAAMnc,MAAO,MAEzBoc,iBAAkB,CACd,CAAED,KAAM,IAAKnc,MAAO,KACpB,CAAEmc,KAAM,IAAKnc,MAAO,KACpB,CAAEmc,KAAM,IAAKnc,MAAO,KACpB,CAAEmc,KAAM,IAAKnc,MAAO,KACpB,CAAEmc,KAAM,IAAMnc,MAAO,KACrB,CAAEmc,KAAM,IAAKnc,MAAO,MAExBqM,QAAS,CACLmC,QAAS,CACL/jB,MAAO,IAAIhzB,OAAO,sDAClB4jC,IAAK,IAAI5jC,OAAO,2DAwH5B/J,OAAOC,UAAU0uD,yBAAyB,SAAUrB,GAEpDttD,OAAOC,UAAU2uD,yBAAyB,SArH3B,CACXC,aAAc,GACdC,aAAc,QACdC,SAAU,CACN,WAAY,WAAY,MAAO,SAAU,SAAU,UACnD,OAAQ,UAAW,eAAgB,UACnC,OAAQ,aAAc,YAAa,QACnC,SAAU,SAAU,SAAU,OAAQ,aAAc,SACpD,YAAa,QAAS,UAAW,MAAO,QACxC,SAAU,UAAW,WACrB,WAAY,QAAS,SAAU,QAAS,OAAQ,QAAS,QAE7D/sC,MAAO,CAAC,QAAS,WACjB/lB,WAAY,CAAC,MAAO,QAAS,KAAM,OAAQ,OAAQ,KAAM,QAAS,YAClE+yD,MAAO,CAAC,MAAO,UAAW,OAAQ,QAAS,SAAU,OAAQ,OAAQ,OAAQ,QAC7E,QAAS,OAAQ,aACjB1/B,UAAW,CACP,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxC,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAC3C,KAAM,KAAM,MAAO,MAAO,QAG9B2/B,QAAS,wBACTC,QAAS,wEACTC,OAAQ,cACRC,YAAa,oBACbC,aAAc,oBACdC,UAAW,iCAEXC,UAAW,CACP78C,KAAM,CAGF,CAAC,gCAAiC,CAC9B88C,MAAO,CACH,YAAa,CAAE/gD,MAAO,cACtB,cAAe,CAAEA,MAAO,gBACxB,SAAU,CAAEA,MAAO,WACnB,SAAU,CAAEA,MAAO,YACnB,WAAY,YAGpB,CAAC,2BAA4B,CACzB+gD,MAAO,CACH,YAAa,CAAE/gD,MAAO,cACtB,cAAe,CAAEA,MAAO,gBACxB,SAAU,CAAEA,MAAO,WACnB,WAAY,gBAGpB,CAAC,yBAA0B,SAE3B,CAAEghD,QAAS,eAEX,CAAC,aAAc,aACf,CAAC,mBAAoB,aACrB,CAAC,WAAY,CACTD,MAAO,CACH,aAAc,YACd,WAAY,MAIpB,CAAC,yBAA0B,cAE3B,CAAC,yCAA0C,gBAC3C,CAAC,oDAAqD,gBACtD,CAAC,yBAA0B,cAC3B,CAAC,uBAAwB,gBACzB,CAAC,4BAA6B,iBAC9B,CAAC,kBAAmB,gBACpB,CAAC,iBAAkB,UAEnB,CAAC,QAAS,aAEV,CAAC,kBAAmB,kBACpB,CAAC,IAAK,SAAU,WAEhB,CAAC,WAAY,UACb,CAAC,mBAAoB,CAAC,SAAU,gBAAiB,WACjD,CAAC,IAAK,mBAEVE,WAAY,CACR,CAAC,aAAc,IACf,CAAC,eAAgB,cAAe,YAChC,CAAC,OAAQ,UAAW,YACpB,CAAC,UAAW,YAEhBl5D,QAAS,CACL,CAAC,UAAW,WAGZ,CAAC,OAAQ,UAAW,QACpB,CAAC,QAAS,YAGdm5D,QAAS,CACL,CAAC,UAAW,eAEZ,CAAC,OAAQ,uBACT,CAAC,OAAQ,cAAe,QACxB,CAAC,QAAS,gBAEdC,OAAQ,CACJ,CAAC,UAAW,UACZ,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,IAAK,SAAU,YDrJxBC,GAEA7vD,OAAOuP,OAAOugD,YAAY,oBAAqB,CAC3C1iD,KAAM,UACN2iD,SAAS,EACTC,MAAO,CACH,CAAEvhD,MAAO,SAAUwhD,WAAY,SAAUC,UAAW,UACpD,CAAEzhD,MAAO,QAASwhD,WAAY,SAAUC,UAAW,eACnD,CAAEzhD,MAAO,QAASwhD,WAAY,UAC9B,CAAExhD,MAAO,SAAUwhD,WAAY,UAC/B,CAAExhD,MAAO,OAAQwhD,WAAY,UAC7B,CAAExhD,MAAO,aAAcwhD,WAAY,UACnC,CAAExhD,MAAO,YAAawhD,WAAY,SAAUC,UAAW,QACvD,CAAEzhD,MAAO,UAAWwhD,WAAY,SAAUC,UAAW,SAGzDC,OAAQ,CACJ,oBAAqB,UACrB,mBAAsB,aAI9BnwD,OAAOuP,OAAOugD,YAAY,qBAAsB,CAC5C1iD,KAAM,KACN2iD,SAAS,EACTC,MAAO,CACH,CAAEvhD,MAAO,SAAUwhD,WAAY,SAAUC,UAAW,eACpD,CAAEzhD,MAAO,QAASwhD,WAAY,SAAUC,UAAW,eACnD,CAAEzhD,MAAO,QAASwhD,WAAY,UAC9B,CAAExhD,MAAO,SAAUwhD,WAAY,UAC/B,CAAExhD,MAAO,OAAQwhD,WAAY,SAAUC,UAAW,QAClD,CAAEzhD,MAAO,aAAcwhD,WAAY,UACnC,CAAExhD,MAAO,YAAawhD,WAAY,SAAUC,UAAW,QACvD,CAAEzhD,MAAO,UAAWwhD,WAAY,SAAUC,UAAW,QACrD,CAAEzhD,MAAO,UAAWwhD,WAAY,SAAUC,UAAW,WAEzDC,OAAQ,CACJ,oBAAqB,UACrB,oBAAqB,UACrB,qCAAsC,UACtC,+BAAgC,UAChC,qCAAsC,UACtC,sCAAuC,YACvC,iCAAkC,UAClC,8BAA+B,UAC/B,0BAA2B,UAC3B,uBAAwB,UACxB,8BAA+B,UAC/B,+BAAgC,UAChC,2BAA4B,UAC5B,6BAA8B,UAC9B,iCAAkC,OAClC,iCAAkC,UAClC,mBAAsB,aAK9B94D,KAAKkY,OAASvP,OAAOuP,OAAO3f,OAAOqiD,EAAS,GAAI,CAO5CxK,SAAU,SACV2oB,UAAW,CACPnf,SAAS,GAKb2N,qBAAsB,EACtByR,uBAAwB,OACxBvR,sBAAsB,EACtBwR,kBAAkB,EAClBC,sBAAuB,GACvBxR,SAAU,GACVC,WAAY,wBACZC,WAAY,MACZC,kBAAkB,EAClBsR,qBAAqB,EAErBnS,iBAAiB,EACjBoS,sBAAsB,EACtBtR,sBAAsB,EACtBuR,WAAY,OACZC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,gBAAiB,GACjBC,kBAAmB,GACnB3R,QAAS,CACLC,eAAe,GAGnB2R,eAAgB,CAAE/f,SAAS,EAAMggB,OAAO,GAMxCC,eAAgB75D,KAAKokD,WAErB8D,QAAS,CACLtO,QAAS55C,KAAKy1D,aAElBtN,UAAW,CACPC,SAAU,OACVC,WAAY,QAEhBptC,MAAO,sBAOXjb,KAAKkY,OAAO4hD,WAAU,SAACriD,GACnB,IAAI2pC,EAAQ,EAAKzsB,KAAK6N,iBAAiB4e,MAEvC,GAAI,CAACC,GAAiBplB,KAAMolB,GAAiBt1C,MAAOs1C,GAAiB0Y,iBAAiB30D,QAAQg8C,GAAS,EAAG,CAEtG,GAAI3pC,EAAEgqC,KAAKr8C,QAAQ,UAAY,GAAKqS,EAAEgqC,KAAKr8C,QAAQ,SAAW,EAAG,OAEjE,EAAKuvB,KAAKqlC,mBAAmBhiB,QAAQ,wBAQ7C,IAAIj6B,EAAO/d,KAEPi6D,EAAqB,SAAC3lB,IACA,IAAlBA,EAAMyQ,UAENhnC,EAAKm8C,qBAAqB5tD,KAAKiE,KAAK+jC,EAAM6lB,SAAS,GAEnD7lB,EAAM2E,mBAId,IAAKj5C,KAAKokD,WAAY,CAElB,IAAIgW,EAAoBp6D,KAAK20B,KAE7BylC,EAAMC,mBAAmBC,4BAA2B,SAAChmB,GACjD,IAAIimB,EAA2CjmB,EAAM8M,MACrD,GAAkB,MAAf9M,EAAM8M,MAAT,CACA,IAAI1Q,EAAuB0pB,EAAM1qB,cAAchf,MAAK,SAACif,GAAD,OAAQA,EAAG/tC,IAAM24D,EAAa9pB,gBAClF,GAAgB,MAAbC,EAAH,CACA,IAAI15C,EAAiB05C,EAAUlyB,YAAYg8C,eAAeD,EAAaE,WAC1D,MAAVzjE,IAIA05C,GAAa0pB,EAAM/nB,mBAElBt0B,EAAK63C,yBACLwE,EAAMrrB,gBAAgBwgB,mBAAmB7e,GACzC3yB,EAAK63C,0BAEN5+D,GAAUojE,EAAMh1B,6BACfrnB,EAAK63C,yBACLwE,EAAMrrB,gBAAgB2b,gBAAgB1zD,GACtC+mB,EAAK63C,0BAET73C,EAAK63C,yBACL73C,EAAK7F,OAAO4wC,YAAYyR,EAAa/1D,UACrCuZ,EAAK7F,OAAOwiD,eAAeH,EAAa/1D,UACxCuZ,EAAK63C,yBACL73C,EAAK48C,kBAAiB,EAAMJ,SA4GpC,OAxGAv6D,KAAKkY,OAAO0iD,0BAAyB,SAACtmB,GAC9BA,EAAMumB,WAAWlyD,OAAOuP,OAAO4iD,aAAaC,WAAa,EAAK3W,YAE9D,EAAKzvB,KAAK0Q,eAAeC,aAAaqnB,uCAK9C3sD,KAAKkY,OAAO8iD,2BAA0B,SAAC1mB,G,MAE/B2mB,EAAiB,EAAKtmC,KAAKyQ,2BAA2BtD,KAAKlgC,IACzB,MAArB,EAAK0jB,cACC,OAAhBgvB,EAAM4mB,QACND,GAAkB,EAAK31C,aAAam1C,WACpCnuD,KAAK6uD,IAAI,EAAK71C,aAAa9gB,SAASukD,WAAazU,EAAM9vC,SAASukD,YAAc,KAErC,GAA/B,EAAK6M,uBAClB,EAAK+E,kBAAiB,EAAO,EAAKS,yBAC5BH,IAA+B,QAAjB,EAAI5U,QAAQjF,aAAK,eAAEqZ,YAEnC,EAAKE,kBAAiB,EAAM,EAAKS,yBAGzCr9C,EAAKi9C,0BAA0B1mB,EAAM9vC,UAErCuZ,EAAKs9C,uBAAuB/mB,MAKhCt0C,KAAKkY,OAAOojD,kBAAiB,SAAChnB,GAE1B,IAAI1jB,EAA+BgqB,EAASlqB,KAAK,kBAAkB,GAInE,GAHAE,EAAQ2qC,oBAAoB,QAAStB,GACrCrpC,EAAQ2sB,iBAAiB,QAAS0c,EAAoB,CAAEuB,SAAS,IAE1B,MAAnC,EAAK7mC,KAAK2R,sBAAd,CAEA,IAAItvC,EAAS,EAAK29B,KAAK2R,sBAAsB+pB,uBAAuB,EAAKn4C,OAAOwwC,YAC5E,EAAK/zB,gBAAgB,IAAkB,MAAV39B,IAY7B,EAAK29B,KAAKoa,gBAAgB0sB,+BAA+BzkE,IAEnB,MAArB,EAAKsuB,cACftuB,EAAO8qC,KAAKlgC,IAAM,EAAK0jB,aAAam1C,YAEK,GAA/B,EAAK7E,wBAClB,EAAK+E,kBAAiB,EAAO,EAAKS,8BAO9CzyD,OAAOC,UAAU8yD,uBAAuB,SAAU17D,MAElD2I,OAAOC,UAAU+yD,2BAA2B,SAAU,CAClDC,kBAAmB,SAAC3kD,EAAOzS,EAAUq3D,GACjC,OAAO99C,EAAK69C,kBAAkB3kD,EAAOzS,EAAUq3D,MAIvDlzD,OAAOC,UAAUkzD,sBAAsB,SAAU,IAAI,GAAgB97D,OAErE2I,OAAOC,UAAUmzD,+BAA+B,SAAU,IAAI,GAAyB/7D,KAAK20B,OAC5FhsB,OAAOC,UAAUozD,2BAA2B,SAAU,IAAI9G,GAAqBl1D,KAAK20B,OACpFhsB,OAAOC,UAAUqzD,0BAA0B,SAAU,IAAI5G,GAAoBr1D,KAAK20B,OAGlFhsB,OAAOC,UAAUszD,8BAA8B,SAAU,IAAI,GAAwBl8D,KAAK20B,OAE1F30B,KAAKkY,OAAOikD,aAAY,SAAC1kD,GACrB,IAAM21B,EAAO31B,EAAEsgC,OAAO0Z,OAClBh6C,EAAEsgC,OAAO33C,OAASuI,OAAOuP,OAAOkkD,gBAAgBC,qBAChD5kD,EAAEsgC,OAAO33C,OAASuI,OAAOuP,OAAOkkD,gBAAgBE,qBAAuBlvB,EAAKmvB,cAGhFx+C,EAAKy+C,kBAAkB/kD,EAAEsgC,OAAOvzC,SAASukD,eAQ7Che,YAAW,WACPpiC,OAAOuP,OAAOukD,mBACf,KAEHz8D,KAAK08D,aAGL18D,KAAKkY,OAAOykD,WAAU,SAAC/mD,GAAWmI,EAAK4+C,UAAU/mD,MAE1C5V,KAAKkY,SA3SpB,8CA+SQ,MAAO,CACH1T,SAAUxE,KAAKkY,OAAO0kD,cACtBnsB,aAAczwC,KAAK20B,KAAK2R,sBAAsB1kC,GAC9C64D,UAAWz6D,KAAK20B,KAAKyQ,2BAA2BtD,KAAKlgC,MAlTjE,uCAuTqBkI,EAAkBywD,GAE/B,IAAGv6D,KAAK20B,KAAKyvB,aAAb,CAEA,GAAGt6C,EACCu8C,QAAQwW,aAAatC,EAAc,QAEhC,CACH,IAAIuC,GAAO,IAAIjO,MAAOkO,UACnBD,EAAO98D,KAAK61D,aAAe,IAC1BxP,QAAQ2W,UAAUzC,EAAc,IAEhClU,QAAQwW,aAAatC,EAAc,IAEvCv6D,KAAK61D,aAAeiH,EAIxB98D,KAAKslB,aAAei1C,KAzU5B,gCA4Uc3kD,GAAY,WAGZqnD,EAAqB,SAACnpD,EAAK/K,EAAoBuiC,EAAiB4xB,GAClE,IAAMl0D,EAAQ,IAAIL,OAAOsjD,MACrBn4C,EAAIi1C,WACJj1C,EAAI3J,OACJ2J,EAAIi1C,WACJj1C,EAAI3J,QAER,EAAK+N,OAAO8zC,aAAa,cAAe,CACpC,CAAEhjD,QAAO4M,KAAM7M,KAInB,EAAKmP,OAAO4wC,YAAY,CACpBC,WAAYzd,EACZnhC,OAAQ+yD,KAIhB,GAAa,OAATtnD,EAAe,CACf,IAAMqB,EAAQjX,KAAKkY,OAAOwwC,WACpBlkD,EAAWxE,KAAKkY,OAAO0kD,cACvBO,EAAWlmD,EAAMmmD,eAAe54D,EAASukD,WAAa,GAC5D,GAAsC,IAAlCoU,EAAS7qD,OAAOlN,QAAQ,QAAgB+3D,EAASE,YAAYlrD,SAAS,SACrD3N,EAASukD,WAAa9xC,EAAMqmD,eAAiBrmD,EAAMmmD,eAAe54D,EAASukD,WAAa,GAAK,IACjGz2C,OAAOF,WAAW,KAAK,CAChC,IAAImrD,EAAkCJ,EAASllD,OAAO,EAAGklD,EAASn7D,OAASm7D,EAAStL,WAAW7vD,QACxD,IAAnCm7D,EAAS7qD,OAAOlN,QAAQ,OACxB63D,EAAmBz4D,EAAU,KAAO+4D,EAA0B,MAAO/4D,EAASukD,WAAYvkD,EAAS2F,OAAS,EAAIozD,EAAwBv7D,QAExIi7D,EAAmBz4D,EAAU,QAAU+4D,EAA0B,MAAO/4D,EAASukD,WAAYvkD,EAAS2F,OAAS,EAAIozD,EAAwBv7D,YA5WnK,kCAsXgBw7D,GAGR,IAAIV,GAAO,IAAIjO,MAAOkO,UACtB,KAAID,EAAO98D,KAAK81D,SAAW,KAA3B,CACA91D,KAAK81D,SAAWgH,EAEhB,IAAIW,EAAWz9D,KAAKkY,OAAOwlD,aAAa5lE,IAAI6Q,OAAOuP,OAAO4iD,aAAapT,UAMvE,GAJI1nD,KAAK20B,gBAAgB,IACrB30B,KAAK20B,KAAKgpC,mBAAmBC,aAAaJ,GAG1CA,GAAcC,EAAU,CACxBz9D,KAAKkY,OAAO2lD,cAAc,CACtBnW,SAAU8V,IAKd,IACIM,EADc99D,KAAKkY,OAAOwlD,aAAa5lE,IAAI6Q,OAAOuP,OAAO4iD,aAAapT,UAC/C8V,EAC3Bx9D,KAAKkY,OAAO2lD,cAAc,CACtBnW,SAAU8V,EAAaM,IAG3B,IAAIC,EAAa/9D,KAAK20B,KAAK0Q,eACT,MAAd04B,GAA4C,MAAtBA,EAAWn1B,SACjCm1B,EAAWn1B,QAAQ1wB,OAAO2lD,cAAc,CACpCnW,SAAU8V,EAAaM,IAMnC,IAAIE,EAAYh+D,KAAK20B,KAAK0Q,eACT,MAAb24B,GAA0C,MAArBA,EAAUp1B,UACZo1B,EAAU5Y,WAAW10B,KAAK,mBAChCke,IAAI,CACbwH,OAAsB,IAAbonB,EAAmB,EAAK,KACjC,cAA6B,IAAbA,EAAmB,EAAK,OAE5CQ,EAAUp1B,QAAQ1wB,OAAO2uC,UAS7Brc,OAAO,sBAAsBoE,IAAI,YAAa4uB,EAAa,MAC3DhzB,OAAO,sBAAsBoE,IAAI,cAAgB4uB,EAAa,EAAK,MAEnEliD,SAASC,gBAAgBG,MAAMC,YAAY,oBAAqB6hD,EAAa,MAC7EliD,SAASC,gBAAgBG,MAAMC,YAAY,sBAAuB6hD,EAAa,EAAI,MAGnFx9D,KAAK20B,KAAK0Q,eAAeC,aAAaqnB,uCAhb9C,2CAobyB30C,GAAsC,IAAvBimD,IAAuB,yDACnDR,EAAWz9D,KAAKkY,OAAOwlD,aAAa5lE,IAAI6Q,OAAOuP,OAAO4iD,aAAapT,UAEnEuW,IAEIjmD,GADAylD,EAAW,GACF,EACFA,EAAW,GACT,EAEA,GAIjB,IAAIS,EAAcT,EAAWzlD,EACzBkmD,GAAe,GAAKA,GAAe,IACnCl+D,KAAKm+D,YAAYD,KAnc7B,mCAycQl+D,KAAKkY,OAAOqhC,UAAU,CAElB33C,GAAI,eAGJS,MAAO,kCAGP+7D,YAAa,CACTz1D,OAAO01D,OAAOC,QAAU31D,OAAO4/C,QAAQgW,OAG3CC,aAAc,KAGdC,kBAAmB,KAEnBC,mBAAoB,aAEpBC,iBAAkB,IAIlBC,IAAK,SAAUC,GAEX,OADAA,EAAGC,UAAU,+BAA+BF,MACrC,UAlevB,6CAye2BtqB,GAEnB,IAAIv2B,EAAO/d,KAOX,GALe,MAAX+d,EAAK43C,KACL53C,EAAK7F,OAAO6mD,oBAAoBhhD,EAAK43C,IACrC53C,EAAK43C,GAAK,MAGV53C,EAAK4W,KAAK6N,iBAAiB4e,OAASC,GAAiBC,OAAQ,CAE7D,IACI1rC,EADQmI,EAAK7F,OAAOwwC,WACP8H,gBAAgBzyC,EAAK7F,OAAOg8C,gBAC7C,GAAY,MAARt+C,GAAgBA,EAAK5T,OAAS,EAAG,CACjC,IACI42B,EADY54B,KAAK20B,KAAK2R,sBAAsB+Y,UACzBC,SAAS1pC,GAChC,GAAoB,MAAhBgjB,EAAO7sB,OAAiC,MAAhB6sB,EAAO1gC,MAAe,CAC9C,IAAI2L,EAAI+0B,EAAO1gC,MAAMkI,KAAKiN,YAAYurB,EAAO1gC,OAE7CyQ,OAAOuP,OAAOsnC,SAAS5pC,EAAO,KAAM,SAAU,CAAE6pC,QAAS,IAAKC,MAAK,SAAC9pC,GAC5DA,EAAKzD,SAAS,WAAUyD,EAAOA,EAAKqC,OAAO,EAAGrC,EAAK5T,OAAS,IAChE+b,EAAK43C,GAAK,CACNqJ,MAAO,WACH,MAAO,qBAEXC,WAAY,WAER,OADSz0B,OAAO,6CAA+C50B,EAAO/R,EAAI,UAChE,IAEd+4D,YAAa,WACT,MAAO,CACHp4D,SAAU8vC,EAAM9vC,SAChB06D,WAAY,CAACv2D,OAAOuP,OAAOinD,gCAAgCC,MAAOz2D,OAAOuP,OAAOinD,gCAAgCE,UAI5HthD,EAAK7F,OAAOonD,iBAAiBvhD,EAAK43C,YA7gB1D,wCA0hBsB5M,GACd,IAAI/xD,EAASgJ,KAAKolC,2BAClB,GAAc,MAAVpuC,IAIJA,EAAOuoE,iBAAiBxW,GAAY,GAEU,MAA1C/oD,KAAK20B,KAAK6N,iBAAiBhkB,aAAqB,CAChD,IAAIghD,EAAgBx/D,KAAK20B,KAAK6N,iBAAiBhkB,YAAYihD,iBAAiBzoE,EAAO8qC,MAC9D,MAAjB09B,GAAuBA,EAAcD,iBAAiBxW,GAAY,MApiBlF,gDA0iB8BvkD,GAEN,MAAZA,IAAkBA,EAAWxE,KAAKkY,OAAO0kD,eAE7C,IAAI5lE,EAASgJ,KAAKolC,2BAClB,GAAc,MAAVpuC,EAAJ,CAKA,IAAI45B,EAAU55B,EAAOm9D,qBAAqB3vD,EAASukD,WAAYvkD,EAAS2F,QAEpEqhD,EAAqD,GAEzD,GAAe,MAAX56B,EAAiB,CACjB,IACI2kC,EADiB3kC,EAAQ/wB,eACU/H,IAAId,GAC3C,GAAyB,MAArBu+D,EAA2B,4BAC3B,YAAeA,EAAf,+CAAkC,KAAzBC,EAAyB,QAC9BhK,EAAYjnD,KAAK,CACbyE,MAAO,CAAE8O,YAAa09C,EAAGrrD,OAAQyN,gBAAiB49C,EAAGtrD,KAAM2N,UAAW29C,EAAGrrD,OAASqrD,EAAGxzD,OAAQ2V,cAAe69C,EAAGtrD,MAC/GiN,QAAS,CACLmkB,UAAW,yBAA0BuvB,aAAa,EAAO6U,cAAe,CACpE50C,MAAO,CAAElpB,GAAI,gCACb+9D,UAAW,CAAE/9D,GAAI,sCACjB4C,SAAUmE,OAAOuP,OAAO0nD,kBAAkBC,UAR/B,oFAkBnC,GAAI7/D,KAAK01D,uBAAwB,CAE7B,IAAIh0D,EAAS1K,EAAO8oE,+BAA+Bt7D,GACrC,MAAV9C,GACA8pD,EAAYjnD,KAAK,CACbyE,MAAO,CAAE8O,YAAa,EAAGF,gBAAiBlW,EAAO8C,SAAS0F,KAAM2N,UAAW,IAAKF,cAAejW,EAAO6e,QAAQrW,MAC9GiN,QAAS,CACLmkB,UAAW,qBAAsBuvB,aAAa,EAAM6U,cAAe,CAC/D50C,MAAO,CAAElpB,GAAI,sBACb+9D,UAAW,CAAE/9D,GAAI,sBACjB4C,SAAUmE,OAAOuP,OAAO0nD,kBAAkBC,MAE9C3X,QAAS,CACLp9B,MAAO,CAAElpB,GAAI,sBACb4C,SAAUmE,OAAOuP,OAAOq0C,gBAAgBC,QAE5CuT,QAAS,OAOzB//D,KAAK+1D,kBAAoB/1D,KAAKkY,OAAO0yC,iBAAiB5qD,KAAK+1D,kBAAmBvK,QApD1ExrD,KAAK+1D,kBAAoB/1D,KAAKkY,OAAO0yC,iBAAiB5qD,KAAK+1D,kBAAmB,MAhjB1F,iDAymBQ,OAAO/1D,KAAK20B,KAAKyQ,6BAzmBzB,yFAgnBuBnuB,EAAiCzS,EAChD67C,EAAiBjpC,GAGjB,IAAI4oD,EAAwBhgE,KAAKolC,2BACjC,GAA6B,MAAzB46B,EACA,OAAO,KAGX,IAAIpvC,EAAUovC,EAAsB7L,qBAAqB3vD,EAASukD,WAAYvkD,EAAS2F,QACvF,GAAe,MAAXymB,EAAJ,CAIA,IAAI/wB,EAAiB+wB,EAAQ/wB,eAGzBogE,EAAsD,GAyB1D,OAvBApgE,EAAekS,SAAQ,SAACmuD,EAAwBlpE,GAC5C,GAA8B,MAA1BkpE,EAAgC,CAChC,IADgC,uBAEhC,YAAeA,EAAf,+CAAuC,KAA9B1K,EAA8B,QACnCyK,EAAc17D,KACV,CACIwe,SAAU/rB,EAAO8rB,IAAKE,KACtB,CACIha,MAAO,CAAE8O,YAAa09C,EAAGrrD,OAAQyN,gBAAiB49C,EAAGtrD,KAAMyN,cAAe69C,EAAGtrD,KAAM2N,UAAW29C,EAAGrrD,OAASqrD,EAAGxzD,QAC7G4T,KAAMyqC,MARU,kFACS,GAW/Br+C,OAAS,IACfhL,EAAO8qC,KAAKkD,OAAQ,EACpBhuC,EAAO8qC,KAAK8N,OAAQ,EACpB54C,EAAO8qC,KAAK4R,iCAAkC,OAOnD,CACHr8B,MAAO4oD,MA3pBnB,wCAgqBsBhpD,EAAiCzS,EAA2Bq3D,GAG1E,IAAI7kE,EAAiBgJ,KAAK20B,KAAK2R,sBAAsB+pB,uBAAuBp5C,GAE5E,GAAc,MAAVjgB,EACA,OAAO,KAGX,IAAI45B,EAAU55B,EAAOm9D,qBAAqB3vD,EAASukD,WAAYvkD,EAAS2F,QACxE,GAAe,MAAXymB,EAAiB,OAAO,KAE5B,IAAI+hC,EAAO/hC,EAAQ1gB,YAEnB,OAAY,MAARyiD,EAEI/hC,aAAmB,GAASA,aAAmB,IAAQA,aAAmB,GAAaA,aAAmB7vB,GAAU6vB,aAAmBlwB,EAChI6W,QAAQC,QAAQ,CACnBxO,MAAO,CACH4O,gBAAiBpT,EAASukD,WAAYpxC,cAAenT,EAASukD,WAC9DjxC,YAAatT,EAAS2F,OAAQ0N,UAAWrT,EAAS2F,OAASymB,EAAQz3B,WAAW6I,QAElF8gB,IAAK9rB,EAAO8rB,MAGT,KAIRvL,QAAQC,QAAQ,CACnBxO,MAAO,CACH4O,gBAAiB+6C,EAAKnuD,SAAS0F,KAAMyN,cAAeg7C,EAAKnuD,SAAS0F,KAClE4N,YAAa66C,EAAKnuD,SAAS2F,OAAQ0N,UAAW86C,EAAKnuD,SAAS2F,OAASwoD,EAAKnuD,SAASxC,QAEvF8gB,IAAK6vC,EAAK37D,OAAO8rB,W,6BAlsB7B,K,uKEdO,IAAMq9C,GAAb,yB,4FAAA,S,UAAA,O,EAAA,G,EAAA,8BAMQngE,KAAKogE,QAAU51B,OAAO,WACtBA,OAAO,SAASoE,IAAI,aAAc,UAClC5uC,KAAKogE,QAAQt2B,OAAOU,OAChB,0FAIJxqC,KAAKqgE,YAAcrgE,KAAKogE,QAAQ1vC,KAAK,gBACrC1wB,KAAKogE,QAAQxxB,IAAI,aAAc,aAdvC,8BAiBYh5B,GACJ,IAAI4mC,EAAOhS,OAAO,+BAAiC50B,EAAO,UAE1D,OADA5V,KAAKqgE,YAAYv2B,OAAO0S,GACjBA,IApBf,iCAuBe5mC,GACP,IAAI4mC,EAAOhS,OAAO,kCAAoC50B,EAAO,UAE7D,OADA5V,KAAKqgE,YAAYv2B,OAAO0S,GACjBA,IA1Bf,kCA6BgB5mC,EAAckV,GACtB,IAAIw1C,EAAsB,MAATx1C,EAAgB,GAAhB,wBAAsCA,EAAtC,KACb0xB,EAAOhS,OAAO,mCAAD,OAAoC81B,EAApC,YAAkD1qD,EAAlD,WAEjB,OADA5V,KAAKqgE,YAAYv2B,OAAO0S,GACjBA,IAjCf,4BAoCUp8C,EAAcmgE,GAChB,IAAI/jB,EAAOhS,OAAO,qCAAD,OAAsCpqC,EAAtC,0BAA4DmgE,EAA5D,eAEjB,OADAvgE,KAAKqgE,YAAYv2B,OAAO0S,GACZA,IAvCpB,8BA0CY,GAEJ,IAAIgkB,EAAah2B,OAAO,wCACxBxqC,KAAKqgE,YAAYv2B,OAAO02B,GAHG,2BAK3B,IAL2B,IAK3B,EAL2B,iBAKnB9kB,EALmB,QAOnBuH,EAAUzY,OAAO,oCAAD,OAAqCkR,EAAO5wB,MAA5C,+BAAwE4wB,EAAO5H,QAA/E,cACpBmP,EAAQ5W,GAAG,SAAS,WAAOqP,EAAO1P,cAClCw0B,EAAW12B,OAAOmZ,IAJtB,EAAkB,EAAlB,+CAA0B,IALC,qFA1CnC,kCAuDgBrtC,GAER,IAAIo3C,EAAWxiB,OAAO,4BAAD,OAA6B50B,EAA7B,2EAGrB,OAFA5V,KAAKqgE,YAAYv2B,OAAOkjB,GAEjB,SAAC56B,GACJ,IAAIvxB,EAAauxB,EAAU,UAAY,SACvC46B,EAASpe,IAAI,aAAc/tC,MA9DvC,8BAoEQb,KAAKogE,QAAQxxB,IAAI,aAAc,UAC/B5uC,KAAKogE,QAAQr1C,QACbyf,OAAO,SAASoE,IAAI,aAAc,aAtE1C,kCAyEgBzuC,EAAqBsgE,EAAoBjpE,GACjD,IACIkpE,EAAYl2B,OADC,gCAAkChzC,EAAO,KAAOipE,EAAY,WAAa,IAAM,KAE5FE,EAAen2B,OAAO,eAAiBhzC,EAAO,KAAO2I,EAAc,YAEnEq8C,EAAOhS,OAAO,uCAMlB,OALAgS,EAAK1S,OAAO42B,EAAWC,GAEvBA,EAAat0B,GAAG,SAAS,WAAOq0B,EAAUE,KAAK,WAAYF,EAAUE,KAAK,eAE1E5gE,KAAKqgE,YAAYv2B,OAAO0S,GACjB,WACH,OAAOkkB,EAAUG,GAAG,kB,6BArFhC,K,kUCHO,IAAM,GAAb,WAII,WAAoBlsC,GAAU,WAAV,KAAAA,OAJxB,0CASQ,IAAImsC,EAAsBt2B,OAAO,uBAC7BzsB,EAAO/d,KAEX8gE,EAAoBz0B,GAAG,SAAS,SAAC50B,GAa7Bg/B,GAX0C,CACtC,CACI3C,QAAS,qBACT9H,SAAU,WACgB,IAAI,GAAgBjuB,EAAK4W,MAC/BsW,UAMM61B,EAAoB77D,SAAS8yB,KAAM+oC,EAAoB77D,SAASmyC,IAAM0pB,EAAoB1qB,iBAzBxI,KAmCa,GAAb,WAII,WAAoBzhB,GAAU,WAAV,KAAAA,OAEhB30B,KAAK+gE,OAAS,IAAIZ,GAN1B,0CAUQ,WACAngE,KAAK+gE,OAAOpc,OACZ3kD,KAAK+gE,OAAOC,QAAQ,mBACpBhhE,KAAK+gE,OAAO5gE,YAAY,iNAExB,IAAI8gE,EAAejhE,KAAK+gE,OAAOttD,MAAM,WAAY,kBAC7CytD,EAAgBlhE,KAAK+gE,OAAOttD,MAAM,WAAY,kBAC9C0tD,EAAgBnhE,KAAK+gE,OAAOttD,MAAM,WAAY,8BAC9C63C,EAAYtrD,KAAK+gE,OAAO5gE,YAAY,GAAI,OACxCihE,EAAUphE,KAAK+gE,OAAOM,YAAY,mBAEtCrhE,KAAK+gE,OAAO7c,QAAQ,CAChB,CACIpQ,QAAS,YACThpB,MAAO,UACPkhB,SAAU,WAAO,EAAK+0B,OAAO9lB,UAEjC,CACInH,QAAS,KACThpB,MAAO,QACPkhB,SAAU,WACHk1B,EAAc90B,OAAS+0B,EAAc/0B,MACpCkf,EAAU11C,KAAK,kEAEfwrD,GAAQ,GACRx0B,GAAK,iBAAkB,CAAC00B,YAAaL,EAAa70B,MAAOm1B,YAAaL,EAAc90B,QAAQ,WACxFg1B,GAAQ,GACRvuB,MAAM,4CACN,EAAKkuB,OAAO9lB,WACb,SAACxuC,GACA20D,GAAQ,GACR9V,EAAU11C,KAAKnJ,eAzC3C,K,uKCnBO,IAAM,GAAb,WAEI,WAAoBkoB,I,4FAAU,SAAV,KAAAA,OAKpB,KAAA6sC,eAA2D,GAC3D,KAAAC,yBAAmC,E,UARvC,O,EAAA,G,EAAA,+BAUYjzB,GAAc,WAEdzwB,EAAO/d,KACPkY,EAASlY,KAAK20B,KAAK2vB,kBAEnBod,EAAiB,CACjBhrB,MAAO,CACH,CACIv9C,WAAY,QAASg+C,QACrB,CACIT,MAAO,CACH,CACIv9C,WAAY,wBACZsrD,OAAQ,WAAQja,OAAO,iBAAiBwN,QAAQ,cAMhE,CACI7+C,WAAY,aAAcg+C,QAC1B,CACIT,MAAO,CACH,CAAEv9C,WAAY,wBAAyBsrD,OAAQ,WAAQvsC,EAAO8/B,QAAQ,IAAK,OAAQ,MACnF,CAAE7+C,WAAY,yBAA0BsrD,OAAQ,WAAQvsC,EAAO8/B,QAAQ,IAAK,OAAQ,MACpF,CAAE7+C,WAAY,KACd,CAAEA,WAAY,sBAAuBsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,qCAAqCF,QAC3G,CAAEzlE,WAAY,0BAA2BsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,oCAAoCF,QAC9G,CAAEzlE,WAAY,gDAAiDsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,mCAAmCF,QACnI,CAAEzlE,WAAY,mDAAoDsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,qCAAqCF,QACxI,CAAEzlE,WAAY,2CAA4CsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,mCAAmCF,QAC9H,CAAEzlE,WAAY,8CAA+CsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,qCAAqCF,QACnI,CAAEzlE,WAAY,KACd,CAAEA,WAAY,uBAAwBsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,gBAAgBF,QACvF,CAAEzlE,WAAY,yBAA0BsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,wCAAwCF,QACjH,CAAEzlE,WAAY,KACd,CAAEA,WAAY,kCAAmCsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,6BAA6BF,QAC/G,CAAEzlE,WAAY,yCAA0CsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,gCAAgCF,QACzH,CAAEzlE,WAAY,KACd,CAAEA,WAAY,sCAAuCsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,+BAA+BF,QACrH,CAAEzlE,WAAY,KACd,CAAEA,WAAY,uBAAwBsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,kBAAkBF,QACzF,CAAEzlE,WAAY,kBAAmBsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,oBAAoBF,QACtF,CAAEzlE,WAAY,KACd,CACIA,WAAY,wCAAyCsrD,OAAQ,WACzDvsC,EAAOq0B,QACPxB,YAAW,WACP7yB,EAAO4mD,UAAU,gCAAgCF,QAClD,OAGX,CAAEzlE,WAAY,4CAA6CsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,uCAAuCF,QACnI,CACIzlE,WAAY,qCAAsCsrD,OAAQ,WACtDvsC,EAAOq0B,QACPxB,YAAW,WACP7yB,EAAO4mD,UAAU,kCAAkCF,QACpD,UAOvB,CACIzlE,WAAY,UAAWg+C,QACvB,CACIT,MAAO,CACH,CACIv9C,WAAY,QACZg+C,QAAS,CACLT,MAAO,CACH,CACIv9C,WAAY,OACZsrD,OAAQ,WACJ1mC,EAAK4jD,YAAY,UAGzB,CACIxoE,WAAY,QACZsrD,OAAQ,WACJ1mC,EAAK4jD,YAAY,cAMrC,CAAExoE,WAAY,KACd,CAAEA,WAAY,mCAAoCsrD,OAAQ,WAAQvsC,EAAO4mD,UAAU,oCAAoCF,QAEvH,CAAEzlE,WAAY,KACd,CAAEA,WAAY,4BAA6BsrD,OAAQ,WAAQ,EAAK9vB,KAAKzc,OAAOgiD,sBAAsB,KAClG,CAAE/gE,WAAY,cAAesrD,OAAQ,WAAQ,EAAK9vB,KAAKzc,OAAOimD,YAAY,MAC1E,CAAEhlE,WAAY,2BAA4BsrD,OAAQ,WAAQ,EAAK9vB,KAAKzc,OAAOgiD,qBAAqB,QAK5G,CACI/gE,WAAY,aAAcg+C,QAAS,CAC/BT,MAAO,CACH,CACIv9C,WAAY,oCACZsrD,OAAQ,WAAO,EAAK9vB,KAAKitC,wBAAwB32B,KAAK,QAE1D,CACI9xC,WAAY,oDACZsrD,OAAQ,WAAO,EAAK9vB,KAAKktC,0BAA0B52B,KAAK,WAKxE,CACI9xC,WAAY,QAASg+C,QACrB,CACIT,MAAO,CACH,CACIv9C,WAAY,iDACZ89C,KAAM,0DAEV,CACI99C,WAAY,mDACZ89C,KAAM,kCAEV,CAAE99C,WAAY,KACd,CACIA,WAAY,oBACZ89C,KAAM,6DAGV,CACI99C,WAAY,kBAEZ89C,KAAM,0BAEV,CAAE99C,WAAY,KACd,CACIA,WAAY,yBACZ89C,KAAM,sBAEV,CAAE99C,WAAY,KACd,CACIA,WAAY,gCACZ89C,KAAM,kBAEV,CAAE99C,WAAY,KACd,CACIA,WAAY,wBACZ89C,KAAM,0DAEV,CACI99C,WAAY,sBACZ89C,KAAM,wDAEV,CAAE99C,WAAY,KACd,CACIA,WAAY,iBACZsrD,OAAQ,WACJ1Z,YAAW,WACP7yB,EAAO4mD,UAAU,8BAA8BF,QAChD,OAGX,CAAEzlE,WAAY,KACd,CACIA,WAAY,qBACZsrD,OAAQ,WACkB,IAAI,GAAgB1mC,EAAK4W,MAC/BsW,SAGxB,CAAE9xC,WAAY,KACd,CACIA,WAAY,yBACZ89C,KAAM,2DAsBlB,MAARzI,IAAiBA,EAAKszB,UAAYtzB,EAAKuzB,gBAAkBvzB,EAAKwzB,aAC9DN,EAAShrB,MAAM,GAAGS,QAAQT,MAAMnyC,KACpB,CACIpL,WAAY,+BACZ89C,KAAM,2BAKd,MAARzI,GAAiBA,EAAKszB,UACtBJ,EAAShrB,MAAM,GAAGS,QAAQT,MAAMnyC,KACpB,CACIpL,WAAY,uBACZ89C,KAAM,mBACR,CACE99C,WAAW,qBACXsrD,OAAQ,WACDwd,QAAQ,oCACPr1B,GAAK,WAAY,IAAI,WACjBiG,MAAM,2CACP,SAACpmC,GACAomC,MAAMpmC,SAQtC+9B,OAAO,aAAazf,QACpB/qB,KAAKkiE,SAASR,EAAU,KA7OhC,kCAgPgBzmD,GACRjb,KAAK20B,KAAKgpC,mBAAmBxiD,SAASF,KAjP9C,+BAoPaknD,EAAYrsD,GAEjBqsD,EAAKrsD,MAAQA,EAEA,GAATA,EACAqsD,EAAKvnB,SAAWpQ,OAAO,cAEvB23B,EAAKvnB,SAAWpQ,OAAO,kCACvBA,OAAO,QAAQV,OAAOq4B,EAAKvnB,WAG/BunB,EAAKvnB,SAASxN,KAAK,QAAS+0B,GAXG,2BAY/B,YAAeA,EAAKzrB,MAApB,+CAA2B,KAAlBM,EAAkB,QACvB,GAAqB,KAAjBA,EAAG79C,WACH69C,EAAG4D,SAAWpQ,OAAO,8CAClB,CAEH,GADAwM,EAAG4D,SAAWpQ,OAAO,QAAUwM,EAAG79C,WAAa,UAChC,MAAX69C,EAAGC,KAAc,CACjB,IAAImrB,EAAQ53B,OAAO,YAAcwM,EAAGC,KAAO,8CAC3CmrB,EAAM/1B,GAAG,aAAa,SAACiI,GACnBA,EAAMG,kBACN1J,YAAW,WACPo3B,EAAKvnB,SAASxP,SACf,QAEPg3B,EAAMt4B,OAAOkN,EAAG4D,UAChB5D,EAAG4D,SAAWwnB,EAEA,MAAdprB,EAAGG,SACHn3C,KAAKkiE,SAASlrB,EAAGG,QAASrhC,EAAQ,GAEtC9V,KAAKqiE,sBAAsBF,EAAMnrB,GACpB,GAATlhC,GACAkhC,EAAG4D,SAAS1P,SAAS,mBAG7Bi3B,EAAKvnB,SAAS9Q,OAAOkN,EAAG4D,UACxB5D,EAAG4D,SAASxN,KAAK,QAAS4J,IArCC,kFAwC/B,IAAIj5B,EAAO/d,KACXwqC,OAAOlvB,UAAU+wB,GAAG,aAAa,WAC7B,IAAK,IAAIp1C,EAAI,EAAGA,EAAI,EAAGA,IACW,MAA1B8mB,EAAKyjD,eAAevqE,KACpB8mB,EAAKyjD,eAAevqE,GAAGm0C,OACvBrtB,EAAKyjD,eAAevqE,GAAK,MAGjC8mB,EAAK0jD,yBAA0B,OApS3C,4CAyS0BU,EAAYnrB,GAC9B,IAAIj5B,EAAO/d,KAEM,MAAbg3C,EAAGyN,QACHzN,EAAG4D,SAASvO,GAAG,aAAa,SAACzuB,GAASo5B,EAAGyN,OAAOzN,EAAG79C,eAGrC,MAAd69C,EAAGG,SACHH,EAAG4D,SAASvO,GAAG,aAAa,SAACzuB,GACzBG,EAAKukD,YAAYtrB,GACjBj5B,EAAK0jD,yBAA0B,EAC/B7jD,EAAG62B,qBAGPuC,EAAG4D,SAASvO,GAAG,sBAAsB,WAC7BtuB,EAAK0jD,wBACL1jD,EAAKukD,YAAYtrB,GAE0B,MAAvCj5B,EAAKyjD,eAAeW,EAAKrsD,MAAQ,KACjCiI,EAAKyjD,eAAeW,EAAKrsD,MAAQ,GAAGs1B,OACpCrtB,EAAKyjD,eAAeW,EAAKrsD,MAAQ,GAAK,UAKlDkhC,EAAG4D,SAASvO,GAAG,sBAAsB,WACU,MAAvCtuB,EAAKyjD,eAAeW,EAAKrsD,MAAQ,KACjCiI,EAAKyjD,eAAeW,EAAKrsD,MAAQ,GAAGs1B,OACpCrtB,EAAKyjD,eAAeW,EAAKrsD,MAAQ,GAAK,WArU1D,kCA4UgBkhC,GAER,IAEIjf,EACAqf,EAHAD,EAAUH,EAAGG,QAII,GAAjBA,EAAQrhC,OACRiiB,EAAOif,EAAG4D,SAASp2C,WAAWuzB,KAC9Bqf,EAAM,KAENrf,EAAOif,EAAG4D,SAAS31C,SAAS8yB,KAAOif,EAAG4D,SAASzE,QAC/CiB,EAAMJ,EAAG4D,SAAS31C,SAASmyC,KAG/BD,EAAQyD,SAAShM,IAAI,CACjBwI,IAAUA,EAAM,KAChBrf,KAAWA,EAAO,OAGoB,MAAtC/3B,KAAKwhE,eAAerqB,EAAQrhC,QAC5B9V,KAAKwhE,eAAerqB,EAAQrhC,OAAOs1B,OAGvC+L,EAAQyD,SAAS3P,OACjBjrC,KAAKwhE,eAAerqB,EAAQrhC,OAASqhC,EAAQyD,c,6BApWrD,K,uKChBO,IAAM,GAAb,WAsBI,WAAY2nB,I,4FAA+B,SApB3C,KAAA/9D,SAAmB,EAOnB,KAAAg+D,UAAoB,GACpB,KAAAC,aAAuB,IAcnBziE,KAAK0iE,OAASl4B,OAAO,8FACrBxqC,KAAK2iE,KAAOn4B,OAAO,6DACnBxqC,KAAK4iE,MAAQp4B,OAAO,8DACpBxqC,KAAK6iE,SAAWr4B,OAAO,+EAEvBxqC,KAAK4iE,MAAM94B,OAAO9pC,KAAK6iE,UACvB7iE,KAAK0iE,OAAO54B,OAAO9pC,KAAK2iE,KAAM3iE,KAAK4iE,OAEnCL,EAAWz4B,OAAO9pC,KAAK0iE,Q,UAhC/B,O,EAAA,G,EAAA,sCAoCmBzrE,GACX+I,KAAKg9B,YAAc/lC,IArC3B,gCA0CQ,IAAI6rE,EACAC,EACAhlD,EAAO/d,KACX+d,EAAK0kD,aAAexqB,GAAkBj4C,KAAK0iE,OAAO9zB,IAAI,UACtD7wB,EAAKykD,UAAYvqB,GAAkBl6B,EAAK6kD,MAAMh0B,IAAI,UAClD7wB,EAAKilD,KAAOjlD,EAAK0kD,aAAe1kD,EAAKykD,UAErC,IAAIxsB,EAAeC,OAAOC,aAAe,UAAY,QAErDn4B,EAAK2kD,OAAOr2B,GAAG2J,EAAe,QAAQ,SAACv+B,GAInC,IAAIk/B,EAAIl/B,EAAE4lC,MAAQt/B,EAAK2kD,OAAOz9D,SAAS8yB,KAAO,EAC9Cha,EAAKklD,SAAStsB,GACd54B,EAAK6kD,MAAMh0B,IAAI,OAAQ+H,EAAI,MAE3B54B,EAAK6kD,MAAM5qB,QAAQhC,EAAe,OAAQ,CAACv+B,EAAEyrD,aAWjDljE,KAAK4iE,MAAMv2B,GAAG2J,EAAe,QAAQ,SAACv+B,EAAGk/B,GAC7B,MAALA,IAAWA,EAAIl/B,EAAEyrD,SACpBJ,EAAansB,EACbosB,EAAchlD,EAAKvZ,SACnBgmC,OAAO,yBAAyBoE,IAAI,UAAW,QAC/C7wB,EAAK8kD,SAAS53B,OAEdT,OAAOlvB,UAAU+wB,GAAG2J,EAAe,qBAAqB,SAACv+B,GACrD,IAAI0rD,EAAS1rD,EAAEyrD,QAAUJ,EACzB/kD,EAAKklD,SAASF,EAAcI,MAGhC34B,OAAOlvB,UAAU+wB,GAAG2J,EAAe,mBAAmB,WAClDxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,mBACpCxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,qBACpCj4B,EAAK8kD,SAASz3B,OACdZ,OAAO,yBAAyBoE,IAAI,UAAW,QAGnDn3B,EAAEg9B,uBAzFd,+CA+F6B2uB,GACrB,IAAIC,EAAkB,CAAC,EAAG,GAAI,IAAK,IAAM,IAAO,IAAQrjE,KAAKg9B,YAAYsmC,mBAEpD,OAAlBF,IAAyBA,EAAiBpjE,KAAKg9B,YAAYsmC,mBAC9DF,EAAiB92D,KAAKC,IAAI62D,EAAgBpjE,KAAKg9B,YAAYsmC,mBAC3DF,EAAiB92D,KAAKi3D,IAAIH,EAAgB,GAE1C,IAAI,IAAInsE,EAAI,EAAGA,EAAIosE,EAAgBrhE,OAAS,EAAG/K,IAAI,CAC/C,IAAI8gC,EAAOsrC,EAAgBpsE,GACvBqhC,EAAQ+qC,EAAgBpsE,EAAE,GAC9B,GAAGmsE,GAAkBrrC,GAAQqrC,GAAkB9qC,EAAM,CACjD,IAAIkrC,EAAqBxjE,KAAKgjE,MAAMK,EAAgBrhE,OAAS,GACzDyhE,EAAen3D,KAAK+5B,MAAMm9B,EAAqBvsE,EAAIusE,GAAsBJ,EAAiBrrC,IAAOO,EAAQP,IAC7G/3B,KAAK4iE,MAAMh0B,IAAI,OAAQ60B,EAAe,MACtCzjE,KAAKwE,SAAWi/D,EAChB,OAIRzjE,KAAK0jE,oBAAoBN,KAlHjC,+BAsHaO,GAEFA,EAAc,IACbA,EAAc,GAGfA,EAAc3jE,KAAKgjE,OAClBW,EAAc3jE,KAAKgjE,MAGvBhjE,KAAKwE,SAAWm/D,EAEhB3jE,KAAK4iE,MAAMh0B,IAAI,OAAQ+0B,EAAc,MAGrC,IAAIN,EAAkB,CAAC,EAAG,GAAI,IAAK,IAAM,IAAO,IAAQrjE,KAAKg9B,YAAYsmC,mBAErEM,EAAgB5jE,KAAKgjE,MAAQK,EAAgBrhE,OAAS,GACtD6hE,EAAgBv3D,KAAK6sB,MAAMwqC,EAAYC,GACxCC,GAAiBR,EAAgBrhE,OAAS,GAAG6hE,IAChD,IAEIC,EAAcT,EAAgBQ,GAG9BE,EAAQD,GALgBH,EAAcE,EAAcD,GAAeA,GAGrDP,EAAgBQ,EAAgB,GAETC,GAEzC9jE,KAAK0jE,oBAAoBK,KAjJjC,0CAuJwBX,GAChBpjE,KAAKg9B,YAAYomC,eAAiBA,EAElCpjE,KAAKg9B,YAAYgnC,6BAEjB,IAAIC,EAAc,GAAK33D,KAAK43D,KAAKd,GAC9BA,GAAkBpjE,KAAKg9B,YAAYsmC,kBAAoB,KACtDW,EAAc,4BAGlBjkE,KAAK6iE,SAAS3tB,KAAK+uB,EAAc,oB,6BAjKzC,K,uKCiBO,IAAM,GAAb,WA2BI,WAAoBE,EAAgDC,I,4FAAqC,SAArF,KAAAD,oBAAgD,KAAAC,mBAXpE,KAAAC,mBAA0D,CACtD,MAAS,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC1C,MAAS,EAAC,GAAO,GAAM,GAAO,GAAO,GAAO,GAC5C,KAAQ,EAAC,GAAO,GAAM,GAAM,GAAO,GAAO,GAC1C,SAAY,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC7C,SAAY,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC7C,QAAW,EAAC,GAAO,GAAO,GAAM,GAAO,GAAO,GAC9C,QAAW,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,IAM3CrkE,KAAKskE,aAAe,IAAI,GAAaH,GACrCnkE,KAAKskE,aAAa5U,UAElB1vD,KAAKukE,aAAe/5B,OAAO,8DAC3BxqC,KAAKwkE,aAAeh6B,OAAO,8DAC3BxqC,KAAKykE,YAAcj6B,OAAO,4DAC1BxqC,KAAK0kE,gBAAkBl6B,OAAO,sEAC9BxqC,KAAK2kE,gBAAkBn6B,OAAO,sEAC9BxqC,KAAK4kE,eAAiBp6B,OAAO,oEAC7BxqC,KAAK6kE,eAAiBr6B,OAAO,kEAK7B25B,EAAkBr6B,OAAO9pC,KAAKukE,aAAcvkE,KAAKwkE,aAAcxkE,KAAKykE,YAChEzkE,KAAK0kE,gBAAiB1kE,KAAK2kE,gBAAiB3kE,KAAK4kE,eAAgB5kE,KAAK6kE,gB,UA5ClF,O,EAAA,G,EAAA,sCA2DmB5tE,GACX+I,KAAKg9B,YAAc/lC,EACnB+I,KAAKskE,aAAaQ,eAAe7tE,GACjC+I,KAAKskE,aAAarB,SAAS,S,6BA9DnC,K,uKCjBO,IAAM8B,GAAb,WAMI,WAAoBhnC,EAA8B2S,EAA8B/b,I,4FAAU,SAAtE,KAAAoJ,UAA8B,KAAA2S,YAA8B,KAAA/b,OAFhF,KAAAqwC,aAAuB,EAGnBhlE,KAAK2kD,O,UAPb,O,EAAA,G,EAAA,8BAWQ3kD,KAAKogE,QAAU51B,OAAO,WACtBA,OAAO,SAASoE,IAAI,aAAc,UAClC5uC,KAAKogE,QAAQt2B,OAAOU,OAAO,yOAAD,OAGqExqC,KAAK0wC,UAAUl5C,KAHpF,2iBAgB1B,IAAIytE,EAAez6B,OAAO,uBACtBzsB,EAAO/d,KApBH,uBAsBR,YAAiBA,KAAK+9B,QAAtB,+CAA8B,KAAtB76B,EAAsB,+BAC1B,IAD0B,IAC1B,EAD0B,iBAClBgiE,EADkB,QAElBC,EAAe36B,OAAO,oCACtB46B,EAAgB56B,OAAO,oCAAD,OAAqCtnC,EAAM1L,KAA3C,WACtB6tE,EAAe76B,OAAO,mCAAD,OAAoC06B,EAAQI,QAA5C,YAAuDJ,EAAQK,aAA/D,WACzBJ,EAAar7B,OAAOs7B,EAAeC,GACnCJ,EAAan7B,OAAOq7B,GACpBA,EAAa94B,GAAG,aAAa,WACzB84B,EAAa3wB,YAAY,aACxBz2B,EAAKinD,cAAgBG,EAAavpB,SAAS,aAAe,GAAK,EAC/DpR,OAAO,2BAA2B50B,KAAlC,UAA0CmI,EAAKinD,aAA/C,kCAELG,EAAa/3B,KAAK,UAAW83B,GAC7BC,EAAa/3B,KAAK,QAASlqC,IAZ/B,EAAmBA,EAAMsiE,SAAzB,+CAAkC,IADR,oFAtBtB,kFAuCRh7B,OAAO,0BAA0B6B,GAAG,SAAS,WACzC,IAAIhjC,EAAqBmhC,OAAO,0BAA0B4B,MACzC,MAAd/iC,GAAoC,IAAdA,EACrB6jC,EAAE,uBAAuBjC,OAEzBiC,EAAE,uBAAuBu4B,MAAK,SAACrjE,EAAOwuB,GAClC,IAAIgqB,EAAWpQ,OAAO5Z,GAClB1tB,EAAkB03C,EAASxN,KAAK,SAChC83B,EAAoBtqB,EAASxN,KAAK,YAC3BlqC,EAAM1L,KAAO,IAAM0tE,EAAQI,QAAU,IAAMJ,EAAQK,cACtDngE,QAAQiE,IAAe,EAC3BuxC,EAAS3P,OAET2P,EAASxP,aASzBprC,KAAKqgE,YAAcrgE,KAAKogE,QAAQ1vC,KAAK,gBACrC1wB,KAAKogE,QAAQxxB,IAAI,aAAc,WAE/BpE,OAAO,wBAAwB6B,GAAG,SAAS,WAAQ4J,OAAOoQ,QAAQqf,UAClEl7B,OAAO,4BAA4B6B,GAAG,SAAS,WAAOtuB,EAAK4nD,yBAE3D3lE,KAAK20B,KAAK0lC,mBAAmBuL,mCAAkC,WAC3D7nD,EAAKk9B,aA9EjB,4CAmFuB,WAEXrK,EAAwB,GAC5B1D,EAAE,uBAAuBu4B,MAAK,SAACrjE,EAAOwuB,GAClC,IAAIgqB,EAAWpQ,OAAO5Z,GACtB,GAAGgqB,EAASgB,SAAS,aAAa,CAC9B,IAAIspB,EAAoBtqB,EAASxN,KAAK,WACtCwD,EAAYrsC,KAAK2gE,EAAQtjE,QAIjCq0C,OAAOoQ,QAAQqf,OAEf1lE,KAAK20B,KAAKwuB,eAAe0iB,wBAAwB7lE,KAAK0wC,UAAW,KAAME,GAAa,SAAC7kC,GACjF,GAAa,MAATA,EAAe,CACf,IAAIo3C,EAAiB,EAAKxuB,KAAKwuB,eAC3B/c,EAAK+c,EAAepV,yBAA2BoV,EAAenV,kBAClE6E,MAAM,iBAAD,OAAkB,EAAKnC,UAAUl5C,KAAjC,qBAAkDo5C,EAAY5uC,OAA9D,yDAAqHokC,EAArH,wCAELyM,MAAM9mC,QAtGtB,8BA8GQ/L,KAAKogE,QAAQxxB,IAAI,aAAc,UAC/B5uC,KAAKogE,QAAQr1C,QACbyf,OAAO,SAASoE,IAAI,aAAc,gB,6BAhH1C,K,uKCOO,IAAM,GAAb,WAMI,WAAoB8B,EAA8B/b,I,4FAAU,SAAxC,KAAA+b,YAA8B,KAAA/b,OAJlD,KAAAytB,UAAuB,CACnB,CAACjpD,WAAY,MAAOgH,YAAa,oG,UAHzC,O,EAAA,G,EAAA,8BAUQ,WACI4gE,EAAS,IAAIZ,GACjBY,EAAOpc,OACPoc,EAAOC,QAAQ,+BAAiChhE,KAAK0wC,UAAUl5C,MAC/DupE,EAAO+E,WAAW,+BAElB,IAAIC,EAAmB/lE,KAAK0wC,UAAUtB,SAASgT,UAN/C,uBAQA,YAAmBpiD,KAAKoiD,UAAxB,+CAAkC,KAA1B4jB,EAA0B,QAC1BC,EAAMlF,EAAOmF,YAAYF,EAAQ7lE,YAAa4lE,EAAiB3gE,QAAQ4gE,EAAQ7sE,aAAe,EAAG6sE,EAAQ7sE,YAC7G6sE,EAAQG,cAAgBF,GAV5B,kFAaAlF,EAAO7c,QAAQ,CACX,CACIpQ,QAAS,YACThpB,MAAO,UACPkhB,SAAU,WAAO+0B,EAAO9lB,UAE5B,CACInH,QAAS,KACThpB,MAAO,QACPkhB,SAAU,WACN,IAAIo6B,GAAmB,EACnBC,EAAoB,GAFb,uBAGX,YAAe,EAAKjkB,UAApB,+CAA8B,KAAtBkkB,EAAsB,QACtBC,EAAOD,EAAIH,gBACfC,EAAUA,GAAYG,GAASR,EAAiB3gE,QAAQkhE,EAAIntE,aAAe,EACxEotE,GAAMF,EAAQ9hE,KAAK+hE,EAAIntE,aANnB,kFASRitE,IACC,EAAK11B,UAAUtB,SAASgT,UAAYikB,EACpC,EAAK31B,UAAUd,OAAQ,EACvB,EAAKc,UAAU81B,2BACf,EAAK7xC,KAAKwuB,eAAezU,YAAY,MAAM,IAG/CqyB,EAAO9lB,iB,6BAhD3B,K,uKCKO,IAAM,GAAb,WAaI,WAAoBtmB,EAAoBkrB,I,4FAAwC,SAA5D,KAAAlrB,OAAoB,KAAAkrB,sBAXxC,KAAA4mB,qBAA+B,KAE/B,KAAAC,yBAAqC,GAglBrC,KAAAC,eAAyB,K,UAplB7B,O,EAAA,G,EAAA,iCAmBQ3mE,KAAKs4C,UAAY,IAAIsG,GAAU5+C,KAAK6/C,qBAEpC7/C,KAAK4mE,oBAEL5mE,KAAK6mE,2BAvBb,0CA2BqB,WAET9oD,EAAO/d,KAEXA,KAAKmyC,cAAgB,IAAI,GAAenyC,KAAKs4C,UAAW,yBAA0B,IAC9E,oBAAqB,gBAAiB,QAAQ,GAAM,GAExDt4C,KAAKmyC,cAAc+I,mBAEf,SAACgE,EAAkB4nB,GAEf,GAAkC,MAA9B/oD,EAAK4W,KAAK0d,iBAEV,OADAQ,MAAM,gDACC,KAGX,IAAIY,EAAU,CACVj8C,KAAM0nD,EAAiB1nD,KACvBwtC,OAAO,EACP4K,OAAO,EACPh6B,KAAM,GACN+3C,qBAAsB,KACtBgB,eAAgB,KAChBoY,+BAA+B,EAC/Bx0B,QAAS,EACToB,aAAcuL,EACdxL,iCAAiC,GAEjCr8C,EAAI,IAAI,GAAOo8C,EAAG11B,EAAK4W,MACV5W,EAAK4W,KAAK0d,iBAAiB7zB,YACjCq1B,UAAUx8C,GACrB0mB,EAAK2sC,gBAAgBrzD,GACrB0mB,EAAK4W,KAAKwuB,eAAe6jB,eAAe3vE,EAAG0mB,EAAK4W,KAAK0d,iBAAkBt0B,EAAK4W,KAAKub,mBAC7E,SAACnkC,GACgB,MAATA,EACA+6D,EAAuCzvE,GAEvCw7C,MAAM,wCAO1B7yC,KAAKmyC,cAAc+K,eACf,SAAClmD,EAAgBqpD,GACbA,EAAUA,EAAQpoC,OAAO,EAAG,IAC5B,IAAI6pB,EAAO9qC,EAAO8qC,KAKlB,OAHAA,EAAKtqC,KAAO6oD,EACZve,EAAK8N,OAAQ,EACb7xB,EAAK4W,KAAKwuB,eAAezU,cAClB2R,GAGfrgD,KAAKmyC,cAAcuL,eACf,SAAC1mD,EAAgBiwE,GACblpD,EAAK4W,KAAKwuB,eAAe+jB,0BAA0B,OAAQlwE,EAAO8qC,KAAKlgC,IAAI,SAACmK,GAC3D,MAATA,GACAgS,EAAK4W,KAAK0d,iBAAiB7zB,YAAY8zB,aAAat7C,GACpDiwE,KAEAp0B,MAAM,wCAMlB7yC,KAAKmyC,cAAcgL,oBAAsB,SAAC+B,GAEtC,IAAIioB,EAAsC,GAmC1C,OAjCKppD,EAAK4W,KAAK6Z,KAAKwzB,YAAcjkD,EAAK4W,KAAK6Z,KAAKszB,UAAY/jD,EAAK4W,KAAK6Z,KAAKuzB,iBAI9C,MAHG7iB,EAAiB7L,gBAC5BvR,KAEV6sB,eACJwY,EAAQ5iE,KAAK,CACTuvC,QAAS,4BACT9H,SAAU,SAACpb,GAEP,I/BxGHg+B,E+BwGO9sB,EAAgBlR,EAAQyiB,gBAAiBvR,KAC7CA,EAAK6sB,gB/BzGRC,E+ByGsC,IAAIC,K/BxGrE,UAAUxZ,GAAOuZ,EAAKG,WAAtB,YAAoC1Z,GAAOuZ,EAAKI,WAAa,GAA7D,YAAmEJ,EAAKK,cAAxE,aAA0F5Z,GAAOuZ,EAAKwY,YAAtG,YAAqH/xB,GAAOuZ,EAAKyY,gB+ByGnGvlC,EAAK8N,OAAQ,EACb7xB,EAAK4W,KAAKwuB,eAAezU,YAAY,MAAM,GAC3C3wB,EAAKupD,qBAAqBxlC,MAIlCqlC,EAAQ5iE,KAAK,CACTuvC,QAAS,mCACT9H,SAAU,SAACpb,GAEP,IAAIkR,EAAgBlR,EAAQyiB,gBAAiBvR,KAC7CA,EAAK6sB,eAAiB,KACtB7sB,EAAK8N,OAAQ,EACb7xB,EAAK4W,KAAKwuB,eAAezU,YAAY,MAAM,GAC3C3wB,EAAKupD,qBAAqBxlC,OAQnCqlC,GAKfnnE,KAAKmyC,cAAckJ,eACf,SAACrkD,GACG+mB,EAAK2sC,gBAAgB1zD,IAI7BgJ,KAAKunE,mBAAqB/8B,OAAO,gIAEjCxqC,KAAKunE,mBAAmBl7B,GAAG,aAAa,SAAC50B,GAErC,EAAKkd,KAAK2R,sBAAsB4c,4BAEhCzrC,EAAEg9B,qBAGNz0C,KAAKmyC,cAAcoH,UAAUv5C,KAAKunE,oBAClCvnE,KAAKunE,mBAAmBn8B,SAzJhC,2CA6JyBtJ,G,QACbihB,EAA+C,QAArC,EAAqB,QAArB,EAAGjhB,aAAI,EAAJA,EAAM6R,oBAAY,eAAE+G,sBAAc,eAAEhqB,KAAK,gCAC1D,GAAkB,MAAdqyB,EAAJ,CAEAA,EAAWryB,KAAK,sBAAsBmW,SAEtC,IAAI3jC,EAAgB,KAChBqG,EAAgB,GAUpB,GAT0B,MAAvBu4B,EAAK6sB,iBACJzrD,EAAQ,eACRqG,EAAQ,oCAAsCu4B,EAAK6sB,eAChD7sB,EAAK6rB,uBACJzqD,EAAQ,yBACRqG,EAAQ,yBAIH,MAATrG,EAAe,CACf,IAAIskE,EAAqBh9B,OAAO,iCAAD,OAAkCtnC,EAAlC,oBAAmDqG,EAAnD,aAC/Bw5C,EAAWtI,QAAQ+sB,GAChBtkE,EAAMkC,QAAQ,cAAgB,IAC7BoiE,EAAmBn7B,GAAG,aAAa,SAAC50B,GAAD,OAAOA,EAAEg9B,qBAC5C+yB,EAAmBn7B,GAAG,SAAS,SAAC50B,GAC5BA,EAAEg9B,0BApLtB,+CA8L0B,WAEd12B,EAAO/d,KAEXA,KAAK8yC,mBAAqB,IAAI,GAAe9yC,KAAKs4C,UAAW,aAAc,IACvE,yBAA0B,qBAAsB,aAAa,GAAM,GAEvEt4C,KAAK8yC,mBAAmBoI,mBAEpB,SAACgE,EAAkB4nB,GAEf,IAAI72B,EAAmBlyB,EAAK4W,KAAK6Z,KAAK5sC,GACJ,MAA/Bmc,EAAK4W,KAAKub,oBACTD,EAAWlyB,EAAK4W,KAAKub,mBAGzB,IAAII,EAAe,IAAI,GAAU4O,EAAiB1nD,KAAMumB,EAAK4W,KAAMsb,GACnEK,EAAE6C,UAAW,EACb7C,EAAE4C,KAAOgM,EAAiBhM,KAAKjwC,KAAK,KACpC8a,EAAK4W,KAAK+a,cAAcnrC,KAAK+rC,GAE7BvyB,EAAK4W,KAAKwuB,eAAeskB,oBAAoBn3B,EAAGvyB,EAAK4W,KAAKub,mBAAmB,SAACnkC,GAC7D,MAATA,GACAgS,EAAKo0B,cAAcu1B,iBAAgB,GACnCZ,EAAuCx2B,GACvCvyB,EAAKwxC,mBAAmBjf,GACxBA,EAAEq3B,wBAAwBzoB,IAE1BrM,MAAM,wCAMtB7yC,KAAK8yC,mBAAmBoK,eACpB,SAACxM,EAAsB2P,GAKnB,OAJAA,EAAUA,EAAQpoC,OAAO,EAAG,IAC5By4B,EAAUl5C,KAAO6oD,EACjB3P,EAAUd,OAAQ,EAClB7xB,EAAK4W,KAAKwuB,eAAezU,cAClB2R,GAGfrgD,KAAK8yC,mBAAmB4K,eACpB,SAAChN,EAAsBo2B,GACnB/oD,EAAK4W,KAAKwuB,eAAe+jB,0BAA0B,YAAax2B,EAAU9uC,IAAI,SAACmK,GAC9D,MAATA,GACAgS,EAAK4W,KAAKizC,gBAAgBl3B,GAC1B3yB,EAAKo0B,cAAcu1B,gBAAgB3pD,EAAK4W,KAAK+a,cAAc1tC,OAAS,GACpE8kE,KAEAj0B,MAAM,wCAMtB7yC,KAAK8yC,mBAAmBuI,eACpB,SAAC3K,GACOA,EAAUyC,UACVp1B,EAAK4W,KAAKwuB,eAAezU,aAAY,WACjC3wB,EAAKwxC,mBAAmB7e,OAMxC1wC,KAAK8yC,mBAAmBwG,kBAAoB,SAACD,EAA8BtM,GACvE,IAAIkD,EAAmBlyB,EAAK4W,KAAK6Z,KAAK5sC,GACJ,MAA/Bmc,EAAK4W,KAAKub,oBACTD,EAAWlyB,EAAK4W,KAAKub,mBAGzB,IAAIiO,EAAoB,IAAI,GAAU9E,EAAW7hD,KAAMumB,EAAK4W,KAAMsb,GAClEkO,EAAOhL,UAAW,EAElBgL,EAAOjL,KAAOmG,EAAWnG,KAAKjwC,KAAK,KACnCk7C,EAAOxK,aAAe0F,EACtBA,EAAWhG,gBAAkB8K,EAC7BpgC,EAAK4W,KAAK+a,cAAcnrC,KAAK45C,GAE7BpgC,EAAK4W,KAAKwuB,eAAeskB,oBAAoBtpB,EAAQpgC,EAAK4W,KAAKub,mBAAmB,SAACnkC,GAClE,MAATA,EACAghC,EAAgBoR,IAEhBtL,MAAM,WAAa9mC,GACnBgS,EAAK+0B,mBAAmBV,cAAciH,QAMlDr5C,KAAK8yC,mBAAmBoL,aAAe,SAAC1K,GAChC/vC,MAAMkjB,QAAQ6sB,KAAKA,EAAK,CAACA,IADkD,2BAE/E,YAAaA,EAAb,+CAAgB,KAAR5rC,EAAQ,QACR+nC,EAAgB/nC,EAAEyrC,gBACtB1D,EAAGuD,KAAOtrC,EAAEsrC,KAAKjwC,KAAK,KACtB0sC,EAAGC,OAAQ,GALgE,kFAO/E,EAAKjb,KAAKwuB,eAAezU,eAG7B1uC,KAAK6nE,YAAcr9B,OAAO,uHAE1BxqC,KAAK6nE,YAAYx7B,GAAG,eAAe,SAAC50B,GAChCA,EAAEg9B,kBACFh9B,EAAEwhC,iBAEFl7B,EAAK4W,KAAKwuB,eAAezU,aAAY,WACjC3wB,EAAK+pD,yBAGT/pD,EAAK4W,KAAKqpC,UAAU+J,qBAKxB/nE,KAAK8yC,mBAAmByG,UAAUv5C,KAAK6nE,aACvC7nE,KAAK6nE,YAAYz8B,OAEjBprC,KAAK8yC,mBAAmBqK,oBAAsB,SAAC6qB,GAE3C,IAAIb,EAAsC,GAmI1C,OAjIAA,EAAQ5iE,KAAK,CACTuvC,QAAS,cACT9H,SAAU,SAACpb,GACP,EAAK+D,KAAKwuB,eAAe8kB,uBAAuBr3C,EAAQyiB,iBACpD,SAACtnC,EAAem8D,GACZ,GAAa,MAATn8D,GAAkC,MAAjBm8D,EAAuB,CACxC,IAAIC,EAA0B,GAAU3lB,gBAAgB0lB,EAAe,EAAKvzC,MAC5E,EAAKA,KAAK+a,cAAcnrC,KAAK4jE,GAC7B,IAAIj1B,EAAOg1B,EAAch1B,KAAKtgC,MAAM,KAClB,GAAfsgC,EAAKlxC,QAA0B,IAAXkxC,EAAK,KAAUA,EAAO,IAC7Ci1B,EAAax0B,aAAe,CACxBn8C,KAAM2wE,EAAa3wE,KACnB67C,gBAAiB80B,EACjB70B,UAAyC,MAA9B60B,EAAah3B,cAAwB,YAAc,aAC9DgC,UAAU,EACVD,KAAMA,GAGV,EAAKJ,mBAAmBM,WAAW+0B,EAAax0B,cAChD,EAAKb,mBAAmBC,eAEf,MAAThnC,GACA8mC,MAAM9mC,SAMvB,EAAK4oB,KAAK6Z,KAAKwzB,YAAc,EAAKrtC,KAAKyzC,gBAAgBC,WAAWxvB,SAAS72C,OAAS,GACnFmlE,EAAQ5iE,KAAK,CACTuvC,QAAS,yBACT9H,SAAU,SAACpb,KACXumB,QAAS,EAAKxiB,KAAKyzC,gBAAgBC,WAAWxvB,SAAS91C,KAAI,SAACywC,GACxD,MAAO,CACHM,QAASN,EAAGh8C,KACZw0C,SAAU,SAACpb,GACP,IAAI+f,EAAc6C,EAAGH,gBAEjB3C,EAAuB9f,EAAQyiB,gBAEnC,EAAK1e,KAAKwuB,eAAe0iB,wBAAwBn1B,EAAWC,EAAQ,MAAM,SAAC5kC,GACvE,GAAa,MAATA,EAAe,CACf,IAAIo3C,EAAiB,EAAKxuB,KAAKwuB,eAC3B/c,EAAK+c,EAAepV,yBAA2BoV,EAAenV,kBAClE6E,MAAM,iBAAmBnC,EAAUl5C,KAAO,wBAA0Bm5C,EAAOn5C,KAAO,mCACpE4uC,EAAK,uCAEnByM,MAAM9mC,YAQ9B,CACI+nC,QAAS,yCACT9H,SAAU,SAACpb,GACP,IAAImN,EAAuB,EAAKpJ,KAAKyzC,gBAAgBC,WAAWxvB,SAAS91C,KAAI,SAAAywC,GAAE,OAAIA,EAAGH,mBAClF3C,EAAuB9f,EAAQyiB,gBACnC,IAAI0xB,GAA2BhnC,EAAS2S,EAAW,EAAK/b,SAMhE,EAAKA,KAAK2zC,cAAgB,EAAK3zC,KAAKub,mBAAqB,EAAKvb,KAAK6Z,KAAK5sC,KACT,MAA3DomE,EAA0B30B,gBAAgBlC,cAC1Cg2B,EAAQ5iE,KAAK,CACTuvC,QAAS,wBACT9H,SAAU,SAACpb,GACP,IAAI8f,EAAuB9f,EAAQyiB,gBAEnCt1B,EAAK4W,KAAK4zC,wBAAwBt9B,KAAKyF,IAE3CyG,QAAS,QAuBbgwB,EAAQ5iE,KAAK,CACTuvC,QAAS,iCACT9H,SAAU,SAACpb,GACoBA,EAAQyiB,gBACzB6P,+BAGlBikB,EAAQ5iE,KAAK,CACTuvC,QAAS,0BACThpB,MAAO,UACPkhB,SAAU,SAACpb,GACP,IAAI8f,EAAuB9f,EAAQyiB,gBACnC3C,EAAUS,cAAgB,KAC1BT,EAAUd,OAAQ,EAClB,EAAKjb,KAAKwuB,eAAezU,aAAY,WACjC3wB,EAAK+0B,mBAAmB01B,gBAAgB53C,EAAS,aACjD8f,EAAUi3B,wBAAwB/2C,MACnC,QAMnBu2C,EAAQ5iE,KAAK,CACTuvC,QAAS,mBACT9H,SAAU,SAACpb,GACP,IAAI8f,EAAuB9f,EAAQyiB,gBACnC,IAAI,GAAwB3C,EAAW,EAAK/b,MAAMyiC,UAInD+P,KA3bnB,4CAicQnnE,KAAK20B,KAAKyzC,gBAAgBK,uBAC1BzoE,KAAK20B,KAAKwuB,eAAepV,yBAA2B/tC,KAAK20B,KAAKwuB,eAAetV,4BAC7E7tC,KAAK6nE,YAAYz8B,OACjBprC,KAAKmyC,cAAcu1B,gBAAgB1nE,KAAK20B,KAAK+a,cAAc1tC,OAAS,KApc5E,kCAucgB0uC,GAER,IAAIl5C,EAAoB,MAAbk5C,EAAoB,2BAA6BA,EAAUl5C,KAKtE,GAHAwI,KAAKmyC,cAAcu2B,WAAWlxE,GAC9BwI,KAAKmyC,cAAclN,QAEoB,MAAnCjlC,KAAK20B,KAAK2R,sBAA+B,4BACzC,YAAmBtmC,KAAK20B,KAAK2R,sBAAsB9nB,YAAY8F,YAAW,GAA1E,+CAAkF,QACvEwd,KAAK6R,aAAe,KAFU,mFAM7C,GAAiB,MAAbjD,EAAmB,CACnB,IAAIi4B,EAAuB,GADR,uBAGnB,YAAcj4B,EAAUlyB,YAAY8F,YAAW,GAA/C,+CAAuD,KAA9CjtB,EAA8C,QACnDsxE,EAAWpkE,KAAKlN,IAJD,kFAOnBsxE,EAAWzsB,MAAK,SAACt0C,EAAGu0C,GAAQ,OAAOv0C,EAAEk6B,KAAKtqC,KAAO2kD,EAAEra,KAAKtqC,KAAO,EAAIoQ,EAAEk6B,KAAKtqC,KAAO2kD,EAAEra,KAAKtqC,MAAQ,EAAI,KAEpG,cAAcmxE,EAAd,eAA0B,CAArB,IAAI,EAAC,KAEN,EAAE7mC,KAAK6R,aAAe,CAClBn8C,KAAM,EAAEsqC,KAAKtqC,KACb67C,gBAAiB,EACjBF,UAAU,EACVD,KAAM,IAGVlzC,KAAKmyC,cAAciB,WAAW,EAAEtR,KAAK6R,cACrC3zC,KAAKsnE,qBAAqB,EAAExlC,MAGhC9hC,KAAKmyC,cAAcY,kBA1e/B,uCA+eqBrD,GAEb1vC,KAAKmyC,cAAclN,QACnBjlC,KAAK8yC,mBAAmB7N,QAHe,2BAKvC,YAAcyK,EAAd,+CAA6B,KAApBY,EAAoB,QACrB4C,EAAO5C,EAAE4C,KAAKtgC,MAAM,KACN,GAAfsgC,EAAKlxC,QAA0B,IAAXkxC,EAAK,KAAUA,EAAO,IAC7C5C,EAAEqD,aAAe,CACbn8C,KAAM84C,EAAE94C,KACR67C,gBAAiB/C,EACjBgD,UAA8B,MAAnBhD,EAAEa,cAAwB,YAAc,aACnDgC,SAAU7C,EAAE6C,SACZD,KAAMA,GAGVlzC,KAAK8yC,mBAAmBM,WAAW9C,EAAEqD,cAErCrD,EAAEq3B,wBAAwBr3B,EAAEqD,eAlBO,kFAqBvC3zC,KAAK8yC,mBAAmBC,eACxB/yC,KAAKmyC,cAAcu1B,gBAAgBh4B,EAAc1tC,OAAS,KArgBlE,uCAygBqB0uC,EAAsB2a,GACnC,GAAqB,MAAjBA,EAAJ,CADqE,2BAErE,YAAc3a,EAAUlyB,YAAY8F,YAAW,GAA/C,+CAAuD,KAA9CjtB,EAA8C,QAC/CuxE,EAAqBvd,EAAcvzD,IAAIT,GACvCwxE,EAAsC,MAAdD,GAAoC,GAAdA,EAAmB,GAAK,IAAMA,EAAa,IAE7F5oE,KAAKmyC,cAAc22B,qBAAqBzxE,EAAEyqC,KAAK6R,aAAck1B,EAAa,kBANT,sFAzgB7E,mDAmhBiCv4B,GACH,MAAnBA,EAAEa,eAAyBb,EAAEL,UAAYjwC,KAAK20B,KAAK6Z,KAAK5sC,IACvD5B,KAAKunE,mBAAmBt8B,OAEnBjrC,KAAK20B,KAAK6Z,KAAKY,SAAS25B,cAAcC,sBAEvC,GAAO3f,WAAW,mBAAoBrpD,KAAK20B,KAAM30B,KAAKunE,qBAO1DvnE,KAAKunE,mBAAmBn8B,SAhiBpC,yCAoiBuBkF,GAA6C,IAA/B5D,EAA+B,wDAW5D,GATA1sC,KAAK8yC,mBAAmBwI,OAAOhL,GAAG,EAAO5D,GAErC1sC,KAAK20B,KAAKqI,YAAYokB,OAASC,GAAiBgD,SAChDrkD,KAAK20B,KAAKqI,YAAYisC,OAG1BjpE,KAAK20B,KAAK0d,iBAAmB/B,EAC7BtwC,KAAKkpE,YAAY54B,GAER,MAALA,EAAW,CACX,IAAI64B,EAAmB74B,EAAE9xB,YAAY8F,YAAW,GAEnB,MAAzBgsB,EAAEoS,oBACF1iD,KAAK0qD,gBAAgBpa,EAAEoS,qBAChBymB,EAAiBnnE,OAAS,EACjChC,KAAK0qD,gBAAgBye,EAAiB,IAEtCnpE,KAAK0qD,gBAAgB,MARd,2BAWX,YAAcye,EAAd,+CAAgC,KAAvB9xE,EAAuB,QAC5BA,EAAEyqC,KAAKkD,OAAQ,GAZR,kFAeoB,GAA3BmkC,EAAiBnnE,QAAgBhC,KAAK20B,KAAK6Z,KAAKY,SAAS25B,cAAcK,mBAEvE,GAAO/f,WAAW,gBAAiBrpD,KAAK20B,KAAM30B,KAAKmyC,cAAcqH,iBAIrEx5C,KAAKqpE,6BAA6B/4B,QAGlCtwC,KAAK0qD,gBAAgB,QAvkBjC,8CA8kBQ,IAAI4e,EAAMtpE,KAAKolC,2BACJ,MAAPkkC,IACAA,EAAIxnC,KAAKlsB,KAAO0zD,EAAInkC,mCAhlBhC,sCAqlBoB9tC,GAEZ2I,KAAK20B,KAAKqpC,UAAUvO,gBAAgBlC,eAET,MAAvBvtD,KAAK2mE,iBACL3mE,KAAK2mE,eAAe4C,mCACpBvpE,KAAK2mE,eAAe7kC,KAAKlsB,KAAO5V,KAAK2mE,eAAexhC,gCACpDnlC,KAAK2mE,eAAe6C,YAAcxpE,KAAK20B,KAAK2vB,kBAAkBmlB,iBAGzD,MAALpyE,GACA2I,KAAK20B,KAAK2vB,kBAAkB8J,SAASzlD,OAAOuP,OAAOw1C,YAAY,yBAA0B,SACzF1tD,KAAK20B,KAAK2vB,kBAAkBuZ,cAAc,CAAE3P,UAAU,MAEtDluD,KAAK20B,KAAK2vB,kBAAkBuZ,cAAc,CAAE3P,UAAU,IACtDluD,KAAK20B,KAAK2vB,kBAAkB8J,SAAS/2D,EAAE4f,OACR,MAA5BjX,KAAK20B,KAAK0Q,gBAAwBrlC,KAAK20B,KAAK0Q,eAAeC,aAAaC,uBAAuBluC,EAAEuc,cAElE,MAA/Bvc,EAAEyqC,KAAK6rB,qBACN3tD,KAAK20B,KAAKqpC,UAAUvO,gBAAgBlB,6BAEpCvuD,KAAK20B,KAAKqpC,UAAUvO,gBAAgBia,gCA1mBpD,qDAinBmCryE,GAAS,WACpC2I,KAAKmyC,cAAcmJ,OAAOjkD,GAAG,GAE7B2I,KAAK2mE,eAAiBtvE,EAED,MAAjBA,EAAEmyE,cACFxpE,KAAK20B,KAAKzc,OAAO09C,yBACjB51D,KAAK20B,KAAK2vB,kBAAkBqlB,iBAAiBtyE,EAAEmyE,aAC/CxpE,KAAK20B,KAAKzc,OAAO09C,0BAGrBv+D,EAAEuyE,6BAEF5pE,KAAK6pE,yBAAyBxyE,GAE9B2I,KAAK8pE,qBAEL/+B,YAAW,WACF,EAAKpW,KAAK2vB,kBAAkBoZ,aAAa5lE,IAAI6Q,OAAOuP,OAAO4iD,aAAa5M,WACzE,EAAKv5B,KAAK2vB,kBAAkB/X,UAEjC,OAtoBX,2CA6oBQ,GAAIvsC,KAAKymE,sBAAwBzmE,KAAKolC,4BAAiE,MAAnCplC,KAAKolC,2BAAoC,CACzG,IAAI5gC,EAAWxE,KAAK+pE,uBAChB/gE,EAAQ,CACR8O,YAAatT,EAAS2F,OAAQyN,gBAAiBpT,EAAS0F,KACxD2N,UAAWrT,EAAS2F,OAAS3F,EAASxC,OAAQ2V,cAAenT,EAAS0F,MAG1ElK,KAAK20B,KAAK2vB,kBAAkB0lB,qCAAqChhE,GACjEhJ,KAAK0mE,yBAA2B1mE,KAAK20B,KAAK2vB,kBAAkBsG,iBAAiB5qD,KAAK0mE,yBAA0B,CACxG,CACI19D,MAAOA,EACPmO,QAAS,CACLmkB,UAAW,0BAA2BuvB,aAAa,EACnD6U,cAAe,CACX50C,MAAO,UACPtmB,SAAUmE,OAAOuP,OAAO0nD,kBAAkBqK,QAE9C/hB,QAAS,CACLp9B,MAAO,UACPtmB,SAAUmE,OAAOuP,OAAOq0C,gBAAgBC,UAIpD,CACIxjD,MAAOA,EACPmO,QAAS,CAAE+yD,uBAAwB,uCAtqBvD,iDA6qB+BpoC,EAAYt9B,GAGnC,GAAY,MAARs9B,EAAJ,CAIA,IAAI9qC,EAASgJ,KAAK20B,KAAK0d,iBAAiB7zB,YAAYihD,iBAAiB39B,GACvD,MAAV9qC,IAIJgJ,KAAKymE,qBAAuBzvE,EAC5BgJ,KAAK+pE,uBAAyBvlE,EAE1BxN,GAAUgJ,KAAKolC,2BACfplC,KAAK0qD,gBAAgB1zD,GAErBgJ,KAAK8pE,yBA/rBjB,mDAqsBY9pE,KAAKolC,4BAA8BplC,KAAKymE,sBACxCzmE,KAAK20B,KAAK2vB,kBAAkBsG,iBAAiB5qD,KAAK0mE,yBAA0B,IAEhF1mE,KAAKymE,qBAAuB,KAC5BzmE,KAAK0mE,yBAA2B,KAzsBxC,iDA6sBQ,IAAI/2B,EAAK3vC,KAAK20B,KAAK0d,iBACnB,OAAU,MAAN1C,EAAmB,KAEhBA,EAAG+S,sBAhtBlB,+CAmtB6BrrD,GACrB,GAAS,MAALA,EAAJ,CACA,IAAIs4C,EAAK3vC,KAAK20B,KAAK0d,iBACf1C,EAAG+S,qBAAuBrrD,IAC1Bs4C,EAAG+S,oBAAsBrrD,EACzBs4C,EAAGC,OAAQ,EACXv4C,EAAEyqC,KAAKkD,OAAQ,MAztB3B,uCA6tBqBla,GACb,IAAIgpB,EAES,MAAThpB,GACAA,EAAQ,cACRgpB,EAAU,oBAEVA,EAAU,qBAGd9zC,KAAKmyC,cAAcsH,aAAat9B,SAASyyB,IAAI,mBAAoB9jB,GACjE9qB,KAAK8yC,mBAAmB2G,aAAat9B,SAASyyB,IAAI,mBAAoB9jB,GAEtE9qB,KAAK8yC,mBAAmB41B,WAAW50B,KA1uB3C,mCA6uBiBhS,GACT,OAAO,IAAI,GAAOA,EAAM9hC,KAAK20B,W,6BA9uBrC,K,uKCfO,IAAM,GAAb,WAgBI,WAAYw1C,EAA6Cn+B,GAAuC,Y,4FAAA,SAAvC,KAAAA,WAZzD,KAAAxnC,SAAmB,EAKnB,KAAA4lE,WAAqB,GACrB,KAAAC,cAAwB,IAExB,KAAAC,QAAkB,GAClB,KAAAC,QAAkB,EAId,IAAIC,EAAoBhgC,OAAO,2EAC/B2/B,EAAergC,OAAO0gC,GACtB,IAOIC,EACA1H,EARA2H,EAAkBlgC,OAAO,4DAC7BggC,EAAkB1gC,OAAO4gC,GACzB1qE,KAAK4iE,MAAQp4B,OAAO,6DACpBggC,EAAkB1gC,OAAO9pC,KAAK4iE,OAC9B5iE,KAAK2qE,oBAAsBngC,OAAO,8CAClCxqC,KAAK4iE,MAAM94B,OAAO9pC,KAAK2qE,qBAIvB,IAAI5sD,EAAO/d,KACX+d,EAAKssD,cAAgBpyB,GAAkBuyB,EAAkB57B,IAAI,WAC7D7wB,EAAKqsD,WAAanyB,GAAkBl6B,EAAK6kD,MAAMh0B,IAAI,WACnD7wB,EAAK6sD,KAAO7sD,EAAKssD,cAAgBtsD,EAAKqsD,WAEtC,IAAIp0B,EAAeC,OAAOC,aAAe,UAAY,QAErDw0B,EAAgBr+B,GAAG2J,EAAe,QAAQ,SAACv+B,GAEvC,IAAIm/B,EAAIn/B,EAAE6lC,MAAQktB,EAAkBvlE,SAASmyC,IAAM,EACnDr5B,EAAK8sD,QAAQj0B,GACb74B,EAAK6kD,MAAMh0B,IAAI,MAAOgI,EAAI,MAE1B74B,EAAK6kD,MAAM5qB,QAAQhC,EAAe,OAAQ,CAACv+B,EAAEqzD,aAKjD9qE,KAAK4iE,MAAMv2B,GAAG2J,EAAe,QAAQ,SAACv+B,EAAGm/B,GAC7B,MAALA,IAAWA,EAAIn/B,EAAEqzD,SACpBL,EAAa7zB,EACbmsB,EAAchlD,EAAKvZ,SACnB,EAAKmmE,oBAAoB1/B,OAEzBT,OAAOlvB,UAAU+wB,GAAG2J,EAAe,oBAAoB,SAACv+B,GACpD,IAAI0iD,EAAS1iD,EAAEqzD,QAAUL,EACzB1sD,EAAK8sD,QAAQ9H,EAAc5I,MAG/B3vB,OAAOlvB,UAAU+wB,GAAG2J,EAAe,kBAAkB,WACjDxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,kBACpCxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,oBACpC,EAAK20B,oBAAoBv/B,UAG7B3zB,EAAEg9B,qBAIN01B,EAAe99B,GAAG2J,EAAe,SAAS,SAACv+B,GACnCszD,EAAYC,eAChBR,EAAkBS,YAGtBd,EAAe99B,GAAG2J,EAAe,SAAS,SAACv+B,GACnCszD,EAAYC,eAChBR,EAAkBU,aAGtB,IAAIpN,GAAU,EAAM99D,KAAKsqE,UAAUtqE,KAAKuqE,QAAUvqE,KAAKsqE,SACvDtqE,KAAKwE,SAAWs5D,GAAQ99D,KAAKqqE,cAAgBrqE,KAAKoqE,YAClDpqE,KAAK4iE,MAAMh0B,IAAI,MAAO5uC,KAAKwE,SAAW,M,UA/E9C,O,EAAA,G,EAAA,+BAkFYm/D,GAEDA,EAAc,IACbA,EAAc,GAGfA,EAAc3jE,KAAK4qE,OAClBjH,EAAc3jE,KAAK4qE,MAGvB5qE,KAAKwE,SAAWm/D,EAEhB3jE,KAAK4iE,MAAMh0B,IAAI,MAAO+0B,EAAc,MAEpC,IAAIwH,EAAaxH,GAAa3jE,KAAKqqE,cAAgBrqE,KAAKoqE,YACxDe,EAAanrE,KAAKsqE,QAAUa,GAAYnrE,KAAKuqE,QAAUvqE,KAAKsqE,SAE5D,IAAIc,EAAM9+D,KAAK+5B,MAAmB,IAAb8kC,GAAoB,KACzCnrE,KAAK2qE,oBAAoBz1B,KAAKk2B,GAEV,MAAjBprE,KAAKgsC,UACJhsC,KAAKgsC,SAASm/B,Q,6BAvG1B,K,uKAEkB,GAAAH,eAAwB,ECGnC,ICJKK,GDMC,GAAb,WAsBI,WAAYC,EAA0C32C,GAAc,Y,4FAAA,SAAd,KAAAA,OAnBtD,KAAAw2C,WAAqB,EAUrB,KAAAI,aAAkE,GAClE,KAAAC,SAAW,IACX,KAAAC,YAAc,EACd,KAAAC,iBAAmB,GACnB,KAAAC,QAAU3rE,KAAK0rE,iBACf,KAAAE,SAAW5rE,KAAK0rE,iBAMZ1rE,KAAK6rE,YAAcrhC,OAAO,0FAC1B8gC,EAAaxhC,OAAO9pC,KAAK6rE,aAEzB,IAAIC,EAActhC,OAAO,eACzB8gC,EAAaxhC,OAAOgiC,GACpBA,EAAY5gC,SAAS,iBACrB4gC,EAAYl9B,IAAI,CAACm9B,SAAU,OAAQvnE,SAAU,WAAY2xC,MAAO,OAAQC,OAAQ,SAEhFp2C,KAAKgsE,QAAUxhC,OAAO,yCACtBshC,EAAYhiC,OAAO9pC,KAAKgsE,SACxBhsE,KAAKisE,YAAc,IAAI,GAAYX,GAAc,SAACxN,GAC9C,EAAKkO,QAAQp9B,IAAI,CACbs9B,UAAW,SAAWpO,EAAS,MAEnC,EAAKqN,WAAarN,KAGtB,IAiBInnB,EACAC,EAjBJ52C,KAAKmsE,WAAa7wD,SAAS8wD,gBADlB,6BACsC,OAE/C5hC,OAAOxqC,KAAKmsE,YAAYjhC,SAAS,yCAIjClrC,KAAKgsE,QAAQ,GAAGK,YAAYrsE,KAAKmsE,YAEjCnsE,KAAKssE,iBAAwB9hC,OAAOxqC,KAAKusE,cAAc,OAAQvsE,KAAKmsE,aAEpEnsE,KAAKssE,iBAAiB19B,IAAI,CAACjrC,KAAM,UAAW,OAAU,SAEtD3D,KAAKwsE,wBAEchiC,OAAOxqC,KAAKmsE,YAKnB9/B,GAAG,aAAa,SAACogC,GACzB91B,EAAI81B,EAAIC,QACR91B,EAAI61B,EAAIE,QAERniC,OAAOlvB,UAAU+wB,GAAG,qBAAqB,SAACzuB,GACtC,IAAIgvD,EAAKhvD,EAAG8uD,QAAU/1B,EAClBk2B,EAAKjvD,EAAG+uD,QAAU/1B,EACtBD,EAAI/4B,EAAG8uD,QACP91B,EAAIh5B,EAAG+uD,QACPb,EAAYgB,WAAWhB,EAAYgB,aAAeF,GAClDd,EAAYjhC,UAAUihC,EAAYjhC,YAAcgiC,MAGpDriC,OAAOlvB,UAAU+wB,GAAG,mBAAmB,WACnC7B,OAAOlvB,UAAUqxB,IAAI,qBACrBnC,OAAOlvB,UAAUqxB,IAAI,yB,UA5ErC,O,EAAA,G,EAAA,+CAsFQ3sC,KAAKssE,iBAAiBl+B,KAAK,CACvBuI,EAAG32C,KAAKwrE,SAAW,KACnB50B,EAAG52C,KAAKwrE,SAAW,KACnBr1B,MAAQn2C,KAAK2rE,QAAU,EAAE3rE,KAAKwrE,SAAY,KAC1Cp1B,OAASp2C,KAAK4rE,SAAW,EAAE5rE,KAAKwrE,SAAY,SA1FxD,8BA8FYG,EAAiBC,GAClBD,EAAU3rE,KAAK0rE,mBAAkBC,EAAU3rE,KAAK0rE,kBAChDE,EAAW5rE,KAAK0rE,mBAAkBE,EAAW5rE,KAAK0rE,kBAErD1rE,KAAKgsE,QAAQp9B,IAAI,CACbuH,MAAOw1B,EAAU,KACjBv1B,OAAQw1B,EAAW,OAGvB5rE,KAAK2rE,QAAUA,EACf3rE,KAAK4rE,SAAWA,EAEhB5rE,KAAKwsE,0BA1Gb,4CA6G0BO,GAElB,IAAIC,EAAO,IACPC,EAAO,IACPjK,GAAQ,IACR4H,GAAQ,IALuC,uBAOnD,YAAcmC,EAAd,+CAA8B,KAAtB,EAAsB,QACvBC,EAAO,EAAGE,SAAQF,EAAO,EAAGE,QAC5BlK,EAAO,EAAGkK,OAAS,EAAGvB,UAAS3I,EAAO,EAAGkK,OAAS,EAAGvB,SACrDsB,EAAO,EAAGE,QAAOF,EAAO,EAAGE,OAC3BvC,EAAO,EAAGuC,MAAQ,EAAGvB,WAAUhB,EAAO,EAAGuC,MAAQ,EAAGvB,WAXR,kFAcnDoB,GAAQhtE,KAAKwrE,SACbxI,GAAQhjE,KAAKwrE,SACbyB,GAAQjtE,KAAKwrE,SACbZ,GAAQ5qE,KAAKwrE,SAEb,IAAI4B,GAAsB,EACtBC,EAAartE,KAAK2rE,QAClB2B,EAActtE,KAAK4rE,SAEvB,GAAGoB,EAAO,GAAKhK,EAAOhjE,KAAK2rE,SAAY3I,EAAOgK,GAAQhtE,KAAK2rE,SAAW3rE,KAAK2rE,QAAU3rE,KAAK0rE,iBAAkB,CACxG,IAAI1zD,EAAQ,EAYZ,GAXAq1D,EAAa/gE,KAAKi3D,IAAIvjE,KAAK0rE,iBAAkB1I,EAAOgK,GAEjDA,EAAO,IACNh1D,GAASg1D,GAGVA,EAAO,GAAKhK,EAAOqK,IAClBr1D,EAAQq1D,EAAarK,GAEzBoK,EAAsB,GAATp1D,EAEb,4BACA,YAAc+0D,EAAd,+CAA8B,QACvBQ,KAAKv1D,EAAO,GAAG,GAAM,GAF5B,oFAOJ,GAAGi1D,EAAO,GAAKrC,EAAO5qE,KAAK4rE,UAAahB,EAAOqC,GAAQjtE,KAAK4rE,UAAY5rE,KAAK4rE,SAAW5rE,KAAK0rE,iBAAkB,CAC3G,IAAI,EAAQ,EAYZ,GAXA4B,EAAchhE,KAAKi3D,IAAIvjE,KAAK0rE,iBAAkBd,EAAOqC,GAElDA,EAAO,IACN,GAASA,GAGVA,EAAO,GAAKrC,EAAO0C,IAClB,EAAQA,EAAc1C,GAE1BwC,EAAsB,GAAT,EAEb,4BACA,YAAcL,EAAd,+CAA8B,QACvBQ,KAAK,EAAG,GAAO,GAAM,GAF5B,oFAWJ,OAHAvtE,KAAKwtE,QAAQH,EAAYC,GAGlB,CAACF,WAAYA,KAhL5B,2CAoL8F,IAAhEK,EAAgE,uDAAJ,KAE9En1E,EAAK,6BAES,MAAd0H,KAAK0b,QACL1b,KAAK0tE,KAAOpyD,SAAS8wD,gBAAgB9zE,EAAI,QACzC0H,KAAK0b,MAAQJ,SAAS8wD,gBAAgB9zE,EAAI,SAC1C0H,KAAK0tE,KAAKrB,YAAYrsE,KAAK0b,OAC3B1b,KAAKmsE,WAAWE,YAAYrsE,KAAK0tE,OAGvB,MAAVD,IACAztE,KAAKurE,aAAekC,EACpBztE,KAAK2tE,yBAjMjB,oCAsMyBn2E,GACQ,IADM2kB,EACN,uDADwB,KAAM3Y,EAC9B,uCAErBlL,EAAK,6BACLsiD,EAAWpQ,OAAOlvB,SAAS8wD,gBAAgB9zE,EAAId,IAMnD,OAJiB,MAAdgM,GAAoBo3C,EAASxM,KAAK5qC,GAExB,MAAV2Y,GAAgBA,EAAOkwD,YAAYzxB,EAAS,IAExCA,IAhNf,4CAsNQ,IAAI5hD,EAAY,GAEhB,IAAK,IAAI40E,KAAY5tE,KAAKurE,aAAc,CACpC,IAAIsC,EAAoB7tE,KAAKurE,aAAaqC,GAC1C,GAAyB,MAArBC,EAA2B,CAE3B,IAAK,IAAIr1E,KADTQ,GAAK40E,EAAW,MACAC,EACZ70E,GAAK,MAAQR,EAAM,IAAMq1E,EAAkBr1E,GAAO,MAEtDQ,GAAK,WAELA,GAAK40E,EAAW,KAIxB5tE,KAAK0b,MAAMoyD,YAAc90E,IArOjC,oCAyOkB6/C,EAA4B1C,EAAeC,EAAgBq1B,GAMrE,IAJA,IAAIsC,EAAS,EACTC,GAAkB,EAClBC,EAAM,EACNC,EAAM,GACHF,GAAO,CAEV,IAAIp3B,EAAIm3B,EACJp3B,EAAI,EACR,IAAIA,EAAI,EAAGA,GAAKo3B,EAAQp3B,IAGpB,GAFAs3B,EAAMjuE,KAAKwrE,SAtPA,GAsPW70B,EACtBu3B,EAAMluE,KAAKwrE,SAvPA,GAuPW50B,EACnB52C,KAAKmuE,OAAOt1B,EAAU1C,EAAOC,EAAQ63B,EAAKC,EAAKzC,GAAa,CAC3DuC,GAAS,EACT,MAGR,GAAGA,EAAQ,MAEX,IADAr3B,IACIC,EAAI,EAAGA,GAAKm3B,EAAS,EAAGn3B,IAGxB,GAFAq3B,EAAMjuE,KAAKwrE,SAhQA,GAgQW70B,EACtBu3B,EAAMluE,KAAKwrE,SAjQA,GAiQW50B,EACnB52C,KAAKmuE,OAAOt1B,EAAU1C,EAAOC,EAAQ63B,EAAKC,EAAKzC,GAAa,CAC3DuC,GAAS,EACT,MAIRD,GAAU,EAId,MAAO,CAACp3B,EAAGs3B,EAAKr3B,EAAGs3B,KA1Q3B,6BA8QWr1B,EAA4B8yB,EAAiBC,EAAkBsB,EAAgBC,EAAe1B,GAAmB,2BAEpH,YAAmB5yB,EAAnB,+CAA4B,KAApBjoB,EAAoB,QAEpBw9C,EAAU9hE,KAAK6uD,IAAIvqC,EAAQs8C,OAASt8C,EAAQ+6C,QAAQ,EAAIuB,EAASvB,EAAQ,KAC9D/6C,EAAQ+6C,QAAUA,GAAS,EAAIF,EAE1C4C,EAAU/hE,KAAK6uD,IAAIvqC,EAAQu8C,MAAQv8C,EAAQg7C,SAAS,EAAIuB,EAAQvB,EAAS,KAAOh7C,EAAQg7C,SAAWA,GAAU,EAAIH,EAErH,GAAG2C,GAAWC,EAAS,OAAO,GATkF,kFAapH,OAAO,O,6BA3Rf,K,wKCNA,SAAYhD,GACR,mBAAM,uBAAQ,qBADlB,CAAYA,QAAS,KAyBd,IAAe,GAAtB,WAgBI,WAAsBlvD,I,4FAAe,SAAf,KAAAA,SAVf,KAAA+wD,OAAiB,EACjB,KAAAC,MAAgB,EAKb,KAAAmB,MAAuC,GAE1C,KAAAC,gBAA0B,U,UAdrC,O,EAAA,G,EAAA,6CAqBQ,MAAO,CACHx2C,KAAMzrB,KAAK+5B,MAAMrmC,KAAKktE,OD3CP,IC4Cf91B,IAAK9qC,KAAK+5B,MAAMrmC,KAAKmtE,MD5CN,IC6Cfh3B,MAAO7pC,KAAK+5B,MAAMrmC,KAAK2rE,QD7CR,IC8Cfv1B,OAAQ9pC,KAAK+5B,MAAMrmC,KAAK4rE,SD9CT,OCqB3B,6BA8B4B,MAAjB5rE,KAAK46C,UACR56C,KAAK46C,SAAS3P,SA/BtB,6BAmC4B,MAAjBjrC,KAAK46C,UACR56C,KAAK46C,SAASxP,SApCtB,+BAwC4B,MAAjBprC,KAAK46C,UACR56C,KAAK46C,SAASnO,WAzCtB,+BA6C4B,MAAjBzsC,KAAK46C,WACR56C,KAAK46C,SAAS/T,SACd7mC,KAAK46C,SAAW,QA/CxB,+BAkDaA,GACLA,EAAS9Q,OAAO9pC,KAAK46C,YAnD7B,8BAuD4B,MAAjB56C,KAAK46C,WACR56C,KAAK46C,SAAS7vB,QACd/qB,KAAKsuE,MAAQ,MAzDrB,2BA4DgBL,EAAaC,EAAaM,GAAoD,IAA/BC,EAA+B,wDACtFzuE,KAAKktE,QAAUe,EACfjuE,KAAKmtE,OAASe,EAEd,IAAIv3B,EAAI32C,KAAKktE,OACTt2B,EAAI52C,KAAKmtE,MAEVqB,IACC73B,EDzFe,GCyFXrqC,KAAK+5B,MAAMsQ,EDzFA,IC0FfC,ED1Fe,GC0FXtqC,KAAK+5B,MAAMuQ,ED1FA,KC6FhB63B,IACCzuE,KAAKktE,OAASv2B,EACd32C,KAAKmtE,MAAQv2B,GAGjBpM,OAAOxqC,KAAK46C,UAAUhM,IAAI,YAAa,aAAe+H,EAAI,MAAQC,EAAI,SA7E9E,6BAgFkBq3B,EAAaC,EAAaM,GACpCxuE,KAAKutE,KAAKU,EAAMjuE,KAAKktE,OAAQgB,EAAMluE,KAAKmtE,MAAOqB,KAjFvD,oCAoFyBh3E,GACQ,IADM2kB,EACN,uDADwB,KAAM3Y,EAC9B,uCAErBlL,EAAK,6BACLsiD,EAAWpQ,OAAOlvB,SAAS8wD,gBAAgB9zE,EAAId,IAMnD,OAJiB,MAAdgM,GAAoBo3C,EAASxM,KAAK5qC,GAExB,MAAV2Y,GAAgBA,EAAOkwD,YAAYzxB,EAAS,IAExCA,IA9Ff,wCAkG6BhlC,GACI,IADUuG,EACV,uDAD4B,KAAM3Y,EAClC,uCAEjBo3C,EAA4B56C,KAAKusE,cAAc,OAAQpwD,EAAQ,CAC/DuyD,KAAM,cACN,cAAe,aACf/qE,KAAM,OACN,qBAAqB,UACrB,oBAAoB,YAOxB,OAJiB,MAAdH,GAAoBo3C,EAASxM,KAAK5qC,GAErCo3C,EAAShlC,KAAKA,GAEPglC,IAjHnB,qCAoH0B+zB,GAClB,IAAIC,EAAeD,EAAY,GAAGE,UAElC,MAAO,CACHz4B,OAAQw4B,EAAKx4B,OAAS04B,EAAeC,QACrC54B,MAAOy4B,EAAKz4B,MAAQ24B,EAAeC,WAzH/C,kCA8HuB7kE,GAEflK,KAAKsuE,MAAM/pE,KAAK2F,GAEA,QAAbA,EAAK9J,OACiB,MAAlB8J,EAAK8kE,YAAmB9kE,EAAK8kE,UAAY3D,GAAUtzC,MACtC,MAAb7tB,EAAK+kE,OAAc/kE,EAAK+kE,MAAO,GACf,MAAhB/kE,EAAKglE,UAAiBhlE,EAAKglE,SAAU,MArIpD,+BA0IiB,WAELC,EAASnvE,KAAK46C,SACL,MAAVu0B,KACCA,EAASnvE,KAAKusE,cAAc,IAAKvsE,KAAKmc,SAC/B+uB,SAAS,iBAChBikC,EAAOjkC,SAAS,0BAChBlrC,KAAK46C,SAAWu0B,EAChB3kC,OAAOxqC,KAAK46C,UAAUhM,IAAI,YAAa,aAAe5uC,KAAKktE,OAAS,MAAQltE,KAAKmtE,MAAQ,QAG7F,IAAIx+B,EAAQ3uC,KAAKusE,cAAc,OAAQ4C,EAAO,IAE1CC,EAAqB,GACrBC,EAAqB,EAErBn3C,GAAiB,EAhBZ,uBAiBT,YAAgBl4B,KAAKsuE,MAArB,+CAA2B,KAAnBpkE,EAAmB,QACvB,GAAgB,QAAbA,EAAK9J,KAAe,CAChB83B,IAAOk3C,GAAc,IACxBl3C,GAAQ,EACRhuB,EAAKgkE,IAAMkB,EACXllE,EAAK0wC,SAAmC56C,KAAKsvE,kBAAkBplE,EAAK0L,KAAMu5D,EAAO,GAAI,CACjF,cAAgBjlE,EAAK+kE,KAAK,OAAO,SACjC,YAAa,OACb,aAAc/kE,EAAKglE,QAAQ,SAAS,SACpC,cAAehlE,EAAK8kE,WAAa3D,GAAUtzC,KAAO,QAAU7tB,EAAK8kE,WAAa3D,GAAUkE,OAAS,SAAW,MAC5G,OAA0B,MAAhBrlE,EAAKslE,QAAkB,GAAK,YAG1CtlE,EAAK0wC,SAAShM,IAAI,YAAa,sBAU/B,IAAI6gC,EAAUzvE,KAAK0vE,eAAexlE,EAAK0wC,UACvC1wC,EAAKylE,aAAeF,EAAQr5B,OAC5BlsC,EAAK0lE,YAAcH,EAAQt5B,MAC3Bk5B,EAAa/iE,KAAKi3D,IAAI8L,EAAYnlE,EAAK0lE,aACvCR,GAAcllE,EAAKylE,aACA,MAAhBzlE,EAAK2lE,SACW7vE,KAAKusE,cAAc,QAASriE,EAAK0wC,SAAS,IAChDhlC,KAAK1L,EAAK2lE,cAGvB3lE,EAAKgkE,IAAMkB,EAAallE,EAAK4lE,YAAY,EACzCV,GAAcllE,EAAK4lE,YAAc,GACjC53C,GAAQ,GApDP,kFAwDT,IAAIie,EAAQ,GAAmBk5B,EAC/BrvE,KAAK2rE,QDxNc,ICwNHr/D,KAAKyE,MAAMolC,EDxNR,ICwN+B,GAClDn2C,KAAK4rE,SDzNc,ICyNFt/D,KAAKyE,MAAMq+D,EDzNT,ICyNqC,GAExD,IACIW,EAAa55B,EAAM,EACnB65B,EAAY75B,EAFD,IAIfxH,EAAMC,IAAI,CACNuH,MAAOn2C,KAAK2rE,QAAU,KACtBv1B,OAAQp2C,KAAK4rE,SAAW,KACxBjoE,KAAM3D,KAAKuuE,gBACX0B,OAAQ,OACR,eAAgB,WArEX,2BAyET,IAzES,IAyET,EAzES,iBAyED/lE,EAzEC,QA0EL,GAAgB,QAAbA,EAAK9J,KAAe,CAEnB,IAAIu2C,EACJ,OAAOzsC,EAAK8kE,WACR,KAAK3D,GAAUkE,OAAQ54B,EAAIo5B,EAAY,MACvC,KAAK1E,GAAUtzC,KAAM4e,EAnBlB,IAmBgC,MACnC,KAAK00B,GAAU/yC,MAAOqe,EAAIq5B,EAM9B,IAAIE,EAAK,EAAK3D,cAAc,IAAK4C,EAAO,IACxCe,EAAGpmC,OAAO5/B,EAAK0wC,UAEf1wC,EAAK0wC,SAAWs1B,EAEhBhmE,EAAK0wC,SAAShM,IAAI,YAAa,aAAe+H,EAAI,MAAMzsC,EAAKgkE,IAAM,OAEhD,MAAhBhkE,EAAKslE,UACJtlE,EAAK0wC,SAAS1P,SAAS,aACvBhhC,EAAK0wC,SAASvO,GAAG,aAAa,SAACiI,GAE3BpqC,EAAKslE,UACLl7B,EAAMG,2BAMdvqC,EAAK0wC,SAAmC,EAAK2xB,cAAc,OAAQ4C,EAAO,GAAI,CAC1EgB,GAAI,IACJC,GAAIlmE,EAAKgkE,IAAM,KACfmC,GAAI,EAAK1E,QAAU,KACnB2E,GAAIpmE,EAAKgkE,IAAM,OAGnBhkE,EAAK0wC,SAAShM,IAAI,CACdqhC,OAAQ,OACR,eAAgB/lE,EAAK4lE,YAAc,QAxC/C,EAAgB9vE,KAAKsuE,MAArB,+CAA2B,IAzElB,wF,6BA1IjB,K,0lCAEkB,GAAAS,QAAkB,KAAK,GCRlC,IAAM,GAAb,YAiBI,WAAmBwB,EAAkBrD,EAAgBC,EAAejqE,GAAwB,a,4FAAA,UACxF,0BAAMqtE,EAAQpE,cADCoE,UAVnB,EAAA7rB,QAAkB,EAClB,EAAA8rB,aAAuB,EACvB,EAAAC,gBAA0B,EAWtB,EAAKvtE,MAAQA,EAEA,MAATA,IACA,EAAKwtE,cAAc,EAAKxtE,OACxB,EAAKytE,cAAgBztE,EAAMlM,OAAOuQ,eAClC,EAAKkpE,gBAAiB;AACtB,EAAKD,aAAc,GAGvB,EAAKI,OAAO1D,EAAQC,GAAO,GAZ6D,E,UAjBhG,O,mOAAA,M,EAAA,E,EAAA,mCA8CuBoD,EAAkBM,GAEjC,IAAIC,EAAK,IAAIC,EAASR,EAASM,EAAI3D,OAAQ2D,EAAI1D,MAAO,MAQtD,OAPA2D,EAAGE,gBAAkBH,EAAIG,gBACzBF,EAAGx1C,UAAYu1C,EAAIv1C,UACnBw1C,EAAGG,SAAWJ,EAAII,SAClBH,EAAGL,eAAiBI,EAAIJ,eACxBK,EAAGN,YAAcK,EAAIL,YACrBM,EAAGH,cAAgBE,EAAIF,cAEhBG,M,EAxDf,mCAkCQ,MAAO,CACHx1C,UAAWt7B,KAAKs7B,UAChB21C,SAAUjxE,KAAKixE,SACfD,gBAAiBhxE,KAAKgxE,gBACtBP,eAAgBzwE,KAAKywE,eACrBD,YAAaxwE,KAAKwwE,YAClBG,cAAe3wE,KAAK2wE,cACpBzD,OAAQltE,KAAKktE,OACbC,MAAOntE,KAAKmtE,SA1CxB,oCA4DkBjqE,GAEVlD,KAAKkD,MAAQA,EACb,IAAIguE,EAAyBlxE,KAAKmxE,aAAajuE,GAE3ClD,KAAKs7B,WAAap4B,EAAM/J,YAAc6G,KAAKgxE,iBAAmBE,GAAkBlxE,KAAK2rE,QAAU,IAAO3rE,KAAKD,eAAiBmD,EAAMnD,eAClIC,KAAK2wE,cAAgBztE,EAAMlM,OAAOuQ,eAClCvH,KAAKoxE,eAELpxE,KAAKqxE,iBAGTrxE,KAAKs7B,UAAYp4B,EAAM/J,WACvB6G,KAAKixE,SAAW/tE,EAAMlM,OAAO8qC,KAAKtqC,KAClCwI,KAAKgxE,gBAAkBE,EACvBlxE,KAAKD,cAAgBmD,EAAMnD,gBA3EnC,wCA8EsB6wB,GACd5wB,KAAKuwE,QAAQ57C,KAAK28C,kBAAkBtxE,KAAKkD,MAAMlM,OAAQ45B,EAAQ1gB,eA/EvE,oCAmFe,WAEPlQ,KAAKilC,QAEL,IAAIssC,EAAqCvxE,KAAKuwE,QAASiB,kBAAkBD,oBAYzE,GAVAvxE,KAAKyxE,YAAY,CACbrxE,KAAM,OACNwV,MAAO5V,KAAKkD,iBAAiB,EAAY,iBAAqBlD,KAAKkD,MAAM/B,WAAa,gBAAkB,IAAOnB,KAAKkD,MAAM/J,WAC1H02E,QAAStd,GAAuBvyD,KAAKkD,MAAO,IAAI,GAChD8rE,UAAW3D,GAAUkE,OACrBN,MAAM,EACNC,QAASlvE,KAAKkD,iBAAiB,GAAalD,KAAKkD,MAAM/B,WACvDquE,QAASxvE,KAAK2wE,mBAAgB1nE,EAAY,WAAQ,EAAKqoE,kBAAkB,EAAKpuE,UAG9ElD,KAAKkD,iBAAiB,GAASlD,KAAKywE,eAAgB,CACpDzwE,KAAKyxE,YAAY,CACbrxE,KAAM,OACN0vE,YAAa,MAHmC,2BAKpD,IALoD,IAKpD,EALoD,iBAK3CloE,EAL2C,QAO5CgO,EAAe,EAAK87D,kBAAkB9pE,EAAE/G,YAAc,GAAkB+G,EAAExH,MAAQ,IAAOwH,EAAEzO,WAE/F,EAAKs4E,YAAY,CACbrxE,KAAM,OACNwV,KAAMA,EACNi6D,QAAStd,GAAuB3qD,GAChConE,UAAW3D,GAAUtzC,KACrBy3C,QAAS,EAAKmB,mBAAgB1nE,EAAY,WAAQ,EAAKqoE,kBAAkB1pE,OATjF,EAAc5H,KAAKkD,MAAMM,WAAzB,+CAAqC,IALe,mFAmBpDxD,KAAKwwE,cACLxwE,KAAKyxE,YAAY,CACbrxE,KAAM,OACN0vE,YAAa,MAEjB9vE,KAAKkD,MAAMsD,QAAQqE,QAAO,SAAAxT,GAAC,MAAmB,YAAfA,EAAEsK,aAAyBoQ,SAAQ,SAAA1a,GAC9D,IAAIue,EAAe,EAAK87D,kBAAkBr6E,EAAEwJ,YAAcxJ,EAAE8B,WAAa,KAEzE,GAAIo4E,EAAqB,CACrB,IAAItwE,EAAqB5J,EAAE+J,cAAgB,GACtB,MAAhB/J,EAAE4J,WAAqB,QAAU,GAAkB5J,EAAE4J,YAAc,IACxE2U,EAAO,EAAK87D,kBAAkBr6E,EAAEwJ,YAAcI,EAAa5J,EAAE8B,WAAa,IACtE9B,EAAE2J,cAAca,WAAWkB,KAAI,SAAChK,GAAQ,OAAO,GAAkBA,EAAEqH,MAAQ,IAAMrH,EAAEI,cAAc8J,KAAK,MAAQ,IAGtH,EAAKwuE,YAAY,CACbrxE,KAAM,OACNwV,KAAMA,EACNi6D,QAAStd,GAAuBl7D,GAChC23E,UAAW3D,GAAUtzC,KACrBm3C,QAAS,EAAKhsE,iBAAiB,GAAa7L,EAAE8J,WAC9CquE,QAAS,EAAKmB,mBAAgB1nE,EAAY,WAAQ,EAAKqoE,kBAAkBj6E,UAMrF2I,KAAKuuE,gBAAkBvuE,KAAK2wE,cAAgB,UAAY,UACxD3wE,KAAK+0C,SAEL/0C,KAAK2xE,kBAAoB3xE,KAAKusE,cAAc,OAAQvsE,KAAK46C,SAAS,GAAI,CAClErjD,EAAGyI,KAAK4xE,kBACRxuE,MAAO,oBACPsY,MAAO,yBAAgC1b,KAAK2rE,QAAU,KAAQ,eAGlE3rE,KAAKqxE,mBA1Jb,wCA8JQ,OAAIrxE,KAAKwwE,YACE,6BAEA,+BAjKnB,+B,MA2KqB,QAAb,EAAAxwE,KAAK46C,gBAAQ,SAAEjO,IAAI,4BACnBnC,OAAOlvB,UAAUqxB,IAAI,0BACrBnC,OAAOlvB,UAAUqxB,IAAI,4BACrB,+CA9KR,uCAiLkB,WACN5uB,EAAO/d,KAEmB,MAA1BA,KAAK2xE,oBACL3xE,KAAK2xE,kBAAkBhlC,IAAI,4BAC3B3sC,KAAK2xE,kBAAkBhlC,IAAI,+BAG/B3sC,KAAK2xE,kBAAkBtlC,GAAG,8BAA8B,SAAC50B,GACrDA,EAAEg9B,qBAENz0C,KAAK2xE,kBAAkBtlC,GAAG,4BAA4B,SAAC50B,GACnDA,EAAEg9B,kBACF,EAAK+7B,aAAe,EAAKA,YACzB,EAAKC,gBAAkB,EAAKA,eAC5B,EAAKkB,kBAAkBvjC,KAAK,IAAK,EAAKwjC,mBACtC,EAAKR,cACe,EAAKb,QAASsB,yBACd,EAAKtB,QAASuB,kBAGtC9xE,KAAK46C,SAASvO,GAAG,4BAA4B,SAACiI,GAK1C,GAHAA,EAAMG,kBACNH,EAAMy9B,2BAEc,GAAhBz9B,EAAMoH,OAAV,CAEA,IAAI/E,EAAIrC,EAAMo4B,QACV91B,EAAItC,EAAMq4B,QAEd5uD,EAAK68B,SAASlqB,KAAK,QAAQwa,SAAS,YAEpCV,OAAOlvB,UAAUqxB,IAAI,0BACrBnC,OAAOlvB,UAAUqxB,IAAI,4BAErBnC,OAAOlvB,UAAU+wB,GAAG,4BAA4B,SAACiI,GAC7C,IAAI09B,EAAa,EAAI,GAAK,KAAO,EAAKzB,QAAQpF,WAC1CyB,GAAMt4B,EAAMo4B,QAAU/1B,GAAKq7B,EAC3BnF,GAAMv4B,EAAMq4B,QAAU/1B,GAAKo7B,EAE/Br7B,EAAIrC,EAAMo4B,QACV91B,EAAItC,EAAMq4B,QAEV5uD,EAAKwvD,KAAKX,EAAIC,GAAI,GAGlBrvB,aAAaz/B,EAAKk0D,YAClBl0D,EAAKk0D,WAAalnC,YAAW,WACahtB,EAAKwyD,QAC9BuB,iBACd,QAGPtnC,OAAOlvB,UAAU+wB,GAAG,0BAA0B,WAC1CtuB,EAAKwvD,KAAK,EAAG,GAAG,GAAM,GACtB,IAAIt+B,EAAkClxB,EAAKwyD,QAC3CthC,EAAa4iC,yBACb5iC,EAAa6iC,eACb/zD,EAAK68B,SAASlqB,KAAK,QAAQya,YAAY,YACvCX,OAAOlvB,UAAUqxB,IAAI,0BACrBnC,OAAOlvB,UAAUqxB,IAAI,4BACrBsC,EAAajK,OAAQ,WA/OrC,wCAsPsBnkC,GACd,OAAQA,GACJ,KAAKkD,EAAWoJ,QAAS,MAAO,IAChC,KAAKpJ,EAAWgH,UAAW,MAAO,IAClC,KAAKhH,EAAW4C,OAAQ,MAAO,OA1P3C,mCA8PiBzD,GAET,IAAIlK,EAAY,GAEhB,GAAIkK,aAAiB,GAASlD,KAAKywE,gBAAkBvtE,EAAMM,WAAWxB,OAAS,EAAG,4BAC9E,YAAckB,EAAMM,WAApB,oDAASoE,EAAT,QAAgC5O,GAAKgH,KAAK0xE,kBAAkB9pE,EAAE/G,YAAc+G,EAAExH,KAAKjH,WAAa,IAAMyO,EAAEzO,YAD1B,mFAIlF,GAAI6G,KAAKwwE,aAAettE,EAAMsD,QAAQxE,OAAS,EAAG,4BAC9C,YAAckB,EAAMsD,QAApB,+CAA6B,KAApBnP,EAAoB,QACzB,IAAIA,EAAE+J,cAAN,CACA,IAAIgjB,EAA6B,MAAhB/sB,EAAE4J,WAAqB,OAAS5J,EAAE4J,WAAW9H,WAC9DH,GAAKgH,KAAK0xE,kBAAkBr6E,EAAEwJ,YAAcujB,EAAK,IAAM/sB,EAAE8B,WAAa,IAClE9B,EAAE2J,cAAca,WAAWkB,KAAI,SAAChK,GAAQ,OAAOA,EAAEqH,KAAKjH,WAAa,IAAMJ,EAAEI,cAAc8J,KAAK,MAAQ,MALhE,mFASlD,OnCrSF,SAAejK,GAGjB,IAFA,IAAIk5E,EAAe,EAEVj7E,EAAI,EAAGA,EAAI+B,EAAEgJ,OAAQ/K,IAE5Bi7E,GAAUA,GAAQ,GAAKA,EADfl5E,EAAEmY,WAAWla,GAErBi7E,GAAQ,EAEV,OAAOA,EmC6RIA,CAAKl5E,KA/QpB,4CAmR0BkK,GAClB,OAAOA,EAAMlM,OAAO8qC,KAAKtqC,MAAQwI,KAAKixE,UAClCjxE,KAAKmxE,aAAajuE,IAAUlD,KAAKgxE,qB,6BArR7C,GAA8B,I,uKCVvB,IAAM,GAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,gCAyBoBmB,EAAoBC,EAAoBhyE,GAMpD,IAAIwsE,EAAKwF,EAAYz7B,EAAIw7B,EAAYx7B,EACjCk2B,EAAKuF,EAAYx7B,EAAIu7B,EAAYv7B,EAEjCr/C,EAAI+U,KAAK+lE,KAAKzF,EAAGA,EAAGC,EAAGA,GAE3B,GAAGt1E,EAAI,KAAS,MAAO,CAAC27C,KAAM,GAAI+8B,OAAQ,OAAQtsE,KAAM,QAExD,IAAI2uE,EAAK1F,EAAGr1E,EACRg7E,EAAK1F,EAAGt1E,EAER27C,EAAe,KH9CA,GG8COk/B,EAAYz7B,EAAoB,GAAao4B,QACjE,IH/Ca,GG+CPqD,EAAYx7B,EAAoB,GAAam4B,QAErDyD,EAAQxyE,KAAKyyE,OAAOryE,GAnBwC,uBAqBhE,YAAgBoyE,EAAME,MAAtB,+CAA4B,KAApBC,EAAoB,QACpBC,EAAQD,EAAK56E,EAAI,IAAMuU,KAAKumE,GAC5BC,EAAMR,EAAKhmE,KAAKymE,IAAIH,GAASL,EAAKjmE,KAAK0mE,IAAIJ,GAC3CK,EAAMX,EAAKhmE,KAAK0mE,IAAIJ,GAASL,EAAKjmE,KAAKymE,IAAIH,GAC/C1/B,GAAQ,MAAQ4/B,EAAMH,EAAKl/B,EAAI,GAAas7B,QAAU,IAAMkE,EAAMN,EAAKl/B,EAAI,GAAas7B,QACxFuD,EAAKQ,EACLP,EAAKU,GA3BuD,kFA8BhE,MAAO,CACH//B,KAAMA,EACNvvC,KAAM6uE,EAAM7uE,KACZssE,OAAQuC,EAAMvC,Y,EA1D1B,O,6BAAA,K,uKAEW,GAAAiD,WAAa,GACb,GAAAT,OAAkC,CACrC,YAAe,CACXC,MAAO,CAAC,CAAC36E,EAAG,IAAK07C,EAAG,IAAM,CAAC17C,EAAG,IAAK07C,EAAG,IAAM,CAAC17C,EAAG,IAAK07C,EAAG,KACxDw8B,OAAQ,UACRtsE,KAAM,UACN,wBAAoBsF,GAExB,YAAe,CACXypE,MAAO,CAAC,CAAC36E,EAAG,IAAK07C,EAAG,IAAM,CAAC17C,EAAG,IAAK07C,EAAG,IAAM,CAAC17C,EAAG,IAAK07C,EAAG,KACxDw8B,OAAQ,UACRtsE,KAAM,UACN,mBAAoB,KAExB,YAAe,CACX+uE,MAAO,CAAC,CAAC36E,EAAG,GAAK,GAAUm7E,WAAYz/B,EAAG,IAAM,CAAC17C,EAAG,IAAM,EAAE,GAAUm7E,WAAYz/B,EAAG,IAChF,CAAC17C,EAAG,EAAE,GAAUm7E,WAAYz/B,EAAG,IAAM,CAAC17C,EAAG,IAAM,EAAE,GAAUm7E,WAAYz/B,EAAG,KAC/Ew8B,OAAQ,UACRtsE,KAAM,UACN,wBAAoBsF,IC7BzB,IAAM,GAAb,WAMI,WAAsBkT,EAAyBg3D,EAAoCroD,I,4FAAa,SAA1E,KAAA3O,SAAyB,KAAAg3D,eAAoC,KAAAroD,Q,UANvF,O,EAAA,G,EAAA,8BAW6B,MAAjB9qB,KAAK46C,UACT56C,KAAK46C,SAAS3P,SAZtB,6BAgB6B,MAAjBjrC,KAAK46C,UACT56C,KAAK46C,SAASxP,SAjBtB,+BAqB6B,MAAjBprC,KAAK46C,UACT56C,KAAK46C,SAASnO,WAtBtB,+BA0B6B,MAAjBzsC,KAAK46C,UACT56C,KAAK46C,SAAS/T,WA3BtB,+BA8Ba+T,GACLA,EAAS9Q,OAAO9pC,KAAK46C,YA/B7B,8BAmC6B,MAAjB56C,KAAK46C,UACT56C,KAAK46C,SAAS7vB,UApCtB,oCAuCyBvzB,GACQ,IADM2kB,EACN,uDADwB,KAAM3Y,EAC9B,uCAErBlL,EAAK,6BACLsiD,EAAWpQ,OAAOlvB,SAAS8wD,gBAAgB9zE,EAAId,IAMnD,OAJkB,MAAdgM,GAAoBo3C,EAASxM,KAAK5qC,GAExB,MAAV2Y,GAAgBA,EAAOkwD,YAAYzxB,EAAS,IAEzCA,IAjDf,wCAsD6BhlC,GACI,IADUuG,EACV,uDAD4B,KAAM3Y,EAClC,uCAErBo3C,EAA4B56C,KAAKusE,cAAc,OAAQpwD,EAAQ,CAC/DuyD,KAAM,cACN,cAAe,aACf/qE,KAAM,OACN,qBAAsB,YAO1B,OAJkB,MAAdH,GAAoBo3C,EAASxM,KAAK5qC,GAEtCo3C,EAAShlC,KAAKA,GAEPglC,IApEf,qCAuE0B+zB,GAClB,IAAIC,EAAgBD,EAAY,GAAGE,UAEnC,MAAO,CACHz4B,OAAQw4B,EAAKx4B,OAASg9B,EAAarE,QACnC54B,MAAOy4B,EAAKz4B,MAAQi9B,EAAarE,WA5E7C,+BAoFQ,IAAII,EAASnvE,KAAK46C,SACJ,MAAVu0B,GACAA,EAASnvE,KAAKusE,cAAc,IAAKvsE,KAAKmc,QACtCnc,KAAK46C,SAAWu0B,EAChBA,EAAOvgC,IAAI,SAAU5uC,KAAK8qB,QAE1BqkD,EAAOpkD,QAGX,IAAIsoD,EAASrzE,KAAKmzE,aAAaG,cAC/B,KAAc,MAAVD,GAAkBA,EAAOrxE,OAAS,GAAtC,CAMA,IAFA,IAAIkxC,EAAO,KAAOlzC,KAAKuzE,mBAAmBF,EAAO,IAExCp8E,EAAI,EAAGA,EAAIo8E,EAAOrxE,OAAQ/K,IAC/Bi8C,GAAQ,MAAQlzC,KAAKuzE,mBAAmBF,EAAOp8E,IAGnD,IAAIu8E,EAAY,GAAUf,OAAOzyE,KAAKmzE,aAAaM,WASnD,IARYzzE,KAAKusE,cAAc,OAAQ4C,EAAO,GAAI,CAAE53E,EAAG27C,IACjDtE,IAAI,CAEN,eAAgB,SAChB,KAAQ,OACR,mBAAoB4kC,EAAU,sBAG3BH,EAAOrxE,OAAS,GAAKqxE,EAAOA,EAAOrxE,OAAS,GAAG20C,GAAK08B,EAAOA,EAAOrxE,OAAS,GAAG20C,GACjF08B,EAAOA,EAAOrxE,OAAS,GAAG40C,GAAKy8B,EAAOA,EAAOrxE,OAAS,GAAG40C,GACzDy8B,EAAO/+D,MAGX,GAAI++D,EAAOrxE,OAAS,GAAoD,MAA/ChC,KAAKmzE,aAAaO,0BAAmC,CAC1E,IAAIC,EAAO,GAAUC,SAASP,EAAOA,EAAOrxE,OAAS,GAAIqxE,EAAOA,EAAOrxE,OAAS,GAC5EhC,KAAKmzE,aAAaM,WAEVzzE,KAAKusE,cAAc,OAAQ4C,EAAO,GAAI,CAAE53E,EAAGo8E,EAAKzgC,OACtDtE,IAAI,CACNqhC,OAAQjwE,KAAK8qB,MACb,eAAgB,SAChB,KAAQ6oD,EAAKhwE,WA9H7B,yCAoIuBkwE,GAGf,MJpImB,GIkIXA,EAAMl9B,EAAoBy8B,EAAarE,QAE/B,IJpIG,GImIX8E,EAAMj9B,EAAoBw8B,EAAarE,a,6BAtIvD,K,2uBAEkB,GAAAA,QAAkB,KAAO,GCkBpC,IAAM,GAAb,YAmBI,WAAoBzD,EAAmC32C,GAAc,M,iGAAA,S,EACjE,U,EAAA,gBAAM22C,EAAc32C,K,gDADJ22C,eAjBpB,EAAAwI,qBAA8D,GAE9D,EAAArB,OAAyB,GAEzB,EAAAsB,mBAA6B,KAI7B,EAAAxhC,QAAkB,EAElB,EAAAyhC,mCAAqC,EACrC,EAAAC,uBAAyB,EACzB,EAAAC,aAAe,EAEf,EAAAlvC,OAAiB,EAMb,IAAIjnB,EAAO,MAHsD,OAIjE,EAAK8tD,YAAYx/B,GAAG,SAAS,SAACzuB,GAC1BA,EAAGq7B,iBACH,IAAIk7B,EAAuE,GAA/Cp2D,EAAKyzD,kBAAkB4C,qBAC/C7C,EAAoE,GAA9CxzD,EAAKyzD,kBAAkBD,oBACjD96B,GAAgB,CACZ,CACI3C,QAASqgC,EAAwB,2BAA6B,2BAC9DnoC,SAAU,WACNjuB,EAAKyzD,kBAAkB4C,sBAAwBD,EAC/Cp2D,EAAKs2D,YAAYt2D,EAAKs0B,kBAAkB,KAGhD,CACIyB,QAASy9B,EAAsB,uBAAyB,uBACxDvlC,SAAU,WACNjuB,EAAKyzD,kBAAkBD,qBAAuBA,EAC9CxzD,EAAKyzD,kBAAkB9sB,OAAO3yC,SAAQ,SAAC++D,GAAQA,EAAGE,iBAAmB,KACrEjzD,EAAKs2D,YAAYt2D,EAAKs0B,kBAAkB,MAGjDz0B,EAAGy/B,MAAQ,EAAGz/B,EAAG0/B,MAAQ,GAC5B1/B,EAAG62B,qBAzB0D,E,UAnBzE,O,mOAAA,M,EAAA,G,EAAA,0CAiDQz0C,KAAK8zE,qBAAuB,GAC5B9zE,KAAKyyE,OAAO1gE,SAAQ,SAACygE,GAAYA,EAAM3rC,YACvCqG,EAAEltC,KAAKmsE,YAAYphD,UAnD3B,kCAwDQ,GAA6B,MAA1B/qB,KAAKwxE,kBAAR,CAEA,IAAI8C,EAA8B,CAC9BC,WAAY,GACZH,qBAAsBp0E,KAAKwxE,kBAAkB4C,qBAC7C7C,oBAAqBvxE,KAAKwxE,kBAAkBD,qBAGhD,IAAK,IAAIiD,KAAex0E,KAAK8zE,qBAAsB,CAC/C,IAAIW,EAAWz0E,KAAK8zE,qBAAqBU,GADM,uBAE/C,YAAeC,EAAS/vB,OAAxB,+CAAgC,KACxBuhB,EADwB,QACf32B,YACb22B,EAAIuO,YAAc3kE,OAAOM,SAASqkE,GAClCF,EAAIC,WAAWhwE,KAAK0hE,IALuB,mFASnD,OAAOqO,KAzEf,kCA6EgBI,GAA8C,2BACtD,YAAeA,EAAuBH,WAAtC,+CAAkD,KAAzCzD,EAAyC,QAC1CyD,EAAyBv0E,KAAK8zE,qBAAqBhD,EAAG0D,aACxC,MAAdD,IACAA,EAAa,CACT7vB,OAAQ,GACRiwB,SAAU,GACVP,sBAAsB,EACtB7C,qBAAqB,GAEzBvxE,KAAK8zE,qBAAqBhD,EAAG0D,aAAeD,GAEhDA,EAAWI,SAASpwE,KAAK,GAASqwE,YAAY50E,KAAM8wE,IACpDyD,EAAWH,qBAAuBM,EAAuBN,qBACzDG,EAAWhD,oBAAsBmD,EAAuBnD,qBAdN,qFA7E9D,+CAiGQ,IAAIgD,EAAav0E,KAAK8zE,qBAAqB9zE,KAAK+zE,oBAChD/zE,KAAK60E,sBAAsBN,EAAW7vB,UAlG9C,oCAqGkBhU,GACV,IAAIogC,EAAiB9wE,KAAK8zE,qBAAqBpjC,EAAU9uC,IAUzD,OATU,MAANkvE,IACAA,EAAK,CACDpsB,OAAQ,GACRiwB,SAAU,GACVP,sBAAsB,EACtB7C,qBAAqB,GAEzBvxE,KAAK8zE,qBAAqBpjC,EAAU9uC,IAAMkvE,GAEvCA,IAhHf,wCAmHsBpgC,GACd,IAAIokC,EAAO90E,KAAK+0E,cAAcrkC,GAE9B,GAAI1wC,KAAK+zE,oBAAsBrjC,EAAU9uC,GAAI,CACzC,GAA+B,MAA3B5B,KAAK+zE,mBAA4B,CACjC,IAAI9N,EAAMjmE,KAAK8zE,qBAAqB9zE,KAAK+zE,oBACzC,GAAW,MAAP9N,EAAa,4BACb,YAAeA,EAAIvhB,OAAnB,+CAA2B,QACpBjY,SAFM,6GAIb,YAAew5B,EAAI0O,SAAnB,+CAA6B,QACtBloC,SALM,oFAHoB,2BAazC,YAAeqoC,EAAKpwB,OAApB,+CAA4B,KAAnB,EAAmB,QACxB1kD,KAAKmsE,WAAWE,YAAY,EAAGzxB,SAAS,KAdH,6GAgBzC,YAAek6B,EAAKH,SAApB,+CAA8B,KAArB,EAAqB,QACP,MAAf,EAAG/5B,UACH56C,KAAKmsE,WAAWE,YAAY,EAAGzxB,SAAS,KAlBP,kFAsBzC56C,KAAK60E,sBAAsBC,EAAKpwB,QAKpC,OAFA1kD,KAAK+zE,mBAAqBrjC,EAAU9uC,GAE7BkzE,IAjJf,kCAqJgBpkC,EAAsBskC,GAA8B,I,EAAA,OAE5D,GAAiB,MAAbtkC,EAAJ,CACA1wC,KAAKqyC,iBAAmB3B,EACxB1wC,KAAKwxE,kBAAoBxxE,KAAKi1E,kBAAkBvkC,GAEhD,IAAIlyB,EAAckyB,EAAUlyB,YAExB02D,EAA4B,GAE5BC,GAA4B,EAC5BC,EAA0C,GAC1C9tE,EAA2C,GAZa,uBAc5D,YAAmBkX,EAAY8F,YAAW,GAA1C,+CAAkD,KAAzCttB,EAAyC,QAC1CwtB,EAA4B,QAApB,EAAGxtB,aAAM,EAANA,EAAQqnB,iBAAS,eAAEmG,SAClB,MAAZA,IACJ2wD,GAAmB,EAGnB3wD,EAAS3Z,QAAO,SAACzK,GACb,OAAOA,aAAgB,GACnBA,aAAgB,KACrB2R,SAAQ,SAAC7O,GACR,IAAI4tE,EAAe,EAAKuE,mBAAmBnyE,EAAO,EAAKsuE,kBAAmB4D,GAChE,MAANtE,GAAYoE,EAAc3wE,KAAKusE,GAC/B5tE,aAAiB,GACjBA,EAAMoyE,0BAA0BhuE,QA3BgB,kFAkC5D,IADA,IAAIiuE,EAAkC,GAC/BA,EAASvzE,OAASsF,EAAkBtF,QAAQ,CAC/CuzE,EAAWjuE,EAAkBiG,MAAM,GADY,2BAE/C,YAAgBgoE,EAAhB,+CAA0B,KAAjBC,EAAiB,QAClBA,aAAe,GACfA,EAAIF,0BAA0BhuE,IAJS,mFASnD,GAAItH,KAAKwxE,kBAAkB4C,qBAAsB,4BAC7C,YAAgB9sE,EAAhB,+CAAmC,KAA1B,EAA0B,QAC3BwpE,EAAe9wE,KAAKq1E,mBAAmB,EAAKr1E,KAAKwxE,kBAAmB4D,GAC9D,MAANtE,GAAYoE,EAAc3wE,KAAKusE,IAHM,mFAOjD9wE,KAAKglC,MAAQhlC,KAAKglC,OAASowC,EAAiBpzE,OAAS,EAErD,cAAkBozE,EAAlB,eAAoC,CAA/B,IAAIlyE,EAAK,KACN,EAAK,IAAI,GAASlD,KAAsB,GAAhBsM,KAAKikC,SL3NlB,GK2NiE,GAAhBjkC,KAAKikC,SL3NtD,GK2NqFrtC,GAEpG,EAAGkuE,cAEH,IAAIqE,EAAUz1E,KAAK01E,cAAcR,EAAe,EAAGvJ,QAAS,EAAGC,SAAU5rE,KAAKyrE,aAE9E,EAAGmF,OAAO6E,EAAQ9+B,EAAG8+B,EAAQ7+B,GAAG,GAEhCs+B,EAAc3wE,KAAK,GAQvB,GAJI6wE,EAAiBpzE,OAAS,GAC1BhC,KAAK60E,sBAAsBK,GAG1BC,EAAL,CArE4D,2BAuE5D,YAAen1E,KAAKwxE,kBAAkB9sB,OAAtC,+CAA8C,KAArC,EAAqC,QAC1C,EAAGtZ,OACH,EAAGsZ,QAAS,EACZ1kD,KAAKwxE,kBAAkBmD,SAASpwE,KAAK,IA1EmB,kFA6E5DvE,KAAKwxE,kBAAkB9sB,OAASwwB,EAE3BF,IACDh1E,KAAK6xE,yBACL7xE,KAAK8xE,oBAtOjB,qCA4OQ9xE,KAAKsrE,aAAa56C,KAAK,4BAA4B0a,OAInD,IAAI0tB,EAAmB,CAAC,UAAW,UAAW,UAAW,UAAW,UAChE,UAAW,UAAW,UAAW,UAAW,UAAW,WACvD6c,EAAa,EAEbC,EAAe51E,KAAK61E,aAExB71E,KAAKuyC,UACLqjC,EAAarjC,QAAUvyC,KAAKuyC,QAEF,MAAtBvyC,KAAK81E,eACL91E,KAAK81E,cAAcC,YAGvB/1E,KAAK81E,cAAgB,IAAIE,OAAO,+CAChC,IAAIj4D,EAAO/d,KACXA,KAAK81E,cAAcG,UAAY,SAAUx+D,GAErC,IAAIk9B,EAAoBl9B,EAAE21B,KACtBuH,EAAGpC,SAAWx0B,EAAKw0B,SAAS,WAC5Bx0B,EAAKutD,aAAa56C,KAAK,4BAA4B0a,OAEnDrtB,EAAK00D,OAAO1gE,SAAQ,SAACygE,GAAYA,EAAM3rC,YAEvC,IAGIqvC,EAHAC,EAA8D,GAE9DC,EAA6BzhC,EAAG89B,OAAOzwE,OAAS,EAEpD,GACIk0E,EAAyBE,EACzBA,EAAqB,EACrBzhC,EAAG89B,OAAO1gE,SAAQ,SAACygE,GACI,MAAfA,EAAM1nD,QACNsrD,IACuC,MAAnC5D,EAAMkB,2BACNlB,EAAM1nD,MAAQguC,EAAO6c,GACrBQ,EAA0B3D,EAAMr5E,YAAcq5E,EAAM1nD,QACpD6qD,EACiB7c,EAAO92D,OAAS,IAAG2zE,EAAa,IAEjDnD,EAAM1nD,MAAQqrD,EAA0B3D,EAAMkB,qCAIrD0C,EAAqBF,GAE9BvhC,EAAG89B,OAAO1gE,SAAQ,SAACygE,GACI,MAAfA,EAAM1nD,QACN0nD,EAAM1nD,MAAQ,cAItB6pB,EAAG89B,OAAO1gE,SAAQ,SAACygE,GACf,IAAI6D,EAAmB,IAAI,GAAat4D,EAAKouD,WAAYqG,EAAOA,EAAM1nD,OACtEurD,EAAGthC,SACHh3B,EAAK00D,OAAOluE,KAAK8xE,MApCO,IA2CpCr2E,KAAK81E,cAAcQ,YAAYV,GAC/B51E,KAAKsrE,aAAa56C,KAAK,4BAA4Bua,SA9S3D,mCAkTc,WAEF2qC,EAA6B,CAC7BW,WAAY,GACZ9D,OAAQ,GACRzP,KAAM12D,KAAK43D,KAAKlkE,KAAK2rE,QLxUN,IKyUff,KAAMt+D,KAAK43D,KAAKlkE,KAAK4rE,SLzUN,IK0UfoI,mCAAoCh0E,KAAKg0E,mCACzCC,uBAAwBj0E,KAAKi0E,uBAC7BC,aAAcl0E,KAAKk0E,cAGnBK,EAAav0E,KAAK8zE,qBAAqB9zE,KAAK+zE,oBAiChD,OA/BAQ,EAAW7vB,OAAO3yC,SAAQ,SAAC++D,GACvB8E,EAAaW,WAAWhyE,KAAKusE,EAAG0F,0BAGpCjC,EAAW7vB,OAAO3yC,SAAQ,SAAC++D,GAEvB,GAAIA,EAAG5tE,iBAAiB,EAAO,CAC3B,GAA0B,MAAtB4tE,EAAG5tE,MAAMY,UAAmB,CAC5B,IAAI2yE,EAAM,EAAKC,aAAa5F,EAAG5tE,MAAMY,UAAWywE,EAAW7vB,QAChD,MAAP+xB,GACA,EAAKE,WAAW7F,EAAI2F,EAAK,cAAeb,GAJrB,2BAO3B,YAAiB9E,EAAG5tE,MAAMmD,WAA1B,+CAAsC,KAA7BuwE,EAA6B,QAC9B,EAAM,EAAKF,aAAaE,EAAMrC,EAAW7vB,QAClC,MAAP,GACA,EAAKiyB,WAAW7F,EAAI,EAAK,cAAe8E,IAVrB,6GAa3B,YAAe9E,EAAG5tE,MAAMsE,mBAAxB,+CAA4C,KAAnCC,EAAmC,QACpC,EAAM,EAAKivE,aAAajvE,EAAGvE,MAAOqxE,EAAW7vB,QACtC,MAAP,GACA,EAAKiyB,WAAW,EAAK7F,EAAI,cAAe8E,IAhBrB,uFAyB5BA,IA/Vf,iCAmWea,EAAeI,EAAepD,EAAmBmC,GAE5Ca,EAAID,sBACJK,EAAIL,sBADhB,IAGIjC,EAAav0E,KAAK8zE,qBAAqB9zE,KAAK+zE,oBAEhD6B,EAAanD,OAAOluE,KAAK,CACrBkvE,UAAWA,EAEXqD,mBAAoBvC,EAAW7vB,OAAOt/C,QAAQyxE,GAE9CE,qBAAsBxC,EAAW7vB,OAAOt/C,QAAQqxE,GAEhDO,sBAAuBH,EAAIv7C,UAC3BniC,WAAYs9E,EAAIn7C,UAAY,YAAcu7C,EAAIv7C,cAlX1D,mCAuXiBp4B,EAA0BqxE,GAAsB,2BAEzD,YAAeA,EAAf,+CAA2B,KAAlBzD,EAAkB,QACvB,GAAIA,EAAG5tE,OAASA,EAAO,OAAO4tE,GAHuB,kFAMzD,OAAO,OA7Xf,yCAiYuB5tE,EAA0BqxE,EAAwBa,GAEjE,IADA,IAAIn+E,EAAI,EACDA,EAAIs9E,EAAW7vB,OAAO1iD,QAAQ,CACjC,IAAIiF,EAAIstE,EAAW7vB,OAAOztD,GAC1B,GAAIgQ,EAAEq0B,WAAap4B,EAAM/J,YAAc8N,EAAEgwE,sBAAsB/zE,GAG3D,OAFA+D,EAAEypE,cAAcxtE,GAChBqxE,EAAW7vB,OAAO3sC,OAAO9gB,EAAG,GACrBgQ,EAEXhQ,IAIJ,IADAA,EAAI,EACGA,EAAIs9E,EAAWI,SAAS3yE,QAAQ,CACnC,IAAI,EAAIuyE,EAAWI,SAAS19E,GAC5B,GAAI,EAAEqkC,WAAap4B,EAAM/J,YAAc,EAAE89E,sBAAsB/zE,GAO3D,OANAqxE,EAAWI,SAAS58D,OAAO9gB,EAAG,GAC9B,EAAEiM,MAAQA,EACV,EAAEkuE,cACF,EAAEnmC,OACF,EAAEyZ,QAAS,EACX1kD,KAAKglC,OAAQ,EACN,EAEX/tC,IAKJ,OAFAm+E,EAAiB7wE,KAAKrB,GAEf,OA9Zf,8BAmaQ,IAAI4tE,EAAK9wE,KAAK8zE,qBAAqB9zE,KAAK+zE,oBACxC,GAAU,MAANjD,EAAY,4BACZ,YAAcA,EAAGpsB,OAAjB,+CAAyB,QACnBjY,SAFM,yF,6BApaxB,GAAkC,I,+4BCZ3B,IAAM,GAAb,gF,UAAA,O,mOAAA,M,EAAA,G,EAAA,4CAMsB,I,EAAA,OAEVjuB,EAAcxe,KAAK20B,KAAK2R,sBAAsB9nB,YAE9Co8B,EAAWpQ,OAAO,uCACtBxqC,KAAKk3E,eAAiB1sC,OAAO,qBAC7BoQ,EAAS9Q,OAAO9pC,KAAKk3E,gBANP,2BAQd,IARc,IAQd,EARc,iBAQLlgF,EARK,QASNglB,EAA0C,QAAzB,EAAGhlB,EAAOooB,uBAAe,eAAEpD,kBAChD,GAAyB,MAArBA,GAAyD,GAA5BA,EAAkBha,OAAa,iBAChE,IAAIia,EAAcD,EAAkB,GAAGC,YACvC,GAAmB,MAAfA,GAA4D,MAArCD,EAAkB,GAAGE,aAAsB,iBACtED,EAAYlK,SAAQ,SAACwK,EAAUpjB,GAC3B,IAAIiH,EAAOmc,EAASnc,KACpB,GAAY,MAARA,GAAgBA,aAAgB,GAAwB,MAAfA,EAAKpJ,SAAmBoJ,EAAKpJ,OAAOuQ,eAAgB,CAC7F,IAAI4vE,EAAmBh+E,GAAc,EAAKi+E,eAAiB,YAAc,GACzE,EAAKF,eAAeptC,OAAO,kBAAoB3wC,EAAag+E,EAAW,KAAOh+E,EAC1E,YAAcnC,EAAO8qC,KAAKtqC,KAAO,oBAVjD,EAAmBgnB,EAAY8F,YAAW,GAA1C,+CAAkD,IARpC,kFAuBd,OAAOs2B,IA7Bf,gCAiCwB,MAAO,UAjC/B,sC,MAsCYy8B,EAAqC,QAA5B,EADFr3E,KAAK20B,KAAK6N,iBAAiB9jB,KACjB1e,KAAKo3E,uBAAe,eAAEl/E,MAC3C,GAAiB,MAAbm/E,EAAJ,CAKsB,MAAlBA,EAAUj3E,MAAkBi3E,EAAUj3E,gBAAgB,GACtDJ,KAAKs3E,cAAcvrE,MAAM,gBAAkB/L,KAAKo3E,eAAiB,2BAGrE,IAQIG,EARAr0E,EAAsBm0E,EAAUj3E,KAChCu8B,EAAqB06C,EAAUn/E,MAG/Bs/E,EAA6Bx3E,KAAKy3E,qBAAqBv0E,GAGvDw0E,EAAwC,GAG5C,GAAkC,MAA9BF,EAGA,IADA,IAAIvwE,EAAI/D,EACI,MAAL+D,KAAeA,aAAa,KAAc,4BAE7C,YAAcA,EAAEzD,WAAhB,+CAA4B,KAAnBoE,EAAmB,QACpB1P,EAAQykC,EAAIn5B,WAAWoE,EAAExF,OAC7B,GAAMlK,EAAMkI,gBAAgB,EAC5B,GAAyB,MAArBm3E,GAA6BA,GAAqB3vE,EAAExH,KACpDs3E,EAA4BnzE,KAAKqD,EAAEzO,gBAChC,CACH,IAAIw+E,EAAK33E,KAAKy3E,qBAAqBv/E,EAAMkI,MAC/B,MAANu3E,IACAJ,EAAoBI,KAVa,kFAe7C1wE,EAAIA,EAAEnD,UAKoB,MAA9B0zE,GAA2D,MAArBD,EACtCv3E,KAAKs3E,cAAcvrE,MAAM,2DAEzB/L,KAAKq0E,YAAYgD,EAAWG,EAA4BE,EAA6BH,QA5CrFv3E,KAAKs3E,cAAcvrE,MAAM,uBAAyB/L,KAAKo3E,eAAiB,oBAxCpF,kCA2FgBC,EAAkBG,EAC1BE,EAAuCH,MA5F/C,2CAoGyBr0E,GAMjB,IAJA,IAAI00E,EAA2B,GAG3B3wE,EAAI/D,EACI,MAAL+D,KAAeA,aAAa,KAC3BA,EAAEZ,WAAWrE,OAAS,IACtB41E,EAAcA,EAAY1vE,OAAOjB,EAAEZ,aAEpB,MAAfY,EAAEnD,WAAuBmD,EAAEnD,qBAAqB,UAPpD+zE,GAQatzE,KAAK0C,EAAEnD,WAEpBmD,EAAIA,EAAEnD,UAIV,IADAmD,EAAI/D,EACQ,MAAL+D,KAAeA,aAAa,KAAc,4BAE7C,YAAcA,EAAEzD,WAAhB,+CAA4B,KACpBpD,EADoB,QACXA,KACb,GAAIw3E,EAAYxyE,QAAmBhF,IAAS,SAlBhDy3E,GAkB8DzyE,QAAehF,IAAS,EAC9E,OAA0BA,GALW,kFAS7C6G,EAAIA,EAAEnD,UAGV,OAAO,OAjIf,oC,6BAAA,ICLI,WAAsB6wB,EAA0B2iD,I,4FAA4B,SAAtD,KAAA3iD,OAA0B,KAAA2iD,mB,2uBCD7C,IAAM,GAAb,YAKI,WAAY3iD,EAAwBmjD,GAAsC,M,iGAAA,S,EACtE,U,EAAA,gBAAMA,EAAkBpnD,KAAK,4BAA6BiE,K,gDAD1BmjD,oBAHpC,EAAAC,SAAmC,GACnC,EAAAC,eAAuC,KAInC,EAAKD,SAASxzE,KAAK,IAAI,GAAYowB,EAAhB,QAEnB,IAAIsjD,EAAcH,EAAkBpnD,KAAK,0BACzCunD,EAAYltD,QACZktD,EAAYnuC,OAAO,6DAEnB,IARsE,uBAStE,YAAoB,EAAKiuC,SAAzB,+CAAmC,KAA1BG,EAA0B,QAC/BD,EAAYnuC,OAAO,qBAA+BouC,EAAQC,UAAY,cAVJ,kFAatE,IAAIp6D,EAAO,MAb2D,OActEk6D,EAAY5rC,GAAG,UAAU,SAAC50B,GAEtB,IAAIvf,EAAgBuf,EAAE2gE,cAAclgF,MACpC,GAAY,MAATA,EAC2B,MAAvB6lB,EAAKi6D,iBACJj6D,EAAKiuD,QAAQt7C,KAAK,0BAA0BmW,SAC5C9oB,EAAKi6D,eAAe/yC,SAExBlnB,EAAKi6D,eAAiB,SACnB,CACH,IAAIK,EAAWxoE,OAAOM,SAASjY,GAC/B6lB,EAAKi6D,eAAiBj6D,EAAKg6D,SAASM,GAExCt6D,EAAKu6D,oBA3B6D,E,UAL9E,O,mOAAA,M,EAAA,G,EAAA,6BAqCU,GACFt4E,KAAKgsE,QAAQliC,OAAO,sCAAwC,EAAQ,YAtC5E,uCA2CQ,IAAIyuC,EAAev4E,KAAK83E,kBAAkBpnD,KAAK,8BACrB,MAAvB1wB,KAAKg4E,gBACJO,EAAaxtD,QACbwtD,EAAazuC,OAAO9pC,KAAKg4E,eAAeQ,uBAExCD,EAAaxtD,UAhDzB,sCAqDkC,MAAvB/qB,KAAKg4E,gBACJh4E,KAAKg4E,eAAeS,qB,6BAtDhC,GAAmC,I,uKCE5B,IAAM,GAAb,WASI,WAAoB9jD,EAAuB+jD,I,4FAA8B,SAArD,KAAA/jD,OAAuB,KAAA+jD,YAL3C,KAAAC,aAAuB,EAOnB34E,KAAK44E,MAAQF,EAAUhoD,KAAK,YAC5B1wB,KAAK64E,UAAYH,EAAUhoD,KAAK,mBAEhC,IAAIooD,EAAmB94E,KAAK64E,UAAUnoD,KAAK,8BAA8B1uB,OAAS,EAC9E+2E,EAAoB/4E,KAAK64E,UAAUnoD,KAAK,+BAA+B1uB,OAAS,EAEjF82E,IACC94E,KAAKivC,aAAe,IAAI,GAAajvC,KAAK44E,MAAMloD,KAAK,oBAAqBiE,GAC1E30B,KAAK64E,UAAUnoD,KAAK,8BAA8B2b,GAAG,SAAS,WAAQtuB,EAAK4W,KAAKqkD,mBAAkB,OAGnGD,IACC/4E,KAAKs3E,cAAgB,IAAI,GAAct3E,KAAK20B,KAAM30B,KAAK44E,MAAMloD,KAAK,sBAClE1wB,KAAK64E,UAAUnoD,KAAK,+BAA+B2b,GAAG,SAAS,WAAQtuB,EAAKk7D,6BAGhF,IAAIl7D,EAAO/d,KACPk5E,EAAyB,OAC7BR,EAAUhoD,KAAK,oBAAoB2b,GAAG,SAAS,WAE3CtuB,EAAK46D,aAAe56D,EAAK46D,YAEzB,IAAIQ,EAAe3uC,OAAO,oBAErBzsB,EAAK46D,aAUNnuC,OAAO,SAASoE,IAAI,UAAW,QAC/BsqC,EAAiB1uC,OAAO,aAAaoE,IAAI,SACzCpE,OAAO,aAAaoE,IAAI,QAAS,QACjCuqC,EAAahuC,YAAY,oBACzBguC,EAAajuC,SAAS,yBAEtBV,OAAO,yBAAyBV,OAAOU,OAAO,cAC9C2uC,EAAa/qC,KAAK,QAAS,kCAC3B5D,OAAO,gBAAgBwN,QAAQ,iBAjB/BxN,OAAO,SAASoE,IAAI,UAAW,QAC/BpE,OAAO,aAAaoE,IAAI,QAASsqC,GAEjCC,EAAahuC,YAAY,yBACzBguC,EAAajuC,SAAS,oBACtBV,OAAO,aAAa4Q,YAAY5Q,OAAO,eACvC2uC,EAAa/qC,KAAK,QAAS,+BAC3B5D,OAAO,gBAAgBwN,QAAQ,mB,UA3C/C,O,EAAA,G,EAAA,4CA4DQ,IAAIohC,EAA2Bp5E,KAAK20B,KAAK6N,iBAAiB42C,YAC1D,GAAmB,MAAfA,GAAuBp5E,KAAK24E,YAAa,CACzC,IAAIU,EAAepjC,OAAOwB,YAAcz3C,KAAK64E,UAAUziC,SAAW,EAC9DkjC,EAAsBrjC,OAAOqB,WAAc+hC,EAC3CE,EAAqBH,EAAYjjC,MAAQijC,EAAYhjC,OACzD,GAAImjC,GAAsBD,EAAqB,CAC3C,IAAIE,EAAWD,EAAqBF,EACpCr5E,KAAK44E,MAAMloD,KAAK,WAAWke,IAAI,QAAS4qC,EAAW,MACnDx5E,KAAK44E,MAAMloD,KAAK,WAAWke,IAAI,SAAUyqC,EAAe,UACrD,CACH,IAAII,EAAYxjC,OAAOqB,WAAaiiC,EACpCv5E,KAAK44E,MAAMloD,KAAK,WAAWke,IAAI,QAASqH,OAAOqB,WAAa,MAC5Dt3C,KAAK44E,MAAMloD,KAAK,WAAWke,IAAI,SAAU6qC,EAAY,UAxErE,gCA+EQ9hC,GAAS33C,KAAK04E,aA/EtB,8CAmFQ,IAAI1X,EAAUhhE,KAAK64E,UAAUnoD,KAAK,8BAClC,OAAqB,GAAlBswC,EAAQh/D,QACJg/D,EAAQplB,SAAS,eArFhC,+CAyFQ,IAAIolB,EAAUhhE,KAAK64E,UAAUnoD,KAAK,+BAClC,OAAqB,GAAlBswC,EAAQh/D,QACJg/D,EAAQplB,SAAS,eA3FhC,oDA+FY57C,KAAK05E,wBACL15E,KAAKs3E,cAAcgB,mBAhG/B,+CAqGQt4E,KAAKs3E,cAAcgB,iBACft4E,KAAK20B,KAAK6N,iBAAiB4e,OAASC,GAAiBC,QAAUthD,KAAK20B,KAAK6N,iBAAiB4e,OAASC,GAAiBgD,SACpHrkD,KAAKs3E,cAAcmB,qB,6BAvG/B,K,uKCJO,IAAM,GAAb,WAII,WAAY9jD,I,4FAAU,SAClB30B,KAAK20B,KAAOA,E,UALpB,O,EAAA,G,EAAA,qCASQ,IAAI5W,EAAO/d,KAEPg2C,EAAeC,OAAOC,aAAe,UAAY,QAErD1L,OAAO,YAAY6B,GAAG2J,EAAe,QAAQ,SAAC2jC,GAE1C,IAAIhjC,EAAIgjC,EAAGzW,QAEX14B,OAAOlvB,UAAU+wB,GAAG2J,EAAe,gBAAgB,SAAC4jC,GAChD,IAAIhN,EAAKgN,EAAG1W,QAAUvsB,EAEtB54B,EAAK87D,cAAcjN,GAEnBj2B,EAAIijC,EAAG1W,WAGX14B,OAAOlvB,UAAU+wB,GAAG2J,EAAe,cAAc,WAC7CxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,gBACpCxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,oBAM5CxL,OAAO,YAAY6B,GAAG2J,EAAe,QAAQ,SAAC2jC,GAE1C,IAAI/iC,EAAI+iC,EAAG7O,QAEXtgC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,gBAAgB,SAAC4jC,GAChD,IAAI/M,EAAK+M,EAAG9O,QAAUl0B,EAEtB74B,EAAK+7D,cAAcjN,GAEnBj2B,EAAIgjC,EAAG9O,WAGXtgC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,cAAc,WAC7CxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,gBACpCxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,oBAM5CxL,OAAO,YAAY6B,GAAG2J,EAAe,QAAQ,SAAC2jC,GAE1C,IAAIhjC,EAAIgjC,EAAGzW,QACX,GAAY8H,eAAgB,EAE5BxgC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,gBAAgB,SAAC4jC,GAChD,IAAIhN,EAAKgN,EAAG1W,QAAUvsB,EAEtB54B,EAAKg8D,aAAanN,GAElBj2B,EAAIijC,EAAG1W,QACP0W,EAAGnlC,qBAGPjK,OAAOlvB,UAAU+wB,GAAG2J,EAAe,cAAc,WAC7CxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,gBACpCxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,cACpC,GAAYg1B,eAAgB,QAMpC,IAAIgP,EAAiBxvC,OAAO,uGAC5BA,OAAO,YAAYV,OAAOkwC,GAC1BA,EAAe3tC,GAAG2J,EAAe,QAAQ,SAAC2jC,GACtC,IAAI/iC,EAAI+iC,EAAG7O,QACPn0B,EAAIgjC,EAAGzW,QAEXyW,EAAGllC,kBACH,GAAYu2B,eAAgB,EAE5BxgC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,iBAAiB,SAAC4jC,GACjD,IAAI/M,EAAK+M,EAAG9O,QAAUl0B,EAClBg2B,EAAKgN,EAAG1W,QAAUvsB,EACtBijC,EAAGnlC,kBAEH12B,EAAK87D,cAAcjN,GACnB7uD,EAAK+7D,cAAcjN,GAEnBl2B,GAAKi2B,EACLh2B,GAAKi2B,KAGTriC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,eAAe,WAC9CxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,iBACpCxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,eACpC,GAAYg1B,eAAgB,QAKpC,IAAIiP,EAAkBzvC,OAAO,wGAC7BA,OAAO,YAAYV,OAAOmwC,GAC1BA,EAAgB5tC,GAAG2J,EAAe,QAAQ,SAAC2jC,GACvC,IAAI/iC,EAAI+iC,EAAG7O,QACPn0B,EAAIgjC,EAAGzW,QAEXyW,EAAGllC,kBACH,GAAYu2B,eAAgB,EAE5BxgC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,kBAAkB,SAAC4jC,GAClD,IAAI/M,EAAK+M,EAAG9O,QAAUl0B,EAClBg2B,EAAKgN,EAAG1W,QAAUvsB,EACtBijC,EAAGnlC,kBAEH12B,EAAKg8D,aAAanN,GAClB7uD,EAAK+7D,cAAcjN,GAEnBl2B,GAAKi2B,EACLh2B,GAAKi2B,KAGTriC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,gBAAgB,WAC/CxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,kBACpCxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,gBACpC,GAAYg1B,eAAgB,UAjI5C,mCAwIiB4B,GACT,IAAIsN,EAAU1vC,OAAO,0BACjBkuC,EAAYluC,OAAO,aAEnB2L,EAAQtmC,OAAOM,SAASuoE,EAAU9pC,IAAI,SAAS9kC,QAAQ,KAAM,KACjE4uE,EAAU9pC,IAAI,QAAUuH,EAAQy2B,EAAM,MAEtC,IAAIuN,EAAUtqE,OAAOM,SAAS+pE,EAAQtrC,IAAI,SAAS9kC,QAAQ,KAAM,KACjEowE,EAAQtrC,IAAI,QAAUurC,EAAUvN,EAAM,MAEtC5sE,KAAK20B,KAAK2vB,kBAAkBuC,SACyB,MAAlD7mD,KAAK20B,KAAKqpC,UAAUvO,gBAAgB5B,YACnC7tD,KAAK20B,KAAKqpC,UAAUvO,gBAAgB5B,WAAWhH,SAGnDrc,OAAO,gBAAgBwN,QAAQ,eAC/B7B,GAASy2B,IAxJjB,oCA0JkBC,GACV,IAAIqN,EAAU1vC,OAAO,0BACjB4a,EAAa5a,OAAO,oBAEpB4L,EAASvmC,OAAOM,SAASi1C,EAAWxW,IAAI,UAAU9kC,QAAQ,KAAM,KACpEs7C,EAAWxW,IAAI,SAAWwH,EAASy2B,EAAM,MAEzC,IAAIuN,EAAWvqE,OAAOM,SAAS+pE,EAAQtrC,IAAI,UAAU9kC,QAAQ,KAAM,KACnEowE,EAAQtrC,IAAI,SAAWwrC,EAAWvN,EAAM,MAExC7sE,KAAK20B,KAAK2vB,kBAAkBuC,SACyB,MAAlD7mD,KAAK20B,KAAKqpC,UAAUvO,gBAAgB5B,YACnC7tD,KAAK20B,KAAKqpC,UAAUvO,gBAAgB5B,WAAWhH,WAtK3D,oCA0KkB+lB,GACV,IAAIyN,EAAa7vC,OAAO,cACpB0vC,EAAU1vC,OAAO,0BAEjB2L,EAAQtmC,OAAOM,SAASkqE,EAAWzrC,IAAI,SAAS9kC,QAAQ,KAAM,KAClEuwE,EAAWzrC,IAAI,QAAUuH,EAAQy2B,EAAM,MAEvC,IAAIuN,EAAUtqE,OAAOM,SAAS+pE,EAAQtrC,IAAI,SAAS9kC,QAAQ,KAAM,KACjEowE,EAAQtrC,IAAI,QAAUurC,EAAUvN,EAAM,MACtC5sE,KAAK20B,KAAK2vB,kBAAkBuC,SACyB,MAAlD7mD,KAAK20B,KAAKqpC,UAAUvO,gBAAgB5B,YACnC7tD,KAAK20B,KAAKqpC,UAAUvO,gBAAgB5B,WAAWhH,c,6BArL3D,K,uKCGO,IAAM,GAAb,WASI,WAAoBlyB,EAAoB2lD,I,4FAAsB,SAA1C,KAAA3lD,OAAoB,KAAA2lD,Y,UAT5C,O,EAAA,G,EAAA,sCAcQt6E,KAAKqoE,WAAWxhC,SAChB7mC,KAAKu6E,aAAa1zC,WAf1B,gCAoBQ7mC,KAAKw6E,mBAELx6E,KAAKy6E,iBAELz6E,KAAK06E,cAAc16E,KAAKs6E,aAxBhC,yCA4BoB,WAERv8D,EAAO/d,KAEXA,KAAKu6E,aAAe,IAAI,GAAev6E,KAAK20B,KAAKoa,gBAAgBuJ,UAC7D,gBAAiB,IAAK,KACtB,GAAI,WAAW,GAAO,GAE1Bt4C,KAAKu6E,aAAal/B,eAAiB,SAAC7H,GAEhCz1B,EAAK4W,KAAKwuB,eAAezU,aAAY,WAQjC9B,GAAK,gBAN+B,CAChC+tC,UAAWnnC,EAAG5xC,GACduuC,OAAQ,EAAKxb,KAAK6Z,KAAK5sC,GACvBwuC,SAAU,IAGiB,SAAC7C,GACJ,GAApBA,EAASD,UAELvvB,EAAK4W,KAAKub,mBAAqBnyB,EAAK4W,KAAK6Z,KAAK5sC,KAC9Cmc,EAAK68D,cAAgB78D,EAAK4W,KAAK+a,cAAcniC,QAC7CwQ,EAAK88D,oBAAsB98D,EAAK4W,KAAK0d,kBAGzCt0B,EAAK4W,KAAKmmD,kBAAkBvtC,EAASkE,YACrC1zB,EAAK4W,KAAKub,kBAAoBsD,EAAG5xC,GACjCmc,EAAK4W,KAAKoa,gBAAgBgsC,iBAAiB,uBAC3Ch9D,EAAK4W,KAAKoa,gBAAgB84B,YAAY58B,OACtC,GAAOoe,WAAW,mBAAoB,EAAK10B,MAE3C5W,EAAK4W,KAAKqpC,UAAUgd,kBACpBj9D,EAAK4W,KAAKqpC,UAAUvO,gBAAgBwrB,mBAAmBl9D,EAAK4W,KAAK+a,gBAGrE,EAAK/a,KAAKwuB,eAAepV,yBAA2B,EAAKpZ,KAAKwuB,eAAerV,gCAC7E,EAAKnZ,KAAKwuB,eAAejV,sBAAwB,EAAKvZ,KAAKwuB,eAAerV,yCAjE9F,6CA2EQ,IAAInZ,EAAO30B,KAAK20B,KAGhBA,EAAK2vB,kBAAkBuZ,cAAc,CAAE3P,UAAU,IAEjDv5B,EAAK+a,cAAgB1vC,KAAK46E,cAC1BjmD,EAAK0d,iBAAmBryC,KAAK66E,oBAC7BlmD,EAAKub,kBAAoBvb,EAAK6Z,KAAK5sC,GACnC+yB,EAAKoa,gBAAgBgsC,iBAAiB,MAEtCpmD,EAAKoa,gBAAgBmsC,iBAAiBvmD,EAAK+a,eAEd,MAAzB/a,EAAK0d,kBAA4B1d,EAAK+a,cAAc1tC,OAAS,IAC7D2yB,EAAK0d,iBAAmB1d,EAAK+a,cAAc,IAGlB,MAAzB/a,EAAK0d,kBACL1d,EAAKoa,gBAAgBwgB,mBAAmB56B,EAAK0d,kBAAkB,GAGnEryC,KAAKu6E,aAAaj/B,OAAO,MAAM,KA/FvC,uCAmGkB,WACNv9B,EAAO/d,KAEXA,KAAKqoE,WAAa,IAAI,GAAeroE,KAAK20B,KAAKoa,gBAAgBuJ,UAC3D,UAAW,IAAK,KAAM,GAAI,SAAS,GAAO,GAE9Ct4C,KAAKqoE,WAAWhtB,eAAiB,SAAC8/B,GAC9Bp9D,EAAK4W,KAAKwuB,eAAezU,aAAY,WAEjC,IAAI4rC,EAAuBa,EACV,MAAbb,GACA,EAAKc,eAAed,EAAU9U,gBA9GlD,qCAuHmB6V,GACXr7E,KAAKu6E,aAAat1C,QAElBo2C,EAAan/B,MAAK,SAACt0C,EAAGu0C,GAClB,OAAIv0C,EAAE29D,aAAeppB,EAAEopB,cAAsB,EACzCppB,EAAEopB,aAAe39D,EAAE29D,aAAqB,EACxC39D,EAAE09D,QAAUnpB,EAAEmpB,SAAiB,EAC/BnpB,EAAEmpB,QAAU19D,EAAE09D,QAAgB,EAC3B,KAGX,IAAI,IAAIruE,EAAI,EAAGA,EAAIokF,EAAar5E,OAAQ/K,IAAI,CACxC,IAAIqkF,EAAKD,EAAapkF,GAClBu8C,EAAuB,CACvBh8C,KAAM8jF,EAAG/V,aAAe,KAAO+V,EAAGhW,QAClCjpB,SAAUi/B,EAAG/V,aAAe,IAAM+V,EAAGhW,QACrCjyB,gBAAiBioC,EACjBnoC,UAAU,EACVD,KAAM,IAEVlzC,KAAKu6E,aAAannC,WAAWI,MA3IzC,oCAgJkB+nC,GACVv7E,KAAKu6E,aAAat1C,QAElBs2C,EAAcr/B,MAAK,SAACt0C,EAAGu0C,GACnB,OAAIv0C,EAAEpQ,KAAO2kD,EAAE3kD,KAAa,EACxB2kD,EAAE3kD,KAAOoQ,EAAEpQ,MAAc,EACtB,KANyB,2BASpC,YAAe+jF,EAAf,+CAA8B,KAArB9zE,EAAqB,QACtB+rC,EAAuB,CACvBh8C,KAAMiQ,EAAGjQ,KACT67C,gBAAiB5rC,EACjB0rC,UAAU,EACVD,KAAM,IAEVlzC,KAAKqoE,WAAWj1B,WAAWI,IAhBK,wF,6BAhJ5C,K,uKCGO,IAAM,GAAb,WAGI,WAAoB7e,I,4FAAU,SAAV,KAAAA,O,UAHxB,O,EAAA,G,EAAA,iCAOW,WAEC5W,EAAO/d,KAEXA,KAAKw7E,kBAEL,IAAIC,EAAgBjxC,OAAO,sBAE3BA,OAAO,mBAAmB+B,QAE1B/B,OAAO,mBAAmB6B,GAAG,WAAW,SAAC50B,GACxB,SAATA,EAAEjf,KACFgyC,OAAO,mBAAmB+B,WAIlC/B,OAAO,mBAAmB6B,GAAG,WAAW,SAAC50B,GACxB,SAATA,EAAEjf,KACFgyC,OAAO,iBAAiBwN,QAAQ,YAIxCxN,OAAO,mBAAmB6B,GAAG,WAAW,SAAC50B,GACxB,OAATA,EAAEjf,MACFif,EAAEwhC,iBACFzO,OAAO,iBAAiB+B,QACxB/B,OAAO,iBAAiBU,SAAS,cAExB,SAATzzB,EAAEjf,KACFgyC,OAAO,iBAAiBwN,QAAQ,YAIxCxN,OAAO,iBAAiB6B,GAAG,WAAW,SAAC50B,GACtB,OAATA,EAAEjf,KACFif,EAAEwhC,iBACFzO,OAAO,mBAAmB+B,QAC1B/B,OAAO,iBAAiBW,YAAY,cAEpCX,OAAO,iBAAiBwN,QAAQ,YAKxCxN,OAAO,6BAA6B6B,GAAG,SAAS,WAC5C7B,OAAO,mBAAmB4B,IAAI,YAC9B5B,OAAO,mBAAmB4B,IAAI,IAC9B5B,OAAO,iBAAiBwN,QAAQ,YAKpC,IAAI0jC,GAAgB,EACpBlxC,OAAO,iBAAiB6B,GAAG,SAAS,WAMhC,GAJAiX,GAAWqB,OAEX82B,EAAcxwC,QAEVywC,EAAJ,CACAA,GAAgB,EAEhB3wC,YAAW,WACP2wC,GAAgB,IACjB,KAEH,IAAIC,EAA6B,CAC7BC,SAAkBpxC,OAAO,mBAAmB4B,MAC5CyvC,SAAkBrxC,OAAO,mBAAmB4B,MAC5CgE,SAAU,GAGdxD,GAAK,QAAS+uC,GAAc,SAACpuC,GAEzB,GAAKA,EAASD,QAEP,CAOH9C,OAAO,UAAUY,OACjBZ,OAAO,SAASoE,IAAI,aAAc,WAElCpE,OAAO,oBAAoB0K,KAAK,oBAChC1K,OAAO,gBAAgBoE,IAAI,UAAW,QAEtC,IAAIJ,EAAiBjB,EAASiB,KAC9BA,EAAKM,YAAuC,YAAzB6sC,EAAaC,UAAmD,IAAzBD,EAAaE,SAElD,MAAjBrtC,EAAKY,UAAmD,MAA/BZ,EAAKY,SAAS25B,gBACvCv6B,EAAKY,SAAW,CACZ25B,cAAe,CACX+S,mBAAmB,EACnB1S,mBAAmB,EACnB2S,wBAAwB,EACxBC,wBAAwB,EACxBC,sBAAsB,EACtBC,sBAAsB,EACtBlT,sBAAsB,EACtBmT,kBAAkB,GAEtBC,UAAW,KACXntC,aAAc,OAItB,EAAKta,KAAK0nD,mBAAqB,W,YAE3Bt+D,EAAK4W,KAAK+sC,SAAShS,QAAQlhB,GAE3BhE,OAAO,gBAAgBY,OACvBqwC,EAAcrwC,OACdZ,OAAO,uBAAuB0K,KAAKC,GAAW3G,EAAK82B,SAAW,IAAMnwB,GAAW3G,EAAK+2B,eAEpF,IAAI,GAASxnD,EAAK4W,MAAMgwB,OAEpBnW,EAAKwzB,YACLjkD,EAAK4W,KAAK2nD,oBAAoB/uC,EAASgvC,WAG3Cx+D,EAAK4W,KAAK6Z,KAAOA,EAEjBzwB,EAAK4W,KAAKmmD,kBAAkBvtC,EAASkE,YACrC1zB,EAAK4W,KAAKub,kBAAoB1B,EAAK5sC,GAEnCmc,EAAK4W,KAAKwuB,eAAeq5B,kBAEzBz+D,EAAK4W,KAAKoa,gBAAgBoD,cAAcsqC,UAAUjuC,EAAKwzB,YACvDjkD,EAAK4W,KAAKoa,gBAAgB+D,mBAAmB2pC,UAAUjuC,EAAKwzB,YAE5B,QAAhC,EAAkB,QAAlB,EAAAjkD,EAAK4W,KAAKua,gBAAQ,eAAED,oBAAY,SAAEhK,QAEA,MAA9BuJ,EAAKY,SAASH,eACkB,QAAhC,EAAkB,QAAlB,EAAAlxB,EAAK4W,KAAKua,gBAAQ,eAAED,oBAAY,SAAE2lC,YAAYpmC,EAAKY,SAASH,eAGhElxB,EAAK4W,KAAKgpC,mBAAmB+e,eAC7B3+D,EAAK4W,KAAKqpC,UAAU+J,mBAEf,EAAKpzC,KAAK6Z,KAAKY,SAAS25B,cAAcoT,kBAAoBp+D,EAAK4W,KAAKoa,gBAAgB+D,mBAAmB+F,SAAS72C,OAAS,GAE1H,GAAOqnD,WAAW,eAAgB,EAAK10B,KAAM6V,OAAO,0BAO3B,GAA7B,EAAK7V,KAAKgoD,kBACV,EAAKhoD,KAAK0nD,qBACV,EAAK1nD,KAAK0nD,mBAAqB,WA9EnC7xC,OAAO,kBAAkB0K,KAAK,yDAmFnC,SAAC0nC,GACApyC,OAAO,kBAAkB0K,KAAK,sBAAwB0nC,UAM9DpyC,OAAO,iBAAiB6B,GAAG,SAAS,WAE7BtuB,EAAK4W,KAAK6Z,KAAKM,YACd/wB,EAAK8+D,iBAITryC,OAAO,oBAAoB0K,KAAK,wEAChC1K,OAAO,gBAAgBoE,IAAI,UAAW,QAElC,EAAKja,KAAKub,mBAAqB,EAAKvb,KAAK6Z,KAAK5sC,IAC9C,EAAK+yB,KAAKoa,gBAAgB+4B,sBAG9B,EAAKnzC,KAAKwuB,eAAezU,aAAY,W,MAEjC,EAAK/Z,KAAKua,SAASD,aAAa6tC,mBAMhClwC,GAAK,SAJ8B,CAC/BmnC,mBAA8C,QAA5B,EAAE,EAAKp/C,KAAK0d,wBAAgB,eAAEzwC,KAGtB,WAG1Bmc,EAAK8+D,4BArMzB,sC,QAgNQryC,OAAO,UAAUS,OACjBT,OAAO,SAASoE,IAAI,aAAc,UAClCpE,OAAO,gBAAgBoE,IAAI,UAAW,QACtCpE,OAAO,kBAAkBzf,QACzB/qB,KAAK20B,KAAKqI,YAAYitB,SAAS5I,GAAiB0Y,iBAChD/5D,KAAK20B,KAAK2vB,kBAAkB8J,SAASzlD,OAAOuP,OAAOw1C,YAAY,GAAI,WACnE1tD,KAAK20B,KAAKoa,gBAAgBoD,cAAclN,QACxCjlC,KAAK20B,KAAKoa,gBAAgBoD,cAAcu2B,WAAW,IACnD1oE,KAAK20B,KAAKoa,gBAAgB+D,mBAAmB7N,QACjB,QAA5B,EAAmB,QAAnB,EAAAjlC,KAAK20B,KAAKqpC,iBAAS,eAAEp1B,eAAO,SAAE3D,QAC9BjlC,KAAK20B,KAAKqI,YAAYkP,aAAajH,QAE/BjlC,KAAK20B,KAAK6Z,KAAKwzB,aACfhiE,KAAK20B,KAAKyzC,gBAAgB2U,eAC1B/8E,KAAK20B,KAAKyzC,gBAAkB,MAGhCpoE,KAAK20B,KAAK0d,iBAAmB,KAC7BryC,KAAK20B,KAAK6Z,KAAO,OAlOzB,8C,6BAAA,K,uKCNO,IAAMwuC,GAAb,WAcI,WAAoB7Y,EAAgDxvC,GAAU,Y,4FAAA,SAA1D,KAAAwvC,oBAAgD,KAAAxvC,OARpE,KAAAsoD,WAAqD,GAErD,KAAAC,cAAwB,EACxB,KAAAC,oBAA8B,EAO1Bn9E,KAAKo9E,wBAA0B5yC,OAAO,oIACtCxqC,KAAKq9E,wBAA0B7yC,OAAO,mHACtCxqC,KAAKs9E,mBAAqB9yC,OAAO,mHACjC25B,EAAkBr6B,OAAO9pC,KAAKo9E,wBAAyBp9E,KAAKq9E,wBAAyBr9E,KAAKs9E,oBAE1Ft9E,KAAKi9E,WAAa,CACd,aAAgBj9E,KAAKq9E,wBACrB,QAAWr9E,KAAKs9E,oBAGpB,IAAIC,EAAKv9E,KAAK20B,KAAK6oD,cAEnBD,EAAGE,eAAe,mBAAoB,IAClC,WACI,EAAKC,0BACN,wCAAyC19E,KAAKo9E,yBAErDG,EAAGE,eAAe,wBAAyB,IACvC,WACI,EAAKE,QAAQ,kBACd,uBAAwB39E,KAAKq9E,yBAEpCE,EAAGE,eAAe,mBAAoB,IAClC,WACI,EAAKE,QAAQ,aACd,iBAAkB39E,KAAKs9E,oB,UAzCtC,O,EAAA,G,EAAA,+CA6CyB,WACdt9E,KAAKm9E,oBACJn9E,KAAKo9E,wBAAwBjyC,YAAY,yBACzCnrC,KAAKo9E,wBAAwBlyC,SAAS,oBACtClrC,KAAKo9E,wBAAwBhvC,KAAK,QAAS,2BAC3C5D,OAAO,aAAaoE,IAAI,QAAS5uC,KAAK49E,cAAgB,MACtDpzC,OAAO,0BAA0BoE,IAAI,QAAS5uC,KAAK69E,YAAc,MAEjErzC,OAAO,aAAaS,KAAK,KACzBT,OAAO,cAAcS,KAAK,KAC1BT,OAAO,aAAaS,SAGpBjrC,KAAKo9E,wBAAwBjyC,YAAY,oBACzCnrC,KAAKo9E,wBAAwBlyC,SAAS,yBACtClrC,KAAKo9E,wBAAwBhvC,KAAK,QAAS,6BAE3CpuC,KAAK49E,cAAgB/tE,OAAOM,SAASq6B,OAAO,aAAaoE,IAAI,SAAS9kC,QAAQ,KAAM,KACpF9J,KAAK69E,YAAchuE,OAAOM,SAASq6B,OAAO,0BAA0BoE,IAAI,SAAS9kC,QAAQ,KAAM,KAE/F0gC,OAAO,aAAaY,KAAK,KACzBZ,OAAO,cAAcY,KAAK,KAC1BZ,OAAO,aAAaY,OACpBprC,KAAK20B,KAAK6N,iBAAiBymC,QAG/Bl+B,YAAW,WACP,EAAKpW,KAAK2vB,kBAAkBuC,WAC7B,KAEH7mD,KAAKm9E,oBAAsBn9E,KAAKm9E,qBA3ExC,8BA8EY/kF,GAA8D,IAA5B0lF,IAA4B,yDAE9DC,EAAoB,gBAAR3lF,EAAyB,UAAY,eAErD4H,KAAKi9E,WAAW7kF,GAAM8yC,SAAS,cAC/BlrC,KAAKi9E,WAAWc,GAAW5yC,YAAY,cAEvC,IAAIiE,EAAWpvC,KAAK20B,KAAK6Z,KAAKY,SAC1BgtC,EAAYhtC,EAASgtC,UAErB4B,EAAW5B,EAAUhkF,GAOzB,GANAgkF,EAAU6B,eAAiB7lF,EAE3B4H,KAAK20B,KAAKupD,aAAavc,YAAYqc,EAAS/iE,OAE5Cjb,KAAK20B,KAAKzc,OAAOimD,YAAY6f,EAASt2B,UAElC1nD,KAAKk9E,cAAgBc,EAASd,aAAc,CAC5C,IAAIhlE,EAASlY,KAAK20B,KAAK2vB,kBACvBpsC,EAAO4mD,UAAU,oCAAoCF,MACrD5+D,KAAKk9E,cAAgBl9E,KAAKk9E,aAG1BY,GAAc99E,KAAK89E,iBArG/B,mCAyGiBtgB,GACMx9D,KAAKm+E,oBACXz2B,SAAW8V,EACpBx9D,KAAK89E,iBA5Gb,+BA+Ga7iE,GACL,IAAI+iE,EAAWh+E,KAAKm+E,oBACpBH,EAAS/iE,MAAQA,EACjBjb,KAAK20B,KAAKupD,aAAavc,YAAYqc,EAAS/iE,OAC5Cjb,KAAK89E,iBAnHb,2CAuHQ,IAAIE,EAAWh+E,KAAKm+E,oBACpBH,EAASd,cAAgBc,EAASd,aACrBl9E,KAAK20B,KAAK2vB,kBAChBwa,UAAU,oCAAoCF,MACrD5+D,KAAK89E,iBA3Hb,0CA+HQ,IAAI1B,EAAYp8E,KAAK20B,KAAK6Z,KAAKY,SAASgtC,UACxC,OAAOA,EAAUA,EAAU6B,kBAhInC,qCAoIQj+E,KAAK20B,KAAK0a,eAAgB,IApIlC,qCAwIQ,IAAID,EAAWpvC,KAAK20B,KAAK6Z,KAAKY,SAED,MAAzBA,EAAQ,YACRA,EAAQ,UAAgB,CACpBgvC,QAAS,KACTC,aAAc,KACdJ,eAAgB,YAIU,MAA9B7uC,EAASgtC,UAAUgC,UACnBhvC,EAASgtC,UAAUgC,QAAU,CACzB12B,SAAU,GACVw1B,cAAc,EACdjiE,MAAO,QAGXm0B,EAASgtC,UAAUiC,aAAe,CAC9B32B,SAAU,GACVw1B,cAAc,EACdjiE,MAAO,SAEXjb,KAAK89E,gBAET99E,KAAK29E,QAAQvuC,EAASgtC,UAAU6B,gBAAgB,Q,6BAhKxD,K,uKCOO,IAAMK,GAAb,WAKI,WAAoB3pD,I,4FAAc,SAAd,KAAAA,OAHpB,KAAAgC,mBAA0C,G,UAF9C,O,EAAA,G,EAAA,0CAUQ32B,KAAK22B,mBAAmB5kB,SAAQ,SAAAhZ,GAAC,OAAIA,EAAEwlF,cAAe,KACtDv+E,KAAK88D,MAAO,IAAIjO,MAAOkO,YAX/B,+BAcav4D,EAAwBxN,GAC7B,IAAIwnF,EAAcx+E,KAAK22B,mBAAmBjG,MAAK,SAAA33B,GAAC,OAAIA,EAAEyL,SAAS0F,MAAQ1F,EAAS0F,MAAQnR,EAAEyL,SAAS2F,QAAU3F,EAAS2F,UACnHq0E,EACCA,EAAYD,cAAe,EAE3Bv+E,KAAK22B,mBAAmBpyB,KAAK,CAACC,SAAUA,EAAUi6E,YAAaz+E,KAAK88D,KAAMyhB,cAAc,EAAMvnF,OAAQA,MAnBlH,uCAuBkB,WACN8lE,GAAO,IAAIjO,MAAOkO,UACtB/8D,KAAK22B,mBAAqB32B,KAAK22B,mBAAmB9rB,QAAO,SAAA9R,GAAC,OAAIA,EAAEwlF,gBAEhE,IAAIve,EAAwBhgE,KAAK20B,KAAKyQ,2BAClCs5C,EAAa1+E,KAAK20B,KAAK2vB,kBAAkBsY,cAAc7T,WAE3D/oD,KAAK22B,mBAAmB9rB,QAAO,SAAA9R,GAAC,OAAI+jE,EAAO/jE,EAAE0lF,YAAc,OAAM1sE,SAAQ,SAAAhZ,GAErE,IAAI4lF,EAAsC,MAApB5lF,EAAE/B,OAAO8qC,KAAKlgC,IAAc7I,EAAE/B,OAAO8qC,KAAKlgC,IAAMo+D,EAAsBl+B,KAAKlgC,GAE7Fg9E,EAAiE,CACjE,CACI51E,MAAO,IAAIL,OAAOsjD,MAAMlzD,EAAEyL,SAAS0F,KAAMnR,EAAEyL,SAAS2F,OAAQpR,EAAEyL,SAAS0F,KAAMnR,EAAEyL,SAAS2F,QACxFyL,KAAM,IACNs2C,kBAAkB,IAI1B,GAAGyyB,GACIryE,KAAK6uD,IAAIujB,EAAa3lF,EAAEyL,SAAS0F,MAAQ,EAAE,CAC1C,IAAIgO,EAAS,EAAKyc,KAAK2vB,kBACjBjG,EAAYnmC,EAAOg8C,eACzBh8C,EAAO8zC,aAAa,kBAAmB4yB,GACvC1mE,EAAO2mE,aAAaxgC,GACpB,EAAK1nB,mBAAmB5e,OAAO,EAAK4e,mBAAmBvxB,QAAQrM,GAAI,Y,6BAhDvF,K,uKCPO,IAAM+lF,GAAb,WAKI,WAAoBnqD,GAAU,Y,4FAAA,SAAV,KAAAA,OAChB,IAAI5W,EAAO/d,KACXqmD,QAAQ2W,UAAU,qBAAsB,IACxC/mB,OAAOsH,iBAAiB,YAAY,SAACjJ,GACf,sBAAfA,EAAM8M,OACLiF,QAAQ2W,UAAU,qBAAsB,IACxCj/C,EAAK4W,KAAKzc,OAAOyiD,kBAAiB,EAAO58C,EAAK4W,KAAKzc,OAAOkjD,0BAClB,MAAlC,EAAK2jB,2BACX,EAAKC,mBAAmB1qC,GAES,MAAlC,EAAKyqC,4BACJ,EAAKA,4BACL,EAAKA,0BAA4B,S,UAjBjD,O,EAAA,G,EAAA,kDAuB+BE,GACvBj/E,KAAKg/E,mBAAqBC,IAxBlC,wDA2BsCF,GAC9B/+E,KAAK++E,0BAA4BA,EACjC14B,QAAQ2W,UAAU,GAAI,S,6BA7B9B,K,uKC8BO,IAAM,GAAb,yB,4FAAA,SAEI,KAAAsL,cAAwB,EA4DxB,KAAA54B,cAA6B,GAiB7B,KAAA2qB,mBAAyC,IAAIykB,GAAmB9+E,MAchE,KAAA28E,gBAAkB,EAGlB,KAAAuC,qBAAsB,EACtB,KAAA3sC,QAAkB,EAKlB,KAAAlD,eAAyB,E,UAtG7B,O,EAAA,G,EAAA,oCAI4B,OAAO,IAJnC,uCAOQ,OAAOrvC,KAAKg9B,cAPpB,4CAUQ,OAAOh9B,KAAKqyC,mBAVpB,oCAaQ,OAAOryC,KAAKm/E,WAbpB,wCAgBQ,OAAOn/E,KAAKkY,OAAOA,SAhB3B,oCAoBQ,OAAOlY,KAAKkvC,WApBpB,qCAwBQ,OAAOlvC,KAAKg+D,YAxBpB,iDA6BQ,OAAOh+D,KAAK+uC,gBAAgB3J,6BA7BpC,yCAiCQ,OAAOplC,KAAKw9E,gBAjCpB,iDAoC+B17C,EAAYt9B,GACnCxE,KAAK+uC,gBAAgBqwC,2BAA2Bt9C,EAAMt9B,KArC9D,mDAwCQxE,KAAK+uC,gBAAgBswC,+BAxC7B,oCA4CQ,OAAOr/E,KAAK+hD,WA5CpB,sCA+CoB/qD,GACZgJ,KAAK+uC,gBAAgB2b,gBAAgB1zD,KAhD7C,0CAoDQ,OAAOgJ,KAAKs/E,iBApDpB,wCAuDsBtoF,EAAgBkZ,GAC9BlQ,KAAK+uC,gBAAgB2b,gBAAgB1zD,GACrCgJ,KAAKkY,OAAOA,OAAOqnE,mBAAmBrvE,EAAY1L,SAAS0F,MAC3DlK,KAAKkY,OAAOA,OAAO4wC,YAAY,CAAC3+C,OAAQ+F,EAAY1L,SAAS2F,OAAQ4+C,WAAY74C,EAAY1L,SAAS0F,SA1D9G,gChDkMQs1E,WAAW,kBAAkBC,UAC7BpnC,IAAmB,GgD/EnBr4C,KAAK0/E,MAAQ,IAAI,GAAM1/E,MACvBA,KAAK0/E,MAAMhwB,UAEX1vD,KAAKw9E,cAAgB,IAAI,GAAc,KAAMx9E,MAC7CA,KAAKw9E,cAAc74B,OAEnB3kD,KAAKmjD,eAAiB,IAAI,GAAenjD,KAAMwqC,OAAO,wCAExC,IAAI,GAAQxqC,MAClB2/E,cACR3/E,KAAK0hE,SAAW,IAAI,GAAS1hE,MAC7BA,KAAK+uC,gBAAkB,IAAI,GAAgB/uC,KAAMwqC,OAAO,mCACxDxqC,KAAK+uC,gBAAgB2gB,UAErB1vD,KAAKg+D,UAAY,IAAI,GAAUh+D,KAAMwqC,OAAO,wCAAyCA,OAAO,SAE5FxqC,KAAKkvC,SAAW,IAAI,GAASlvC,KAAMwqC,OAAO,oBAC1CxqC,KAAKkvC,SAASwgB,UAEd1vD,KAAKm/E,SAAW,IAAI,GAASn/E,KAAMwqC,OAAO,2BAA4BA,OAAO,mCAE7ExqC,KAAKg9B,YAAc,IAAI,GAAYh9B,KAAMA,KAAKm/E,SAC1C,IAAI,GAAsB30C,OAAO,aAAcA,OAAO,YACtDA,OAAO,4BACXxqC,KAAKg9B,YAAY0yB,UAEjB1vD,KAAK4/E,YAEL5/E,KAAK6/E,uBAEL7/E,KAAK8/E,uBAELC,KAAKC,MAAMC,YAEXjgF,KAAKk+E,aAAe,IAAIpjE,GAExB9a,KAAK29D,mBAAqB,IAAIqf,GAAmBxyC,OAAO,cAAexqC,MAEvEA,KAAKs/E,eAAiB,IAAIhB,GAAet+E,QA1JjD,6CAgKQ+/E,KAAKG,UAAUrnF,UAAUsnF,gBAAkB,SAAUC,GACjD,IAAI9sD,EAAKtzB,KAAKqgF,eAcd,GAbIrgF,KAAKsgF,WAAatgF,KAAKugF,kBAQvBvgF,KAAKugF,gBAAkBvgF,KAAKsgF,SAE5BtgF,KAAKwgF,WAAa,GAGlBxgF,KAAKwgF,YAAcJ,EAAgBK,SAAU,CAE7C,IAAI5gE,EAAKugE,EAAgBM,eACrBC,EAAK3gF,KAAK0gF,eACdC,EAAG/4E,EAAK0rB,EAAG1rB,EAAIiY,EAAGjY,EAAM0rB,EAAG6oB,EAAIt8B,EAAGvoB,EAClCqpF,EAAGxkC,EAAK7oB,EAAG1rB,EAAIiY,EAAGs8B,EAAM7oB,EAAG6oB,EAAIt8B,EAAGtoB,EAClCopF,EAAGrpF,EAAKg8B,EAAGh8B,EAAIuoB,EAAGjY,EAAM0rB,EAAG/7B,EAAIsoB,EAAGvoB,EAClCqpF,EAAGppF,EAAK+7B,EAAGh8B,EAAIuoB,EAAGs8B,EAAM7oB,EAAG/7B,EAAIsoB,EAAGtoB,EAClCopF,EAAGC,GAAMttD,EAAGstD,GAAK/gE,EAAGjY,EAAM0rB,EAAGutD,GAAKhhE,EAAGvoB,EAAKuoB,EAAG+gE,GAC7CD,EAAGE,GAAMvtD,EAAGstD,GAAK/gE,EAAGs8B,EAAM7oB,EAAGutD,GAAKhhE,EAAGtoB,EAAKsoB,EAAGghE,GAE7C7gF,KAAKwgF,UAAYJ,EAAgBK,SAEjCzgF,KAAKygF,eA5LrB,mCAoMQzgF,KAAKkY,OAAS,IAAI,GAAOlY,MAAM,GAAM,IACrC,IAAI,IAAY2kD,OAEhB3kD,KAAKkY,OAAOw3C,QAAQllB,OAAO,YAE3B,IAAIzsB,EAAO/d,KACXwqC,OAAOyL,QAAQ5J,GAAG,UAAU,SAACiI,GACzB9J,OAAO,oBAAoBoE,IAAI,SAAU,SACzCpE,OAAO,WAAWoE,IAAI,SAAWqH,OAAOwB,YAAc,IAAM,GAAK,EAAK,MACtE15B,EAAK7F,OAAOA,OAAO2uC,SACnBrc,OAAO,WAAWoE,IAAI,SAAU,OAIpCpE,OAAOyL,QAAQ+B,QAAQ,UAEvBh4C,KAAK6/E,yBApNb,0CAuNwBtD,GAChBv8E,KAAKooE,gBAAkB,IAAI,GAAgBpoE,KAAMu8E,GACjDv8E,KAAKooE,gBAAgB1Y,YAzN7B,6CAsOQ1vD,KAAK28E,kBACuB,GAAxB38E,KAAK28E,iBACL38E,KAAK0lC,UAxOjB,kCA6OQ5yB,GAAkB6xC,OAClBv1C,GAAiBu1C,OACjB30C,GAAmB20C,OACnB10C,GAAoB00C,OACpBr0C,GAAqBq0C,OACrBt4C,GAAoBs4C,OACpBzzC,GAAkByzC,OAElB1xC,GAAY0xC,OACZzxC,GAAUyxC,OACVxxC,GAAWwxC,OACXvxC,GAAcuxC,OACdtxC,GAAYsxC,SAzPpB,8BA+PuC,MAA3B3kD,KAAKq8E,oBACLr8E,KAAKq8E,qBAGT,IAAIt+D,EAAO/d,KACX+qC,YAAW,WACPhtB,EAAKumC,kBAAkBuC,WACxB,KAEH7mD,KAAK+hD,SAAW,IAAI,GAAS/hD,MAE7BA,KAAKopD,eA1Qb,mCA+QgC,MAApBppD,KAAKupD,aACLjb,cAActuC,KAAKupD,aAGvB,IAAIxrC,EAAO/d,KACXA,KAAKupD,YAAc5e,aAAY,WAE3B5sB,EAAK0qC,mBAEN,OAxRX,uC,QA+RQ,GAA6B,MAAzBzoD,KAAKqyC,kBAELryC,KAAKqyC,iBAAiB7zB,YAAY+nC,WAClCvmD,KAAK+hD,SAAStd,gBAAkB/G,GAAeiH,WAC5C3kC,KAAKg9B,YAAYokB,OAASC,GAAiBgD,SAC3CrkD,KAAKg9B,YAAYokB,OAASC,GAAiBC,OAC9C,IAEIthD,KAAK+hD,SAASG,QAAQliD,KAAKqyC,iBAAiB7zB,aAE5C,IAAIvK,EAAqC,QAA/B,EAAiB,QAAjB,EAAGjU,KAAKg+D,iBAAS,eAAE14B,oBAAY,eAAEkkB,WAAWxpD,KAAKqyC,kBAC3DryC,KAAK+uC,gBAAgB+xC,iBAAiB9gF,KAAKqyC,iBAAkBp+B,GAE7DjU,KAAKkY,OAAO8iD,0BAA0B,MAEtCh7D,KAAKslD,eAEDtlD,KAAK+uC,iBACL/uC,KAAKuyC,UAGT,IAAIwuC,EAAsF,MAA1E/gF,KAAKg9B,YAAYgkD,mBAAmBhhF,KAAKqyC,iBAAiB7zB,aAEtEuiE,GACA/gF,KAAKg9B,YAAYokB,OAASC,GAAiB0Y,kBAC3C/5D,KAAKihF,yCACLjhF,KAAKg9B,YAAYitB,SAAS5I,GAAiBplB,OAI1C8kD,GACA/gF,KAAKg9B,YAAYokB,OAASC,GAAiBplB,MAAQj8B,KAAKg9B,YAAYokB,OAASC,GAAiBt1C,OAC/F/L,KAAKg9B,YAAYitB,SAAS5I,GAAiB0Y,iBAG/C/5D,KAAKg5E,mBAAmBh5E,KAAKkvC,SAASgyC,yBAExC,MAAOzpE,GACLmxB,QAAQ78B,MAAM0L,GACdzX,KAAK+hD,SAAStd,eAAiB/G,GAAe3xB,SAtU9D,qCA8UQ/L,KAAKg+D,UAAUpO,uBAAuB5vD,KAAKqyC,iBAAkBryC,KAAK+uC,gBAAgB3J,8BA9U1F,wCAkVsB4vC,GAA8B,WAC5Cx3B,aAAax9C,KAAKmhF,wBAClBnhF,KAAKmhF,uBAAyBp2C,YAAW,W,QACV,QAA3B,EAAa,QAAb,IAAKmE,gBAAQ,eAAED,oBAAY,SAAEolC,YAAY,EAAKhiC,iBAAkB2iC,KACjE,OAtVX,+DA0VQ,IAAIzpB,EAAKvrD,KAAKqyC,iBAAiB7zB,YAAY4iE,OAC3CphF,KAAKg9B,YAAYxe,YAAc+sC,EAC/BvrD,KAAKg9B,YAAYqkD,mBAAqBrhF,KAAKuyC,QAEvCvyC,KAAKg9B,YAAYokB,OAASC,GAAiB0Y,iBAAmB/5D,KAAKk/E,qBACnEl/E,KAAKg9B,YAAYitB,SAAS5I,GAAiBplB,QA/VvD,sCAoWoBqU,GACZtwC,KAAK0vC,cAAc33B,OAAO/X,KAAK0vC,cAActqC,QAAQkrC,GAAI,KArWjE,wCAwWsBmB,GAEdzxC,KAAK0vC,cAAgB,GACrB1vC,KAAKqyC,iBAAmB,KAExBryC,KAAKskD,kBAAkBuZ,cAAc,CAAE3P,UAAU,IALb,2BAOpC,YAAezc,EAAWA,WAA1B,+CAAsC,KAA7B9B,EAA6B,QAE9Be,EAAuB,GAAU8R,gBAAgB7S,EAAI3vC,MACzDA,KAAK0vC,cAAcnrC,KAAKmsC,GACpBf,EAAG/tC,IAAM5B,KAAKwuC,KAAK8yC,sBACnBthF,KAAKqyC,iBAAmB3B,IAZI,kFAgBpC1wC,KAAK+uC,gBAAgBmsC,iBAAiBl7E,KAAK0vC,eAEd,MAAzB1vC,KAAKqyC,kBAA4BryC,KAAK0vC,cAAc1tC,OAAS,IAC7DhC,KAAKqyC,iBAAmBryC,KAAK0vC,cAAc,IAGlB,MAAzB1vC,KAAKqyC,iBACLryC,KAAK+uC,gBAAgBwgB,mBAAmBvvD,KAAKqyC,kBAAkB,GAE/DryC,KAAK+uC,gBAAgB2b,gBAAgB,MAGR,GAA7B1qD,KAAK0vC,cAAc1tC,QAEnB,GAAOqnD,WAAW,qBAAsBrpD,KAAMA,KAAK+uC,gBAAgB+D,mBAAmB0G,mBAtYlG,yCA6YuBhiD,EAAcy4C,GAC7B,OAAO,IAAI,GAAUz4C,EAAMwI,KAAMiwC,Q,6BA9YzC,K,uKC7BO,IAAM,GAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,kCAE6Br6B,EAAc2rE,EAAoCC,GAEvE,IAAIC,EAAUj3C,OAAO,iBACrBi3C,EAAQt2C,YAAY,CAAC,oBAAqB,qBAAsB,mBAAoB,wBAEpFs2C,EAAQv2C,SAAS,gBAAkBs2C,GAEnCC,EAAQ7yC,IAAI,CAAE7W,KAAM,GAAIO,MAAO,GAAI8e,IAAK,GAAIsqC,OAAQ,KAEpD,IAAIC,EAAKJ,EAAct8E,SACnBk3C,EAAI3R,OAAO,QAIf,OAAQg3C,GACJ,IAAK,SAAUC,EAAQ7yC,IAAI,CACvB7W,KAAM4pD,EAAG5pD,KAAOwpD,EAAcprC,QAAU,EAJ5B,GAKZurC,OAAQvlC,EAAE/F,SAAWurC,EAAGvqC,IALZ,KAOZ,MACJ,IAAK,MAAOqqC,EAAQ7yC,IAAI,CACpB7W,KAAM4pD,EAAG5pD,KAAOwpD,EAAcprC,QAAU,EAT5B,GAUZiB,IAAKuqC,EAAGvqC,IAAMmqC,EAAcnrC,SAAW,KAEvC,MACJ,IAAK,OAAQqrC,EAAQ7yC,IAAI,CACrB7W,KAAM4pD,EAAG5pD,KAAOwpD,EAAcprC,QAdlB,GAeZiB,IAAKuqC,EAAGvqC,IAAMmqC,EAAcnrC,SAAW,EAf3B,KAiBZ,MACJ,IAAK,QAASqrC,EAAQ7yC,IAAI,CACtBtW,MAAO6jB,EAAEhG,QAAUwrC,EAAG5pD,KACtBqf,IAAKuqC,EAAGvqC,IAAMmqC,EAAcnrC,SAAW,EApB3B,KAyBpBqrC,EAAQ/wD,KAAK,QAAQwkB,KAAKt/B,GAE1B,IAAIqtC,EAAUw+B,EAAQ/wD,KAAK,cAC3BuyB,EAAQ5W,GAAG,SAAS,SAAC50B,GACjBA,EAAEg9B,kBACFwO,EAAQtW,IAAI,SACZi1C,EAAO3mC,WAGXwmC,EAAQxW,OAAO,OAhDvB,8BAqDsBzgC,OAAO,iBACb0gC,QAAQ,OAtDxB,iCA0DsBtpE,EAAYigF,EAAoBjnC,GAE9C,IAAIjmB,EACJ,GAAGktD,aAAoB,GAAvB,CAMA,IAAI9Y,GALAp0C,EAAOktD,GAKcrzC,KAAKY,SAAU25B,cAE9B,sBAANnnE,GAA8BmnE,EAAa,yBAC3CnnE,EAAK,oBAGT,IAAIkgF,EAAOlgF,EAAK,OAEhB,GAAqB,MAAjBmnE,IAAiD,MAAvBA,EAAc+Y,KAAkB/Y,EAAc+Y,IAAQ,CAChF/Y,EAAc+Y,IAAQ,EACtBntD,EAAKwuB,eAAe5T,wBAAuB,eAE3C,IAAI35B,EAAe,GACf4rE,EAA6B,OAEjC,OAAQ5/E,GACJ,IAAK,eACDgU,EAAO,keAMP4rE,EAAY,MACZ,MACJ,IAAK,mBACD5rE,EAAO,0OACP4rE,EAAY,MACZ,MACJ,IAAK,qBACD5rE,EAAO,uZAMP4rE,EAAY,MACZ5mC,EAAWjmB,EAAKqI,YAAY+kD,eAAezd,aAAa1B,MACxD,MACJ,IAAK,gBACDhtD,EAAO,yNAGP4rE,EAAY,OACZ,MACJ,IAAK,qBACD5rE,EAAO,0MAGP4rE,EAAY,OACZ,MACJ,IAAK,mBACD5rE,EAAO,kIACP4rE,EAAY,MACZ5mC,EAAWpQ,OAAO,kBAClB,MACJ,IAAK,mBACD50B,EAAO,w1CAYP4rE,EAAY,MACZ5mC,EAAWjmB,EAAKqI,YAAY+kD,eAAerd,gBAC3C,MACJ,IAAK,gBACD9uD,EAAI,gaAIJ4rE,EAAY,SACZ5mC,EAAWjmB,EAAKqpC,UAAUp1B,QAAQiB,YAAYnZ,KAAK,qBAG/C,IAAR9a,GAA0B,MAAZglC,GAAoBA,EAAS54C,OAAS,GACpD4/E,EAAOI,WAAWpsE,EAAMglC,EAAU4mC,S,EArJlD,O,6BAAA,K,uKCFO,ICuBKngC,GDvBC,GAAb,WAUI,WAAYzwB,EAA8B+D,I,4FAAc,SAAd,KAAAA,OAN1C,KAAAstD,YAAwC,GAExC,KAAAC,oBAAiD,GACjD,KAAAC,eAA4C,GAC5C,KAAAC,iBAA8C,GAG1CpiF,KAAKqiF,kBAAkBzxD,G,UAX/B,O,EAAA,G,EAAA,6CAeQ5wB,KAAK4wB,QAAQ+b,IAAI,WACjB3sC,KAAK4wB,QAAQ+b,IAAI,SACjB3sC,KAAK4wB,QAAQ+b,IAAI,gBAjBzB,wCAoB8B/b,GAAoB,WAC1C5wB,KAAK4wB,QAAUA,EACf,IAAI7S,EAAO/d,KACX4wB,EAAQyb,GAAG,WAAW,SAAC50B,GACnB,IAAIjf,EAAMif,EAAEjf,IACZ,GAAU,MAAPA,EAAa,OAAO,EACpBif,EAAEutC,WAAUxsD,EAAM,SAAWA,GAC7Bif,EAAEstC,UAASvsD,EAAM,OAASA,GAC1Bif,EAAEwtC,SAAQzsD,EAAM,MAAQA,GAC3BulB,EAAKkkE,YAAYzpF,EAAIgZ,gBAAiB,EANd,2BAQxB,YAAeuM,EAAKqkE,iBAApB,gDACIE,EADiC,SAC7B9pF,GATgB,kFAkBxB,OALG,EAAKm8B,KAAKyvB,cAAgB,EAAKzvB,KAAK6N,iBAAiB4e,OAASC,GAAiBgD,UAAY,EAAK1vB,KAAK2vB,kBAAkBC,gBACnH,CAAC,UAAW,YAAa,YAAa,cAAcn/C,QAAQqS,EAAEjf,MAAQ,GACzEif,EAAEwhC,kBAGC,KAGXroB,EAAQyb,GAAG,SAAS,SAAC50B,GACjB,IAAIjf,EAAMif,EAAEjf,IACZ,GAAU,MAAPA,EAAa,OAAO,EACvB,QAAiB,IAAPA,EAAV,CAEGif,EAAEutC,WAAUxsD,EAAM,SAAWA,GAC7Bif,EAAEstC,UAASvsD,EAAM,OAASA,GAC1Bif,EAAEwtC,SAAQzsD,EAAM,MAAQA,GAC3BulB,EAAKkkE,YAAYzpF,EAAIgZ,gBAAiB,EARhB,2BAUtB,YAAeuM,EAAKokE,eAApB,gDACI,EAD+B,SAC3B3pF,GAXc,kFAetB,GAAGulB,EAAK4W,KAAKyvB,YAAqB,KAAP5rD,EAAW,4BAClC,YAAeulB,EAAKmkE,oBAApB,gDACII,EADoC,SAChC9pF,GAF0B,mFAMtC,OAAO,MAEXo4B,EAAQyb,GAAG,YAAY,SAAC50B,GACpB,IAAIxQ,EAAIwQ,EAAEjf,IACPif,EAAEutC,UAAY/9C,EAAEjF,OAAS,IACxBiF,EAAI,WAAaA,GAElBwQ,EAAEstC,SAAW99C,EAAEjF,OAAS,IACvBiF,EAAI,UAAYA,GAEjBwQ,EAAEwtC,QAAUh+C,EAAEjF,OAAS,IACtBiF,EAAI,SAAWA,GATM,2BAWzB,YAAe8W,EAAKmkE,oBAApB,gDACII,EADoC,SAChCr7E,GAZiB,kFAczB,OAAO,OAjFnB,gCAsFczO,GACN,OAAU,MAAPA,EAAoB,KACuB,GAAvCwH,KAAKiiF,YAAYzpF,EAAIgZ,iBAxFpC,gDA4FQxR,KAAKkiF,oBAAsB,Q,6BA5FnC,K,+YCuBA,SAAY7gC,GACR,yCAAiB,yBAAS,uBAAQ,qBAAO,mBAAM,yCAAiB,qDADpE,CAAYA,QAAgB,KAcrB,IAAM,GAAb,WAyEI,WAAmB1sB,EAAuB4tD,EAA4BR,EAClE/3C,I,4FAA4B,SADb,KAAArV,OAAuB,KAAA4tD,YAA4B,KAAAR,iBAnEtE,KAAAV,oBAA8B,IAK9B,KAAAje,eAAiB,EACjB,KAAAE,kBAAoB,IACpB,KAAAkf,aAAe,GAWf,KAAAz4E,aAAsC,GAEtC,KAAAw2C,MAAiB,GACjB,KAAAkiC,YAAwB,GAGxB,KAAA/jE,KAAa,GAEb,KAAAgkE,cAAwB,EACxB,KAAAC,aAAuB,EAEvB,KAAAjQ,MAAgB,EAChB,KAAAkQ,UAAoB,EACpB,KAAAC,uBAAiC,EAEjC,KAAAC,qBAA+B,EAC/B,KAAAC,WAAqB,EACrB,KAAAC,4BAAsC,EAEtC,KAAAC,kBAA4B,EAE5B,KAAAC,qCAAuC,GAQvC,KAAAC,kCAAiD,GAGjD,KAAAn/B,QAAoB,CAAC,QAAS,QAAS,OAAQ,WAC3C,WAAY,UAAW,WAI3B,KAAAqgB,mBAA0D,CACtD,MAAS,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC1C,MAAS,EAAC,GAAO,GAAM,GAAO,GAAO,GAAO,GAC5C,KAAQ,EAAC,GAAO,GAAM,GAAM,GAAO,GAAO,GAC1C,SAAY,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC7C,SAAY,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC7C,QAAW,EAAC,GAAO,GAAO,GAAM,GAAO,GAAO,GAC9C,QAAW,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,IAkV/C,KAAA+e,YAAsB,EAwBtB,KAAAC,aAAuB,EACvB,KAAAC,sBAAgC,EAwMhC,KAAAC,kBAA4B,KA+xB5B,KAAAC,cAAoC,CAACniC,GAAiBC,OAAQD,GAAiBgD,QAAShD,GAAiBoiC,iBA30CrGzjF,KAAKksC,aAAe,IAAInC,GAAaC,EAAShqC,KAAK20B,MACnD30B,KAAK2rC,aAAe,IAAI,GAAa3B,EAAShqC,KAAK20B,MAC/CA,EAAKyvB,aACLpkD,KAAK0jF,aAAe,IAAI,GAAal5C,OAAO,QAAS7V,GAErD30B,KAAK0jF,aAAe,IAAI,GAAal5C,OAAOyL,QAASthB,GAGzD30B,KAAKm/E,SAAWoD,EAEhBR,EAAejd,eAAe9kE,MAE9BA,KAAK6iF,uBAAyBh+C,YAAYC,MAC1C9kC,KAAK0yE,MAAQ,EACb1yE,KAAK4iF,UAAY,EACjB5iF,KAAKojF,YAAc,EAEnBpjF,KAAKwiF,aAAe,EAEpB,IAAIzkE,EAAO/d,KAUXA,KAAK2jF,QAAUh5C,aARQ,WAEd5sB,EAAK4kE,aACN5kE,EAAK6lE,cAAc7lE,EAAKykE,cAAc,EAAO,MAKRxiF,KAAKwiF,cAClD,IACIqB,EAAMrnD,KAAKC,UADmC,CAAEnzB,QAAS,IAE7DqhC,aAAY,WACR5sB,EAAKolE,kCAAkCpxE,SAAQ,SAAA49B,GAAE,OAAIA,EAAGm0C,KAAKD,QAC9D,K,UA7GX,O,EAAA,G,EAAA,iCAiHW,WAEC9lE,EAAO/d,KAEPu9E,EAAKv9E,KAAK20B,KAAKqlC,mBAEf+pB,EAAgB,WAChBhmE,EAAK+kE,qBAAuB,IAC5B/kE,EAAK2nB,SAGLs+C,EAAgB,WAChBjmE,EAAKkmE,SAGT1G,EAAGE,eAAe,oBAAqB,CAAC,OACpC,WACQF,EAAG2G,SAAS,qBACZH,IAEAC,MAGL,mBAAoBhkF,KAAK+hF,eAAexd,cAE/CgZ,EAAGE,eAAe,oBAAqB,CAAC,OACpC,WACQF,EAAG2G,SAAS,qBACZH,IAEAC,MAGL,QAAShkF,KAAK+hF,eAAevd,cAEpC+Y,EAAGE,eAAe,mBAAoB,IAClC,WACI1/D,EAAKkrD,MAAK,GACVlrD,EAAK20D,MAAQ,IACd,oBAAqB1yE,KAAK+hF,eAAetd,aAOhD8Y,EAAGE,eAAe,uBAAwB,CAAC,OACvC,WACI,EAAK0G,SAAQ,KACd,4BAA6BnkF,KAAK+hF,eAAerd,iBAExD6Y,EAAGE,eAAe,uBAAwB,CAAC,OACvC,WACI,EAAK0G,SAAQ,KACd,4BAA6BnkF,KAAK+hF,eAAepd,iBAExD4Y,EAAGE,eAAe,sBAAuB,IACrC,WACI,EAAK2G,YACN,WAAYpkF,KAAK+hF,eAAend,gBAEvC2Y,EAAGE,eAAe,sBAAuB,IACrC,WACI1/D,EAAKkrD,MAAK,KACX,cAAejpE,KAAK+hF,eAAeld,gBAE1C7kE,KAAKiqD,SAAS5I,GAAiB0Y,mBAnLvC,yCAuLuBv7C,GAEf,IAAI8qD,EAGA+a,GAAmC,EAKvC,GAAW,OAPX/a,EAAMtpE,KAAK20B,KAAKyQ,4BAOC,CACb,IAAI46B,EAAwBxhD,EAAYihD,iBAAiB6J,EAAIxnC,MAC7D,GAA6B,MAAzBk+B,IACAqkB,GAAoC/a,EAAIzjC,cAChCm6B,EAAsBj6B,YAC1Bi6B,EAAsBj6B,aACtB,OAAOi6B,EAMnB,GAAuB,MAAnBhgE,KAAKskF,YAAsBD,EAAkC,CAC7D,IAAIE,EAAiB/lE,EAAYihD,iBAAiBz/D,KAAKskF,WAAWxiD,MAClE,GAAsB,MAAlByiD,GAA0BA,EAAex+C,YACzC,OAAOw+C,EAKf,GAAIF,EAAkC,4BAClC,YAAc7lE,EAAY8F,YAAW,GAArC,+CAA6C,KAApCjtB,EAAoC,QACzC,GAAIA,EAAE0uC,YACF,OAAO1uC,GAHmB,mFAQtC,OAAO,OA7Nf,6B,YAsOQ2I,KAAK0iF,cAAe,EAEV1iF,KAAK20B,KAAKyQ,2BAEhBmkC,mCAE6B,QAAjC,EAAwB,QAAxB,EAAAvpE,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAE47C,kBAM/BxkF,KAAKqhF,oBAAsBrhF,KAAK20B,KAAK4d,SAAWvyC,KAAK20B,KAAK8vD,cAAc3+C,8BACxE9lC,KAAK20B,KAAKssD,yCACVjhF,KAAK0e,KAAO,GACqB,QAAjC,EAAwB,QAAxB,EAAA1e,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAE87C,gBAGvC,IAAIC,EAAgB3kF,KAAKghF,mBAAmBhhF,KAAKwe,aAEjD,GAAqB,MAAjBmmE,EAAJ,CAKA3kF,KAAKskF,WAAaK,EAElB3kF,KAAK8pD,uBAAyB,EAE9B9pD,KAAK+J,aAAe,GACpB/J,KAAKugD,MAAQ,GACbvgD,KAAKyiF,YAAc,GACnBziF,KAAK4kF,kBAAoB,EAEzB5kF,KAAKiqD,SAAS5I,GAAiBplB,MAE/Bj8B,KAAKijF,kBAAmB,EAExBjjF,KAAK8iF,qBAAuB,IAK5B9iF,KAAK+J,aAAaxF,KAAK,CACnB9C,QAASzB,KAAKskF,WAAW/kE,YACzBvV,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GAC5CN,OAAQ,gBACR0I,oBAAqB,KACrBC,oBAAqB,kBAnDzB,2BAuDA,YAAcrK,KAAKwe,YAAY8F,YAAW,GAA1C,+CAAkD,KAAzCjtB,EAAyC,QAC9C2I,KAAK6kF,gBAAgBxtF,GACrB2I,KAAK8kF,kBAAkBztF,IAzD3B,kFA4DA2I,KAAK+kF,kBArCD/kF,KAAKiqD,SAAS5I,GAAiB0Y,mBA3P3C,mCAqSQ,IAAIhhE,EAAIiH,KAAK+J,aAAauK,MAM1B,GALAtU,KAAK+e,eAAiBhmB,EAAE0I,QACxBzB,KAAK8pD,uBAAyB/wD,EAAEiR,gBAChChK,KAAKsI,cAAgBvP,EAAE2I,OACvB1B,KAAKglF,2BAA6BjsF,EAAEqR,oBACpCpK,KAAKilF,2BAA6BlsF,EAAEsR,oBACa,MAA7CtR,EAAEmsF,wCAAiD,CAEnDllF,KAAKyiF,YAAYl+E,KAA+B,MAA1BvE,KAAK4kF,kBAA4B,EAAI5kF,KAAK4kF,mBAChE5kF,KAAK4kF,kBAAoB5kF,KAAKugD,MAAMv+C,OAHe,2BAKnD,YAAejJ,EAAEmsF,wCAAjB,oDAASC,EAAT,QAA0DnlF,KAAKugD,MAAMh8C,KAAK4gF,IALvB,kFAMnDpsF,EAAEmsF,wCAA0C,QAjTxD,wCAqTsB7tF,GAAS,2BAEvB,YAAkBA,EAAEgnB,UAAUmG,SAA9B,+CAAwC,KAA/BthB,EAA+B,QAMpC,GALIA,aAAiB,IACjBA,EAAM0D,YAAY4G,YAAc,IAAI,EAActK,EAAM0D,aACxD1D,EAAMkiF,iCAAiCplF,KAAK+J,eAG5C7G,aAAiB,GAAM,CAEvB,IAAImiF,EAAkBniF,EAAM0D,YAAY4G,YAAYhK,WAF7B,uBAGvB,YAAqBN,EAAMqa,aAA3B,+CAAyC,KAAhCW,EAAgC,QAErCmnE,EAAgBnnE,EAASL,SAAS3lB,MAAQgmB,EAASvlB,QALhC,qFARR,qFArT/B,sCAyUoBtB,GAAS,2BAErB,YAAsBA,EAAEgnB,UAAUmG,SAAlC,+CAA4C,KAAnChE,EAAmC,QACxC,GAAIA,aAAqB,GAAM,CAE3BA,EAAU4kE,iCAAiCplF,KAAK+J,cAEhD,IAAI2T,EAAqB,GAErB4nE,EAAsC,CACtCtuF,OAAQwpB,EAAUxpB,OAClB8P,aAAc,KACdlC,WAAY,IAGZ2gF,EAAoC/kE,EAAU3Z,+BAA+BjC,WAAW5C,OAAS,EAEjGujF,GACAvlF,KAAK+J,aAAaxF,KAAK,CACnB9C,QAAS6jF,EACTt7E,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GAC5CN,OAAQ,uCAAyC8e,EAAUrnB,WAC3DiR,oBAAqB,KACrBC,oBAAqB,gCArBF,2BA2B3B,YAAqBmW,EAAUjD,aAA/B,+CAA6C,KAApCW,EAAoC,QACzCA,EAASvlB,OAAS,IAAIwkB,GAAkBqD,EAAWtC,GAEnDR,EAAUnZ,KAAK,CACXnE,KAAMogB,EACNtoB,MAAOgmB,EAASvlB,SAGmB,MAAnCulB,EAASuD,wBACTzhB,KAAK+J,aAAaxF,KAAK,CACnB9C,QAASyc,EAASuD,uBAClBzX,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GAC5CN,OAAQ,mBAAqB8e,EAAUrnB,WACvCiR,oBAAqB,KACrBC,oBAAqB,gCAKzBk7E,GACAD,EAA2B1gF,WAAWL,KAAK,CACvCnE,KAAMnH,EAAUusF,oBAChBhhF,SAAU0Z,EAAS1Z,SACnBgc,UAAWA,EACXvC,gBAAiBC,EAAS/kB,cApDX,kFA0DvBosF,GACAD,EAA2B1gF,WAAWL,KAAK,CACvCnE,KAAMnH,EAAUuoB,WAChBhd,SAAU,CAAE0F,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,KAIhDwe,EAAU9C,UAAY,CAClBtd,KAAM,IAAI,EAAUogB,GACpBtoB,MAAOwlB,KAtEE,qFAzU7B,4BAuZUsuB,G,QAE+B,QAAjC,EAAwB,QAAxB,EAAAhsC,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAE68C,cAEnCzlF,KAAK0lF,uBAAyB15C,EAE9BhsC,KAAKijF,kBAAmB,EAEpBjjF,KAAKohD,OAASC,GAAiBt1C,OAAS/L,KAAKohD,OAASC,GAAiBplB,OACvEj8B,KAAK2kD,OACL3kD,KAAK2lF,gBAGT3lF,KAAKiqD,SAAS5I,GAAiBgD,SAE/BrkD,KAAKgkE,6BAELhkE,KAAK6iF,uBAAyBh+C,YAAYC,MAC1C9kC,KAAK0iF,cAAe,IAza5B,oCAibkBF,EAAsBoD,EAAmBC,GAEnD,IAAIjhD,EAAKC,YAAYC,MAErB,IAAK8gD,EAAU,CACX,IAAIE,EAAmB,IAAO9lF,KAAKojE,eACnC,GAAIpjE,KAAK0iF,cAAgB99C,EAAK5kC,KAAKqjF,aAAeyC,EAAkB,OACpE9lF,KAAKqjF,aAAez+C,EAGxB5kC,KAAKsjF,sBAAwB1+C,EAAK5kC,KAAKqjF,aAEvC,IAII0C,EAJAC,EAAsBJ,EAAW/1E,OAAOC,iBAAmB9P,KAAKojE,eAAiBpjE,KAAKwiF,aAAe,IAEzGxiF,KAAKojF,cAKL,IAFA,IAAInsF,EAAI,EAEDA,EAAI+uF,IAAwBhmF,KAAK0iF,cAA6B,MAAbqD,IACnDlhD,YAAYC,MAAQF,GAAM49C,EAAeqD,GAGzB,OADjBE,EAAY/lF,KAAKimF,aADnB,CAgBE,GAVIjmF,KAAKojE,gBAAkBpjE,KAAKkjF,uCAAyC0C,GACrE5lF,KAAK4pD,iCAGL5pD,KAAKohD,OAASC,GAAiBt1C,OAC/B/L,KAAKohD,OAASC,GAAiBplB,OAC/Bj8B,KAAK0iF,cAAe,GAIpB1iF,KAAK8iF,qBAAuB,IAAM9iF,KAAK0iF,aAAc,CACrD,IACIl+E,EADOxE,KAAK+e,eAAena,WAAW5E,KAAK8pD,wBAC3BtlD,SACJ,MAAZA,GAAoBA,EAAS0F,MAAQlK,KAAK+iF,YAC1C/iF,KAAK0iF,cAAe,EACpB1iF,KAAKiqD,SAAS5I,GAAiBC,QAE3BthD,KAAKkmF,eAAejtF,EAAU+mB,kBAEb,OADjB+lE,EAAY/lF,KAAKimF,aACQjmF,KAAKkmF,eAAejtF,EAAUuoB,cACnDukE,EAAY/lF,KAAKimF,aAOjChvF,IAGa,MAAb8uF,GACA/lF,KAAKknC,eAAe6+C,GAGpB/lF,KAAK0iF,eACD1iF,KAAKohD,OAASC,GAAiBC,QAAUthD,KAAKohD,OAASC,GAAiBoiC,iBACxEzjF,KAAK4pD,iCAE0B,MAA/B5pD,KAAK0lF,yBACL1lF,KAAK0lF,yBACL1lF,KAAK0lF,uBAAyB,OAItC,IAAIt/C,EAAKvB,YAAYC,MAAQF,EAC7B5kC,KAAK4iF,WAAax8C,IAzf1B,qCAmgBmB2/C,GAAiB,I,MAAA,OAC5B/lF,KAAK0iF,cAAe,EACpB1iF,KAAKiqD,SAAS5I,GAAiBt1C,OAE/B,IAAIu/C,EAAY9gB,OAAO,oCAEnB27C,GAA0B,EAC9B,GAAInmF,KAAK20B,KAAKyvB,aAAc,CACxB,IACIpe,EAD2ChmC,KAAK20B,KAC1BqR,OAC1B,GAA8B,GAA1BA,EAAOogD,iBAAiD,GAAtBpgD,EAAOqgD,YAAqB,CAC9DF,GAAiB,EACjB,IAAIG,EAAiB,GACjBC,EAAmBvmF,KAAK+e,eAAena,WAAW5E,KAAK8pD,wBAC3D,GAAwB,MAApBy8B,EAA0B,CAC1B,IAAIt8E,EAAes8E,aAAgB,EAAhBA,EAAkB/hF,SACrC8hF,EAAiB,aAAer8E,EAAaC,KAAO,YAAcD,EAAaE,OAE9C,QAAjC,EAAwB,QAAxB,EAAAnK,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAEqkB,UAAUjtD,KAAK+e,eAAe/nB,OAAQiT,GAG7E4oC,MAAM,SAAWyzC,EAAiB,KAAOP,IAKjD,GAAII,EAAgB,CAChB76B,EAAUxhB,OAAOU,OAAO,sDAAwDu7C,EAAY,SAC5F/lF,KAAK6pD,qBAGL,IADA,IAAI3xB,GAAQ,EAJI,WAKPjhC,GAEL,IAAI8B,EAAI,EAAKgR,aAAa9S,GACtBI,EAAK0B,EAAE2I,kBAAkBX,EAAUhI,EAAE2I,OAAOvI,WAAaJ,EAAE2I,OAC3D1I,EAAY,mCAAqCk/B,EAAQ,MAAQ,kBAAoB,YAAc7gC,EACjF,MAAlB0B,EAAEkR,eAAsBjR,GAAK,6CAA+CD,EAAEkR,aAAaC,KAAO,OAASnR,EAAEkR,aAAaE,OAAS,YACvInR,GAAK,OACL,IAAIwtF,EAAYh8C,OAAOxxC,GACvB,GAAsB,MAAlBD,EAAEkR,aAAsB,CACxB,IAAI8T,EAAO,EACXysB,OAAOg8C,EAAU,IAAIn6C,GAAG,aAAa,W,QACA,QAAjC,EAAwB,QAAxB,EAAAtuB,EAAK4W,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAEqkB,UAAUl0D,EAAE0I,QAAQzK,OAAQ+B,EAAEkR,iBAMzE,GAHAqhD,EAAUxhB,OAAO08C,GAEjBtuD,GAAQ,EACqB,MAAzBn/B,EAAEsR,oBACF,eAlBCpT,EAAI+I,KAAK+J,aAAa/H,OAAS,EAAG/K,GAAK,GAAQ,YAA/CA,GAA0CA,KAsBnD,IAAI2xC,EAAkC,QAA3B,EAAG5oC,KAAK20B,KAAK0Q,sBAAc,eAAEuD,QAEzB,MAAXA,IACAA,EAAQuhB,kBAAkBmB,EAAW,KAAM,uBAC3C1iB,EAAQ69C,cA5jBxB,mDAqkBYzmF,KAAKohD,OAASC,GAAiBgD,SAE3BrkD,KAAKojE,eAAiBpjE,KAAKkjF,sCAC3BljF,KAAK20B,KAAK0qD,+BAxkB1B,qCA+kBmBz4D,GACX,OAA2B,MAAvB5mB,KAAK+e,kBACL/e,KAAK8pD,uBAAyB9pD,KAAK+e,eAAena,WAAW5C,OAAS,IACnEhC,KAAK+e,eAAena,WAAW5E,KAAK8pD,wBAAwB1pD,MAAQwmB,IAllBnF,qC,UAslBQ5mB,KAAKksC,aAAajH,QACF,QAAhB,EAAAjlC,KAAKo5E,mBAAW,SAAEsN,eACG,QAArB,EAAA1mF,KAAK2mF,wBAAgB,SAAED,eACS,QAAhC,EAAA1mF,KAAK4mF,mCAA2B,SAAEC,eAClC7mF,KAAK4mF,4BAA8B,OA1lB3C,6BA6lBiC,I,EAAA,OAAxBE,EAAwB,wDACzB9mF,KAAK2rC,aAAaP,OAClBprC,KAAKiqD,SAAS5I,GAAiBC,QAC/BthD,KAAK0iF,cAAe,EAEI,MAApB1iF,KAAKo5E,cACLp5E,KAAKo5E,YAAY2N,iBAAmB,IAER,QAAhC,EAAA/mF,KAAK4mF,mCAA2B,SAAEC,eAClC7mF,KAAK4mF,4BAA8B,KAEnC77C,YAAW,WACP,EAAKkf,SAAS5I,GAAiBplB,MAC/B,EAAKtH,KAAK0qD,6BACNyH,GACA,EAAKphD,UAEV,OA9mBX,8BAknBQ1lC,KAAKiqD,SAAS5I,GAAiBC,QAC/BthD,KAAK4pD,iCACL5pD,KAAK0iF,cAAe,IApnB5B,uDAynBQ,GAA2B,MAAvB1iF,KAAK+e,eAAT,CACA,IAAIla,EAAO7E,KAAK+e,eAAena,WAAW5E,KAAK8pD,wBAC/C,GAAY,MAARjlD,EAAJ,CACA,IAAIL,EAAWK,EAAKL,SACJ,MAAZA,IACAxE,KAAK20B,KAAKyqD,2BAA2Bp/E,KAAK+e,eAAe/nB,OAAO8qC,KAAMt9B,GACtExE,KAAKm/E,SAAS6H,SAAShnF,KAAK+e,eAAgBva,EAAUxE,KAAKugD,MAAOvgD,KAAK4kF,kBAAmB5kF,KAAK0e,MAE/D,MADhB1e,KAAK20B,KAAK0Q,eACZmqB,iBACNxvD,KAAK+e,eAAe/nB,QAAUgJ,KAAKujF,oBACnCvjF,KAAK20B,KAAK0Q,eAAeuqB,uBAAuB,KAAM5vD,KAAK+e,eAAe/nB,QAC1EgJ,KAAKujF,kBAAoBvjF,KAAK+e,eAAe/nB,QAEjDgJ,KAAK20B,KAAK0Q,eAAemqB,eAAey3B,SAASpiF,SAtoBjE,gCA4oBQ7E,KAAK8iF,qBAAuB,EAC5B9iF,KAAK0lC,UA7oBb,8BAgpBYwhD,G,QAGJ,GAFiC,QAAjC,EAAwB,QAAxB,EAAAlnF,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAE68C,cACnCzlF,KAAKijF,kBAAmB,EACpBjjF,KAAKohD,OAASC,GAAiBC,OAAQ,CAEvC,GADAthD,KAAK2kD,OACD3kD,KAAKohD,OAASC,GAAiB0Y,gBAC/B,OAEJ/5D,KAAK2lF,eACL3lF,KAAK4pD,iCACL5pD,KAAKiqD,SAAS5I,GAAiBC,YAC5B,CACHthD,KAAK8iF,qBAAuB,IAC5B,IAAIqE,EAA0BnnF,KAAK8iF,qBAE/Bt+E,EADOxE,KAAK+e,eAAena,WAAW5E,KAAK8pD,wBAC3BtlD,SAChBuhF,EAAY/lF,KAAKimF,WACrB,GAAiB,MAAbF,EAEA,YADA/lF,KAAKknC,eAAe6+C,IAInBmB,GAAYlnF,KAAK8iF,qBAAuBqE,GACzCnnF,KAAK8iF,qBAAuB,EAExB9iF,KAAK+iF,UADO,MAAZv+E,EACiBA,EAAS0F,MAER,EAEtBlK,KAAK0lC,SAGD1lC,KAAKohD,OAASC,GAAiBplB,KAC/Bj8B,KAAK20B,KAAK0qD,8BAEVr/E,KAAK4pD,iCAED5pD,KAAKohD,OAASC,GAAiBoiC,iBAC/BzjF,KAAKiqD,SAAS5I,GAAiBC,YAtrBvD,iCAssBQ,IANA,IAEIz8C,EAEAkhF,EAJAjhF,GAAwB,GAMpBA,IAAiB9E,KAAKgjF,4BAA2C,MAAb+C,GAAmB,CAG3E,GAAI/lF,KAAK8pD,uBAAyB9pD,KAAK+e,eAAena,WAAW5C,OAAS,EAAG,CACzEhC,KAAKiqD,SAAS5I,GAAiBplB,MAC/B,MAKqB,OAFzBp3B,EAAO7E,KAAK+e,eAAena,WAAW5E,KAAK8pD,yBAElChlD,eACLA,EAAeD,EAAKC,cAGxBihF,EAAY/lF,KAAKonF,YAAYviF,GAQjC,OAJA7E,KAAKgjF,4BAA6B,EAElChjF,KAAK0yE,QAEEqT,IA5tBf,kCA+tBgBlhF,GAAe,I,MAAA,OAEvB,GAAuB,MAAnBA,EAAKwiF,aAAuBrnF,KAAKijF,iBAGjC,OAFAjjF,KAAKgjF,4BAA6B,OAClChjF,KAAKikF,QAITjkF,KAAKijF,kBAAmB,EACxB,IAGI/qF,EAHAgyD,EAAWlqD,KAAKugD,MAAMv+C,OAAS,EAC/BsgB,EAAkBtiB,KAAK4kF,kBACvBrkC,EAAQvgD,KAAKugD,MAGjB,OAAQ17C,EAAKzE,MACT,KAAKnH,EAAUgpB,UACX,IAAIqlE,EAAkC,MAAzBziF,EAAKsd,iBAA2B,EAAItd,EAAKsd,iBACtDjqB,EAAQqoD,EAAM2J,EAAWo9B,GACzB/mC,EAAM2J,EAAWo9B,GAAUpvF,EAAMkI,KAAKsP,OAAOxX,EAAO2M,EAAKqd,SACzD,MACJ,KAAKjpB,EAAUyxB,UAEX,GAAmB,OADnBxyB,EAAQqoD,EAAM2J,IACJhyD,MAAe,MACzB,IAAIykC,EAAqBzkC,EAAMA,MAC/B,GAAI2M,EAAKqd,mBAAmB,EACxB,GAAkB,UAAd,GAAOya,IACP,IAAKA,EAAIv5B,MAAM8L,gBAAgBrK,EAAKqd,SAChC,MAAQ,yBAA2Bya,EAAIv5B,MAAMjK,WAAa,oBAAsB0L,EAAKqd,QAAQ/oB,WAAa,wBAE3G,CACH,GAAkB,iBAAPwjC,GAAmB,CAAC,UAAW,SAAU,SAASv3B,QAAQP,EAAKqd,QAAQ/oB,YAAc,EAC5F,MAAQ,6BAA+B0L,EAAKqd,QAAQ/oB,WAAa,oBAC9D,GAAkB,iBAAPwjC,GAAmB,CAAC,SAAU,aAAav3B,QAAQP,EAAKqd,QAAQ/oB,YAAc,EAC5F,MAAQ,qCAAuC0L,EAAKqd,QAAQ/oB,WAAa,oBACtE,GAAkB,kBAAPwjC,GAA+C,WAA3B93B,EAAKqd,QAAQ/oB,WAC/C,MAAQ,uCAAyC0L,EAAKqd,QAAQ/oB,WAAa,yBAGhF,GAAI0L,EAAKqd,mBAAmB,IAClBya,EAAIv5B,MAAOm8B,oBAAoB16B,EAAKqd,SAC7C,MAAQ,yBAA2Bya,EAAIv5B,MAAMjK,WAAa,sCAAwC0L,EAAKqd,QAAQ/oB,WAAa,IAGpI,MACJ,KAAKF,EAAU2wB,yBACX,IAAIrN,EAAW1X,EAAK0X,SAChBnc,EAAOmc,EAASnc,KACpBlI,EAAQ,CACJkI,KAAMA,EACNlI,MAAO,MAEPkI,aAAgBH,IAChB/H,EAAMA,MAAQkI,EAAKF,cAEvBqgD,EAAMhkC,EAASC,SAAW8F,GAAmBpqB,EACzC2M,EAAKonB,mCACLs0B,EAAMh8C,KAAKrM,GAEf,MACJ,KAAKe,EAAU6qB,yBACXy8B,EAAMh8C,KAAKg8C,EAAM17C,EAAKkf,mBAAqBzB,IAC3C,MACJ,KAAKrpB,EAAUq1B,wBACXiyB,EAAM17C,EAAKkf,mBAAqBzB,GAAmBi+B,EAAMjsC,MACzD,MACJ,KAAKrb,EAAU0rB,cACX,IAAI4iE,EAAU1iF,EAAK+f,cAAgB27B,EAAMj+B,GAAiBpqB,MAAQqoD,EAAMjsC,MAAMpc,MAC9E,GAAe,MAAXqvF,EAAiB,MAAO,6BAA+B1iF,EAAK6f,oBAAsB,qBACtF,IAAI8iE,EAAyBD,EAASn6E,SAASvI,EAAKvB,gBACzB,OAAvBkkF,aAAM,EAANA,EAAQ7mF,cACR6mF,EAAO7mF,YAAY6mF,GAEvBjnC,EAAMh8C,KAAKijF,GACX,MACJ,KAAKvuF,EAAU03B,gBACX,IAAI/oB,EAAI24C,EAAMjsC,MAAMpc,MACpB,GAAS,MAAL0P,EAAW,MAAO,mDACtB24C,EAAMh8C,KAAK,CAAEnE,KAAMgP,GAAkBlX,MAAe0P,EAAG5F,SACvD,MACJ,KAAK/I,EAAUiE,WACXhF,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,MAAQA,EAAMA,MAC7B2M,EAAKmgB,mBACNu7B,EAAMjsC,MAEV,MACJ,KAAKrb,EAAUkE,eACXjF,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUmE,gBACXlF,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUoE,yBACXnF,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUqE,mBACXpF,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUsE,iBACXrF,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAU2E,aACX1F,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAU6E,YACX5F,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAU4E,aACX3F,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAU8E,mBACX7F,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,QAAUA,EAAMA,MACpC,MACJ,KAAKe,EAAU+E,oBACX9F,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,QAAUA,EAAMA,MACpC,MACJ,KAAKe,EAAUgF,4BACX/F,EAAQqoD,EAAMjsC,MACdisC,EAAM2J,EAAW,GAAGhyD,SAAWA,EAAMA,MACrC,MACJ,KAAKe,EAAUktB,SACX,IAAIvjB,EAAgB29C,EAAMjsC,MACtBmzE,EACA5iF,EAAK+tB,SAASiG,QAAQh0B,EAAKuhB,SAAUm6B,EAAM2J,EAAW,GAAItnD,GAC1DowB,EAAanuB,EAAK+tB,SAASK,cAAcpuB,EAAKuhB,SAAUxjB,EAAcxC,MAC1EmgD,EAAM2J,EAAW,GAAK,CAClB9pD,KAAM4yB,EACN96B,MAAOuvF,GAEX,MACJ,KAAKxuF,EAAUsvB,QACX,IAAIm/D,EAAWnnC,EAAMjsC,MACjBzP,EAAKuhB,UAAYntB,EAAUkD,MAC3BokD,EAAMh8C,KAAK,CACPnE,KAAMsnF,EAAStnF,KACflI,OAAQwvF,EAASxvF,QAGrBqoD,EAAMh8C,KAAK,CACPnE,KAAMsnF,EAAStnF,KACflI,OAAQwvF,EAASxvF,QAGzB,MACJ,KAAKe,EAAUwvB,aACX83B,EAAMh8C,KAAK,CACPrM,MAAO2M,EAAK3M,MACZkI,KAAMyE,EAAK0tB,WAEf,MACJ,KAAKt5B,EAAU64B,sBACPjtB,EAAK3B,iBAAiB,EACtBq9C,EAAMh8C,KAAK,CACPnE,KAAMyE,EAAK3B,MAAM0D,YACjB1O,MAAO2M,EAAK3B,MAAM0D,YAAY4G,cAIlC+yC,EAAMh8C,KAAK,CACPnE,KAAMyE,EAAK3B,MACXhL,MAAO2M,EAAK3B,QAGpB,MACJ,KAAKjK,EAAUwrB,oBAEc,OADzBvsB,EAAQ2M,EAAK3B,MAAMsK,YAAYJ,SAASvI,EAAKvB,iBACnC3C,aACNzI,EAAMyI,YAAYzI,GAEtBqoD,EAAMh8C,KAAKrM,GACX,MAKJ,KAAKe,EAAU4vB,mBACX,IAAIzmB,EAAQm+C,EAAMjsC,MACd9E,EAAQ+wC,EAAMjsC,MAElB,GAAmB,MAAf9E,EAAMtX,MAAe,MAAO,4CAEhC,GAAIkK,EAAMlK,OAASsX,EAAMtX,MAAM8J,QAAUI,EAAMlK,MAAQ,EACnD,MAAO,qCAAuCkK,EAAMlK,MAAQ,2BAA6BsX,EAAMtX,MAAM8J,OAEzGu+C,EAAMh8C,KAAKiL,EAAMtX,MAAMkK,EAAMlK,QAC7B,MAEJ,KAAKe,EAAU8mB,eACX/f,KAAKugD,MAAMh8C,KAAK,CAAErM,MAAO2M,EAAK+B,YAAY4G,YAAapN,KAAMyE,EAAK+B,cAElE,IAAIwzB,EAAmB,CACnBliC,MAAO,CAAC,CAAEA,MAAO,OAAQkI,KAAMiM,KAC/BjM,KAAM,IAAI,EAAUiM,KAEpBs7E,EAAkBz9B,EAAW,EAEjClqD,KAAKugD,MAAMh8C,KAAK61B,GAEhBp6B,KAAKyiF,YAAYl+E,KAAKvE,KAAK4kF,mBAC3B5kF,KAAK+J,aAAaxF,KAAK,CACnB9C,QAASzB,KAAK+e,eACd/U,gBAAiBhK,KAAK8pD,uBAAyB,EAC/C7/C,aAAcpF,EAAKL,SACnB9C,OAAQ1B,KAAKsI,cACb8B,oBAAqBpK,KAAKglF,2BAC1B36E,oBAAqB,OAGzBrK,KAAKglF,2BAA6B,KAClChlF,KAAK4kF,kBAAoB+C,EAEzB3nF,KAAK+e,eAAiBla,EAAKnD,OAAOD,QAClCzB,KAAKsI,cAAgBzD,EAAKnD,OAC1B1B,KAAK8pD,wBAA0B,EAE/B,IAAK,IAAI7yD,EAAI,EAAGA,EAAI4N,EAAKnD,OAAOJ,8BAA+BrK,IAC3DspD,EAAMh8C,KAAK,MAKf,MACJ,KAAKtL,EAAUk3B,kBACX,IAAIy3D,EAAyBrnC,EAAMxoC,OAAOwoC,EAAMv+C,OAAS6C,EAAKurB,eAAgBvrB,EAAKurB,gBAEnFmwB,EAAMh8C,KAAK,CACPrM,MAAO0vF,EACPxnF,KAAMyE,EAAKumB,YAGf,MACJ,KAAKnyB,EAAUmpB,WAOX,IAJA,IAAI1gB,EAASmD,EAAKnD,OAEdmmF,EAAiB39B,EAAW,EAAIrlD,EAAKyd,gBACrCwlE,EAAcpmF,EAAOV,cAAca,WAC9B,EAAIgmF,EAAiB,EAAG,GAAK39B,EAAU,IACvB,MAAjBlqD,KAAKugD,MAAM,IAAcvgD,KAAKugD,MAAM,GAAGngD,gBAAgBH,IACvDsgD,EAAM,GAAK,CACPngD,KAAM0nF,EAAY,EAAID,EAAiB,GAAGznF,KAC1ClI,MAAOqoD,EAAM,GAAGroD,QAK5B,GAAmC,MAA/BqoD,EAAMsnC,GAAgB3vF,QAAkBwJ,EAAOd,SAC/C,MAAO,sBAAwBc,EAAOvI,WAAa,oBAQvD,IALIuI,EAAOP,YAAcO,EAAOL,YAAcwD,EAAKwd,eAE/C3gB,EADa6+C,EAAMsnC,GACqB3vF,MAAOkL,MAAO6iB,qBAAqBvkB,EAAOC,YAGxE,MAAVD,EAEA,MAGJ,GAAqB,MAAjBA,EAAOF,OAAgB,CACvB,IAAI4iB,EAAK1iB,EAAO2iB,gBACZ,EAAak8B,EAAMxoC,OAAO8vE,GAC1BE,EAAcrmF,EAAOF,OAAO,GACtB,MAAN4iB,GAA+B,QAAjBA,EAAGjrB,YACjBonD,EAAMh8C,KAAK,CACPrM,MAAO6vF,EACP3nF,KAAMgkB,QAGX,CACHpkB,KAAKyiF,YAAYl+E,KAAKvE,KAAK4kF,mBAC3B5kF,KAAK+J,aAAaxF,KAAK,CACnB9C,QAASzB,KAAK+e,eACd/U,gBAAiBhK,KAAK8pD,uBAAyB,EAC/C7/C,aAAcpF,EAAKL,SACnB9C,OAAQ1B,KAAKsI,cACb8B,oBAAqBpK,KAAKglF,2BAC1B36E,oBAAqB,OAGzBrK,KAAKglF,2BAA6B,KAClChlF,KAAK4kF,kBAAoBiD,EAEzB7nF,KAAK+e,eAAiBrd,EAAOD,QAC7BzB,KAAKsI,cAAgB5G,EACrB1B,KAAK8pD,wBAA0B,EAE/B,IAAK,IAAI,EAAI,EAAG,EAAIpoD,EAAOJ,8BAA+B,IACtDi/C,EAAMh8C,KAAK,MAGfvE,KAAK8iF,uBACL9iF,KAAKgjF,4BAA6B,EAEtC,MACJ,KAAK/pF,EAAUo5B,gBAGX,IAAI21D,EAAUnjF,EAAKnD,OAEfumF,EAAkB/9B,EAAW,EAAIrlD,EAAKyd,gBAEtCzgB,EAAa0+C,EAAMxoC,OAAOkwE,GAE9BjoF,KAAK0iF,cAAe,EACpB,IAAIwF,EAAWloF,KAAKohD,MACpBphD,KAAKiqD,SAAS5I,GAAiBoiC,iBAE/BzjF,KAAK4pD,iCAEL,IAAI7rC,EAAO/d,KACXA,KAAK2rC,aAAaw8C,UAAUH,EAASnmF,GAAY,SAAC3J,GAC9CqoD,EAAMh8C,KAAKrM,GACX,EAAKy8B,KAAK0qD,6BACVthE,EAAKksC,SAAS5I,GAAiBC,QAC3B4mC,GAAY7mC,GAAiBgD,QAC7BtmC,EAAK2nB,QAEL3nB,EAAK6rC,oCAIb,MAEJ,KAAK3wD,EAAUyhB,OACX1a,KAAK0a,OAAO7V,EAAM07C,GAClB,MACJ,KAAKtnD,EAAUmsB,qBACXm7B,EAAMxoC,OAAOmyC,EAAW,EAAIrlD,EAAK6hB,UACjC,MACJ,KAAKztB,EAAUmuB,eACXpnB,KAAKyiF,YAAYl+E,KAAKvE,KAAK4kF,mBAC3B5kF,KAAK4kF,kBAAoB16B,EAAW,EACpC,IAAK,IAAI,EAAI,EAAG,EAAIrlD,EAAKwiB,yBAA0B,IAC/Ck5B,EAAMh8C,KAAK,MAEf,MACJ,KAAKtL,EAAU+mB,gBACXugC,EAAMxoC,OAAOuK,GACbtiB,KAAK4kF,kBAAoB5kF,KAAKyiF,YAAYnuE,MAC1C,MACJ,KAAKrb,EAAUkwB,UAGXjxB,EAAQ,CACJA,MAHS,IAAI,EAAc2M,EAAKzB,OAIhChD,KAAMyE,EAAKzB,OAGfm9C,EAAMh8C,KAAKrM,GACP2M,EAAK8qB,4BACL4wB,EAAMh8C,KAAKrM,GACXgyD,KAKJ,IAFA,IAAIhnD,EAAe2B,EAAKzB,MAER,MAATF,GAAe,CAClB,IAAIklF,EAAMllF,EAAM2D,+BACZuhF,EAAIxjF,WAAW5C,OAAS,IAExBhC,KAAKyiF,YAAYl+E,KAAKvE,KAAK4kF,mBAC3B5kF,KAAK+J,aAAaxF,KAAK,CACnB9C,QAASzB,KAAK+e,eACd/U,gBAAiBhK,KAAK8pD,uBAAyB,EAC/C7/C,aAAcpF,EAAKL,SACnB9C,OAAQ1B,KAAKsI,cACb8B,oBAAqBpK,KAAKglF,2BAC1B36E,oBAAqB,OAGzBrK,KAAKglF,2BAA6B,KAClChlF,KAAK4kF,kBAAoB16B,EAAW,EAEpClqD,KAAK+e,eAAiBqpE,EACtBpoF,KAAK8pD,wBAA0B,EAC/B9pD,KAAKsI,cAAgB,mBAAqBpF,EAAM/J,WAChD6G,KAAK8iF,uBAEL9iF,KAAKgjF,4BAA6B,GAGtC9/E,EAAQA,EAAMY,UAKlB,MACJ,KAAK7K,EAAUq3B,gCAEX,IAAIb,GADJv3B,EAAQqoD,EAAM2J,IACe9pD,KAFjC,uBAGI,YAAgBqvB,EAAUY,8BAA1B,gDACIg4D,EADqD,SACjDnwF,EAAMA,OAJlB,kFAMI,MACJ,KAAKe,EAAU41B,oBACX0xB,EAAM17C,EAAKoqB,kBAAoB3M,GAAmB,CAC9CliB,KAAMgP,GACNlX,MAAO,GAEX,MACJ,KAAKe,EAAUm2B,yCACX,IAAIk5D,GAAkB/nC,EAAM17C,EAAKoqB,kBAAoB3M,GAAiBpqB,QAClEi2B,GAAaoyB,EAAM17C,EAAKiqB,qBAAuBxM,GAAiBpqB,MAEpE,OAAQ2M,EAAK6D,MACT,IAAK,QACG4/E,GAAkBn6D,GAAYnsB,QAC9Bu+C,EAAM17C,EAAKkqB,kBAAoBzM,GAAiBpqB,MAAgBi2B,GAAYm6D,IAASpwF,MACrFqoD,EAAM17C,EAAKkqB,kBAAoBzM,GAAiBliB,KAAe+tB,GAAYm6D,IAASloF,MAEpFJ,KAAK8pD,uBAAyBjlD,EAAKc,YAAc,EAErD,MACJ,IAAK,eACD,IAAI4iF,GAA2Cp6D,GAAYhrB,cAAZ,WAAyCgkC,WACpFmhD,GAAUC,GAAKvmF,QACfu+C,EAAM17C,EAAKkqB,kBAAoBzM,GAAiBpqB,MAAQqwF,GAAKD,IAASpwF,MACtEqoD,EAAM17C,EAAKkqB,kBAAoBzM,GAAiBliB,KAAOmoF,GAAKD,IAASloF,MAErEJ,KAAK8pD,uBAAyBjlD,EAAKc,YAAc,EAErD,MACJ,IAAK,QACD,IAAI6iF,GAA6Cr6D,GAAYhrB,cAAZ,MAAoCslF,OACjFH,GAAUE,GAAMxmF,QAChBu+C,EAAM17C,EAAKkqB,kBAAoBzM,GAAiBpqB,MAAQswF,GAAMF,IAC9D/nC,EAAM17C,EAAKkqB,kBAAoBzM,GAAiBliB,KAAOooF,GAAMF,IAASplF,OAEtElD,KAAK8pD,uBAAyBjlD,EAAKc,YAAc,EAI7D,MACJ,KAAK1M,EAAU6vB,0BACX5wB,EAAQqoD,EAAM2J,IACRhyD,OAAS2M,EAAKwsB,qBACpB,MACJ,KAAKp4B,EAAU8vB,wBACX7wB,EAAQqoD,EAAM2J,GAEd3J,EAAM2J,GAAY,CACdhyD,MAAOA,EAAMA,MACbkI,KAAMlI,EAAMkI,MAGhBlI,EAAMA,OAAS2M,EAAKwsB,qBACpB,MACJ,KAAKp4B,EAAU8tB,WACX/mB,KAAK8pD,uBAAyBjlD,EAAKc,YAAc,EACjD,MACJ,KAAK1M,EAAUwuB,YACXvvB,EAAQqoD,EAAMjsC,OACKpc,QACf8H,KAAK8pD,uBAAyBjlD,EAAKc,YAAc,GAErD,MACJ,KAAK1M,EAAUyuB,aACXxvB,EAAQqoD,EAAMjsC,OACOpc,QACjB8H,KAAK8pD,uBAAyBjlD,EAAKc,YAAc,GAErD,MACJ,KAAK1M,EAAU2uB,2BACX1vB,EAAQqoD,EAAM2J,IACKhyD,QACf8H,KAAK8pD,uBAAyBjlD,EAAKc,YAAc,GAErD,MACJ,KAAK1M,EAAU0uB,4BACXzvB,EAAQqoD,EAAM2J,IACOhyD,QACjB8H,KAAK8pD,uBAAyBjlD,EAAKc,YAAc,GAErD,MACJ,KAAK1M,EAAUuM,KACX,MACJ,KAAKvM,EAAUuoB,WAEX,GAAIxhB,KAAK+J,aAAa/H,OAAS,EAAG,CAC9BhC,KAAK+kF,aACL/kF,KAAK8pD,yBACL9pD,KAAKgjF,4BAA6B,EAClChjF,KAAK+iF,WAAa,EAEdl+E,EAAK2gB,uBACLxlB,KAAK8iF,sBAAwB,GAGjC,MAGJ,GAAyB,MAApB9iF,KAAKo5E,aAAuBp5E,KAAKo5E,YAAYsP,aAAyC,MAAzB1oF,KAAK2mF,kBAC3B,MAApC3mF,KAAK4mF,6BAAuC5mF,KAAK4mF,4BAA4B+B,uBAAyB,CAC1G3oF,KAAK8pD,yBACL,MAKJ,GAFiB9pD,KAAK20B,KAAK2R,sBAAsB9nB,YAAYoqE,UAAU,eACnBvqE,UAAUC,QAAQ,SACvDuqE,aAAa7mF,OAAS,EAAG,CACpChC,KAAK8pD,yBACL,MAoBJ,GAjBA9pD,KAAKiqD,SAAS5I,GAAiBplB,MAC/Bj8B,KAAK+e,eAAiB,KACtB/e,KAAK8pD,wBAA0B,EAC/B9pD,KAAKgjF,4BAA6B,EAElC,GAAO35B,WAAW,qBAAsBrpD,KAAK20B,MAE7C30B,KAAKksC,aAAa48C,iBAEM,MAApB9oF,KAAKo5E,cACLp5E,KAAKo5E,YAAY2N,iBAAmB,IAER,QAAhC,EAAA/mF,KAAK4mF,mCAA2B,SAAEC,eAClC7mF,KAAK4mF,4BAA8B,KAEnC5mF,KAAK20B,KAAK0qD,6BAENr/E,KAAK0yE,MAAQ,EAAG,CAChB,IAAItsC,GAAKvB,YAAYC,MAAQ9kC,KAAK6iF,uBAC9Bp2E,GAAU,YAAczM,KAAK0yE,MAAQ,aAAe1yE,KAAKqmC,MAAMD,IAC7D,QAAUpmC,KAAKqmC,MAAMrmC,KAAK0yE,MAAQtsC,GAAK,KAAQ,YACpB,QAAjC,EAAwB,QAAxB,EAAApmC,KAAK20B,KAAK0Q,sBAAc,eAAEuD,eAAO,SAAEuhB,kBAAkB19C,GAAS,MAG9DzM,KAAK0yE,OAAS,EAElB1yE,KAAK8pD,yBACL,MACJ,KAAK7wD,EAAU0xB,MACf,KAAK1xB,EAAU2xB,QACX,IAAIhV,GAAO,KACPkV,GAAQ,KACRjmB,EAAKgmB,YAAWC,GAAyBy1B,EAAMjsC,MAAMpc,OACpD2M,EAAKkmB,QAAOnV,GAAe2qC,EAAMjsC,MAAMpc,OACxC2M,EAAKzE,MAAQnH,EAAU2xB,QACvB5qB,KAAKksC,aAAathB,QAAQhV,GAAMkV,IAEhC9qB,KAAKksC,aAAavhB,MAAM/U,GAAMkV,IAElC,MACJ,KAAK7xB,EAAUkyB,eAEX,IADA,IAAI49D,GAAmB,GACd,GAAI,EAAG,GAAIlkF,EAAKmmB,UAAW,KAChC+9D,GAAOxkF,KAAag8C,EAAMjsC,MAAMpc,OAEpCqoD,EAAMh8C,KAAKvE,KAAKgpF,eAAeD,GAAQlkF,EAAKumB,YAC5C,MACJ,KAAKnyB,EAAUqyB,WACXi1B,EAAMh8C,KAAK,CACPnE,KAAMyE,EAAKumB,UACXlzB,MAAO,KAEX,MACJ,KAAKe,EAAUyyB,WACXw+B,GAAYrlD,EAAK8mB,sBAEjB,IAAI9Y,GAAkB0tC,EAAMxoC,OAAOmyC,EAAW,EAAGrlD,EAAK8mB,uBAAuB5oB,KAAI,SAAAkmF,GAAG,MAAK,CAAE7oF,KAAM6oF,EAAI7oF,KAAMlI,MAAO+wF,EAAI/wF,UACtHqoD,EAAM2J,GAAUhyD,MAAgBqoD,EAAM2J,GAAUhyD,MAAOgQ,OAAO2K,IAC9D,MACJ,KAAK5Z,EAAUmoB,cACX,IAAIlD,GAAWrZ,EAAK2b,UAAUhD,oBAAoB3Y,EAAKoZ,iBACvDsiC,EAAMh8C,KAAKM,EAAK2b,UAAU9C,UAAUxlB,MAAMgmB,GAASL,UACnD,MACJ,KAAK5kB,EAAU4B,cACX,IAAIquF,GAAc3oC,EAAMjsC,MAAMpc,MAC1ByN,GAAcd,EAAKkB,eAAemjF,IACnB,MAAfvjF,GACA3F,KAAK8pD,uBAAyBnkD,GAAc,EAEb,MAA3Bd,EAAKoB,qBACLjG,KAAK8pD,uBAAyBjlD,EAAKoB,mBAAqB,GAKhE,MACJ,KAAKhN,EAAU+yB,wBAEX,IAAInoB,GAAIgB,EAAK0X,SACbvc,KAAK0e,KAAK7a,GAAE1K,YAAc0K,GAC1BA,GAAE3L,MAAQ,CACNkI,KAAMyD,GAAEzD,KACRlI,MAAQ2L,GAAEzD,gBAAgBH,EAAiB4D,GAAEzD,KAAKF,aAAe,MAEjE2E,EAAKonB,mCACLjsB,KAAKugD,MAAMh8C,KAAKV,GAAE3L,OAGtB,MACJ,KAAKe,EAAUw4B,oBACX,IAAIphB,GAAKrQ,KAAK0e,KAAK7Z,EAAK1L,YACxB,GAAU,MAANkX,GAGA,MAAO,gBAAkBxL,EAAK1L,WAAa,sBAF3C6G,KAAKugD,MAAMh8C,KAAK8L,GAAGnY,OAIvB,MACJ,KAAKe,EAAUgrB,kBACX,IAAIklE,GAAoCnpF,KAAKugD,MAAMj+B,GAAiBpqB,MAC1C,MAAtBixF,IAE4B,GADhBA,GAAmBhmF,cAAnB,MACH,aACLnD,KAAK0a,OAAO,KAAM6lC,GAQlCvgD,KAAK8pD,2BAl1Cb,6BAq1CWjlD,EAA8B07C,GAEjC,IAAIykC,EAA6BhlF,KAAKglF,2BAEtC,GAAY,MAARngF,GAAgBA,EAAK+b,gCAAiC,CACtD,IAAImnE,EAAqBxnC,EAAMjsC,MAC/BisC,EAAMvgD,KAAK4kF,mBAAqBmD,EAChCxnC,EAAMxoC,OAAO/X,KAAK4kF,kBAAoB,QAEtCrkC,EAAMxoC,OAAO/X,KAAK4kF,mBAA8B,MAAR//E,GAAgBA,EAAKgc,uBAA0B,EAAI,IAG/F7gB,KAAK4kF,kBAAoB5kF,KAAKyiF,YAAYnuE,MAE1CtU,KAAK+kF,aACO,MAARlgF,GAA0C,GAA1BA,EAAKujC,mBAA2BpoC,KAAK8pD,yBACzD9pD,KAAK8pD,yBACL9pD,KAAK8iF,uBAE6B,MAA9BkC,GACAA,EAA2BhlF,QAz2CvC,qCA+2CmB+oF,EAAkB3oF,GAC7B,IAAIghC,EAAoBhhC,EAAMmC,YAC9B,GAAqB,GAAjBwmF,EAAO/mF,OAAa,CAEpB,IADA,IAAIwN,EAAiB,GACZvY,EAAI,EAAGA,EAAI8xF,EAAO,GAAI9xF,IAAK,CAChC,IAAI4M,EAAI,CACJzD,KAAMghC,EACNlpC,MAAO,MAGPkpC,aAAiBnhC,IACjB4D,EAAE3L,MAAQkpC,EAAMlhC,cAGpBsP,EAAMjL,KAAKV,GAGf,MAAO,CACHzD,KAAMA,EACNlI,MAAOsX,GAKX,IAFA,IAAI,EAAiB,GACjB9W,EAAIqwF,EAAOz0E,MACN,EAAI,EAAG,EAAI5b,EAAG,IACnB,EAAM6L,KAAKvE,KAAKgpF,eAAeD,EAAQ3nD,IAE3C,MAAO,CACHhhC,KAAMA,EACNlI,MAAO,KA54CvB,4BAk5CUQ,GACF,MAAO,GAAK4T,KAAK+5B,MAAU,IAAJ3tC,GAAa,MAn5C5C,+BAw5Ca0oD,G,MAID8mC,EAAWloF,KAAKohD,MACpBphD,KAAKohD,MAAQA,EAETA,GAASC,GAAiBt1C,OAASq1C,GAASC,GAAiBplB,OAC7Dj8B,KAAKmjF,kCAAkCpxE,SAAQ,SAAAq3E,GAAM,OAAIA,EAAOnuC,WAChEj7C,KAAKmjF,kCAAoC,IAG7C,IAAI5F,EAAKv9E,KAAK20B,KAAKqlC,mBAZS,uBAc5B,YAAqBh6D,KAAKgkD,QAA1B,+CAAmC,KAA1BqlC,EAA0B,QAC/B9L,EAAG+L,UAAU,eAAiBD,EAAUrpF,KAAKqkE,mBAAmBglB,GAAUjoC,KAflD,kFAkBJphD,KAAKqkE,mBAAL,MAAiCjjB,IAGrDphD,KAAK+hF,eAAexd,aAAat5B,OACjCjrC,KAAK+hF,eAAevd,aAAap5B,SAEjCprC,KAAK+hF,eAAexd,aAAan5B,OACjCprC,KAAK+hF,eAAevd,aAAav5B,QAGdjrC,KAAKqkE,mBAAL,KAAgCjjB,KAK3B,MAApBphD,KAAKo5E,aACLp5E,KAAKo5E,YAAYmQ,kBAEW,QAAhC,EAAAvpF,KAAK4mF,mCAA2B,SAAEC,eAClC7mF,KAAK4mF,4BAA8B,MAGnC5mF,KAAKwjF,cAAcp+E,QAAQ8iF,IAAa,GAAKloF,KAAKwjF,cAAcp+E,QAAQg8C,GAAS,IACjFphD,KAAKm/E,SAASqK,UAEdxpF,KAAK0jF,aAAa+F,2BAGlBzpF,KAAKwjF,cAAcp+E,QAAQ8iF,GAAY,GAAKloF,KAAKwjF,cAAcp+E,QAAQg8C,IAAU,GACjFphD,KAAKm/E,SAASuK,WAv8C1B,2CA+8CQ,GAA2B,MAAvB1pF,KAAK+e,eAAT,CAEA,IAAI9U,EACAs8E,EAAmBvmF,KAAK+e,eAAena,WAAW5E,KAAK8pD,wBACnC,MAApBy8B,IACAt8E,EAAes8E,EAAiB/hF,UAGpCxE,KAAK+J,aAAaxF,KAAK,CACnB9C,QAASzB,KAAK+e,eACd/U,gBAAiBhK,KAAK8pD,uBACtB7/C,aAAcA,EACdvI,OAAQ1B,KAAKsI,cACb8B,oBAAqBpK,KAAKglF,2BAC1B36E,oBAAqBrK,KAAKilF,6BAG9BjlF,KAAKglF,2BAA6B,KAClChlF,KAAKilF,2BAA6B,QAj+C1C,+BA+/CavjF,EAAgBioF,EACrBv/E,EAAyDw/E,GAEzD,GAAI5pF,KAAKohD,OAASC,GAAiBgD,QAAnC,CAIA,IAAIz/C,EAAalD,EAAOD,QAAQmD,WAE5BglF,GAAuC,GAA5B5pF,KAAK+J,aAAa/H,QAE7BhC,KAAK6pD,qBAEL7pD,KAAK+e,eAAiBrd,EAAOD,QAC7BzB,KAAKsI,cAAgB5G,EACrB1B,KAAK8pD,uBAAyB,EAC9B9pD,KAAKglF,2BAA6B56E,EAClCpK,KAAKilF,2BAA6B,QAElCjlF,KAAKyiF,YAAYl+E,KAAKvE,KAAK4kF,mBAC3B5kF,KAAK4kF,kBAAoB5kF,KAAKugD,MAAMv+C,OACpChC,KAAKugD,MAAQvgD,KAAKugD,MAAMr4C,OAAOyhF,GAK3B/kF,EAAWA,EAAW5C,OAAS,GAAG5B,MAAQnH,EAAUyhB,QAAQ1a,KAAK8iF,yBAMrE9iF,KAAK+J,aAAagO,OAAO,EAAG,EAAG,CAC3BtW,QAASC,EAAOD,QAChBuI,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GAC5CN,OAAQA,EACR0I,oBAAqBA,EACrBC,oBAAqB,QACrB66E,wCAAyCyE,IAGzC/kF,EAAWA,EAAW5C,OAAS,GAAG5B,MAAQnH,EAAUyhB,QAAQ1a,KAAK8iF,2BAziDjF,+BAgjDarhF,GAELzB,KAAK6pD,qBAEL7pD,KAAK+e,eAAiBtd,EACtBzB,KAAK8pD,uBAAyB,EAE9B,IAQI/9C,EAqBAm+C,EA7BAH,EAAkB/pD,KAAKugD,MAAMv+C,OAE7BgoD,EAAsBhqD,KAAKohD,MAC3B0hC,EAAuB9iF,KAAK8iF,qBAC5BE,EAA6BhjF,KAAKgjF,2BAKlC6G,GAHgB7pF,KAAK4kF,kBAGT,GAEhB,IACI,KAAgB,MAAT74E,IACF/L,KAAK+e,gBAAkBtd,GAAWzB,KAAK8pD,uBACpC9pD,KAAK+e,eAAena,WAAW5C,SAChC6nF,EAAY,KAGf99E,EAAQ/L,KAAKimF,WACb4D,IAEN,MAAOpyE,GACL1L,EAAQ,4BAQZ,GALI/L,KAAK+e,gBAAkBtd,GAAWzB,KAAK+J,aAAa/H,OAAS,GAC7DhC,KAAK+kF,aAIL/kF,KAAKugD,MAAMv+C,OAAS+nD,EAGpB,IAFAG,EAAWlqD,KAAKugD,MAAMjsC,MAEftU,KAAKugD,MAAMv+C,OAAS+nD,GACvB/pD,KAAKugD,MAAMjsC,MASnB,OAJAtU,KAAK8iF,qBAAuBA,EAC5B9iF,KAAKgjF,2BAA6BA,EAClChjF,KAAKiqD,SAASD,GAEP,CACHj+C,MAAOA,EACP7T,MAAOgyD,KApmDnB,wDAymDsCzoD,EAAkBqoF,GAEhD9pF,KAAK6pD,qBAEL7pD,KAAK+e,eAAiBtd,EACtB,IAAIsoF,EAAqB/pF,KAAK8pD,uBAC9B9pD,KAAK8pD,uBAAyB,EAE9B,IAAIkgC,EAA4BhqF,KAAKyiF,YAAYzgF,OACjDhC,KAAKyiF,YAAYl+E,KAAKvE,KAAK4kF,mBAC3B,IAAI76B,EAAkB/pD,KAAKugD,MAAMv+C,OACjChC,KAAK4kF,kBAAoB76B,EAX2D,2BAapF,YAAc+/B,EAAd,oDAASjmF,EAAT,QAA2C7D,KAAKugD,MAAMh8C,KAAKV,IAbyB,kFAepF,IAuBIqmD,EAvBAF,EAAsBhqD,KAAKohD,MAC3B0hC,EAAuB9iF,KAAK8iF,qBAC5BE,EAA6BhjF,KAAKgjF,2BAGlC6G,EAAY,EACZ99E,EAAQ,KAEZ,IACI,KAAO/L,KAAKyiF,YAAYzgF,OAASgoF,GAC1BH,EAAY,KAAmB,MAAT99E,GAC3B,CACE,IAAIlH,EAAO7E,KAAK+e,eAAena,WAAW5E,KAAK8pD,wBAE/C/9C,EAAQ/L,KAAKonF,YAAYviF,GACzBglF,KAEN,MAAOpyE,GACL1L,EAAQ,4BAMZ,GAHiB,KAAb89E,GAAqB7pF,KAAKknC,eAAe,qDAGzClnC,KAAKugD,MAAMv+C,OAAS+nD,EAGpB,IAFAG,EAAWlqD,KAAKugD,MAAMjsC,MAEftU,KAAKugD,MAAMv+C,OAAS+nD,GACvB/pD,KAAKugD,MAAMjsC,MAYnB,OAPAtU,KAAK8iF,qBAAuBA,EAC5B9iF,KAAKgjF,2BAA6BA,EAGlChjF,KAAK8pD,uBAAyBigC,EAC9B/pF,KAAKiqD,SAASD,GAEP,CACHj+C,MAAOA,EACP7T,MAAOgyD,KAlqDnB,mDAuqDiChnD,GAUzB,IATA,IAAIvK,EAAS,IAAI,EAAcuK,GAE3BhL,EAAQ,CACRA,MAAOS,EACPyH,KAAM8C,GAGNs6B,EAASt6B,EAEI,MAAVs6B,GAAgB,CACnB,IAAI4qD,EAAM5qD,EAAO32B,+BACbuhF,EAAIxjF,WAAW5C,OAAS,GAExBhC,KAAKiqF,kCAAkC7B,EAAK,CAAClwF,IAGjDslC,EAASA,EAAO15B,UAGpB,IAAIomF,EAAchnF,EAAM+iB,qBAAqB/iB,EAAM/J,WAAa,MAUhE,OATmB,MAAf+wF,GAA8C,MAAvBA,EAAYzoF,SAMnCzB,KAAKiqF,kCAAkCC,EAAYzoF,QAAS,CAACvJ,IAG1DS,O,6BArsDf,K,uKCxCO,IAAMwxF,GAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,wCA0J4Br/D,GACpB,GAAY,MAATA,EACC,MAAO,MAGP,IADA,IAAI9xB,EAAY8xB,EAAMta,SAAS,IACxBxX,EAAEgJ,OAAS,GAAGhJ,EAAI,IAAMA,EAC/B,MAAO,IAAMA,IAhKzB,oCAoKyB8xB,GACjB,OAAY,MAATA,EAAuB,MAClB,SAAmB,SAARA,IAAqB,IAAM,OAAiB,MAARA,IAAmB,GAAK,MAAgB,IAARA,GAAgB,MAtK/G,yCAyK8BA,GAEtB,GAAY,MAATA,EACC,MAAO,CACHA,MAAO,KACPs/D,MAAO,GAIf,IAAI9yF,EAAI0I,KAAKqqF,iBAAiBv/D,GAC9B,GAAS,MAALxzB,EAAW,MAAO,CAAEwzB,MAAOxzB,EAAG8yF,MAAO,GAIzC,IAAI/6B,EAAKvkC,EAAMzZ,MAAM,qBACrB,GAAIg+C,GAAMA,EAAGrtD,OAAS,EAAG,CACrB,IAAI3K,EAAIg4D,EAAG,GACX,GAAIh4D,EACA,MAAO,CACHyzB,MAAO,MAAU3a,SAAS9Y,EAAE4gB,OAAO,EAAG,GAAI,IAAM,IAAQ9H,SAAS9Y,EAAE4gB,OAAO,EAAG,GAAI,IAAM9H,SAAS9Y,EAAE4gB,OAAO,EAAG,GAAI,IAChHmyE,MAAO,GAKnB,IAAIE,EAAKx/D,EAAMzZ,MAAM,qBACrB,GAAIi5E,GAAMA,EAAGtoF,OAAS,EAAE,CACpB,IAAI,EAAIsoF,EAAG,GACX,GAAI,EACA,MAAO,CACHx/D,MAAO,MAAU3a,SAAS,EAAE8H,OAAO,EAAG,GAAI,IAAM,IAAQ9H,SAAS,EAAE8H,OAAO,EAAG,GAAI,IAAM9H,SAAS,EAAE8H,OAAO,EAAG,GAAI,IAChHmyE,MAAOj6E,SAAS,EAAE8H,OAAO,EAAG,GAAI,IAAM,KAKlD,IAAIirB,EAAKpY,EAAMzZ,MAAM,oDACrB,OAAI6xB,EACO,CACHpY,MAAyB,MAAlB3a,SAAS+yB,EAAG,IAAkC,IAAlB/yB,SAAS+yB,EAAG,IAAc/yB,SAAS+yB,EAAG,IACzEknD,MAAO,IAIflnD,EAAKpY,EAAMzZ,MAAM,wEAEN,CACHyZ,MAAyB,MAAlB3a,SAAS+yB,EAAG,IAAkC,IAAlB/yB,SAAS+yB,EAAG,IAAc/yB,SAAS+yB,EAAG,IACzEknD,MAAOt5E,WAAWoyB,EAAG,KAItB,CAAEpY,MAAO,SAAUs/D,MAAO,O,EA7NzC,O,6BAAA,K,28BAEW,GAAAC,iBAAmB,CACtB,UAAa,SACb,aAAgB,SAChB,KAAQ,MACR,WAAc,QACd,MAAS,SACT,MAAS,SACT,OAAU,SACV,MAAS,EACT,eAAkB,SAClB,KAAQ,IACR,WAAc,QACd,MAAS,SACT,UAAa,SACb,UAAa,QACb,WAAc,QACd,UAAa,SACb,MAAS,SACT,eAAkB,QAClB,SAAY,SACZ,QAAW,SACX,KAAQ,MACR,SAAY,IACZ,SAAY,MACZ,cAAiB,SACjB,SAAY,SACZ,SAAY,SACZ,UAAa,MACb,UAAa,SACb,YAAe,QACf,eAAkB,QAClB,WAAc,SACd,WAAc,SACd,QAAW,QACX,WAAc,SACd,aAAgB,QAChB,cAAiB,QACjB,cAAiB,QACjB,cAAiB,QACjB,cAAiB,MACjB,WAAc,QACd,SAAY,SACZ,YAAe,MACf,QAAW,QACX,QAAW,QACX,WAAc,QACd,UAAa,SACb,YAAe,SACf,YAAe,QACf,QAAW,SACX,UAAa,SACb,WAAc,SACd,KAAQ,SACR,UAAa,SACb,KAAQ,QACR,KAAQ,QACR,MAAS,MACT,YAAe,SACf,SAAY,SACZ,QAAW,SACX,UAAa,SACb,OAAU,QACV,MAAS,SACT,MAAS,SACT,SAAY,SACZ,cAAiB,SACjB,UAAa,QACb,aAAgB,SAChB,UAAa,SACb,WAAc,SACd,UAAa,SACb,qBAAwB,SACxB,UAAa,SACb,UAAa,SACb,WAAc,QACd,UAAa,SACb,YAAe,SACf,cAAiB,QACjB,aAAgB,QAChB,eAAkB,QAClB,eAAkB,QAClB,eAAkB,SAClB,YAAe,SACf,KAAQ,MACR,UAAa,QACb,MAAS,SACT,QAAW,SACX,OAAU,QACV,iBAAoB,QACpB,WAAc,IACd,aAAgB,SAChB,aAAgB,QAChB,eAAkB,QAClB,gBAAmB,QACnB,kBAAqB,MACrB,gBAAmB,QACnB,gBAAmB,SACnB,aAAgB,QAChB,UAAa,SACb,UAAa,SACb,SAAY,SACZ,YAAe,SACf,KAAQ,IACR,QAAW,SACX,MAAS,QACT,UAAa,QACb,OAAU,SACV,UAAa,SACb,OAAU,SACV,cAAiB,SACjB,UAAa,SACb,cAAiB,SACjB,cAAiB,SACjB,WAAc,SACd,UAAa,SACb,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,WAAc,SACd,OAAU,QACV,cAAiB,QACjB,IAAO,SACP,UAAa,SACb,UAAa,QACb,YAAe,QACf,OAAU,SACV,WAAc,SACd,KAAQ,SACR,SAAY,QACZ,SAAY,SACZ,OAAU,SACV,OAAU,SACV,QAAW,QACX,UAAa,QACb,UAAa,QACb,UAAa,QACb,KAAQ,SACR,YAAe,MACf,UAAa,QACb,IAAO,SACP,KAAQ,MACR,QAAW,SACX,OAAU,SACV,UAAa,QACb,OAAU,SACV,MAAS,SACT,MAAS,SACT,WAAc,SACd,OAAU,SACV,YAAe,UCxIhB,IAAM,GAAb,YAEI,WAAmBrzF,GAAc,kBAE7B,0BAAM,QAASA,EAAQ,mDAFRA,SAIf,EAAKonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,IAAIisE,EAAwBvzF,EAAOqnB,UAAUC,QAAQ,SACjDksE,EAA4CxzF,EAAOqnB,UAAUC,QAAQ,iBAP5C,OAW7B,EAAKhU,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCuyF,EAAiB5oF,EAAW,GAAG3J,MAC/BwyF,EAAe7oF,EAAW,GAAG3J,MAC7ByyF,EAAkB,EAAKC,eAAelzF,EAAG+yF,EAAQC,GACrDhzF,EAAEyL,cAAF,MAA2BwnF,KAE5B,GAAO,EAAO,+CAA+C,IAEpE,EAAKrgF,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCyyF,EAAkB,EAAKC,eAAelzF,GAC1CA,EAAEyL,cAAF,MAA2BwnF,KAE5B,GAAO,EAAO,sIAAsI,IAE3J,EAAKrgF,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,CAC9D,CAAE1J,WAAY,oBAAqBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChHgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MACZR,EAAEyL,cAAF,MAEnB0nF,mBAAmB//D,MAEvB,GAAO,EAAO,oOAAoO,IAEzP,EAAKxgB,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yF,EAAkBpzF,EAAEyL,cAAF,MAElB4nF,GAAS,IAAIhL,KAAKiL,QAASC,SAASH,EAAGI,MAAM7K,gBACjDyK,EAAGI,MAAM7K,eAAe8K,WACxBL,EAAGI,MAAM7K,eAAe+K,UAAUz0C,EAAEC,GACpCk0C,EAAGI,MAAM7K,eAAe5lC,QAAQswC,GAKhCD,EAAGI,MAAMhf,UAAUmf,WACnBP,EAAGQ,4BAEJ,GAAO,EAAO,uEAAuE,IAE5F,EAAKhhF,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACzG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC06E,EAAgB/wE,EAAW,GAAG3J,MAC9By+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yF,EAAkBpzF,EAAEyL,cAAF,MAElB4nF,GAAS,IAAIhL,KAAKiL,QAASC,SAASH,EAAGI,MAAM7K,gBACjDyK,EAAGI,MAAM7K,eAAe8K,WACxBL,EAAGI,MAAM7K,eAAe+K,WAAWz0C,GAAIC,GACvCk0C,EAAGI,MAAM7K,eAAekL,QAAQ3Y,EAAQ,IAAMtmE,KAAKumE,IACnDiY,EAAGI,MAAM7K,eAAe+K,UAAUz0C,EAAGC,GACrCk0C,EAAGI,MAAM7K,eAAe5lC,QAAQswC,GAOhCD,EAAGI,MAAMhf,UAAUmf,WACnBP,EAAGQ,4BAEJ,GAAO,EAAO,8FAA8F,IAEnH,EAAKhhF,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4lE,EAAiBj8D,EAAW,GAAG3J,MAC/By+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yF,EAAkBpzF,EAAEyL,cAAF,MAGlB4nF,GAAS,IAAIhL,KAAKiL,QAASC,SAASH,EAAGI,MAAM7K,gBACjDyK,EAAGI,MAAM7K,eAAe8K,WACxBL,EAAGI,MAAM7K,eAAe+K,WAAWz0C,GAAIC,GACvCk0C,EAAGI,MAAM7K,eAAemL,MAAM1tB,EAAQA,GACtCgtB,EAAGI,MAAM7K,eAAe+K,UAAUz0C,EAAGC,GACrCk0C,EAAGI,MAAM7K,eAAe5lC,QAAQswC,GAOhCD,EAAGI,MAAMhf,UAAUmf,WACnBP,EAAGQ,4BAEJ,GAAO,EAAO,gFAAgF,IAErG,EAAKhhF,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,CAC/D,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACnG,CAAE3H,WAAY,MAAOiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC6/B,EAAel2B,EAAW,GAAG3J,MAC7Bk/C,EAAcv1C,EAAW,GAAG3J,MAC5Bi+C,EAAgBt0C,EAAW,GAAG3J,MAC9Bk+C,EAAiBv0C,EAAW,GAAG3J,MAC/B4yF,EAAkBpzF,EAAEyL,cAAF,MAEtB2nF,EAAGI,MAAM7K,eAAe8K,WACxBL,EAAGI,MAAM7K,eAAe+K,WAAWrzD,GAAOqf,GAC1C0zC,EAAGI,MAAM7K,eAAemL,MAAMV,EAAGW,aAAat1C,EAAO20C,EAAGY,cAAct1C,GAItE00C,EAAGI,MAAMhf,UAAUmf,WACnBP,EAAGQ,4BAEJ,GAAO,EAAO,gFAAgF,IAGrG,EAAKhhF,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,CAC3D,CAAE1J,WAAY,QAASiH,KAAMmqF,EAAWr6E,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1FgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCyzF,EAAuB9pF,EAAW,GAAG3J,MACnBR,EAAEyL,cAAF,MAEnByoF,aAAwB,MAATD,EAAgB,KAAOA,EAAMxoF,cAAN,SAE1C,GAAO,EAAO,sLAAsL,IAE3M,EAAKmH,UAAU,IAAIvJ,EAAO,mBAAoB,IAAI8B,EAAc,CAC5D,CAAE1J,WAAY,WAAYiH,KAAMoqF,EAAmBt6E,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+mF,EAA0Bp9E,EAAW,GAAG3J,MACtBR,EAAEyL,cAAF,MAEnB0oF,iBAAiB5M,MAErB,GAAO,EAAO,gGAAgG,IAGrH,EAAK30E,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDuM,IACA,SAACvN,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,OAAOmJ,KAAK+5B,MAAMykD,EAAG30C,UAEtB,GAAO,EAAO,2FAA2F,IAEhH,EAAK7rC,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDuM,IACA,SAACvN,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,OAAOmJ,KAAK+5B,MAAMykD,EAAG10C,WAEtB,GAAO,EAAO,yFAAyF,IAE9G,EAAK9rC,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,SAAUiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACbiL,cAAF,MAClB2oF,EAAiBjqF,EAAW,GAAG3J,MAEnC4yF,EAAGiB,UAAUD,MAEd,GAAO,EAAO,yIAAyI,IA5NjI,EAFrC,O,mOAAA,iDAmOmBE,GAAoE,I,QAAxCvB,EAAwC,uDAAvB,IAAKC,EAAkB,uDAAH,IAExEI,EAAsC,QAApC,EAAoB,QAApB,EAAc,QAAd,EAAG9qF,KAAKhJ,cAAM,eAAE29B,YAAI,eAAE6N,wBAAc,eAAI42C,YAG9C,GAAU,MAAN0R,EAAY,CAEZ,GAAIA,EAAG30C,OAASs0C,GAAUK,EAAG10C,QAAUs0C,EAAM,CAEzC,IAAIuB,EAAgB3/E,KAAK+5B,MAAMqkD,EAAOD,EAAS,KAC/CK,EAAGoB,gBAAgBt9C,IAAI,iBAAkBq9C,EAAQ,KAEjDnB,EAAGI,MAAM7K,eAAemL,MAAMV,EAAG30C,MAAQs0C,EAAQK,EAAG10C,OAASs0C,GAC7DI,EAAG30C,MAAQs0C,EACXK,EAAG10C,OAASs0C,EAIZI,EAAGI,MAAMhf,UAAUmf,WAEW,QAA9B,EAAArrF,KAAKhJ,OAAO29B,KAAKw3D,qBAAa,SAAEC,qBAIpC,OAAOtB,EAGP,OAAO,IAAI,GAAYL,EAAQC,EAAM1qF,KAAKhJ,OAAQg1F,OA9P9D,GAAgC,GAuRnB,GAAb,WAyCI,WAAmB71C,EAAsBC,EAAwBp/C,EAAuBq1F,GAAoB,I,MAAA,kBAAzF,KAAAl2C,QAAsB,KAAAC,SAAwB,KAAAp/C,SAAuB,KAAAq1F,QAlCxF,KAAAC,UAAyB,GACzB,KAAAC,iBAAgC,GAChC,KAAAC,YAA2B,GAC3B,KAAAC,cAA6B,GAC7B,KAAAC,sBAAuC,GAEvC,KAAAC,oBAAgD,GAChD,KAAAC,eAAsC,GAGtC,KAAAC,gBAA0B,EAC1B,KAAAC,YAAsB,EASf,KAAAC,eAAmD,GAG1D,KAAAtE,OAAwB,GA8MxB,KAAAuE,kBAA4B,EAC5B,KAAAC,MAAgB,EAChB,KAAAC,SAAmB,EAEnB,KAAAnG,iBAAmC,GArM/BhH,KAAK3wC,SAAS+9C,WAAapN,KAAKqN,YAAYC,QAE5CrtF,KAAK0rF,cAAgBt1C,EACrBp2C,KAAKyrF,aAAet1C,EAEpBn2C,KAAKg9B,YAA+B,QAApB,EAAc,QAAd,EAAGh9B,KAAKhJ,cAAM,eAAE29B,YAAI,eAAE6N,iBAEG,MAArCxiC,KAAKg9B,YAAY2pD,kBACjB3mF,KAAKg9B,YAAYkK,eAAe,qFAGA,MAAhClnC,KAAKg9B,YAAYo8C,aACjBp5E,KAAKg9B,YAAYkK,eAAe,oDAGpClnC,KAAKg9B,YAAYo8C,YAAcp5E,KAE/BA,KAAKksF,gBAAkB1hD,OAAO,eAC9B,IAAI8iD,EAAettF,KAAKhJ,OAAO29B,KAAK6N,iBAAiB0J,aAAaqhD,iBAClEvtF,KAAKwtF,eAAiBxtF,KAAKhJ,OAAO29B,KAAKw3D,cAAczT,UAAUhoD,KAAK,mBAGpE,IAAI+iB,EAAI,WACJ,IAAIg6C,EAAWH,EAAaxiC,QAAQ,YAChC4iC,EAAmBD,EAASt3C,QAC5Bw3C,EAAoBF,EAASr3C,SAI7BA,EAASD,EAAQw3C,EAAYD,EAC7BJ,EAAa1+C,IAAI,CACb,MAASuH,EAAQC,EAASu3C,EAAY,KACtC,OAAUA,EAAY,OAG1BL,EAAa1+C,IAAI,CACb,OAAUwH,EAASD,EAAQu3C,EAAW,KACtC,MAASA,EAAW,QAKhCJ,EAAa3gD,IAAI,eACjB2gD,EAAajhD,GAAG,cAAeoH,GAE/BA,IAEAzzC,KAAK4tF,gBAAkBpjD,OAAO,eAC9BxqC,KAAKksF,gBAAgBpiD,OAAO9pC,KAAK4tF,iBAEjCN,EAAaxjD,OAAO9pC,KAAKksF,iBACzBoB,EAAariD,OAEbqiD,EAAa,GAAGO,cAAgB,SAAUp2E,GACtCA,EAAEwhC,kBAGN8mC,KAAK3wC,SAAS0+C,YAAc,IAE5B9tF,KAAK+tF,IAAM,IAAIhO,KAAKiO,YAAY,CAC5BC,WAAW,EACX93C,MAAOA,EAAOC,OAAQA,IAK1B,IAAIr4B,EAAO/d,KAGXA,KAAKkuF,eAAiB,SAACl2E,GAEnB+F,EAAKowE,KAAKpO,KAAKqO,OAAOC,OAAOC,YAGjCtuF,KAAK+tF,IAAIQ,OAAO7mD,IAAI1nC,KAAKkuF,gBACzBluF,KAAK+tF,IAAIQ,OAAOC,OAAS,GAEzBxuF,KAAKg9B,YAAY2lD,aAAc,EAE/B3iF,KAAKkrF,MAAQ,IAAInL,KAAK0O,UAEtBzuF,KAAK+tF,IAAI7C,MAAMwD,SAAS1uF,KAAKkrF,OAE7BlrF,KAAK4tF,gBAAgB9jD,OAAO9pC,KAAK+tF,IAAIY,MAQrC3uF,KAAKg9B,YAAY0mD,aAAaxB,oBAAoB39E,MAAK,SAAC/L,GAAO,2BAC3D,YAAgBulB,EAAKwuE,iBAArB,+CAAuC,KAA9BqC,EAA8B,QAEnC7wE,EAAK8wE,qBAAqBD,EAAKp2F,IAHwB,sFAQ/DwH,KAAKg9B,YAAY0mD,aAAavB,eAAe59E,MAAK,SAAC/L,GAAO,2BACtD,YAAgBulB,EAAKyuE,YAArB,+CAAkC,KAAzBoC,EAAyB,QAE9B7wE,EAAK8wE,qBAAqBD,EAAKp2F,IAHmB,sFAQ1DwH,KAAKg9B,YAAY0mD,aAAatB,iBAAiB79E,MAAK,SAAC/L,GAAO,2BACxD,YAAgBulB,EAAK0uE,cAArB,+CAAoC,KAA3BmC,EAA2B,QAEhC7wE,EAAK8wE,qBAAqBD,EAAKp2F,IAHqB,sFAS5D,IAtHwG,iBAsHnG,IAAIs2F,EAAY,KAEbC,EAAYD,EACb74C,OAAOC,eACN64C,EAAYA,EAAUjlF,QAAQ,QAAS,YAG3C,EAAK8jF,gBAAgBvhD,GAAG0iD,GAAW,SAACt3E,GAChC,IAAIk/B,EAAIR,EAAQ1+B,EAAEu3E,QAAU,EAAKpB,gBAAgBz3C,QAC7CS,EAAIR,EAAS3+B,EAAEw3E,QAAU,EAAKrB,gBAAgBx3C,SAE9Cr9C,EAAI,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC1B,EAAKs0C,MAAM7K,eAAe8O,aAAap2F,EAAGA,GAC1C49C,EAAI59C,EAAE49C,EACNC,EAAI79C,EAAE69C,EAEN74B,EAAKqxE,aAAaN,EAAcn4C,EAAGC,EAAGn/B,EAAEikC,QATH,2BAWrC,YAAqB,EAAKkxC,eAA1B,+CAA0C,KAAjC3N,EAAiC,QACF,MAAhCA,EAAStnB,MAAMm3B,IACf,EAAKO,oBAAoBpQ,EAAU6P,EAAcn4C,EAAGC,EAAGn/B,EAAEikC,SAb5B,kFAiBrC,GAAmB,aAAhBozC,EAA4B,CAC3B,IAAIQ,EAAwB,EAAKtyD,YAAY4pD,4BACjB,MAAzB0I,GACCA,EAAsBC,wBAAwB54C,EAAGC,QA3BjE,MAAyB,CAAC,UAAW,YAAa,YAAa,aAAc,cAA7E,eAA4F,IAkC5F,IAAI42C,EAAiBxtF,KAAKwtF,eAEtBx3C,EAAeC,OAAOC,aAAe,UAAY,QAErDl2C,KAAK4tF,gBAAgBvhD,GAAG2J,EAAe,QAAQ,SAACv+B,GAC5C,IAAIk/B,EAAIR,EAAQ1+B,EAAEu3E,QAAU,EAAKpB,gBAAgBz3C,QAC7CS,EAAIR,EAAS3+B,EAAEw3E,QAAU,EAAKrB,gBAAgBx3C,SAE9Cr9C,EAAI,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC1B,EAAKs0C,MAAM7K,eAAe8O,aAAap2F,EAAGA,GAC1C49C,EAAIrqC,KAAK+5B,MAAMttC,EAAE49C,GACjBC,EAAItqC,KAAK+5B,MAAMttC,EAAE69C,GACjB42C,EAAe53E,KAAf,WAAwB+gC,EAAxB,YAA6BC,EAA7B,SAGJ52C,KAAK4tF,gBAAgBvhD,GAAG2J,EAAe,SAAS,SAACv+B,GAC7C+1E,EAAeviD,UAGnBjrC,KAAK4tF,gBAAgBvhD,GAAG2J,EAAe,SAAS,SAACv+B,GAC7C+1E,EAAepiD,UAGW,QAA9B,EAAAprC,KAAKhJ,OAAO29B,KAAKw3D,qBAAa,SAAEC,qBAxNxC,qDAmCQpsF,KAAKssF,UAAY,GACjBtsF,KAAKusF,iBAAmB,GACxBvsF,KAAKwsF,YAAc,GACnBxsF,KAAKysF,cAAgB,KAtC7B,kCA6NQ,OAAOzsF,KAAKssF,UAAUtqF,OAAS,GAAKhC,KAAKusF,iBAAiBvqF,OAAS,GAAKhC,KAAKwsF,YAAYxqF,OAAS,GAC/FhC,KAAKysF,cAAczqF,OAAS,GAAKhC,KAAK4sF,eAAe5qF,OAAS,GAAKhC,KAAK2sF,oBAAoB3qF,OAAS,IA9NhH,+CAiO0B,2BAClB,YAAiBhC,KAAKyoF,OAAtB,+CAA6B,SACnB+G,oBAAmB,IAFX,qFAjO1B,gCAuOc1D,GACN9rF,KAAK4tF,gBAAgBh/C,IAAI,SAAUk9C,KAxO3C,2BAkPS9zE,G,MAEDhY,KAAK8sF,aAAe90E,EAFT,2BAIX,YAAyBhY,KAAK+mF,iBAA9B,+CAAgD,SAC/BoH,KAAKn2E,IALX,kFAQX,GAAwB,MAApBhY,KAAKg9B,YACL,OAAQh9B,KAAKg9B,YAAYokB,OACrB,KAAKC,GAAiBgD,QAElB,IAAKrkD,KAAK6sF,eAAgB,CACtB7sF,KAAKgtF,oBACL,MAGJ,IAAI90D,GAAiB,EAPzB,uBASI,YAAsBl4B,KAAKssF,UAA3B,+CAAsC,KAA7BmD,EAA6B,QAE9BC,EAAcD,EAAUC,YAC5B,IAAIA,EAAYC,cAAeD,EAAYE,YAA3C,CAEA,IAAInuF,EAA0B,QAAnB,EAAGguF,EAAU/tF,cAAM,eAAED,QAChCzB,KAAK6vF,SAAS33D,EAAOu3D,EAAWzvF,KAAK8sF,aACtB,MAAXrrF,GAAoBguF,EAAUC,YAAYE,cAC1C13D,GAAQ,EACRl4B,KAAK6sF,gBAAiB,KAlBlC,kFAqBI,MACJ,KAAKxrC,GAAiBplB,KACtB,KAAKolB,GAAiBt1C,MACtB,KAAKs1C,GAAiB0Y,gBAClB/5D,KAAKupF,kBAqBjB,IAfAvpF,KAAK8sF,YAAc,EAEf9sF,KAAKg9B,YAAYokB,OAASC,GAAiBgD,UACvCrkD,KAAKssF,UAAUtqF,OAAS,GACxBhC,KAAKg9B,YAAY4mD,cAAc,OAAO,EAAM,IAEzC5jF,KAAKg9B,YAAYokB,OAASC,GAAiBgD,UAC1CrkD,KAAKg9B,YAAY0lD,cAAe,EAChC1iF,KAAKg9B,YAAY4mD,cAAc,OAAO,EAAO,OAGjD5jF,KAAKg9B,YAAY4mD,cAAc,OAAO,EAAO,KAI9C5jF,KAAK0sF,sBAAsB1qF,OAAS,GAAG,CAQ1C,IANA,IAAI,EAAchC,KAAK0sF,sBAAsBp4E,MAM7C,MAAsB,CAACtU,KAAKusF,iBAAkBvsF,KAAKwsF,YAAaxsF,KAAKysF,eAArE,eACI,IADC,IAAIqD,EAAS,KACL,EAAI,EAAG,EAAIA,EAAU9tF,OAAQ,IAC9B8tF,EAAU,GAAGJ,cAAgB,IAC7BI,EAAU/3E,OAAO,EAAG,GACpB,KAMZ,IAAK,IAAI9gB,EAAI,EAAGA,EAAI+I,KAAK2sF,oBAAoB3qF,OAAQ/K,IAC7C+I,KAAK2sF,oBAAoB11F,GAAG84F,cAAgB,IAC5C/vF,KAAK2sF,oBAAoB50E,OAAO9gB,EAAG,GACnCA,KAIR,IAAK,IAAI,EAAI,EAAG,EAAI+I,KAAKssF,UAAUtqF,OAAQ,IACnChC,KAAKssF,UAAU,GAAGoD,cAAgB,IAClC1vF,KAAKssF,UAAUv0E,OAAO,EAAG,GACzB,KAIR,IAAIi4E,EAA8B,EAAaA,cAC1B,MAAjBA,IACAA,EAAcC,UACA,EAAaD,cAAgB,SA7U3D,yCAoVuBllE,GACf,IAAIxzB,EAAI6yF,GAAY+F,mBAAmBplE,GACvC9qB,KAAK+tF,IAAIoC,SAAS5hB,gBAAkBj3E,EAAEwzB,QAtV9C,2CA0VyB2kE,EAAsBj3F,G,QAEnCiJ,EAA0B,QAAnB,EAAGguF,EAAU/tF,cAAM,eAAED,QAC5BD,EAAyB,QAAnB,EAAGiuF,EAAU/tF,cAAM,eAAEF,OAE3Bm7B,EAAM8yD,EAAUC,YAAYznD,cAE5B0hD,EAAyB,CACzB,CACIvpF,KAAMu8B,EAAIv5B,MACVlL,MAAOykC,GAEX,CACIv8B,KAAMiM,GACNnU,MAAOM,IAIA,MAAXiJ,EACAzB,KAAKg9B,YAAYqL,SAASonD,EAAU/tF,OAAQioF,EAAe,MAAM,GAChD,MAAVnoF,GACPA,EAAO,MA/WnB,+BAoXa02B,EAAgBu3D,EAAsBz3E,G,QAEvCvW,EAA0B,QAAnB,EAAGguF,EAAU/tF,cAAM,eAAED,QAC5BD,EAAyB,QAAnB,EAAGiuF,EAAU/tF,cAAM,eAAEF,OAE3Bm7B,EAAM8yD,EAAUC,YAAYznD,cAE5B0hD,EAAyB,CACzB,CACIvpF,KAAMu8B,EAAIv5B,MACVlL,MAAOykC,IAIX8yD,EAAU/tF,OAAO4M,oBAAsB,GACvCq7E,EAAcplF,KACV,CACInE,KAAM6P,GACN/X,MAAO8f,IAMnB,IAAI+F,EAAO/d,KAEI,MAAXyB,EACAzB,KAAKg9B,YAAYqL,SAASonD,EAAU/tF,OAAQioF,EAAezxD,EAAQ,SAAC8E,GAChEjf,EAAK8uE,gBAAiB,EACtB7vD,EAAY0lD,cAAe,GAC3B,MAAM,GACO,MAAVlhF,GACPA,EAAO,MApZnB,qCA0ZQ,cAAyB,CAAC,UAAW,YAAa,YAAa,aAAc,cAA7E,eAA4F,CAAvF,IAAIstF,EAAY,KACjB9uF,KAAK4tF,gBAAgBjhD,IAAImiD,GAE7B9uF,KAAK+mF,iBAAmB,GACxB/mF,KAAK+tF,IAAIQ,OAAO1nD,OAAO7mC,KAAKkuF,gBAC5BluF,KAAK+tF,IAAIkC,UACTjwF,KAAKksF,gBAAgBrlD,SACrB7mC,KAAKhJ,OAAO29B,KAAK6N,iBAAiB0J,aAAaqhD,iBAAiBniD,OAChEprC,KAAKg9B,YAAY2lD,aAAc,EAC/B3iF,KAAKg9B,YAAYo8C,YAAc,KAC/Bp5E,KAAKwtF,eAAepiD,SApa5B,mCAuaiB0jD,EAAsBn4C,EAAWC,EAAW8E,GAAc,WAEnE,OAAQozC,GACJ,IAAK,YACL,IAAK,UAAL,2BACI,YAAqB9uF,KAAK2sF,oBAA1B,+CAA+C,KAAtC1N,EAAsC,QACvC8Q,EAA2B9Q,EAAS8Q,YAEJ,MAAhC9Q,EAAStnB,MAAMm3B,KAA0BiB,EAAYK,cAAcz5C,EAAGC,IAAMm5C,EAAYM,iBACxFrwF,KAAKswF,yBAAyBrR,EAAU6P,EAAcn4C,EAAGC,EAAG8E,IALxE,kFAUI,MACJ,IAAK,aAAL,2BACI,IADJ,IACI,EADJ,iBACaujC,EADb,QAEY8Q,EAA2B9Q,EAAS8Q,YAEJ,MAAhC9Q,EAAStnB,MAAMm3B,IAAyBiB,EAAYK,cAAcz5C,EAAGC,KAAOm5C,EAAYQ,2BACxF,EAAKD,yBAAyBrR,EAAU6P,EAAcn4C,EAAGC,EAAG8E,GAAQ,WAChEq0C,EAAYQ,2BAA4B,MALpD,EAAqBvwF,KAAK2sF,oBAA1B,+CAA+C,IADnD,kFAWI,MACJ,IAAK,aAAL,2BACI,IADJ,IACI,EADJ,iBACa1N,EADb,QAEY8Q,EAA2B9Q,EAAS8Q,YAEJ,MAAhC9Q,EAAStnB,MAAMm3B,IAAyBiB,EAAYQ,2BACpD,EAAKD,yBAAyBrR,EAAU6P,EAAcn4C,EAAGC,EAAG8E,GAAQ,WAChEq0C,EAAYQ,2BAA4B,MALpD,EAAqBvwF,KAAK2sF,oBAA1B,+CAA+C,IADnD,kFAWI,MACJ,IAAK,YAAL,2BACI,IADJ,IACI,EADJ,iBACa1N,EADb,QAEY8Q,EAA2B9Q,EAAS8Q,YAExC,GAAmC,MAA/B9Q,EAAStnB,MAAT,WACiC,MAAhCsnB,EAAStnB,MAAT,aAAyCo4B,EAAYQ,2BACrB,MAAhCtR,EAAStnB,MAAT,YAAwCo4B,EAAYQ,0BACvD,CACE,IAAIH,EAAgBL,EAAYK,cAAcz5C,EAAGC,IAC5Cm5C,EAAYM,gBAAkBD,IAAiD,MAA/BnR,EAAStnB,MAAT,WACjD,EAAK24B,yBAAyBrR,EAAU,YAAatoC,EAAGC,EAAG8E,GAE3D00C,GAAiD,MAAhCnR,EAAStnB,MAAT,aAAyCo4B,EAAYQ,2BACtE,EAAKD,yBAAyBrR,EAAU,aAActoC,EAAGC,EAAG8E,GAAQ,WAChEq0C,EAAYQ,2BAA4B,MAG3CH,GAAiD,MAAhCnR,EAAStnB,MAAT,YAAwCo4B,EAAYQ,2BACtE,EAAKD,yBAAyBrR,EAAU,aAActoC,EAAGC,EAAG8E,GAAQ,WAChEq0C,EAAYQ,2BAA4B,OAlBxD,EAAqBvwF,KAAK2sF,oBAA1B,+CAA+C,IADnD,sFA9cZ,+CA0e6B1N,EAAkC6P,EACvDn4C,EAAWC,EAAW8E,EAAgB1P,GAEtC,GAAKizC,EAAS8Q,YAAYS,iCACrBvR,EAAS8Q,YAAYC,cAAc59D,QADxC,CAGA,IAAI1wB,EAASu9E,EAASz4E,QAAQsoF,GAC1BrtF,EAAUC,EAAOD,QACjBD,EAASE,EAAOF,OAEhBm7B,EAAMsiD,EAAS8Q,YAAY9nD,cAE3B0hD,EAAyB,CACzB,CACIvpF,KAAMu8B,EAAIv5B,MACVlL,MAAOykC,GAEX,CACIv8B,KAAM6P,GACN/X,MAAOy+C,GAEX,CACIv2C,KAAM6P,GACN/X,MAAO0+C,IAIK,aAAhBk4C,GAA+C,cAAhBA,GAAgD,cAAhBA,GAC/DnF,EAAcplF,KACV,CACInE,KAAMgP,GACNlX,MAAOwjD,IAIJ,MAAXj6C,EACAzB,KAAKg9B,YAAYqL,SAAS3mC,EAAQioF,EAAe39C,GAAU,GAC1C,MAAVxqC,GACPA,EAAO,OAhhBnB,uCAqhBqBy9E,GAMb,IAAI78E,EAAgBpC,KAAK2sF,oBAAoB8D,WAAU,SAACC,GAAS,OAAOA,EAAIX,YAAY9nD,eAAiBg3C,KACtG78E,GAAS,GACRpC,KAAK2sF,oBAAoB50E,OAAO3V,EAAO,GAa3C,IAVA,IAQIuuF,EAAwB,KAE5B,MAVoB,CAChB,CAAEx3F,WAAY,UAAWwI,UAAW,yBACpC,CAAExI,WAAY,YAAawI,UAAW,yBACtC,CAAExI,WAAY,YAAawI,UAAW,oBACtC,CAAExI,WAAY,aAAcwI,UAAW,oBACvC,CAAExI,WAAY,aAAcwI,UAAW,qBAK3C,eAA8B,CAAzB,IAAI2xB,EAAE,KACH5xB,EAAyBu9E,EAAS77E,MAAO6iB,qBAAqB,KAAOqN,EAAGn6B,WAAam6B,EAAG3xB,YAErE,OAAnBD,aAAM,EAANA,EAAQD,UAAmBC,EAAOD,QAAQmD,WAAW5C,OAAS,GAAuB,OAAlBN,aAAM,EAANA,EAAQF,WAEjE,MAANmvF,IACAA,EAAK,CACD1R,SAAUA,EACVtnB,MAAO,GACPnxD,QAAS,IAEbxG,KAAK4sF,eAAeroF,KAAKosF,IAG7BA,EAAGh5B,MAAMrkC,EAAGn6B,WAAWqY,gBAAiB,EACxCm/E,EAAGnqF,QAAQ8sB,EAAGn6B,WAAWqY,eAAiB9P,MAzjB1D,0CAikBwBu9E,EAA6B6P,EAC7Cn4C,EAAWC,EAAW8E,EAAgB1P,GAEtC,IAAItqC,EAASu9E,EAASz4E,QAAQsoF,GAC1BrtF,EAAUC,EAAOD,QACjBD,EAASE,EAAOF,OAEhBm7B,EAAMsiD,EAASA,SAEf0K,EAAyB,CACzB,CACIvpF,KAAMu8B,EAAIv5B,MACVlL,MAAOykC,GAEX,CACIv8B,KAAM6P,GACN/X,MAAOy+C,GAEX,CACIv2C,KAAM6P,GACN/X,MAAO0+C,IAIK,aAAhBk4C,GAA+C,cAAhBA,GAAgD,cAAhBA,GAC/DnF,EAAcplF,KACV,CACInE,KAAMgP,GACNlX,MAAOwjD,IAIJ,MAAXj6C,EACAzB,KAAKg9B,YAAYqL,SAAS3mC,EAAQioF,EAAe39C,GAAU,GAC1C,MAAVxqC,GACPA,EAAO,QApmBnB,K,28BC9RO,IAAM,GAAb,YAEI,WAAYxK,GAAc,kBAEtB,0BAAM,QAASA,EAAQ,iKAElBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAClD,EAAKnd,YAAa,EAElB,IAAIyvF,EAAyE,CACzE,CAAEjvF,UAAW,qBAAsBkvF,oBAAqB,oBACxD,CAAElvF,UAAW,kBAAmBkvF,oBAAqB,eACrD,CAAElvF,UAAW,oBAAqBkvF,oBAAqB,iBACvD,CAAElvF,UAAW,QAASkvF,oBAAqB,aAC3C,CAAElvF,UAAW,cAAekvF,oBAAqB,cAZ/B,OAetB,EAAKtqF,yBAA2B,CAC5B,SAACxO,GAAoB,2BAEjB,YAAe64F,EAAf,+CAAiC,KAAxBrlC,EAAwB,QACzB7pD,EAAyB3J,EAAEqL,MAAO6iB,qBAAqBslC,EAAG5pD,WAE9D,GAAuB,OAAnBD,aAAM,EAANA,EAAQD,UAAqC,OAAlBC,aAAM,EAANA,EAAQF,QAAgB,CACnD,IAAIgmC,EAA+BzvC,EAAEoL,cAAF,MACnCqkC,EAAG4xC,YAAY7tB,EAAGslC,qBAAqBtsF,KAAK,CACxCmrF,YAAaloD,EACb9lC,OAAQA,MATH,qFAiBzB,EAAK4I,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IAGjD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCw3F,EAAc,IAAI,GAAY14F,EAAO29B,KAAK6N,iBAAkB9qC,GAEhEA,EAAEyL,cAAF,MAA2BusF,KAK/B,GAAO,EAAO,4DAA4D,IAE9E,EAAKplF,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnD,MACA,SAAChB,GAE0BA,EAAW,GAAG3J,MACbiL,cAAF,MACnB8sF,aAEJ,GAAO,EAAO,0IAA0I,IAE/J,EAAK3lF,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,MAAOiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCM,EAAcqJ,EAAW,GAAG3J,MAGhC,OAFsBR,EAAEyL,cAAF,MAEX2tF,UAAUt4F,MAEtB,GAAO,EAAO,+NAA+N,IAEpP,EAAK8R,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,MAAOiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCM,EAAcqJ,EAAW,GAAG3J,MAGhC,OAFsBR,EAAEyL,cAAF,MAEZ2tF,UAAUt4F,MAErB,GAAO,EAAO,yNAAyN,IAE9O,EAAK8R,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACbiL,cAAF,MAEZysF,eAEX,GAAO,EAAO,0FAA0F,IAG/G,EAAKtlF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD7L,EAAOqnB,UAAUC,QAAQ,UACzB,SAACzc,GAE0BA,EAAW,GAAG3J,MACbiL,cAAF,MADtB,IAGI65B,EAAchmC,EAAO29B,KAAK6N,iBAC1B42C,EAAcp8C,EAAYo8C,YAC9B,GAAmB,MAAfA,EAAqB,CACrB,IAAI9oC,EAAmB,IAAI,EAAqBtT,EAAYxe,YAAYF,QAAQ,SAASle,MACzFg5E,EAAc,IAAI,GAAY,IAAK,IAAKp8C,EAAYxe,YAAYoqE,UAAU,eAAgBt4C,GAE9F,OAAO8oC,EAAYiT,SAEpB,GAAO,EAAO,gCAAgC,IAErD,EAAK/hF,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDiQ,IACA,SAACjR,GAE0BA,EAAW,GAAG3J,MACbiL,cAAF,MAGnB4tF,gBAAe,MAInB,GAAO,EAAO,uFAAuF,IAExG,EAAKzmF,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IAC7DiQ,IACA,SAACjR,GAE0BA,EAAW,GAAG3J,MACbiL,cAAF,MAGnB4tF,gBAAe,MAEnB,GAAO,EAAO,+FAA+F,IAEhH,EAAKzmF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACxDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACbiL,cAAF,MAEXwsF,eAEZ,GAAO,EAAO,oFAAoF,IAEzG,EAAKrlF,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,YAAaiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxG,KACA,MACA,GAAO,EAAO,0CAA0C,IAE5D,EAAKwJ,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,IAC/C,KACA,MACA,GAAO,EAAO,0CAA0C,IAE5D,EAAKyH,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,MAAOiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClG,KACA,MACA,GAAO,EAAO,yFAAyF,IAE3G,EAAKwJ,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,MAAOiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClG,KACA,MACA,GAAO,EAAO,kEAAkE,IAEpF,EAAKwJ,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,MAAOiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClG,KACA,MACA,GAAO,EAAO,qEAAqE,IAnLjE,EAF9B,O,mOAAA,sDA2LQd,KAAKwG,QAAQqE,QAAO,SAAAxT,GAAC,MAAoB,YAAhBA,EAAE8B,cAA0B,GAAG8H,WAAajB,KAAKhJ,OAAOqnB,UAAUC,QAAQ,aA3L3G,GAA2B,GAiMd,GAAb,WAOI,WAAY0e,EAAiCiL,GAA4B,WAA5B,KAAAA,gBAJ7C,KAAA2nD,aAAuB,EAEvB,KAAAD,aAAuB,EAGnB,IAAIvW,EAAcp8C,EAAYo8C,YAC9B,GAAmB,MAAfA,EAAqB,CACrB,IAAI9oC,EAAmB,IAAI,EAAqBtT,EAAYxe,YAAYF,QAAQ,SAASle,MACzFg5E,EAAc,IAAI,GAAY,IAAK,IAAKp8C,EAAYxe,YAAYoqE,UAAU,eAAgBt4C,GAE1FA,EAAEntC,cAAF,MAA2Bi2E,EACxBnxC,EAAc9kC,cAAd,OACCi2E,EAAYyR,mBAAmB,WAGvC7qF,KAAKo5E,YAAcA,EAlB3B,kDAqBmBn+C,GACXj7B,KAAK2vF,YAAc10D,IAtB3B,gCA0BcziC,GACN,OAAOwH,KAAKo5E,YAAYp8C,YAAY0mD,aAAasN,UAAUx4F,KA3BnE,gCA+BQwH,KAAK4vF,aAAc,EACnB5vF,KAAKo5E,YAAYsT,sBAAsBnoF,KAAKvE,UAhCpD,K,yoBCrMO,IAAM,GAAb,YAEI,WAAYhJ,GAAc,a,4FAAA,UACtB,0BAAM,YAAaA,EAAQ,CACvB,CACIoJ,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,QAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,UAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,SAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,OAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,cAIf4G,cAAgB,yBA7BC,EAF9B,O,mOAAA,SAAoC,ICsC9B,SAAUkxF,GAAwBC,EAAWC,EAAWC,EAAWC,EAAWC,GAEhF,IAAIC,EAAKJ,EAAGx6C,EAAIu6C,EAAGv6C,EACf66C,EAAKL,EAAGv6C,EAAIs6C,EAAGt6C,EACf66C,EAAKL,EAAGz6C,EAAI06C,EAAG16C,EACf+6C,EAAKN,EAAGx6C,EAAIy6C,EAAGz6C,EACf+6C,EAAKP,EAAGz6C,EAAIu6C,EAAGv6C,EACfi7C,EAAKR,EAAGx6C,EAAIs6C,EAAGt6C,EAEfi7C,EAAMN,EAAKG,EAAKF,EAAKC,EAEzB,GAAII,EAAMA,EAAM,KACZ,OAAO,EAGX,IAGI74F,GAHO24F,EAAKD,EAAKE,EAAKH,GAGXI,EACX15F,GAHOo5F,EAAKK,EAAKJ,EAAKG,GAGXE,EAGXC,EAAY94F,GAAK,GAAKA,GAAK,GAAKb,GAAK,GAAKA,GAAK,EAOnD,OALG25F,GAA6B,MAAhBR,IACZA,EAAa36C,EAAIu6C,EAAGv6C,EAAI39C,GAAGm4F,EAAGx6C,EAAIu6C,EAAGv6C,GACrC26C,EAAa16C,EAAIs6C,EAAGt6C,EAAI59C,GAAGm4F,EAAGv6C,EAAIs6C,EAAGt6C,IAGlCk7C,EAIL,SAAUC,GAAQZ,EAAWC,GAE/B,IAAIxkB,EAAKwkB,EAAGz6C,EAAIw6C,EAAGx6C,EACfk2B,EAAKukB,EAAGx6C,EAAIu6C,EAAGv6C,EAEnB,OAAOtqC,KAAK+lE,KAAKzF,EAAKA,EAAKC,EAAKA,GAa9B,SAAUmlB,GAAoBC,EAAiBC,GAKjD,IAHA,IAAIC,GAAS,EACTC,EAAcH,EAAOjwF,OAEhBI,EAAQ,EAAGA,GAASgwF,EAAc,EAAGhwF,IAAS,CAEnD,IAAInL,EAAImL,EAAQgwF,EACZvjF,GAAKzM,EAAQ,GAAKgwF,EAClBvjF,EAAI,IACJA,GAAKujF,GAGHH,EAAOh7F,GAAG2/C,EAAIs7C,EAAMt7C,GAAOq7C,EAAOpjF,GAAG+nC,EAAIs7C,EAAMt7C,GAChDs7C,EAAMv7C,GAAKs7C,EAAOpjF,GAAG8nC,EAAIs7C,EAAOh7F,GAAG0/C,IAAMu7C,EAAMt7C,EAAIq7C,EAAOh7F,GAAG2/C,IAAMq7C,EAAOpjF,GAAG+nC,EAAIq7C,EAAOh7F,GAAG2/C,GAAKq7C,EAAOh7F,GAAG0/C,IAC3Gw7C,GAAUA,GAGlB,OAAOA,EA4IL,SAAUE,GAAsBzqF,EAAUu0C,EAAUpjD,GAEtD,IAAI6zE,EAAKzwB,EAAExF,EAAI/uC,EAAE+uC,EACbk2B,EAAK1wB,EAAEvF,EAAIhvC,EAAEgvC,EAEb07C,EAAI1lB,EAAGA,EAAGC,EAAGA,EAEb0lB,KAAY3qF,EAAE+uC,EAAE59C,EAAE49C,GAAGi2B,IAAOhlE,EAAEgvC,EAAE79C,EAAE69C,GAAGi2B,GAAIylB,EAE7C,GAAGC,EAAS,EACR,OAAOR,GAAQnqF,EAAG7O,GAGtB,GAAGw5F,EAAS,EACR,OAAOR,GAAQ51C,EAAGpjD,GAGtB,IAAIy5F,EAAK5qF,EAAE+uC,EAAI47C,GAAUp2C,EAAExF,EAAI/uC,EAAE+uC,GAC7B87C,EAAK7qF,EAAEgvC,EAAI27C,GAAUp2C,EAAEvF,EAAIhvC,EAAEgvC,GAE7BjnC,EAAK5W,EAAE49C,EAAI67C,EACXE,EAAK35F,EAAE69C,EAAI67C,EAEf,OAAOnmF,KAAK+lE,KAAK1iE,EAAGA,EAAK+iF,EAAGA,G,o6CCnQzB,IAAM,GAAb,YAEI,WAAY17F,GAAc,kBAEtB,0BAAM,QAASA,EAAQ,iGAElBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,UAClD,EAAKnd,YAAa,EAGlB,IAAIwxF,EAAY37F,EAAOqnB,UAAUC,QAAQ,SAGrCs0E,GAFiB,IAAI,EAAUD,GAET37F,EAAOqnB,UAAUC,QAAQ,YAX7B,OAatB,EAAK/T,aAAa,IAAI7J,EAAU,QAASuP,IACrC,SAAC/X,GAEG,IACI26F,EADqB36F,EAAMS,OACDwK,cAAJ,MAEZ,MAAV0vF,GAAkBA,EAAOjD,aAAuC,MAAxBiD,EAAO7C,cAC/C93F,EAAMA,MAAQ,EAIlBA,EAAMA,MAAQ26F,EAAOjgB,SAEtB,EAAO7uE,EAAWgH,WAAW,EAAM,aAE1C,EAAKR,aAAa,IAAI7J,EAAU,UAAWuP,IACvC,SAAC/X,GAEG,IACI26F,EADqB36F,EAAMS,OACDwK,cAAJ,MACZ,MAAV0vF,GAAkBA,EAAOjD,aAAuC,MAAxBiD,EAAO7C,cAC/C93F,EAAMA,MAAQ,EAIlBA,EAAMA,MAAQ26F,EAAOC,gBAEtB,EAAO/uF,EAAWgH,WAAW,EAAM,yEAE1C,EAAKR,aAAa,IAAI7J,EAAU,UAAWuP,IACvC,SAAC/X,GAEG,IACI26F,EADqB36F,EAAMS,OACDwK,cAAJ,MACZ,MAAV0vF,GAAkBA,EAAOjD,aAAuC,MAAxBiD,EAAO7C,cAC/C93F,EAAMA,MAAQ,EAIlBA,EAAMA,MAAQ26F,EAAOE,gBAEtB,EAAOhvF,EAAWgH,WAAW,EAAM,yEAE1C,EAAKhE,iCAgCL,EAAKuD,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC00E,EAAa/qE,EAAW,GAAG3J,MAC3B20E,EAAahrE,EAAW,GAAG3J,MAC3B86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,SAErBD,EAAGzlB,KAAKX,EAAIC,MAEb,GAAO,EAAO,mFAAmF,IAExG,EAAKviE,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACzG,CAAE3H,WAAY,UAAWiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACtG,CAAE3H,WAAY,UAAWiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCg7F,EAAqBrxF,EAAW,GAAG3J,MACnCi7F,EAAkBtxF,EAAW,GAAG3J,MAChCk7F,EAAkBvxF,EAAW,GAAG3J,MAChC86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,WAErBD,EAAGzH,OAAO2H,EAAYC,EAASC,MAEhC,GAAO,EAAO,uFAAuF,IAE5G,EAAK9oF,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACzGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCg7F,EAAqBrxF,EAAW,GAAG3J,MACnC86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,WAErBD,EAAGzH,OAAO2H,MAEX,GAAO,EAAO,iGAAiG,IAEtH,EAAK5oF,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrG,CAAE3H,WAAY,UAAWiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACtG,CAAE3H,WAAY,UAAWiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4lE,EAAiBj8D,EAAW,GAAG3J,MAC/Bi7F,EAAkBtxF,EAAW,GAAG3J,MAChCk7F,EAAkBvxF,EAAW,GAAG3J,MAChC86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,UAErBD,EAAGxH,MAAM1tB,EAAQq1B,EAASC,MAE3B,GAAO,EAAO,kHAAkH,IAEvI,EAAK9oF,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4lE,EAAiBj8D,EAAW,GAAG3J,MAC/B86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,UAErBD,EAAGxH,MAAM1tB,MAEV,GAAO,EAAO,oHAAoH,IAEzI,EAAKxzD,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDiQ,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAElB6vF,EAAGC,cAAc,YAErBD,EAAGK,UAAU,EAAG,MAEjB,GAAO,EAAO,sCAAsC,IAE3D,EAAK/oF,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDiQ,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAElB6vF,EAAGC,cAAc,YAErBD,EAAGK,SAAS,GAAI,MAEjB,GAAO,EAAO,sCAAsC,IAE3D,EAAK/oF,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IACzDyN,IACA,SAACzO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,iBAErB,OAAOD,EAAGM,mBAEX,GAAO,EAAO,oHAAoH,IAEzI,EAAKhpF,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,cAErB,OAAOD,EAAGF,gBAEX,GAAO,EAAO,6JAA6J,IAElL,EAAKxoF,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,cAErB,OAAOD,EAAGD,gBAEX,GAAO,EAAO,6JAA6J,IAElL,EAAKzoF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,YAErB,OAAOD,EAAGpgB,SAEX,GAAO,EAAO,4LAA4L,IAEjN,EAAKtoE,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,iBAErB,OAAOD,EAAG5C,cAAcz5C,EAAGC,MAE5B,GAAO,EAAO,gFAAgF,IAErG,EAAKtsC,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,SAAUiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCq7F,EAAuB1xF,EAAW,GAAG3J,MAE5B,MAATq7F,GACAv8F,EAAO29B,KAAK6N,iBAAiB0E,eAAe,uEAGhD,IAAI8rD,EAAkBt7F,EAAEyL,cAAF,MAClBqwF,EAAmBD,EAAMpwF,cAAN,MAEvB,IAAI6vF,EAAGC,cAAc,gBAArB,CAEA,IAAIO,EAAI5D,YAKR,OAAOoD,EAAGS,aAAaD,GAJnBR,EAAG5Z,YAAYp8C,YAAYkK,eAAe,yFAM/C,GAAO,EAAO,+FAA+F,IAEpH,EAAK58B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAClBwzC,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAE1B86F,EAAGC,cAAc,WAErBD,EAAGzlB,KAAK52B,EAAIq8C,EAAGF,aAAcl8C,EAAIo8C,EAAGD,iBAErC,GAAO,EAAO,yGAAyG,IAE9H,EAAKzoF,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAClBwzC,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAE1B86F,EAAGC,cAAc,iBAErBD,EAAGU,aAAa/8C,EAAGC,MAEpB,GAAO,EAAO,iMAAiM,IAEtN,EAAKtsC,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGgS,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAClBwwF,EAAmB9xF,EAAW,GAAG3J,MAEjC86F,EAAGC,cAAc,aAErBD,EAAGzH,OAAOoI,EAAWX,EAAGpgB,UAEzB,GAAO,EAAO,8CAA8C,IAEnE,EAAKtoE,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,UAAWiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGgS,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAClBivB,EAAmBvwB,EAAW,GAAG3J,MAEjC86F,EAAGC,cAAc,eAErBD,EAAGY,WAAWxhE,MAEf,GAAO,EAAO,yFAAyF,IAE9G,EAAK9nB,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,KACA,MACA,GAAO,EAAO,wEAAwE,IAE1F,EAAKwJ,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,KACA,MACA,GAAO,EAAO,wEAAwE,IAE1F,EAAKwJ,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,MAAOiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC/F,KACA,MACA,GAAO,EAAO,wHAAwH,IAE1I,EAAKwJ,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,MAAOiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC/F,KACA,MACA,GAAO,EAAO,+GAA+G,IAEjI,EAAKwJ,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,KACA,MACA,GAAO,EAAO,iFAAiF,IAEnG,EAAKwJ,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,oBAAqBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChHgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9B86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,SAErBD,EAAGa,KAAK/oE,MAET,GAAO,EAAO,wEAAwE,IAE7F,EAAKxgB,UAAU,IAAIvJ,EAAO,kCAAmC,IAAI8B,EAAc,IAC3EiQ,IACA,SAACjR,GAE0BA,EAAW,GAAG3J,MACbiL,cAAF,MAEnBktF,gBAAiB,KAErB,GAAO,EAAO,yOAAyO,IAE9P,EAAK/lF,UAAU,IAAIvJ,EAAO,iCAAkC,IAAI8B,EAAc,IAC1EiQ,IACA,SAACjR,GAE0BA,EAAW,GAAG3J,MACbiL,cAAF,MAEnBktF,gBAAiB,KAErB,GAAO,EAAO,iPAAiP,IAEtQ,EAAK/lF,UAAU,IAAIvJ,EAAO,kCAAmC,IAAI8B,EAAc,CAC3E,CAAE1J,WAAY,QAASiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC47F,EAAiBjyF,EAAW,GAAG3J,MACbR,EAAEyL,cAAF,MAEnBqtF,gCAAkCsD,KAEtC,GAAO,EAAO,2GAA2G,IAEhI,EAAKxpF,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,oBAAqBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChHgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9B86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,SAErBD,EAAGa,KAAK/oE,MAET,GAAO,EAAO,wEAAwE,IAE7F,EAAKxgB,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,CAC3D,CAAE1J,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACzGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCspF,EAAoB3/E,EAAW,GAAG3J,MAClC86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,qBAErBD,EAAGe,aAAevS,EAAY,IAAMl1E,KAAKumE,OAE1C,GAAO,EAAO,kMAAkM,IAEvN,EAAKvoE,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC87F,EAAmBnyF,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAElB6vF,EAAGC,cAAc,YAErBD,EAAGiB,QAAQD,MAEZ,GAAO,EAAO,sJAAsJ,IAE3K,EAAK1pF,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAM,EAAO,6DAA6D,IAGjF,EAAKkH,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IACxDiQ,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,gBAErB,OAAOD,EAAGmB,kBAEX,GAAO,EAAO,4CAA4C,IAEjE,EAAK7pF,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDiQ,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,cAErB,OAAOD,EAAGoB,gBAEX,GAAO,EAAO,+CAA+C,IAEhE,EAAK9pF,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IACzD,IAAI,EAAU+vF,IACd,SAAC/wF,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,iBAErB,OAAOD,EAAGqB,cAAczB,MAEzB,GAAO,EAAO,qLAAqL,IA7hBxL,EAF9B,kBAAgC,GAsiBV,GAAtB,YA8CI,WAAY51D,EAA0BiL,GAA4B,kBAE9D,0BAAMjL,EAAaiL,KAvCvB2qC,MAAgB,EAEhB,EAAA0hB,kBAA6B,KAC7B,EAAAC,sBAAiC,KACjC,EAAAC,iBAAkB,EAElB,EAAAhE,iCAA2C,EAE3C,EAAAD,2BAAqC,EAErC,EAAAF,gBAA0B,EAE1B,EAAAoE,YAAsB,EAEtB,EAAAV,aAAuB,EAqCnB,IAVA,IAQIpD,EAA6B,KAEjC,MAVoB,CAChB,CAAEx3F,WAAY,UAAWwI,UAAW,yBACpC,CAAExI,WAAY,YAAawI,UAAW,yBACtC,CAAExI,WAAY,YAAawI,UAAW,oBACtC,CAAExI,WAAY,aAAcwI,UAAW,oBACvC,CAAExI,WAAY,aAAcwI,UAAW,qBAK3C,eAA8B,CAAzB,IAAI2xB,EAAE,KACH5xB,EAAyBumC,EAAc7kC,MAAO6iB,qBAAqB,KAAOqN,EAAGn6B,WAAam6B,EAAG3xB,WAE1E,OAAnBD,aAAM,EAANA,EAAQD,UAAqC,OAAlBC,aAAM,EAANA,EAAQF,UAEzB,MAANmvF,IACAA,EAAK,CACDZ,YAAa,MACbp4B,MAAO,GACPnxD,QAAS,IAEb,EAAK4yE,YAAYuT,oBAAoBpoF,KAAKosF,IAG9CA,EAAGh5B,MAAMrkC,EAAGn6B,WAAWqY,gBAAiB,EACxCm/E,EAAGnqF,QAAQ8sB,EAAGn6B,WAAWqY,eAAiB9P,GA7BY,OAkC1B,MAAjC,EAAK03E,YAAYwS,cAChB,EAAKxS,YAAYqP,OAAOlkF,KAAxB,OAnC0D,E,UA9CtE,e,EAAA,G,EAAA,gCAyBawrF,GAKL,GAHA/vF,KAAK00F,eAAiB3E,EAAY2E,eAClC10F,KAAK20F,eAAiB5E,EAAY4E,eAEG,MAAjC5E,EAAYuE,kBAA2B,CACvCt0F,KAAKs0F,kBAAoB,GADc,2BAEvC,YAAcvE,EAAYuE,kBAA1B,oDAASv7F,EAAT,QAA6CiH,KAAKs0F,kBAAkB/vF,KAAK5M,OAAO8uB,OAAO,GAAI1tB,KAFpD,mFAK3CiH,KAAKwvF,oBAAmB,GAExBxvF,KAAKw0F,gBAAkBzE,EAAYyE,gBACnCx0F,KAAKwwF,gCAAkCT,EAAYS,gCACnDxwF,KAAKuwF,0BAA4BR,EAAYQ,0BAE7CvwF,KAAKgwF,cAAc3P,eAAe4K,SAAS8E,EAAYC,cAAc9jB,UAAUmU,gBAC/ErgF,KAAKgwF,cAAc7P,oBA1C3B,yCAuFuBn7C,GACfhlC,KAAKw0F,gBAAkBxvD,IAxF/B,oDA4FQ,IAAI4vD,EAA4C50F,KAAKgwF,cAAc7zE,OAC/D04E,EAAeD,EAAU7gD,SAAS/xC,OAAS,EAC3CI,EAAQwyF,EAAUE,cAAc90F,KAAKgwF,eACrC5tF,EAAQyyF,GACRD,EAAUG,cAAc/0F,KAAKgwF,cAAe5tF,EAAQ,KAhGhE,mDAqGQ,IAAIwyF,EAA4C50F,KAAKgwF,cAAc7zE,OAC/D/Z,EAAQwyF,EAAUE,cAAc90F,KAAKgwF,eACrC5tF,EAAQ,GACRwyF,EAAUG,cAAc/0F,KAAKgwF,cAAe5tF,EAAQ,KAxGhE,qCA6GQ,IAAIwyF,EAA4C50F,KAAKgwF,cAAc7zE,OAC/D04E,EAAeD,EAAU7gD,SAAS/xC,OAAS,EAC/C4yF,EAAUG,cAAc/0F,KAAKgwF,cAAe6E,KA/GpD,mCAmHwD70F,KAAKgwF,cAAc7zE,OACzD44E,cAAc/0F,KAAKgwF,cAAe,KApHpD,0CAwH6C,MAAjChwF,KAAKo5E,YAAYwS,eACjB5rF,KAAKioC,cAAc9kC,cAAnB,MAA4CnD,KACbA,KAAKo5E,YAAYwS,aACpClkD,IAAI1nC,KAAKioC,kBA3HjC,oCA+HkBvmC,GACV,QAAI1B,KAAK4vF,cACL5vF,KAAKo5E,YAAYp8C,YAAYkK,eAAe,wBAA0BxlC,EAAS,sEACxE,KAlInB,2BAuISopB,GACD,IAAIxzB,EAAI6yF,GAAY+F,mBAAmBplE,GAEnC9qB,KAAKgwF,cAAc6D,OAEnB7zF,KAAKgwF,cAAc6D,KAAOv8F,EAAEwzB,OAEhC9qB,KAAK+0C,WA9Ib,iCAiJe3iB,GAEPpyB,KAAKgwF,cAAc59D,QAAUA,IAnJrC,mCAsJiB29D,GAGT,GAA8B,MAAxB/vF,KAAA,cAAiE,MAA/B+vF,EAAW,aAC/C,OAAOA,EAAY0D,aAAazzF,MAGpCA,KAAKgwF,cAAc7P,kBACnB4P,EAAYC,cAAc7P,kBAE1B,IAAI6U,EAAKh1F,KAAKgwF,cAAciF,YACxBC,EAAMnF,EAAYC,cAAciF,YAEpC,QAAID,EAAGj9D,KAAOm9D,EAAI58D,OAAS48D,EAAIn9D,KAAOi9D,EAAG18D,UAErC08D,EAAG59C,IAAM89C,EAAIxT,QAAUwT,EAAI99C,IAAM49C,EAAGtT,UAEpCqO,EAAW,OACJA,EAAY0D,aAAazzF,MAGN,MAA1BA,KAAKs0F,mBAA8D,MAAjCvE,EAAYuE,oBAG9Ct0F,KAAKw0F,iBAAiBx0F,KAAKm1F,sBAC3BpF,EAAYyE,iBAAiBzE,EAAYoF,sBD/b/C,SAAqCC,EAAkBC,GACiB,IADCC,EACD,wDAA1EC,EAA0E,wDAAxCC,EAAwC,uDAAJ,KAEtE,GAAqB,GAAlBJ,EAAQpzF,QAAiC,GAAlBqzF,EAAQrzF,OAAa,OAAO,EAEtD,IAAIyzF,EAAYL,EAAQpzF,QAAUszF,EAAkB,GAAK,GACrDI,EAAYL,EAAQrzF,QAAUuzF,EAAkB,GAAK,GAEzD,GAAID,GAAmBtD,GAAoBoD,EAASC,EAAQ,IAAK,CAE7D,GAAkC,MAA9BG,EAAoC,CAKpC,IAHA,IAAIG,EAAa,IACbC,EAAW,EAEN3+F,EAAI,EAAGA,EAAIm+F,EAAQpzF,OAAS,EAAG/K,IAAK,CACzC,IAAI4X,GAAK5X,EAAI,GAAKm+F,EAAQpzF,OAEtBzK,EAAI86F,GAAsB+C,EAAQn+F,GAAIm+F,EAAQvmF,GAAIwmF,EAAQ,IAC1D99F,EAAIo+F,IACJA,EAAap+F,EACbq+F,EAAW,GAInB,IAAIvuF,GAAMuuF,EAAW,GAAKR,EAAQpzF,OAClCwzF,EAA2B5+C,EAAIw+C,EAAQ/tF,GAAIsvC,EAAIy+C,EAAQQ,GAAUj/C,EACjE6+C,EAA2B7+C,IAAMy+C,EAAQ/tF,GAAIuvC,EAAIw+C,EAAQQ,GAAUh/C,GAKvE,OAAO,EAGX,GAAI0+C,GAAmBtD,GAAoBqD,EAASD,EAAQ,IACxD,OAAO,EAGX,IAAK,IAAI,EAAI,EAAG,EAAIK,EAAW,IAG3B,IAFA,IAAII,EAAMT,EAAQ,GACdU,EAAMV,GAAS,EAAI,GAAKA,EAAQpzF,QAC3B,EAAI,EAAG,EAAI0zF,EAAW,IAAK,CAChC,IAAIK,EAAMV,EAAQ,GACdW,EAAMX,GAAS,EAAI,GAAKA,EAAQrzF,QAEpC,GAAIivF,GAAwB4E,EAAKC,EAAKC,EAAKC,GACvC,OAAO,EAOnB,OAAO,EC4YIC,CAA2Bj2F,KAAKu0F,sBAAuBxE,EAAYwE,uBAAuB,GAAM,OAlL/G,oCAsLkB59C,EAAWC,GACrB,QAAK52C,KAAKgwF,cAAciF,YAAYrtD,SAAS+O,EAAGC,KAElB,MAA1B52C,KAAKs0F,oBAELt0F,KAAKw0F,iBAAiBx0F,KAAKm1F,sBACxBnD,GAAoBhyF,KAAKu0F,sBAAuB,CAAE59C,EAAGA,EAAGC,EAAGA,QA5L1E,4CAgMQ,IAAI79C,EAAI,IAAIgnF,KAAKmP,MAAMlvF,KAAK00F,eAAgB10F,KAAK20F,gBACjD30F,KAAKgwF,cAAc7P,kBACnBngF,KAAKgwF,cAAc9jB,UAAUwU,eAAewV,MAAMn9F,EAAGA,GAErDiH,KAAKu0F,sBAAwB,GAC7B,IAAIl9F,EAAI2I,KAAKgwF,cAAc9jB,UAAUwU,eANtB,uBAOf,YAAc1gF,KAAKs0F,kBAAnB,+CAAsC,KAA7B,EAA6B,QAClCt0F,KAAKu0F,sBAAsBhwF,KAAK,CAC5BoyC,EAAIt/C,EAAEuQ,EAAI,EAAE+uC,EAAMt/C,EAAEC,EAAI,EAAEs/C,EAAKv/C,EAAEupF,GACjChqC,EAAIv/C,EAAE8kD,EAAI,EAAExF,EAAMt/C,EAAEE,EAAI,EAAEq/C,EAAKv/C,EAAEwpF,MAV1B,kFAaf7gF,KAAKwvF,oBAAmB,KA5MhC,sCAiNQ,IAAI2G,EAASn2F,KAAKgwF,cAAciF,WAAU,GACtCmB,EAASp2F,KAAKo5E,YAAY2U,IAAIqI,OAClC,OAAOD,EAAO79D,MAAQ89D,EAAOr+D,MAAQo+D,EAAOp+D,KAAOq+D,EAAO99D,OACnD69D,EAAOzU,OAAS0U,EAAOh/C,KAAO++C,EAAO/+C,IAAMg/C,EAAO1U,SApNjE,mCAuNiB/qC,EAAWC,GACpB,IAAI79C,EAAI,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC1B52C,KAAKgwF,cAAc9jB,UAAUwU,eAAeyO,aAAap2F,EAAGA,GAC5DiH,KAAK00F,eAAiB/9C,EACtB32C,KAAK20F,eAAiB/9C,IA3N9B,2BA8NSg2B,EAAYC,GACb7sE,KAAKgwF,cAAc3P,eAAe+K,UAAUxe,EAAIC,GAEhD7sE,KAAKgwF,cAAc9jB,UAAUmf,WAC7BrrF,KAAKgwF,cAAc7P,kBACnBngF,KAAKwvF,oBAAmB,KAnOhC,8BAsOYwE,GACJ,IAAIpnB,EAAKonB,EAAW1nF,KAAKymE,IAAI/yE,KAAK+zF,cAC9BlnB,GAAMmnB,EAAW1nF,KAAK0mE,IAAIhzE,KAAK+zF,cACnC/zF,KAAKutE,KAAKX,EAAIC,KAzOtB,6BA4OWqmB,EAAoBmD,EAAaC,GAGpC,GADAt2F,KAAKgwF,cAAc7P,kBACT,MAANkW,EAAY,CACZ,IAAIt9F,EAAI,IAAIgnF,KAAKmP,MAAMlvF,KAAK00F,eAAgB10F,KAAK20F,gBACjD30F,KAAKgwF,cAAc3P,eAAe6V,MAAMn9F,EAAGA,GAC3Cs9F,EAAKt9F,EAAE49C,EACP2/C,EAAKv9F,EAAE69C,MACJ,CACH,IAAI,EAAI,IAAImpC,KAAKmP,MAAMmH,EAAIC,GAC3Bt2F,KAAKo5E,YAAY8R,MAAM7K,eAAe6V,MAAM,EAAG,GAC/Cl2F,KAAKgwF,cAAc9jB,UAAUwU,eAAeyO,aAAa,EAAG,GAC5DnvF,KAAKgwF,cAAc3P,eAAe6V,MAAM,EAAG,GAC3CG,EAAK,EAAE1/C,EACP2/C,EAAK,EAAE1/C,EAGX52C,KAAKgwF,cAAc3P,eAAe+K,WAAWiL,GAAKC,GAClDt2F,KAAKgwF,cAAc3P,eAAekL,QAAQ2H,EAAa,IAAM5mF,KAAKumE,IAClE7yE,KAAKgwF,cAAc3P,eAAe+K,UAAUiL,EAAIC,GAEhDt2F,KAAKgwF,cAAc9jB,UAAUmf,WAC7BrrF,KAAKwvF,oBAAmB,GAExBxvF,KAAK4yE,OAASsgB,EACdlzF,KAAK+zF,cAAgBb,EAAa,IAAM5mF,KAAKumE,KArQrD,+BAwQa0jB,EAAgBC,GACrB,IAAIH,EAAYC,EAEhBt2F,KAAKgwF,cAAc7P,kBACnB,IAAIpnF,EAAI,IAAIgnF,KAAKmP,MAAMlvF,KAAK00F,eAAgB10F,KAAK20F,gBACjD30F,KAAKgwF,cAAc3P,eAAe6V,MAAMn9F,EAAGA,GAC3Cs9F,EAAKt9F,EAAE49C,EACP2/C,EAAKv9F,EAAE69C,EAEP52C,KAAKgwF,cAAc3P,eAAe+K,WAAWiL,GAAKC,GAClDt2F,KAAKgwF,cAAc3P,eAAemL,MAAM+K,EAAQC,GAChDx2F,KAAKgwF,cAAc3P,eAAe+K,UAAUiL,EAAIC,GAEhDt2F,KAAKgwF,cAAc9jB,UAAUmf,WAE7BrrF,KAAKwvF,oBAAmB,KAvRhC,4BA4RU1xB,EAAgBu4B,EAAaC,GAG/B,GADAt2F,KAAKgwF,cAAc7P,kBACT,MAANkW,EAAY,CACZ,IAAIt9F,EAAI,IAAIgnF,KAAKmP,MAAMlvF,KAAK00F,eAAgB10F,KAAK20F,gBACjD30F,KAAKgwF,cAAc3P,eAAe6V,MAAMn9F,EAAGA,GAC3Cs9F,EAAKt9F,EAAE49C,EACP2/C,EAAKv9F,EAAE69C,MACJ,CACH,IAAI,EAAI,IAAImpC,KAAKmP,MAAMmH,EAAIC,GAC3Bt2F,KAAKo5E,YAAY8R,MAAM7K,eAAe6V,MAAM,EAAG,GAC/Cl2F,KAAKgwF,cAAc9jB,UAAUwU,eAAeyO,aAAa,EAAG,GAC5DnvF,KAAKgwF,cAAc3P,eAAe6V,MAAM,EAAG,GAC3CG,EAAK,EAAE1/C,EACP2/C,EAAK,EAAE1/C,EAGX52C,KAAKgwF,cAAc3P,eAAe+K,WAAWiL,GAAKC,GAClDt2F,KAAKgwF,cAAc3P,eAAemL,MAAM1tB,EAAQA,GAChD99D,KAAKgwF,cAAc3P,eAAe+K,UAAUiL,EAAIC,GAEhDt2F,KAAKgwF,cAAc9jB,UAAUmf,WAE7BrrF,KAAKwvF,oBAAmB,GAExBxvF,KAAKy0F,aAAe32B,IArT5B,mCA0TQ,IAAI/kE,EAAI,IAAIgnF,KAAKmP,MAAMlvF,KAAK00F,eAAgB10F,KAAK20F,gBAKjD,OAJA30F,KAAKgwF,cAAc7P,kBAEnBngF,KAAKgwF,cAAc9jB,UAAUwU,eAAewV,MAAMn9F,EAAGA,GACrDiH,KAAKo5E,YAAY8R,MAAM7K,eAAe8O,aAAap2F,EAAGA,GAC/CA,EAAE49C,IA/TjB,mCAmUQ,IAAI59C,EAAI,IAAIgnF,KAAKmP,MAAMlvF,KAAK00F,eAAgB10F,KAAK20F,gBAIjD,OAHA30F,KAAKgwF,cAAc7P,kBACnBngF,KAAKgwF,cAAc9jB,UAAUwU,eAAewV,MAAMn9F,EAAGA,GACrDiH,KAAKo5E,YAAY8R,MAAM7K,eAAe8O,aAAap2F,EAAGA,GAC/CA,EAAE69C,IAvUjB,gCA8UQ,GADA,8CAC2B,MAAvB52C,KAAKy2F,eACLz2F,KAAKy2F,eAAe5vD,OAAO7mC,KAAKioC,mBAC7B,CACH,IAAI7lC,EAAQpC,KAAKo5E,YAAYqP,OAAOrjF,QAAQpF,MAC5CA,KAAKo5E,YAAYqP,OAAO1wE,OAAO3V,EAAO,MAlVlD,yCAuVuBs0F,EAA0B/D,GACzC,IAAIgE,EAA2B,GADyB,uBAExD,YAAkBD,EAAYjO,OAA9B,+CAAsC,KAA7B8K,EAA6B,QACUA,EAAMpwF,cAAN,MAC5BswF,aAAazzF,OACzB22F,EAAgBpyF,KAAK,CACjBnE,KAAMuyF,EACNz6F,MAAOq7F,KAPqC,kFAYxD,OAAOoD,IAnWf,oCAwWkB/D,GAEP5yF,KAAKw0F,iBACJx0F,KAAKm1F,sBAGT,IAAIv/D,EAAe,GANU,uBAO7B,YAAa51B,KAAKu0F,sBAAlB,+CAAwC,KAAhCx7F,EAAgC,QAChC47C,EAAK,IAAI,EAAci+C,GAC3Bj+C,EAAGnxC,WAAa,CAAC,CAACpD,KAAM6P,GAAqB/X,MAAOa,EAAE49C,GAAI,CAACv2C,KAAM6P,GAAqB/X,MAAOa,EAAE69C,IAC/FhhB,EAAIrxB,KAAK,CAACnE,KAAMwyF,EAAc16F,MAAOy8C,KAVZ,kFAa7B,OAAO/e,O,6BArXf,GAA0C,I,0nCCtiBnC,IAAM,GAAb,YAEI,WAAY5+B,GAAc,kBAEtB,0BAAM,SAAUA,EAAQ,yFAEnBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,UAIlD,IAAIs4E,EAA0B,EAAK5/F,OAAOqnB,UAAUC,QAAQ,SARtC,OAUtB,EAAKhU,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,UAAWiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACnG,CAAE3H,WAAY,UAAWiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACnG,CAAE3H,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACnG,CAAE3H,WAAY,MAAOiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,eAAgBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC3G,CAAE3H,WAAY,gBAAiBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC5G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC2+F,EAAkBh1F,EAAW,GAAG3J,MAChC4+F,EAAkBj1F,EAAW,GAAG3J,MAChC6/B,EAAel2B,EAAW,GAAG3J,MAC7Bk/C,EAAcv1C,EAAW,GAAG3J,MAC5Bi+C,EAAgBt0C,EAAW,GAAG3J,MAC9Bk+C,EAAiBv0C,EAAW,GAAG3J,MAE/B6+F,EAAK,IAAI,GAAgBF,EAASC,EAAS/+D,EAAMqf,EAAKjB,EAAOC,EAAQp/C,EAAO29B,KAAK6N,iBAAkB9qC,GACvGA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,sKAAsK,IAE3L,EAAKzsF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7F81F,GACA,SAAC/0F,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAG9B,OAF0BR,EAAEyL,cAAF,MAEhB6zF,iBAAiBrgD,EAAGC,EAAGggD,MAElC,GAAO,EAAO,4CAA4C,IAEjE,EAAKtsF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yB,EAAgBjpB,EAAW,GAAG3J,MAC9BkyF,EAAgBvoF,EAAW,GAAG3J,MACRR,EAAEyL,cAAF,MAEvB8zF,WAAWtgD,EAAGC,EAAG9rB,EAAOs/D,MAE5B,GAAO,EAAO,qJAAqJ,IAE1K,EAAK9/E,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yB,EAAgBjpB,EAAW,GAAG3J,MACRR,EAAEyL,cAAF,MAEvB8zF,WAAWtgD,EAAGC,EAAG9rB,MAErB,GAAO,EAAO,6HAA6H,IAElJ,EAAKxgB,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yB,EAAgBjpB,EAAW,GAAG3J,MACRR,EAAEyL,cAAF,MAEvB8zF,WAAWtgD,EAAGC,EAAG9rB,MAErB,GAAO,EAAO,qPAAqP,IAE1Q,EAAKxgB,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yB,EAAgBjpB,EAAW,GAAG3J,MAC9BkyF,EAAgBvoF,EAAW,GAAG3J,MACRR,EAAEyL,cAAF,MAEvB8zF,WAAWtgD,EAAGC,EAAG9rB,EAAOs/D,MAE5B,GAAO,EAAO,2QAA2Q,IAEhS,EAAK9/E,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,oBAAqBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChHwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yB,EAAgBjpB,EAAW,GAAG3J,MAGlC,OAF0BR,EAAEyL,cAAF,MAEhB+zF,SAASvgD,EAAGC,EAAG9rB,MAE1B,GAAO,EAAO,mSAAmS,IAExT,EAAKxgB,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B4yB,EAAgBjpB,EAAW,GAAG3J,MAGlC,OAF0BR,EAAEyL,cAAF,MAEhB+zF,SAASvgD,EAAGC,EAAG9rB,EAAO,MAEjC,GAAO,EAAO,kMAAkM,IAGvN,EAAKxgB,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9BkyF,EAAgBvoF,EAAW,GAAG3J,MACRR,EAAEyL,cAAF,MAEvBg0F,QAAQrsE,EAAOs/D,MAEnB,GAAO,EAAO,qJAAqJ,IAE1K,EAAK9/E,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,oBAAqBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChHgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MACRR,EAAEyL,cAAF,MAEvBg0F,QAAQrsE,MAEZ,GAAO,EAAO,sPAAsP,IAE3Q,EAAKxgB,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAsBt7F,EAAEyL,cAAF,MAE1B,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,8DAA8D,IAEnF,EAAKkH,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IAAtC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAsBt7F,EAAEyL,cAAF,MAE1B,IAAI6vF,EAAGC,cAAc,SAErB,OAAOD,EAAGoE,eAAsB1/F,EAAE0L,OAAO,MAE1C,GAAO,EAAO,mFAAmF,IA/MlF,EAF9B,kBAAiC,GAwNpB,GAAb,YA0BI,WAAmBi0F,EAAgBC,EAAgBv/D,EAAqBqf,EAAoBjB,EAAsBC,EAC9GpZ,EAA0BiL,EAA8BsvD,GAAsD,MAAtBz2D,EAAsB,oEAC9G,0BAAM9D,EAAaiL,KAFJovD,UAAgB,EAAAC,UAAgB,EAAAv/D,OAAqB,EAAAqf,MAAoB,EAAAjB,QAAsB,EAAAC,SArBlH,EAAAohD,aAAuB,EAyBnB,IAAIC,EAAS,IAAIC,YAAY,CAAC,YAC1BC,EAAQ,IAAIC,WAAWH,EAAOI,QAElB,KAAbF,EAAM,GACL,EAAKH,aAAc,EACC,KAAbG,EAAM,KACb,EAAKH,aAAc,GAKvB,EAAK9C,eAAiB38D,EAAOoe,EAAQ,EACrC,EAAKw+C,eAAiBv9C,EAAMhB,EAAS,EAErC,EAAKk+C,kBAAoB,CACrB,CAAE39C,EAAG5e,EAAM6e,EAAGQ,GAAO,CAAET,EAAG5e,EAAM6e,EAAGQ,EAAMhB,GAAU,CAAEO,EAAG5e,EAAOoe,EAAOS,EAAGQ,EAAMhB,GAAU,CAAEO,EAAG5e,EAAOoe,EAAOS,EAAGQ,IAGnH,EAAK0gD,aAAaP,EAAcz2D,GAEhC,IAAIi3D,EAAsB,EAAK/H,cAE/B+H,EAAO1X,eAAemL,MAAMr1C,EAAMmhD,EAASlhD,EAAOkhD,GAClDS,EAAO1X,eAAe+K,UAAUrzD,EAAMqf,GAEtC2gD,EAAO7rB,UAAUmf,WAEjB,IAAItyF,EAAI,IAAIgnF,KAAKmP,MAAM,EAAKwF,eAAgB,EAAKC,gBA9B6D,OA+B9GoD,EAAO1X,eAAe8O,aAAap2F,EAAGA,GACtC,EAAK27F,eAAiB37F,EAAE49C,EACxB,EAAKg+C,eAAiB57F,EAAE69C,EAGxB,EAAKohD,oBApCyG,E,UA3BtH,e,EAAA,G,EAAA,+BAOY90F,GAEJ,OAAOlD,KAAKo3F,eAAel0F,GAAO,KAT1C,qCAYmBA,GAAoC,IAAtB49B,EAAsB,wDAE3C6T,EAAoB,IAAI,EAAczxC,GACtC+0F,EAAsB,IAAIC,EAAgBl4F,KAAKq3F,QAASr3F,KAAKs3F,QAASt3F,KAAK+3B,KAAM/3B,KAAKo3C,IAAKp3C,KAAKm2C,MAAOn2C,KAAKo2C,OAAQp2C,KAAKo5E,YAAYp8C,YAAa2X,EAAI30C,KAAM8gC,GAOhK,OALA6T,EAAGxxC,cAAH,MAA4B80F,EAE5BA,EAAGhN,SAASjrF,MACZi4F,EAAGljD,SAEIJ,IAtBf,qEAsE2B4iD,GAAsD,IAAtBz2D,EAAsB,wDAGrE9gC,KAAKotC,KADU,MAAhBmqD,EACa,IAAIG,YAAY13F,KAAKq3F,QAAUr3F,KAAKs3F,SAE7Cx2D,EACay2D,EAAanqD,KAEb,IAAIsqD,YAAYH,EAAanqD,MAIjD,IAAI+qD,EAAU,IAAIP,WAAW53F,KAAKotC,KAAKyqD,QAEvC,GAAI/2D,EAOA9gC,KAAKo4F,QAAUb,EAAaa,YAPtB,CACN,IAAIC,EAAiB,IAAItY,KAAKuY,eAAeH,EAAS,CAAChiD,MAAOn2C,KAAKq3F,QAASjhD,OAAQp2C,KAAKs3F,UACrFiB,EAAK,IAAIxY,KAAKyY,YAAYH,EAAgB,CAC1CI,UAAW1Y,KAAKqN,YAAYC,UAEhCrtF,KAAKo4F,QAAU,IAAIrY,KAAK2Y,QAAQH,GAKpCv4F,KAAKgwF,cAAgB,IAAIjQ,KAAK4Y,OAAO34F,KAAKo4F,SAC1Cp4F,KAAKo5E,YAAY8R,MAAMwD,SAAS1uF,KAAKgwF,iBA/F7C,mCAmGQhwF,KAAKo4F,QAAQQ,YAAYC,WAnGjC,uCAsG4BliD,EAAWC,EAAWggD,GAE1C,IAAI3/F,EAAK0/C,EAAIC,EAAK52C,KAAKq3F,QAGnB16D,EAAqB,IAAI,EAAci6D,GAEvCt/F,EAAI0I,KAAKotC,KAAKn2C,GAMd2K,EAA8B,CAC9Bk3F,IALU,IAAJxhG,EAMNyhG,OALa,MAAJzhG,IAAe,EAMxB0hG,MALY,SAAJ1hG,IAAiB,GAMzB2hG,IAAK9O,GAAY+O,iBAAiB5hG,GAAK,IAK3C,OAFAqlC,EAAIx5B,cAAgBvB,EAEb+6B,IA5Hf,+BAiIoBga,EAAWC,EAAW9rB,EAAwBs/D,GAE1D,IAEI9yF,EAFAL,EAAK0/C,EAAIC,EAAK52C,KAAKq3F,QAIvB,GAAoB,iBAATvsE,EAAmB,CAC1B,IAAI5T,EAAKizE,GAAY+F,mBAAmBplE,GACxCxzB,EAAI4f,EAAG4T,MACC5T,EAAGkzE,WAEX9yF,EAAIwzB,EAGR,IAAI6mE,EAAK3xF,KAAKotC,KAAKn2C,GAMnB,OAAOK,GAAS,OALD,IAALq6F,GAKwB,MAJhB,MAALA,IAAgB,KACZ,SAALA,IAAkB,MAlJtC,iCAyJsBh7C,EAAWC,EAAW9rB,EAAwBs/D,GAE5D,IACI9yF,EADAL,EAAK0/C,EAAIC,EAAK52C,KAAKq3F,QAGvB,GAAoB,iBAATvsE,EAAmB,CAC1B,IAAI5T,EAAKizE,GAAY+F,mBAAmBplE,GACxCxzB,EAAI4f,EAAG4T,MACM,MAATs/D,IAAeA,EAAQlzE,EAAGkzE,YAE9B9yF,EAAIwzB,EACS,MAATs/D,IAAeA,EAAQ,GAG/BpqF,KAAKotC,KAAKn2C,GAA+B,SAA1BqV,KAAK+5B,MAAc,IAAR+jD,KAAiC,IAAJ9yF,IAAa,KAAW,MAAJA,KAAoB,SAAJA,IAAiB,IAE5G0I,KAAKm5F,eAzKb,8BA4KmBruE,EAAwBs/D,GACnC,IAAI9yF,EAEJ,GAAoB,iBAATwzB,EAAmB,CAC1B,IAAI5T,EAAKizE,GAAY+F,mBAAmBplE,GACxCxzB,EAAI4f,EAAG4T,MACPs/D,EAAQlzE,EAAGkzE,WAEX9yF,EAAIwzB,EAGR9qB,KAAKotC,KAAKzpC,KAA+B,SAA1B2I,KAAK+5B,MAAc,IAAR+jD,KAAiC,IAAJ9yF,IAAa,KAAW,MAAJA,KAAoB,SAAJA,IAAiB,KAG5G0I,KAAKm5F,eA1Lb,qCA6L0BxiD,EAAWC,EAAW7+C,EAAWqhG,EAAWj9C,EAAWiuC,GACzE,IAAI9yF,EAAY,WAAR8yF,EAAuB,MAAFjuC,EAAgB,IAAJi9C,EAAYrhG,EACjDd,EAAK0/C,EAAIC,EAAK52C,KAAKq3F,QACvBr3F,KAAKotC,KAAKn2C,GAAKK,EACf0I,KAAKm5F,eAjMb,+BAoMoBxiD,EAAWC,GACvB,IAAIt/C,EAAsC,SAAlC0I,KAAKotC,KAAKuJ,EAAIC,EAAI52C,KAAKq3F,SAC/B,OAAY,IAAJ//F,IAAa,IAAU,MAAJA,IAAmB,SAAJA,IAAiB,KAtMnE,+BAyMoBq/C,EAAWC,GACvB,OAA0C,WAAlC52C,KAAKotC,KAAKuJ,EAAIC,EAAI52C,KAAKq3F,WAA0B,GAAK,S,6BA1MtE,GAAqC,I,g+CC5N9B,IAAM,GAAb,YAEI,WAAYrgG,GAAc,kBAEtB,0BAAM,cAAeA,EAAQ,qGAExBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,UAClD,EAAKnd,YAAa,EAEP,MAAX,IAEIy1F,EAA0B,EAAK5/F,OAAOqnB,UAAUC,QAAQ,SATtC,OAWtB,EAAKhU,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IACxD+zF,GACA,SAAC/0F,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,OAAO6vF,EAAGgE,iBAAiBhE,EAAGqG,UAAWrG,EAAGqG,UAAWzC,MAExD,GAAO,EAAO,0CAA0C,IAE/D,EAAKtsF,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1D+zF,GACA,SAAC/0F,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,OAAO6vF,EAAGgE,iBAAiBhE,EAAGsG,YAAatG,EAAGsG,YAAa1C,MAE5D,GAAO,EAAO,0CAA0C,IAE/D,EAAKrsF,aAAa,IAAI7J,EAAU,cAAeuP,IAC3C,SAAC/X,GAEG,IACI26F,EADqB36F,EAAMS,OACKwK,cAAJ,MAMhCjL,EAAMA,MALQ,MAAV26F,EAKUA,EAAO0G,YAJH1pF,OAAOc,OAM1B,EAAO5M,EAAWgH,WAAW,EAAM,yBAE1C,EAAKT,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACzGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkyF,EAAgBvoF,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,aAErBD,EAAGwG,SAASpP,MAEb,GAAO,EAAO,mIAAmI,IAExJ,EAAK9/E,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,YAErB,OAAOD,EAAGyG,aAEX,GAAO,EAAO,mIAAmI,IAExJ,EAAKnvF,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,iBAErBD,EAAG0G,aAAa5uE,MAEjB,GAAO,EAAO,0GAA0G,IAE/H,EAAKxgB,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9BkyF,EAAgBvoF,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,iBAErBD,EAAG0G,aAAa5uE,EAAOs/D,MAExB,GAAO,EAAO,kIAAkI,IAEvJ,EAAK9/E,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,iBAErBD,EAAG0G,aAAa5uE,MAEjB,GAAO,EAAO,mOAAmO,IAExP,EAAKxgB,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9BkyF,EAAgBvoF,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,iBAErBD,EAAG0G,aAAa5uE,EAAOs/D,MAExB,GAAO,EAAO,6LAA6L,IAElN,EAAK9/E,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,mBAErBD,EAAG2G,eAAe7uE,MAEnB,GAAO,EAAO,2GAA2G,IAEhI,EAAKxgB,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9BkyF,EAAgBvoF,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,mBAErBD,EAAG2G,eAAe7uE,EAAOs/D,MAE1B,GAAO,EAAO,mIAAmI,IAExJ,EAAK9/E,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9BkyF,EAAgBvoF,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,mBAErBD,EAAG2G,eAAe7uE,EAAOs/D,MAE1B,GAAO,EAAO,6LAA6L,IAElN,EAAK9/E,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,oBAAqBiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChHgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4yB,EAAgBjpB,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,mBAErBD,EAAG2G,eAAe7uE,MAEnB,GAAO,EAAO,mOAAmO,IAExP,EAAKxgB,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,eAAgBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3GgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCi+C,EAAgBt0C,EAAW,GAAG3J,MAC9B86F,EAAwBt7F,EAAEyL,cAAF,MAExB6vF,EAAGC,cAAc,mBAErBD,EAAG4G,eAAezjD,MAEnB,GAAO,EAAO,uDAAuD,IAGxE,EAAKpvC,iCA3Na,EAF9B,qDAiOc8yF,EAAazP,GAEnB,IADA,IAAIpxF,EAAW,MAAP6gG,EAAc,MAAQA,EAAIrpF,SAAS,IACpCxX,EAAEgJ,OAAS,GAAGhJ,EAAI,IAAMA,EAE/B,IAAI4O,EAAI0E,KAAK+5B,MAAc,IAAR+jD,GAAa55E,SAAS,IAGzC,OAFI5I,EAAE5F,OAAS,IAAG4F,EAAI,IAAMA,GAErB,IAAM5O,EAAI4O,MAxOzB,GAAsC,GA8OhB,GAAtB,YASI,WAAYo1B,EAA0BiL,GAA4B,yBAC9D,0BAAMjL,EAAaiL,KARvBoxD,UAAoB,QACpB,EAAAI,UAAoB,EAEpB,EAAAH,YAAsB,KACtB,EAAAQ,YAAsB,EACtB,EAAAP,YAAsB,GAE4C,EATtE,oDAaaQ,GACL,8CAAeA,GACf/5F,KAAKq5F,UAAYU,EAAIV,UACrBr5F,KAAKy5F,UAAYM,EAAIN,UAErBz5F,KAAKs5F,YAAcS,EAAIT,YACvBt5F,KAAK85F,YAAcC,EAAID,YACvB95F,KAAKu5F,YAAcQ,EAAIR,cApB/B,+BAuBanP,GAELpqF,KAAKy5F,UAAYrP,EACjBpqF,KAAK85F,YAAc1P,EACnBpqF,KAAK+0C,WA3Bb,qCA8BmBjqB,EAAwBs/D,GAEnC,GAAoB,iBAATt/D,EAAmB,CAC1B,IAAIxzB,EAAI6yF,GAAY+F,mBAAmBplE,GACvC9qB,KAAKs5F,YAAchiG,EAAEwzB,MACrB9qB,KAAK85F,YAAuB,MAAT1P,EAAgB9yF,EAAE8yF,MAAQA,OAE7CpqF,KAAKs5F,YAAcxuE,EACnB9qB,KAAK85F,YAAc1P,EAGvBpqF,KAAK+0C,WAzCb,mCA6CiBjqB,EAAwBs/D,GAEjC,GAAoB,iBAATt/D,EAAmB,CAC1B,IAAIxzB,EAAI6yF,GAAY+F,mBAAmBplE,GACvC9qB,KAAKq5F,UAAY/hG,EAAEwzB,MACnB9qB,KAAKy5F,UAAqB,MAATrP,EAAgB9yF,EAAE8yF,MAAQA,OAE3CpqF,KAAKq5F,UAAYvuE,EACL,MAATs/D,IAAepqF,KAAKy5F,UAAYrP,GAIvCpqF,KAAK+0C,WAzDb,qCA6DmBoB,GACXn2C,KAAKu5F,YAAcpjD,EACnBn2C,KAAK+0C,WA/Db,uCAkE4BjqB,EAAes/D,EAAewM,GAElD,GAAa,MAAT9rE,EAAe,OAAO,KAE1B,IAAI/yB,GAAa,SAAR+yB,IAAqB,GAC1BsuE,GAAa,MAARtuE,IAAmB,EACxBqxB,EAAY,IAARrxB,EAEJ6R,EAAqB,IAAI,EAAci6D,GAEvCh1F,EAA8B,CAC9Bk3F,IAAK/gG,EACLghG,MAAOK,EACPJ,KAAM78C,EACN88C,IAAK9O,GAAY+O,iBAAiBpuE,IAKtC,OAFA6R,EAAIx5B,cAAgBvB,EAEb+6B,MArFf,GAAgD,I,o6CC/OzC,IAAM,GAAb,YAEI,WAAY3lC,GAAc,yBAEtB,0BAAM,SAAUA,EAAQ,WAEnBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAIlD,EAAKhU,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC8hG,EAAan4F,EAAW,GAAG3J,MAC3B+hG,EAAap4F,EAAW,GAAG3J,MAC3BH,EAAY8J,EAAW,GAAG3J,MAE1B6+F,EAAK,IAAI,GAAaiD,EAAIC,EAAIliG,EAAGf,EAAO29B,KAAK6N,iBAAkB9qC,GACnEA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,8EAA8E,IAEnG,EAAKzsF,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAY8J,EAAW,GAAG3J,MAC1B86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,cAErBD,EAAGkH,UAAUniG,MAEd,GAAO,EAAO,kCAAkC,IAEvD,EAAKuS,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,aAErB,OAAOD,EAAGj7F,EAAIi7F,EAAGhD,cAAcxE,MAAM70C,KAEtC,GAAO,EAAO,2BAA2B,IAEhD,EAAKrsC,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAmBt7F,EAAEyL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,8DAA8D,IAhE7D,EAF9B,kBAAiC,GAyEpB,GAAb,YAEI,WAAmB42F,EAAmBC,EAAmBliG,EACrDilC,EAA0BiL,GAA4B,yBACtD,0BAAMjL,EAAaiL,KAFJ+xD,KAAmB,EAAAC,KAAmB,EAAAliG,IAGrD,EAAK28F,eAAiBsF,EACtB,EAAKrF,eAAiBsF,EAEtB,EAAKllD,SACL,EAAKijD,oBANiD,E,UAH9D,e,EAAA,G,EAAA,+BAaY90F,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAmB,IAAIoD,EAAan6F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKjI,EAAGiI,KAAKo5E,YAAYp8C,YAAa2X,GAMhG,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IAtBf,+BA4BQ30C,KAAKs0F,kBAAoB,GAGzB,IADA,IAAI8F,EAAa9tF,KAAKumE,GAAK,EAClB57E,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAImzF,EAAQgQ,EAAanjG,EACzB+I,KAAKs0F,kBAAkB/vF,KAAK,CACxBoyC,EAAG32C,KAAKg6F,GAAKh6F,KAAKjI,EAAIuU,KAAKymE,IAAIqX,GAC/BxzC,EAAG52C,KAAKi6F,GAAKj6F,KAAKjI,EAAIuU,KAAK0mE,IAAIoX,KAGvCpqF,KAAKw0F,iBAAkB,EAEvB,IAAI4E,EAAwBp5F,KAAKgwF,cAEP,MAAtBhwF,KAAKgwF,eACLoJ,EAAI,IAAIrZ,KAAKsa,SACbr6F,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,IAGhCA,EAAEn0D,QAGgB,MAAlBjlC,KAAKq5F,WACLD,EAAEkB,UAAUt6F,KAAKq5F,UAAWr5F,KAAKy5F,WAEb,MAApBz5F,KAAKs5F,aACLF,EAAEmB,UAAUv6F,KAAKu5F,YAAav5F,KAAKs5F,YAAat5F,KAAK85F,YAAa,IAGtEV,EAAEoB,WAAWx6F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKjI,GACpCqhG,EAAEqB,YAEoB,MAAlBz6F,KAAKq5F,WACLD,EAAEsB,YA9Dd,gCAmEc3iG,GACNiI,KAAKjI,EAAIA,EACTiI,KAAK+0C,WArEb,sCA0EQ,6DA1ER,oCA8EkB4B,EAAWC,GAErB,IAAK52C,KAAKgwF,cAAciF,YAAYrtD,SAAS+O,EAAGC,GAAI,OAAO,EAE3D,IAAI79C,EAAgB,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC9B52C,KAAKgwF,cAAc9jB,UAAUwU,eAEnCyO,aAAap2F,EAAGA,GAElB,IAAI6zE,EAAK7zE,EAAE49C,EAAI32C,KAAKg6F,GAChBntB,EAAK9zE,EAAE69C,EAAI52C,KAAKi6F,GACpB,OAAOrtB,EAAKA,EAAKC,EAAKA,GAAM7sE,KAAKjI,EAAIiI,KAAKjI,O,6BAzFlD,GAAkC,I,o6CCzE3B,IAAM,GAAb,YAEI,WAAYf,GAAc,yBAEtB,0BAAM,SAAUA,EAAQ,4BAEnBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAElD,EAAKhU,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACzG,CAAE3H,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC8hG,EAAan4F,EAAW,GAAG3J,MAC3B+hG,EAAap4F,EAAW,GAAG3J,MAC3BH,EAAY8J,EAAW,GAAG3J,MAC1ByiG,EAAqB94F,EAAW,GAAG3J,MACnC0iG,EAAmB/4F,EAAW,GAAG3J,MAEjC6+F,EAAK,IAAI,GAAaiD,EAAIC,EAAIliG,EAAG4iG,EAAW,IAAIruF,KAAKumE,GAAI+nB,EAAS,IAAItuF,KAAKumE,IAAI,EAAM77E,EAAO29B,KAAK6N,iBAAkB9qC,GACvHA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,2OAA2O,IAE5P,EAAKzsF,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,gBAAiBiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAa8J,EAAW,GAAG3J,MAC3B86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,eAErBD,EAAG6H,UAAY9iG,EACfi7F,EAAGj+C,aAEJ,GAAO,EAAO,4IAA4I,IAGrK,EAAKzqC,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAY8J,EAAW,GAAG3J,MAC1B86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,cAErBD,EAAGkH,UAAUniG,MAEd,GAAO,EAAO,mDAAmD,IAExE,EAAKuS,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,oBAAqBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChH,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC06E,EAAgB/wE,EAAW,GAAG3J,MAC9B86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,mBAElBrgB,EAAQ,IACPA,GAAiC,IAAxBtmE,KAAK43D,MAAM0O,EAAM,MAG3BA,EAAQ,MACPA,GAAiC,IAAxBtmE,KAAKyE,MAAM6hE,EAAM,MAG9BogB,EAAG8H,cAAgBloB,EAAM,IAAItmE,KAAKumE,GAClCmgB,EAAGj+C,aAEJ,GAAO,EAAO,wDAAwD,IAEzE,EAAKzqC,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CAC3D,CAAE1J,WAAY,kBAAmBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC9G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC06E,EAAgB/wE,EAAW,GAAG3J,MAC9B86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,iBAElBrgB,EAAQ,IACPA,GAAiC,IAAxBtmE,KAAK43D,MAAM0O,EAAM,MAG3BA,EAAQ,MACPA,GAAiC,IAAxBtmE,KAAKyE,MAAM6hE,EAAM,MAG9BogB,EAAG+H,YAAcnoB,EAAM,IAAItmE,KAAKumE,GAChCmgB,EAAGj+C,aAEJ,GAAO,EAAO,sDAAsD,IAE3E,EAAKzqC,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,aAErB,OAAOD,EAAGj7F,EAAIi7F,EAAGhD,cAAcxE,MAAM70C,KAEtC,GAAO,EAAO,2BAA2B,IAEhD,EAAKrsC,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IACzDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,iBAErB,OAAOD,EAAG8H,cAAcxuF,KAAKumE,GAAG,OAEjC,GAAO,EAAO,wCAAwC,IAE7D,EAAKvoE,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,eAErB,OAAOD,EAAG+H,YAAYzuF,KAAKumE,GAAG,OAE/B,GAAO,EAAO,sCAAsC,IAE3D,EAAKvoE,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAmBt7F,EAAEyL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,8DAA8D,IA7J7D,EAF9B,kBAAiC,GAsKpB,GAAb,YAEI,WAAmB42F,EAAmBC,EAAmBliG,EAC9C+iG,EAA8BC,EAC9BF,EACP79D,EAA0BiL,GAA4B,yBACtD,0BAAMjL,EAAaiL,KAJJ+xD,KAAmB,EAAAC,KAAmB,EAAAliG,IAC9C,EAAA+iG,gBAA8B,EAAAC,cAC9B,EAAAF,YAGP,EAAKnG,eAAiBsF,EACtB,EAAKrF,eAAiBsF,EAEtB,EAAKllD,SACL,EAAKijD,oBANiD,E,UAL9D,e,EAAA,G,EAAA,+BAeY90F,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAmB,IAAIiE,EAAah7F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKjI,EAAGiI,KAAK86F,cAAe96F,KAAK+6F,YAAa/6F,KAAK66F,UAAW76F,KAAKo5E,YAAYp8C,YAAa2X,GAMtJ,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IAxBf,+BA8BQ30C,KAAKs0F,kBAAoB,GAEzB,IAAI8F,EAAap6F,KAAK+6F,YAAc/6F,KAAK86F,cACzC96F,KAAKs0F,kBAAkB/vF,KAAK,CAACoyC,EAAG32C,KAAKg6F,GAAIpjD,EAAG52C,KAAKi6F,KAEjD,IAAK,IAAIhjG,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAImzF,EAAQpqF,KAAK86F,cAAgBV,EAAanjG,EAC9C+I,KAAKs0F,kBAAkB/vF,KAAK,CACxBoyC,EAAG32C,KAAKg6F,GAAKh6F,KAAKjI,EAAIuU,KAAKymE,IAAIqX,GAC/BxzC,EAAG52C,KAAKi6F,GAAKj6F,KAAKjI,EAAIuU,KAAK0mE,IAAIoX,KAGvCpqF,KAAKs0F,kBAAkB/vF,KAAK,CAACoyC,EAAG32C,KAAKg6F,GAAIpjD,EAAG52C,KAAKi6F,KAEjDj6F,KAAKw0F,iBAAkB,EAEvB,IAAI4E,EAAwBp5F,KAAKgwF,cAEP,MAAtBhwF,KAAKgwF,eACLoJ,EAAI,IAAIrZ,KAAKsa,SACbr6F,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,IAGhCA,EAAEn0D,QAGgB,MAAlBjlC,KAAKq5F,WACLD,EAAEkB,UAAUt6F,KAAKq5F,UAAWr5F,KAAKy5F,WAEb,MAApBz5F,KAAKs5F,aACLF,EAAEmB,UAAUv6F,KAAKu5F,YAAav5F,KAAKs5F,YAAat5F,KAAK85F,YAAa,IAGnExtF,KAAK6uD,IAAIn7D,KAAK86F,cAAgB96F,KAAK+6F,aAAe,KACjD3B,EAAEoB,WAAWx6F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKjI,IAEjCiI,KAAK66F,WACJzB,EAAExoB,OAAO5wE,KAAKg6F,GAAIh6F,KAAKi6F,IAE3Bb,EAAE6B,IAAIj7F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKjI,GAAIiI,KAAK86F,eAAgB96F,KAAK+6F,aAAa,GACrE/6F,KAAK66F,WACJzB,EAAE8B,OAAOl7F,KAAKg6F,GAAIh6F,KAAKi6F,KAG5Bj6F,KAAK66F,WACJzB,EAAEqB,YAIgB,MAAlBz6F,KAAKq5F,WACLD,EAAEsB,YAjFd,gCAsFc3iG,GACNiI,KAAKjI,EAAIA,EACTiI,KAAK+0C,WAxFb,sCA6FQ,6DA7FR,oCAiGkB4B,EAAWC,GAErB,IAAK52C,KAAKgwF,cAAciF,YAAYrtD,SAAS+O,EAAGC,GAAI,OAAO,EAE3D,IAAI79C,EAAgB,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC9B52C,KAAKgwF,cAAc9jB,UAAUwU,eAEnCyO,aAAap2F,EAAGA,GAElB,IAAI6zE,EAAK7zE,EAAE49C,EAAI32C,KAAKg6F,GAChBntB,EAAK9zE,EAAE69C,EAAI52C,KAAKi6F,GAChBrnB,EAAQtmE,KAAK6uF,OAAOtuB,EAAID,GAE5B,GAAIA,EAAKA,EAAKC,EAAKA,GAAM7sE,KAAKjI,EAAIiI,KAAKjI,EAAG,CACtC,IAAIqjG,EAAQ,EAAE9uF,KAAKumE,GACfwoB,EAAuBr7F,KAAK86F,cAAgB,EAAIM,EAAQp7F,KAAK86F,cAAgB96F,KAAK86F,cAClFQ,EAAqBt7F,KAAK+6F,YAAc,EAAIK,EAAQp7F,KAAK+6F,YAAc/6F,KAAK+6F,YAE5EnlE,GADkBg9C,EAAQ,EAAIwoB,EAAQxoB,EAAQA,IACpByoB,GAAwBA,GAAwBC,EAC9E,OAAGD,GAAwBC,EAChB1lE,GAECA,EAGZ,OAAO,O,6BA1HnB,GAAkC,I,o6CCtK3B,IAAM,GAAb,YAEI,WAAY5+B,GAAc,yBAEtB,0BAAM,MAAOA,EAAQ,0CAEhBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAElD,EAAKhU,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC1G,CAAE3H,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC1G,CAAE3H,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACzG,CAAE3H,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC8hG,EAAan4F,EAAW,GAAG3J,MAC3B+hG,EAAap4F,EAAW,GAAG3J,MAC3BqjG,EAAa15F,EAAW,GAAG3J,MAC3BsjG,EAAa35F,EAAW,GAAG3J,MAC3ByiG,EAAqB94F,EAAW,GAAG3J,MACnC0iG,EAAmB/4F,EAAW,GAAG3J,MAEjC6+F,EAAK,IAAI,GAAUiD,EAAIC,EAAIsB,EAAIC,EAAIb,EAAa,IAAMruF,KAAKumE,GAAI+nB,EAAW,IAAMtuF,KAAKumE,IAAI,EAAM77E,EAAO29B,KAAK6N,iBAAkB9qC,GACjIA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,gNAAgN,IAErO,EAAKzsF,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAY8J,EAAW,GAAG3J,MAC1B86F,EAAgBt7F,EAAEyL,cAAF,MAEhB6vF,EAAGC,cAAc,eACrBD,EAAGuI,GAAKxjG,EACRi7F,EAAGj+C,aAEJ,GAAO,EAAO,6CAA6C,IAElE,EAAKzqC,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAY8J,EAAW,GAAG3J,MAC1B86F,EAAgBt7F,EAAEyL,cAAF,MAEhB6vF,EAAGC,cAAc,eACrBD,EAAGwI,GAAKzjG,EACRi7F,EAAGj+C,aAEJ,GAAO,EAAO,6CAA6C,IAElE,EAAKzqC,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,oBAAqBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChH,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC06E,EAAgB/wE,EAAW,GAAG3J,MAC9B86F,EAAgBt7F,EAAEyL,cAAF,MAEhB6vF,EAAGC,cAAc,mBAEjBrgB,EAAQ,IACRA,GAAmC,IAA1BtmE,KAAK43D,MAAM0O,EAAQ,MAG5BA,EAAQ,MACRA,GAAmC,IAA1BtmE,KAAKyE,MAAM6hE,EAAQ,MAGhCogB,EAAG8H,cAAgBloB,EAAQ,IAAMtmE,KAAKumE,GACtCmgB,EAAGj+C,aAEJ,GAAO,EAAO,wDAAwD,IAE7E,EAAKzqC,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,kBAAmBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC9G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC06E,EAAgB/wE,EAAW,GAAG3J,MAC9B86F,EAAgBt7F,EAAEyL,cAAF,MAEhB6vF,EAAGC,cAAc,iBAEjBrgB,EAAQ,IACRA,GAAmC,IAA1BtmE,KAAK43D,MAAM0O,EAAQ,MAG5BA,EAAQ,MACRA,GAAmC,IAA1BtmE,KAAKyE,MAAM6hE,EAAQ,MAGhCogB,EAAG+H,YAAcnoB,EAAQ,IAAMtmE,KAAKumE,GACpCmgB,EAAGj+C,aAEJ,GAAO,EAAO,sDAAsD,IAE3E,EAAKzqC,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1DoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACfiL,cAAF,MAEpB,IAAI6vF,EAAGC,cAAc,aAErB,OAAOD,EAAGuI,GAAKvI,EAAGhD,cAAcxE,MAAM70C,KAEvC,GAAO,EAAO,mCAAmC,IAExD,EAAKrsC,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1DoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACfiL,cAAF,MAEpB,IAAI6vF,EAAGC,cAAc,kBAErB,OAAOD,EAAGwI,GAAKxI,EAAGhD,cAAcxE,MAAM70C,KAEvC,GAAO,EAAO,mCAAmC,IAExD,EAAKrsC,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IACzDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACfiL,cAAF,MAEpB,IAAI6vF,EAAGC,cAAc,iBAErB,OAAOD,EAAG8H,cAAgBxuF,KAAKumE,GAAK,OAErC,GAAO,EAAO,wCAAwC,IAE7D,EAAKvoE,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACfiL,cAAF,MAEpB,IAAI6vF,EAAGC,cAAc,eAErB,OAAOD,EAAG+H,YAAczuF,KAAKumE,GAAK,OAEnC,GAAO,EAAO,sCAAsC,IAE3D,EAAKvoE,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAgBt7F,EAAEyL,cAAF,MAEpB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,2DAA2D,IA1K1D,EAF9B,kBAA8B,GAmLjB,GAAb,YAEI,WAAmB42F,EAAmBC,EAAmBsB,EAC9CC,EACAV,EAA8BC,EAC9BF,EACP79D,EAA0BiL,GAA4B,yBACtD,0BAAMjL,EAAaiL,KALJ+xD,KAAmB,EAAAC,KAAmB,EAAAsB,KAC9C,EAAAC,KACA,EAAAV,gBAA8B,EAAAC,cAC9B,EAAAF,YAGP,EAAKnG,eAAiBsF,EACtB,EAAKrF,eAAiBsF,EAEtB,EAAKllD,SACL,EAAKijD,oBANiD,E,UAN9D,e,EAAA,G,EAAA,+BAgBY90F,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAgB,IAAI0E,EAAUz7F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKu7F,GAAIv7F,KAAKw7F,GAAIx7F,KAAK86F,cAAe96F,KAAK+6F,YAAa/6F,KAAK66F,UAAW76F,KAAKo5E,YAAYp8C,YAAa2X,GAM1J,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IAzBf,+BA+BQ30C,KAAKs0F,kBAAoB,GAIzB,IAFA,IAAI8F,EAAap6F,KAAK+6F,YAAc/6F,KAAK86F,cAEhC7jG,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAImzF,EAAQpqF,KAAK86F,cAAgBV,EAAanjG,EAC9C+I,KAAKs0F,kBAAkB/vF,KAAK,CACxBoyC,EAAG32C,KAAKg6F,GAAKh6F,KAAKw7F,GAAKlvF,KAAKymE,IAAIqX,GAChCxzC,EAAG52C,KAAKi6F,GAAKj6F,KAAKw7F,GAAKlvF,KAAK0mE,IAAIoX,KAIxC,IAAK,IAAI,EAAI,EAAG,EAAI,GAAI,IAAK,CACzB,IAAI,EAAQpqF,KAAK+6F,YAAcX,EAAa,EAC5Cp6F,KAAKs0F,kBAAkB/vF,KAAK,CACxBoyC,EAAG32C,KAAKg6F,GAAKh6F,KAAKu7F,GAAKjvF,KAAKymE,IAAI,GAChCn8B,EAAG52C,KAAKi6F,GAAKj6F,KAAKu7F,GAAKjvF,KAAK0mE,IAAI,KAIxChzE,KAAKw0F,iBAAkB,EAEvB,IAAI4E,EAAwBp5F,KAAKgwF,cAEP,MAAtBhwF,KAAKgwF,eACLoJ,EAAI,IAAIrZ,KAAKsa,SACbr6F,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,IAGhCA,EAAEn0D,QAGgB,MAAlBjlC,KAAKq5F,WACLD,EAAEkB,UAAUt6F,KAAKq5F,UAAWr5F,KAAKy5F,WAEb,MAApBz5F,KAAKs5F,aACLF,EAAEmB,UAAUv6F,KAAKu5F,YAAav5F,KAAKs5F,YAAat5F,KAAK85F,YAAa,SAI3C,IAAvB95F,KAAK86F,gBAA4B96F,KAAK86F,cAAgB,QACjC,IAArB96F,KAAK+6F,cAA0B/6F,KAAK+6F,YAAwB,EAAVzuF,KAAKumE,IACvDvmE,KAAK6uD,IAAIn7D,KAAK+6F,YAAc/6F,KAAK86F,gBAA4B,EAAVxuF,KAAKumE,GACxDumB,EAAEoB,WAAWx6F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKw7F,IAC/BE,YACAlB,WAAWx6F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKu7F,IAClCI,WAELvC,EAAExoB,OAAO5wE,KAAKg6F,GAAKh6F,KAAKw7F,GAAKlvF,KAAKymE,IAAI/yE,KAAK86F,eAAgB96F,KAAKi6F,GAAKj6F,KAAKw7F,GAAKlvF,KAAK0mE,IAAIhzE,KAAK86F,gBAC7F1B,EAAE8B,OAAOl7F,KAAKg6F,GAAKh6F,KAAKu7F,GAAKjvF,KAAKymE,IAAI/yE,KAAK86F,eAAgB96F,KAAKi6F,GAAKj6F,KAAKu7F,GAAKjvF,KAAK0mE,IAAIhzE,KAAK86F,gBAC7F1B,EAAE6B,IAAIj7F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKu7F,IAAKv7F,KAAK86F,eAAgB96F,KAAK+6F,aAAa,GACpEE,IAAIj7F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKw7F,IAAKx7F,KAAK+6F,aAAc/6F,KAAK86F,eAAe,IAGhF1B,EAAEqB,YAGoB,MAAlBz6F,KAAKq5F,WACLD,EAAEsB,YA1Fd,sCAmGQ,6DAnGR,oCAuGkB/jD,EAAWC,GAErB,IAAK52C,KAAKgwF,cAAciF,YAAYrtD,SAAS+O,EAAGC,GAAI,OAAO,EAE3D,IAAI79C,EAAgB,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC9B52C,KAAKgwF,cAAc9jB,UAAUwU,eAEnCyO,aAAap2F,EAAGA,GAElB,IAAI6zE,EAAK7zE,EAAE49C,EAAI32C,KAAKg6F,GAChBntB,EAAK9zE,EAAE69C,EAAI52C,KAAKi6F,GAChBrnB,EAAQtmE,KAAK6uF,OAAOtuB,EAAID,GAExBgvB,EAAKhvB,EAAKA,EAAKC,EAAKA,EAExB,GAAK+uB,GAAM57F,KAAKw7F,GAAKx7F,KAAKw7F,IAAMI,GAAM57F,KAAKu7F,GAAKv7F,KAAKu7F,GAAI,CACrD,IAAIH,EAAQ,EAAI9uF,KAAKumE,GACjBwoB,EAAuBr7F,KAAK86F,cAAgB,EAAIM,EAAQp7F,KAAK86F,cAAgB96F,KAAK86F,cAClFQ,EAAqBt7F,KAAK+6F,YAAc,EAAIK,EAAQp7F,KAAK+6F,YAAc/6F,KAAK+6F,YAE5EnlE,GADkBg9C,EAAQ,EAAIwoB,EAAQxoB,EAAQA,IACpByoB,GAAwBA,GAAwBC,EAC9E,OAAID,GAAwBC,EACjB1lE,GAECA,EAGZ,OAAO,O,6BAlInB,GAA+B,I,2uBC5KxB,IAAM,GAAb,YAEI,WAAY5+B,GAAc,M,iGAAA,S,EAEtB,K,EAAA,gBAAM,QAASA,EAAQ,UAAvB,G,mDAEKonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAJ5B,eAMbu9E,GAEL,IAAIC,EAAW3R,GAAYE,iBAAiBwR,GAExC9jG,EAAmB,IAAI,EAAJ,OAMnB6J,EAA8B,CAC9Bk3F,KALkB,SAAXgD,IAAwB,GAM/B/C,OALoB,MAAX+C,IAAsB,EAM/B9C,KALmB,IAAX8C,EAMR7C,IAAK9O,GAAY+O,iBAAiB4C,IAGtC/jG,EAAEoL,cAAgBvB,EAElB,EAAK2I,aAAa,IAAI7J,EAAUm7F,EAAd,OACd,SAAC3jG,GAAYA,EAAMA,MAAQH,KAAK,EAAMgM,EAAW4C,QAAQ,EACzD,aAAek1F,EAAY,KAAO1R,GAAY+O,iBAAiB4C,GAAY,UAAY3R,GAAY4R,cAAcD,MArBzH,IAAK,IAAID,KAAa1R,GAAYE,iBAAkB,EAA3CwR,GANa,OA8BtB,EAAK90F,iCACL,EAAKH,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAEtD,EAAK0D,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,MAAOiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC/F,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GACG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC4gG,EAAcxsF,KAAKyE,MAAMlP,EAAW,GAAG3J,OACvC6gG,EAAgBzsF,KAAKyE,MAAMlP,EAAW,GAAG3J,OACzC8gG,EAAe1sF,KAAKyE,MAAMlP,EAAW,GAAG3J,OAGxCiL,EAAyC,CACzC21F,IAAKA,EACLC,MAAOA,EACPC,KAAMA,EACNC,IAAK,OAASH,EAAM,KAAOC,EAAQ,KAAOC,EAAO,KAGrDthG,EAAEyL,cAAgBA,KAEnB,GAAO,EAAO,+HACf,IAEN,EAAKmH,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDuM,IACA,SAACvN,GAC0BA,EAAW,GAAG3J,MAErC,OAAOoU,KAAK6sB,MAAsB,SAAhB7sB,KAAKikC,aAExB,GAAO,EAAM,wDACd,IAEN,EAAKjmC,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,kBAAmBiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3GsO,IACA,SAACvN,GAC0BA,EAAW,GAAG3J,MAArC,IACIqU,EAAc1K,EAAW,GAAG3J,MAQhC,OAPIqU,EAAM,IAAGA,EAAM,GACfA,EAAM,MAAKA,EAAM,KAMd,OAJSD,KAAK6sB,MAAM7sB,KAAKikC,UAAY,IAAMhkC,IAAQA,GAIrC,KAHLD,KAAK6sB,MAAM7sB,KAAKikC,UAAY,IAAMhkC,IAAQA,IAC1CD,KAAK6sB,MAAM7sB,KAAKikC,UAAY,IAAMhkC,IAAQA,MAI3D,GAAO,EAAM,wNACd,IAEN,EAAKjC,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,kBAAmBiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC3G,CAAE3H,WAAY,kBAAmBiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3GsO,IACA,SAACvN,GAC0BA,EAAW,GAAG3J,MAArC,IACIqU,EAAc1K,EAAW,GAAG3J,MAC5BqrE,EAAc1hE,EAAW,GAAG3J,MAMhC,GALIqU,EAAM,IAAGA,EAAM,GACfA,EAAM,MAAKA,EAAM,KACjBg3D,EAAM,IAAGA,EAAM,GACfA,EAAM,MAAKA,EAAM,KAEjBA,EAAMh3D,EAAK,CACX,IAAI+oC,EAAIiuB,EACRA,EAAMh3D,EACNA,EAAM+oC,EAOV,OAAO,OAJShpC,KAAK6sB,MAAM7sB,KAAKikC,UAAYgzB,EAAMh3D,EAAM,IAAMA,GAIzC,KAHLD,KAAK6sB,MAAM7sB,KAAKikC,UAAYgzB,EAAMh3D,EAAM,IAAMA,IAC9CD,KAAK6sB,MAAM7sB,KAAKikC,UAAYgzB,EAAMh3D,EAAM,IAAMA,MAI/D,GAAO,EAAM,4OACd,IAEN,EAAKjC,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDwJ,IACA,SAACxK,GAGG,OAFuBA,EAAW,GAAG3J,MAEDiL,cAAgB81F,OAErD,GAAO,EAAO,yCAAyC,IAE9D,EAAK3uF,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjDuM,IACA,SAACvN,GACG,IACIm6F,EADmBn6F,EAAW,GAAG3J,MACCiL,cAEtC,OAAO,MAAU64F,EAAIlD,IAAM,IAAQkD,EAAIjD,MAAQiD,EAAIhD,QAEpD,GAAO,EAAO,yGAAyG,IAE9H,EAAK1uF,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,aAAciH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1FwP,IACA,SAACzO,GACG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+jG,EAAoBp6F,EAAW,GAAG3J,MAElCX,EAA8BG,EAAEyL,cAChC+4F,EAA+BD,EAAG94F,cAEtC,OAAQ5L,EAAEuhG,KAAOoD,EAAGpD,KAAOvhG,EAAEwhG,OAASmD,EAAGnD,OAASxhG,EAAEyhG,MAAQkD,EAAGlD,QAEhE,GAAO,EAAO,0BAA0B,IAE/C,EAAK1uF,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAClDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEDiL,cAAgB21F,OAErD,GAAO,EAAO,kDAAkD,IAEvE,EAAKxuF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEDiL,cAAgB41F,SAErD,GAAO,EAAO,mDAAmD,IAExE,EAAKzuF,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEDiL,cAAgB61F,QAErD,GAAO,EAAO,mDAAmD,IAExE,EAAK1uF,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,MAAOiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC/F,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGsO,IACA,SAACvN,GAC0BA,EAAW,GAAG3J,MAArC,IACIH,EAAY8J,EAAW,GAAG3J,MAC1BkhG,EAAYv3F,EAAW,GAAG3J,MAC1BikD,EAAYt6C,EAAW,GAAG3J,MAM9B,OAJAH,EAAIuU,KAAKC,IAAIxU,EAAG,KAAMA,EAAIuU,KAAKi3D,IAAI,EAAGxrE,GACtCqhG,EAAI9sF,KAAKC,IAAI6sF,EAAG,KAAMA,EAAI9sF,KAAKi3D,IAAI,EAAG61B,GACtCj9C,EAAI7vC,KAAKC,IAAI4vC,EAAG,KAEJ,MAAJpkD,EAAkB,IAAJqhG,GAFAj9C,EAAI7vC,KAAKi3D,IAAI,EAAGpnB,OAIvC,GAAO,EAAM,+EAA+E,IAEnG,EAAK7xC,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,MAAOiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC/F,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGuL,IACA,SAACxK,GAC0BA,EAAW,GAAG3J,MAArC,IACIH,EAAY8J,EAAW,GAAG3J,MAC1BkhG,EAAYv3F,EAAW,GAAG3J,MAC1BikD,EAAYt6C,EAAW,GAAG3J,MAC1B0P,EAAY/F,EAAW,GAAG3J,MAE9BH,EAAIuU,KAAKC,IAAIxU,EAAG,KAAMA,EAAIuU,KAAKi3D,IAAI,EAAGxrE,GACtCqhG,EAAI9sF,KAAKC,IAAI6sF,EAAG,KAAMA,EAAI9sF,KAAKi3D,IAAI,EAAG61B,GACtCj9C,EAAI7vC,KAAKC,IAAI4vC,EAAG,KAAMA,EAAI7vC,KAAKi3D,IAAI,EAAGpnB,GAEtCv0C,EAAI0E,KAAKC,IAAI3E,EAAG,GAAIA,EAAI0E,KAAKi3D,IAAI,EAAG37D,GAGpC,IADA,IAAIkjB,GAAqB,SAAJ/yB,EAAoB,MAAJqhG,EAAkB,IAAJj9C,EAAY7vC,KAAK6sB,MAAU,IAAJvxB,IAAU4I,SAAS,IACtFsa,EAAM9oB,OAAS,GAAG8oB,EAAQ,IAAMA,EAEvC,MAAO,IAAMA,KAEd,GAAO,EAAM,mHAAmH,IAEvI,EAAKxgB,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,MAAOiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACzG,CAAE3H,WAAY,YAAaiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACxG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGuL,IACA,SAACxK,GAC0BA,EAAW,GAAG3J,MAArC,IACIikG,EAAYt6F,EAAW,GAAG3J,MAC1Bc,EAAY6I,EAAW,GAAG3J,MAC1BhB,EAAY2K,EAAW,GAAG3J,MAC1B0P,EAAY/F,EAAW,GAAG3J,MAE9BikG,EAAI7vF,KAAKC,IAAI4vF,EAAG,KAAMA,EAAI7vF,KAAKi3D,IAAI,EAAG44B,GACtCnjG,EAAIsT,KAAKC,IAAIvT,EAAG,KAAMA,EAAIsT,KAAKi3D,IAAI,EAAGvqE,GACtC9B,EAAIoV,KAAKC,IAAIrV,EAAG,KAAMA,EAAIoV,KAAKi3D,IAAI,EAAGrsE,GACtC0Q,EAAI0E,KAAKC,IAAI3E,EAAG,GAAIA,EAAI0E,KAAKi3D,IAAI,EAAG37D,GAKpC,IAHA,IAAIiyF,EAAM,EAAKuC,SAASD,EAAGnjG,EAAG9B,GAE1B4zB,GAAyB,SAAR+uE,EAAI9hG,EAAwB,MAAR8hG,EAAIT,EAAsB,IAARS,EAAI19C,EAAY7vC,KAAK6sB,MAAU,IAAJvxB,IAAU4I,SAAS,IAClGsa,EAAM9oB,OAAS,GAAG8oB,EAAQ,IAAMA,EAEvC,MAAO,IAAMA,KAEd,GAAO,EAAM,wHAAwH,IAE5I,EAAKxgB,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,MAAOiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACzG,CAAE3H,WAAY,YAAaiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxGsO,IACA,SAACvN,GAC0BA,EAAW,GAAG3J,MAArC,IACIikG,EAAYt6F,EAAW,GAAG3J,MAC1Bc,EAAY6I,EAAW,GAAG3J,MAC1BhB,EAAY2K,EAAW,GAAG3J,MAE9BikG,EAAI7vF,KAAKC,IAAI4vF,EAAG,KAAMA,EAAI7vF,KAAKi3D,IAAI,EAAG44B,GACtCnjG,EAAIsT,KAAKC,IAAIvT,EAAG,KAAMA,EAAIsT,KAAKi3D,IAAI,EAAGvqE,GACtC9B,EAAIoV,KAAKC,IAAIrV,EAAG,KAAMA,EAAIoV,KAAKi3D,IAAI,EAAGrsE,GAEtC,IAAI2iG,EAAM,EAAKuC,SAASD,EAAGnjG,EAAG9B,GAE9B,OAAgB,MAAR2iG,EAAI9hG,EAAsB,IAAR8hG,EAAIT,EAAYS,EAAI19C,KAE/C,GAAO,EAAM,mFAAmF,IA1QjF,E,UAF9B,O,mOAAA,M,EAAA,G,EAAA,gCAgRaggD,EAAWnjG,EAAW9B,GAE3B8B,GAAK,IACL9B,GAAK,IAEL,IAAII,GAAK,EAAIgV,KAAK6uD,IAAI,EAAIjkE,EAAI,IAAM8B,EAChC29C,EAAIr/C,GAAK,EAAIgV,KAAK6uD,IAAKghC,EAAI,GAAM,EAAI,IACrC9kG,EAAIH,EAAII,EAAI,EACZS,EAAI,EACJqhG,EAAI,EACJj9C,EAAI,EAoBR,OAlBI,GAAKggD,GAAKA,EAAI,IACdpkG,EAAIT,EAAG8hG,EAAIziD,EAAGwF,EAAI,GACX,IAAMggD,GAAKA,EAAI,KACtBpkG,EAAI4+C,EAAGyiD,EAAI9hG,EAAG6kD,EAAI,GACX,KAAOggD,GAAKA,EAAI,KACvBpkG,EAAI,EAAGqhG,EAAI9hG,EAAG6kD,EAAIxF,GACX,KAAOwlD,GAAKA,EAAI,KACvBpkG,EAAI,EAAGqhG,EAAIziD,EAAGwF,EAAI7kD,GACX,KAAO6kG,GAAKA,EAAI,KACvBpkG,EAAI4+C,EAAGyiD,EAAI,EAAGj9C,EAAI7kD,GACX,KAAO6kG,GAAKA,EAAI,MACvBpkG,EAAIT,EAAG8hG,EAAI,EAAGj9C,EAAIxF,GAOf,CAAC5+C,EALRA,EAAIuU,KAAK+5B,MAAgB,KAATtuC,EAAIV,IAKN+hG,EAJdA,EAAI9sF,KAAK+5B,MAAgB,KAAT+yD,EAAI/hG,IAIA8kD,EAHpBA,EAAI7vC,KAAK+5B,MAAgB,KAAT8V,EAAI9kD,U,6BA3S5B,GAAgC,G,o6CCPzB,IAAM,GAAb,YAEI,WAAYL,GAAc,yBAEtB,0BAAM,UAAWA,EAAQ,aAEpBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAIlD,EAAKhU,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC8hG,EAAan4F,EAAW,GAAG3J,MAC3B+hG,EAAap4F,EAAW,GAAG3J,MAC3BmkG,EAAax6F,EAAW,GAAG3J,MAC3BokG,EAAaz6F,EAAW,GAAG3J,MAE3B6+F,EAAK,IAAI,GAAciD,EAAIC,EAAIoC,EAAIC,EAAItlG,EAAO29B,KAAK6N,iBAAkB9qC,GACzEA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,2FAA2F,IAE5G,EAAKzsF,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAY8J,EAAW,GAAG3J,MACNR,EAAEyL,cAAF,MAErBo5F,WAAWxkG,MAEf,GAAO,EAAO,mCAAmC,IAExD,EAAKuS,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCH,EAAY8J,EAAW,GAAG3J,MACNR,EAAEyL,cAAF,MAErBq5F,WAAWzkG,MAEf,GAAO,EAAO,mCAAmC,IAEpD,EAAKuS,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAoBt7F,EAAEyL,cAAF,MAExB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,+DAA+D,IAhEtE,EAF9B,kBAAkC,GAyErB,GAAb,YAEI,WAAmB42F,EAAmBC,EAAmBoC,EAAmBC,EACxEt/D,EAA0BiL,GAA4B,yBACtD,0BAAMjL,EAAaiL,KAFJ+xD,KAAmB,EAAAC,KAAmB,EAAAoC,KAAmB,EAAAC,KAGxE,EAAK5H,eAAiBsF,EACtB,EAAKrF,eAAiBsF,EAEtB,EAAKllD,SACL,EAAKijD,oBANiD,E,UAH9D,e,EAAA,G,EAAA,+BAaY90F,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAoB,IAAI0F,EAAcz8F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKq8F,GAAIr8F,KAAKs8F,GAAIt8F,KAAKo5E,YAAYp8C,YAAa2X,GAM5G,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IAtBf,+BA4BQ30C,KAAKs0F,kBAAoB,GAGzB,IADA,IAAI8F,EAAa9tF,KAAKumE,GAAG,EACjB57E,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACvB,IAAImzF,EAAQgQ,EAAanjG,EACzB+I,KAAKs0F,kBAAkB/vF,KAAK,CACxBoyC,EAAG32C,KAAKg6F,GAAKh6F,KAAKq8F,GAAG/vF,KAAKymE,IAAIqX,GAC9BxzC,EAAG52C,KAAKi6F,GAAKj6F,KAAKs8F,GAAGhwF,KAAK0mE,IAAIoX,KAItC,IAAIgP,EAAwBp5F,KAAKgwF,cAEP,MAAtBhwF,KAAKgwF,eACLoJ,EAAI,IAAIrZ,KAAKsa,SACbr6F,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,IAGhCA,EAAEn0D,QAGgB,MAAlBjlC,KAAKq5F,WACLD,EAAEkB,UAAUt6F,KAAKq5F,UAAWr5F,KAAKy5F,WAEb,MAApBz5F,KAAKs5F,aACLF,EAAEmB,UAAUv6F,KAAKu5F,YAAav5F,KAAKs5F,YAAat5F,KAAK85F,YAAa,IAGtEV,EAAEsD,YAAY18F,KAAKg6F,GAAIh6F,KAAKi6F,GAAIj6F,KAAKq8F,GAAIr8F,KAAKs8F,IAC9ClD,EAAEqB,YAEoB,MAAlBz6F,KAAKq5F,WACLD,EAAEsB,YA7Dd,iCAiEe3iG,GACPiI,KAAKq8F,GAAKtkG,EACViI,KAAK+0C,WAnEb,iCAsEeh9C,GACPiI,KAAKq8F,GAAKtkG,EACViI,KAAK+0C,WAxEb,sCA6EQ,6DA7ER,oCAiFkB4B,EAAWC,GAErB,IAAK52C,KAAKgwF,cAAciF,YAAYrtD,SAAS+O,EAAGC,GAAI,OAAO,EAE3D,IAAI79C,EAAgB,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC9B52C,KAAKgwF,cAAc9jB,UAAUwU,eAEnCyO,aAAap2F,EAAGA,GAElB,IAAI6zE,EAAK7zE,EAAE49C,EAAI32C,KAAKg6F,GAChBntB,EAAK9zE,EAAE69C,EAAI52C,KAAKi6F,GACpB,OAAOrtB,EAAGA,GAAI5sE,KAAKq8F,GAAGr8F,KAAKq8F,IAAMxvB,EAAGA,GAAI7sE,KAAKs8F,GAAGt8F,KAAKs8F,KAAO,O,6BA5FpE,GAAmC,I,o6CCtE5B,IAAM,GAAb,YAEI,WAAYtlG,GAAc,kBAEtB,0BAAM,gBAAiBA,EAAQ,6IAE1BonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,IAAIq0E,EAAY37F,EAAOqnB,UAAUC,QAAQ,SANnB,OAQtB,EAAK/T,aAAa,IAAI7J,EAAU,SAAUiyF,GACtC,SAACz6F,GAEG,IAAIykC,EAAqBzkC,EAAMS,OAC/BT,EAAMA,MAAQykC,EAAIx5B,cAAJ,UAEf,EAAOY,EAAW4C,QAAQ,EAAM,8CAEvC,EAAK4D,aAAa,IAAI7J,EAAU,SAAUiyF,GACtC,SAACz6F,GAEG,IAAIykC,EAAqBzkC,EAAMS,OAC/BT,EAAMA,MAAQykC,EAAIx5B,cAAJ,UAEf,EAAOY,EAAW4C,QAAQ,EAAM,+CAEvC,EAAKI,iCAxBiB,EAF9B,kBAAwC,GAiC3B,GAAb,YAEI,WAAY/P,GAAc,kBAEtB,0BAAM,QAASA,EAAQ,2QAElBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,UAElD,IAAIq+E,EAAoB3lG,EAAOqnB,UAAUC,QAAQ,iBAC7Cs+E,EAAyB,IAAI,EAAUD,GACvChK,EAAY37F,EAAOqnB,UAAUC,QAAQ,SAGzC,EAAKhU,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjC6+F,EAAK,IAAI,GAAY//F,EAAO29B,KAAK6N,iBAAkB9qC,GACvDA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,sJAAsJ,IAE3K,EAAKzsF,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,SAAUiH,KAAM,IAAI,EAAUpJ,EAAOqnB,UAAUC,QAAQ,UAAWpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KACpJ,MACA,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCuwF,EAAkB5mF,EAAW,GAAG3J,MAEhC6+F,EAAK,IAAI,GAAY//F,EAAO29B,KAAK6N,iBAAkB9qC,GACvDA,EAAEyL,cAAF,MAA2B4zF,EANhB,2BAQX,YAActO,EAAd,+CAAsB,KAAbzvF,EAAa,QAClB+9F,EAAGrvD,IAAI1uC,EAAEd,QATF,sFAYZ,GAAO,EAAO,kOAAkO,IAEvP,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,SAAUiH,KAAM,IAAI,EAAUuyF,GAAYziF,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAE5H,MACA,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCuwF,EAAkB5mF,EAAW,GAAG3J,MAChC86F,EAA+Bt7F,EAAEyL,cAAF,MAEnC,IAAI6vF,EAAGC,cAAc,OAArB,CANW,2BAQX,YAAcxK,EAAd,+CAAsB,KAAbzvF,EAAa,QAClBg6F,EAAGtrD,IAAI1uC,EAAEd,QATF,uFAYZ,GAAO,EAAO,4CAA4C,IAEjE,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEjG6xF,GACA,SAAC9wF,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkK,EAAgBP,EAAW,GAAG3J,MAC9B86F,EAA+Bt7F,EAAEyL,cAAF,MAEnC,IAAI6vF,EAAGC,cAAc,OAErB,OAAOD,EAAG6J,WAAWz6F,MAEtB,GAAO,EAAO,mHAAmH,IAExI,EAAKkI,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkK,EAAgBP,EAAW,GAAG3J,MACCR,EAAEyL,cAAF,MAEhC25F,gBAAgB16F,MAEpB,GAAO,EAAO,8IAA8I,IAEnK,EAAKkI,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,QAASiH,KAAMuyF,EAAWziF,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAE1F,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCq7F,EAAuB1xF,EAAW,GAAG3J,MACrC86F,EAA+Bt7F,EAAEyL,cAAF,MAE/B6vF,EAAGC,cAAc,YAErBD,EAAGnsD,OAAO0sD,GACVP,EAAG5Z,YAAYqP,OAAOlkF,KAAKgvF,EAAMpwF,cAAN,WAE5B,GAAO,EAAO,mFAAmF,IAGxG,IAAI45F,EAAiB,IAAI,EAAUpK,GAzGb,OA2GtB,EAAKroF,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,CAC9D,CAAE1J,WAAY,QAASiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,SAAUpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAElHi8F,GACA,SAACl7F,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCq7F,EAAuB1xF,EAAW,GAAG3J,MACrC86F,EAA+Bt7F,EAAEyL,cAAF,MAEnC,GAAI6vF,EAAGC,cAAc,uBAAkC,MAATM,EAAe,MAAO,GAEpE,IAAI9K,EAA0BuK,EAAGgK,oBAAoBzJ,GAEjD1gF,EAAkB,GAVX,uBAWX,YAAe41E,EAAf,+CAAuB,KAAd,EAAc,QACnB51E,EAAOtO,KAAK,CACRnE,KAAMuyF,EACNz6F,MAAO,KAdJ,kFAmBX,OAAO2a,KAER,GAAO,EAAO,kFAAkF,IAEvG,EAAKvI,UAAU,IAAIvJ,EAAO,oBAAqB,IAAI8B,EAAc,CAC7D,CAAE1J,WAAY,QAASiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrF,CAAE3H,WAAY,0BAA2BiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvH87F,GACA,SAAC/6F,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+kG,EAAwBp7F,EAAW,GAAG3J,MACtCglG,EAAmCr7F,EAAW,GAAG3J,MACjD86F,EAA+Bt7F,EAAEyL,cAAF,MAC/Bg6F,EAAyCF,EAAO95F,cAAP,MAE7C,IAAI6vF,EAAGC,cAAc,sBAErB,OAAOD,EAAGoK,qBAAqBD,EAAcR,EAAmBO,MAEjE,GAAO,EAAO,ySAEmG,IAGxH,EAAK5yF,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,IACA,SAACvN,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACAiL,cAAF,MAEnC,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGvK,OAAOzmF,UAElB,GAAO,EAAO,iEAAiE,IAEtF,EAAKsI,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjDiQ,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACAiL,cAAF,MAE/B6vF,EAAGC,cAAc,UAErBD,EAAGqK,sBAEJ,GAAO,EAAO,0EAA0E,IAE/F,EAAK/yF,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,IAC9DiQ,IACA,SAACjR,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACAiL,cAAF,MAE/B6vF,EAAGC,cAAc,uBAErBD,EAAGsK,qBAEJ,GAAO,EAAO,kEAAkE,IAG/E3K,EAAWroF,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,CAC5E,CAAE1J,WAAY,QAASiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrFi8F,GACA,SAACl7F,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCw+F,EADuB70F,EAAW,GAAG3J,MACJiL,cAAN,MAC3B6vF,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,sBAErB,OAAOD,EAAGuK,mBAAmB7G,EAAa/D,MAE3C,GAAO,EAAO,4EAA4E,IAEjG,EAAKroF,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,2GAA2G,IAEhI,EAAKkH,UAAU,IAAIvJ,EAAO,uBAAwB,IAAI8B,EAAc,CAChE,CAAE1J,WAAY,uBAAwBiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KADzG,OAGX,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAClBq6F,EAAmB37F,EAAW,GAAG3J,MAEjC86F,EAAGC,cAAc,yBAErBD,EAAGyK,cAAcD,MAIlB,GAAO,EAAO,yTAAyT,IA/OxT,EAF9B,kBAAgC,GAwPnB,GAAb,YAII,WAAYxgE,EAA0BiL,GAA4B,yBAC9D,0BAAMjL,EAAaiL,KAHvBwgD,OAA0B,GAItB,EAAKuH,cAAgB,IAAIjQ,KAAK0O,UAC9B,EAAKrV,YAAY8R,MAAMwD,SAAS,EAAKsB,eACrC,EAAKgI,oBAJyD,E,UAJtE,e,EAAA,G,EAAA,qCAakBwF,GACV,IAAI5I,EAA4B50F,KAAKgwF,cAIjCwN,EACAzyD,YAAW,WACP6pD,EAAU6I,eAAgB,IAC3B,KAEH7I,EAAU6I,cAAgBD,IAvBtC,sCA4BoBp7F,GACZ,GAAIA,EAAQ,GAAKA,GAASpC,KAAKyoF,OAAOzmF,OAClChC,KAAKo5E,YAAYp8C,YAAYkK,eAAe,gDAAkD9kC,EAAQ,SAD1G,CAKA,IAAImxF,EAAQvzF,KAAKyoF,OAAOrmF,GACxBpC,KAAK6mC,OAAO0sD,MAnCpB,iCAsCenxF,GACP,KAAIA,EAAQ,GAAKA,GAASpC,KAAKyoF,OAAOzmF,QAItC,OAAOhC,KAAKyoF,OAAOrmF,GAHfpC,KAAKo5E,YAAYp8C,YAAYkK,eAAe,gDAAkD9kC,EAAQ,OAxClH,8BA8CYc,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtCw6F,EAA+B,IAAIC,EAAY39F,KAAKo5E,YAAYp8C,YAAa2X,GACjFA,EAAGxxC,cAAH,MAA4Bu6F,EAJZ,2BAMhB,YAAe19F,KAAKyoF,OAApB,+CAA4B,KAAnB,EAAmB,QAGpBmV,EAF2B,EAAGz6F,cAAH,MAES+wF,QAAe,EAAG9wF,OACtDy6F,EAA+BD,EAAOz6F,cAAP,MAEnCu6F,EAAgBjV,OAAOlkF,KAAKq5F,GAE5BC,EAAgBpH,eAAiBiH,EAEhBA,EAAgB1N,cAAetB,SAASmP,EAAgB7N,gBAhB7D,kFAuBhB,OAHA0N,EAAgBzS,SAASjrF,MACzB09F,EAAgB3oD,SAETJ,IArEf,qCAwEmB1Z,GACXj7B,KAAK2vF,YAAc10D,EADG,2BAGtB,YAAkBj7B,KAAKyoF,OAAvB,+CAA+B,QACctlF,cAAN,MAChCwsF,YAAc10D,EALC,qFAxE9B,0BAmFQs4D,GAEA,IAAIxD,EAAwCwD,EAAMpwF,cAAN,MAE5C,GAAI4sF,EAAYH,YACZ5vF,KAAKo5E,YAAYp8C,YAAYkK,eAAe,2EAIhD,IAAIlnC,KAAK89F,qBAAqBvK,GAA9B,CAMA,GAFAvzF,KAAKyoF,OAAOlkF,KAAKgvF,GAEiB,MAA9BxD,EAAY0G,eACZ1G,EAAY0G,eAAe5vD,OAAO0sD,OAC/B,CACH,IAAInxF,EAAQpC,KAAKo5E,YAAYqP,OAAOrjF,QAAQ2qF,GAC5C/vF,KAAKo5E,YAAYqP,OAAO1wE,OAAO3V,EAAO,GAG1C2tF,EAAY0G,eAAiBz2F,KAE7B,IAAI+9F,GAAU,IAAIhe,KAAKiL,QAASC,SAASjrF,KAAKgwF,cAAc9jB,UAAUwU,gBACtEqd,EAAQC,SACRjO,EAAYC,cAAc3P,eAAe5lC,QAAQsjD,EAAQtjD,QAAQz6C,KAAKo5E,YAAY8R,MAAM7K,iBAExF0P,EAAYC,cAAc9jB,UAAUmf,WAEnBrrF,KAAKgwF,cAAetB,SAASqB,EAAYC,eAC1DD,EAAYC,cAAc7P,kBAE1B,IAAI8d,EAAe,EACfC,EAAe,EAlCC,uBAoCpB,YAAkBl+F,KAAKyoF,OAAvB,+CAA+B,KACvBuK,EADuB,QACc7vF,cAAN,MACnC86F,GAAQjL,EAAGF,aACXoL,GAAQlL,EAAGD,cAvCK,kFA0CpB,IAAIp8C,EAAIsnD,EAAOj+F,KAAKyoF,OAAOzmF,OACvB40C,EAAIsnD,EAAOl+F,KAAKyoF,OAAOzmF,OAE3BhC,KAAKgwF,cAAc7P,kBACnB,IAAIgR,EAAiBnxF,KAAKgwF,cAActP,eAAeyO,aAAa,IAAIpP,KAAKmP,MAAMv4C,EAAGC,IAEtF52C,KAAK00F,eAAiBvD,EAAGx6C,EACzB32C,KAAK20F,eAAiBxD,EAAGv6C,KApIjC,yCAwIQ,IAAIx0C,EAAgB,EADD,uBAEnB,YAAkBpC,KAAKyoF,OAAvB,+CAA+B,KAAtB8K,EAAsB,QAC3BvzF,KAAKm+F,WAAW5K,EAAOnxF,MAHR,kFAKnBpC,KAAKyoF,OAAS,KA5ItB,6BA+IkB8K,GACV,IAAInxF,EAAQpC,KAAKyoF,OAAOrjF,QAAQmuF,GAC5BnxF,GAAS,IACTpC,KAAKyoF,OAAO1wE,OAAO3V,EAAO,GAE1BpC,KAAKm+F,WAAW5K,EAAOnxF,MApJnC,iCAwJuBmxF,EAAsBnxF,GACrC,IAAI2tF,EAA2BwD,EAAMpwF,cAAN,MAE3B+oE,GAAY,IAAI6T,KAAKiL,QAASC,SAAS8E,EAAYC,cAAc9jB,UAAUwU,gBAE9D1gF,KAAKgwF,cAAeoO,cAAch8F,GAEnD,IAAIi8F,GAAwB,IAAIte,KAAKiL,QAASC,SAASjrF,KAAKo5E,YAAY8R,MAAM7K,gBAC9Ege,EAAsBL,SACtBjO,EAAYC,cAAc3P,eAAe8K,WACzC4E,EAAYC,cAAc3P,eAAev2C,OAAOoiC,EAAUzxB,QAAQ4jD,IAElEtO,EAAYC,cAAc9jB,UAAUmf,WACpCrrF,KAAKo5E,YAAY8R,MAAMwD,SAASqB,EAAYC,eAC5CD,EAAYC,cAAc7P,kBAC1B4P,EAAY0G,eAAiB,OAvKrC,kEAgLQz2F,KAAKs9F,kBACL,gDAjLR,wCAoL0B,2BAClB,YAAkBt9F,KAAKyoF,OAAOl7E,MAAM,GAApC,+CAAwC,QACKpK,cAAN,MAChC8sF,UAHW,kFAKlBjwF,KAAKyoF,OAAS,KAzLtB,mCA6LiBsH,GAAwB,2BACjC,YAAkB/vF,KAAKyoF,OAAvB,+CAEI,GAF2B,QACctlF,cAAN,MAC5BswF,aAAa1D,GAChB,OAAO,EAJkB,kFAOjC,OAAO,IApMf,yCAuMuB/qD,GAAc,2BAC7B,YAAkBhlC,KAAKyoF,OAAvB,+CAA+B,QACctlF,cAAN,MAChCqsF,mBAAmBxqD,GAHG,qFAvMrC,oCA8MkB2R,EAAWC,GAAS,2BAC9B,YAAkB52C,KAAKyoF,OAAvB,+CAEI,GAF2B,QACctlF,cAAN,MAC5BitF,cAAcz5C,EAAGC,GACpB,OAAO,EAJe,kFAO9B,OAAO,IArNf,0CAwNwB28C,GAEhB,IAAIoD,EAAmC,GACnC5G,EAAwCwD,EAAMpwF,cAAN,MAHR,uBAKpC,YAAcnD,KAAKyoF,OAAnB,+CAA2B,KAAlBzvF,EAAkB,QACYA,EAAEmK,cAAF,MAC5BswF,aAAa1D,IAChB4G,EAAgBpyF,KAAKvL,IARO,kFAYpC,OAAO29F,IApOf,2CAwOyBwG,EAA2BR,EAC5CO,GAEA,IAAIoB,EAA0B,GAE1BC,EAAqD,IAAIz+F,IAJ7B,uBAMhC,YAAmBE,KAAKyoF,OAAxB,+CAAgC,KACxB+V,EADwB,QACwBr7F,cAAP,MADjB,uBAE5B,YAAmBg6F,EAAa1U,OAAhC,+CAAwC,KAChCgW,EADgC,QACgBt7F,cAAP,MAC7C,GAAIq7F,EAAa/K,aAAagL,GAAe,CAEzC,IAAKvB,GAAwE,MAA7CqB,EAAwBzmG,IAAI2mG,GAAuB,CAC/EF,EAAwBp5F,IAAIs5F,GAAc,GAC1C,IAAI9hE,EAAqB,IAAI,EAAqBggE,GAElDhgE,EAAIx5B,cAAJ,OAA8Bq7F,EAAav2D,cAC3CtL,EAAIx5B,cAAJ,OAA8Bs7F,EAAax2D,cAC3Cq2D,EAAe/5F,KAAK,CAChBnE,KAAMu8F,EACNzkG,MAAOykC,IAIf,GAAIugE,EACA,QAnBgB,oFANA,kFA+BhC,OAAOoB,IAxQf,2CA4QyBI,GACjB,IAAI/T,EAAK+T,EAAWv7F,cAAX,MACT,GAAIwnF,aAAcgT,EAAa,CAC3B,GAAIhT,GAAM3qF,KAEN,OADAA,KAAKo5E,YAAYp8C,YAAYkK,eAAe,iDACrC,EACJ,2BACH,YAAkByjD,EAAGlC,OAArB,+CAA6B,KAApB8K,EAAoB,QACzB,GAAIvzF,KAAK89F,qBAAqBvK,GAC1B,OAAO,GAHZ,mFAQX,OAAO,O,6BA1Rf,GAAiC,I,yoBC/R1B,ICiBUoL,GDjBJ,GAAb,YAEI,WAAY3nG,GAAc,a,4FAAA,UACtB,0BAAM,MAAOA,EAAQ,mHAEhBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAK/T,aAAa,IAAI7J,EAAU,UAAW2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,aAAa,EAAM6L,EAAW4C,QAAQ,EAAM,KACvI,EAAK4D,aAAa,IAAI7J,EAAU,YAAa2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,eAAe,EAAM6L,EAAW4C,QAAQ,EAAM,KAC3I,EAAK4D,aAAa,IAAI7J,EAAU,YAAa2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,eAAe,EAAM6L,EAAW4C,QAAQ,EAAM,KAC3I,EAAK4D,aAAa,IAAI7J,EAAU,aAAc2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,gBAAgB,EAAM6L,EAAW4C,QAAQ,EAAM,KAC7I,EAAK4D,aAAa,IAAI7J,EAAU,QAAS2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,WAAW,EAAM6L,EAAW4C,QAAQ,EAAM,KACnI,EAAK4D,aAAa,IAAI7J,EAAU,QAAS2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,OAAO,EAAM6L,EAAW4C,QAAQ,EAAM,KAC/H,EAAK4D,aAAa,IAAI7J,EAAU,QAAS2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,WAAW,EAAM6L,EAAW4C,QAAQ,EAAM,KACnI,EAAK4D,aAAa,IAAI7J,EAAU,MAAO2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,SAAS,EAAM6L,EAAW4C,QAAQ,EAAM,KAC/H,EAAK4D,aAAa,IAAI7J,EAAU,OAAQ2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,aAAa,EAAM6L,EAAW4C,QAAQ,EAAM,KACpI,EAAK4D,aAAa,IAAI7J,EAAU,SAAU2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,YAAY,EAAM6L,EAAW4C,QAAQ,EAAM,KACrI,EAAK4D,aAAa,IAAI7J,EAAU,WAAY2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,cAAc,EAAM6L,EAAW4C,QAAQ,EAAM,KACzI,EAAK4D,aAAa,IAAI7J,EAAU,YAAa2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,eAAe,EAAM6L,EAAW4C,QAAQ,EAAM,KAC3I,EAAK4D,aAAa,IAAI7J,EAAU,SAAU2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,YAAY,EAAM6L,EAAW4C,QAAQ,EAAM,KACrI,EAAK4D,aAAa,IAAI7J,EAAU,OAAQ2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,YAAY,EAAM6L,EAAW4C,QAAQ,EAAM,KACnI,EAAK4D,aAAa,IAAI7J,EAAU,OAAQ2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,YAAY,EAAM6L,EAAW4C,QAAQ,EAAM,KACnI,EAAK4D,aAAa,IAAI7J,EAAU,OAAQ2L,IAAqB,SAACnU,GAAYA,EAAMA,MAAQ,SAAS,EAAM6L,EAAW4C,QAAQ,EAAM,KAEhI,EAAKC,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAxBhC,EAF9B,O,mOAAA,SAA8B,G,urCCiB9B,SAAiB+3F,GASA,EAAAC,SAAhB,SAA0CvrB,GACzC,IAAIwrB,EAAsBxrB,EAAO9lE,QAEjC,OADAsxF,EAAU3iD,KAAKyiD,EAAWG,kBACnBH,EAAWI,kBAAkBF,IAKrB,EAAAE,kBAAhB,SAAmD1rB,GAClD,GAAIA,EAAOrxE,QAAU,EACpB,OAAOqxE,EAAO9lE,QAOf,IADA,IAAIyxF,EAAsB,GACjB/nG,EAAI,EAAGA,EAAIo8E,EAAOrxE,OAAQ/K,IAAK,CAEvC,IADA,IAAM8B,EAAOs6E,EAAOp8E,GACb+nG,EAAUh9F,QAAU,GAAG,CAC7B,IAAMswF,EAAO0M,EAAUA,EAAUh9F,OAAS,GACpCjK,EAAOinG,EAAUA,EAAUh9F,OAAS,GAC1C,MAAKswF,EAAE37C,EAAI5+C,EAAE4+C,IAAM59C,EAAE69C,EAAI7+C,EAAE6+C,KAAO07C,EAAE17C,EAAI7+C,EAAE6+C,IAAM79C,EAAE49C,EAAI5+C,EAAE4+C,IAGvD,MAFAqoD,EAAU1qF,MAIZ0qF,EAAUz6F,KAAKxL,GAEhBimG,EAAU1qF,MAGV,IADA,IAAI2qF,EAAsB,GACjB,EAAI5rB,EAAOrxE,OAAS,EAAG,GAAK,EAAG,IAAK,CAE5C,IADA,IAAM,EAAOqxE,EAAO,GACb4rB,EAAUj9F,QAAU,GAAG,CAC7B,IAAM,EAAOi9F,EAAUA,EAAUj9F,OAAS,GACpC,EAAOi9F,EAAUA,EAAUj9F,OAAS,GAC1C,MAAK,EAAE20C,EAAI,EAAEA,IAAM,EAAEC,EAAI,EAAEA,KAAO,EAAEA,EAAI,EAAEA,IAAM,EAAED,EAAI,EAAEA,IAGvD,MAFAsoD,EAAU3qF,MAIZ2qF,EAAU16F,KAAK,GAIhB,OAFA06F,EAAU3qF,MAEc,GAApB0qF,EAAUh9F,QAAmC,GAApBi9F,EAAUj9F,QAAeg9F,EAAU,GAAGroD,GAAKsoD,EAAU,GAAGtoD,GAAKqoD,EAAU,GAAGpoD,GAAKqoD,EAAU,GAAGroD,EACjHooD,EAEAA,EAAU92F,OAAO+2F,IAIV,EAAAH,iBAAhB,SAAiCl3F,EAAUu0C,GAC1C,OAAIv0C,EAAE+uC,EAAIwF,EAAExF,GACH,EACA/uC,EAAE+uC,EAAIwF,EAAExF,EACT,EACC/uC,EAAEgvC,EAAIuF,EAAEvF,GACR,EACAhvC,EAAEgvC,EAAIuF,EAAEvF,EACT,EAEA,GAxEV,CAAiB+nD,QAAU,KCZpB,IAAM,GAAb,YAEI,WAAY3nG,GAAc,kBAEtB,0BAAM,UAAWA,EAAQ,qFAEpBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAClD,IAAI4gF,EAAoBloG,EAAOqnB,UAAUC,QAAQ,SAL3B,OAStB,EAAKhU,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,eAAgBiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC5G,CAAE3H,WAAY,SAAUiH,KAAM,IAAI,EAAU6P,IAAsBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpH,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCinG,EAAwBt9F,EAAW,GAAG3J,MACtCm7E,EAAkBxxE,EAAW,GAAG3J,MAEhCknG,EAAyB,GAC7B/rB,EAAOthE,SAAQ,SAAAlO,GAAC,OAAIu7F,EAAa76F,KAAKV,EAAE3L,UAExC,IAAImnG,EAAK,IAAI,GAAcD,EAAcD,EAAcnoG,EAAO29B,KAAK6N,iBAAkB9qC,GACrFA,EAAEyL,cAAF,MAA2Bk8F,KAE5B,GAAO,EAAO,0HAA0H,IAE/I,EAAK/0F,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,eAAgBiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC5G,CAAE3H,WAAY,SAAUiH,KAAM,IAAI,EAAU6P,IAAsBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KACtI,MACA,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCinG,EAAwBt9F,EAAW,GAAG3J,MACtCm7E,EAAkBxxE,EAAW,GAAG3J,MAEhCknG,EAAyB,GAC7B/rB,EAAOthE,SAAQ,SAAAlO,GAAC,OAAIu7F,EAAa76F,KAAKV,EAAE3L,UAExC,IAAImnG,EAAK,IAAI,GAAcD,EAAcD,EAAcnoG,EAAO29B,KAAK6N,iBAAkB9qC,GACrFA,EAAEyL,cAAF,MAA2Bk8F,KAE5B,GAAO,EAAO,6GAA6G,IAElI,EAAK/0F,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,eAAgBiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC5G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCinG,EAAwBt9F,EAAW,GAAG3J,MAItCmnG,EAAK,IAAI,GAFgB,GAEYF,EAAcnoG,EAAO29B,KAAK6N,iBAAkB9qC,GACrFA,EAAEyL,cAAF,MAA2Bk8F,KAE5B,GAAO,EAAO,8CAA8C,IAEnE,EAAK/0F,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,QAASiH,KAAM8+F,EAAYhvF,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3F,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCq7F,EAAuB1xF,EAAW,GAAG3J,MAEzC,GAAY,MAATq7F,EAAH,CAKA,IAAIxD,EAA2BwD,EAAMpwF,cAAN,MAC/B4sF,EAAYC,cAAciF,YAE1B,IAAI5hB,EAA6B,GACjCA,EAAS,EAAKisB,cAAcvP,EAAa1c,GACzCA,EAASsrB,GAAWC,SAASvrB,GAG7B,IAAI+rB,EAAyB,GAlBlB,uBAmBX,YAAa/rB,EAAb,+CAAoB,KAAZt6E,EAAY,QAChBqmG,EAAa76F,KAAKxL,EAAE49C,GACpByoD,EAAa76F,KAAKxL,EAAE69C,IArBb,kFAwBRwoD,EAAap9F,OAAS,IACrBo9F,EAAeA,EAAal3F,OAAOk3F,EAAa7xF,MAAM,EAAG,KAG7D,IAAI8xF,EAAK,IAAI,GAAcD,GAAc,EAAOpoG,EAAO29B,KAAK6N,iBAAkB9qC,GAAG,GACjFA,EAAEyL,cAAF,MAA2Bk8F,OAvBvBroG,EAAO29B,KAAK6N,iBAAiB0E,eAAe,qCAyBjD,GAAO,EAAO,sGAAsG,IAG3H,EAAK58B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B86F,EAAoBt7F,EAAEyL,cAAF,MAEpB6vF,EAAGC,cAAc,aAErBD,EAAGuM,SAAS5oD,EAAGC,MAEhB,GAAO,EAAO,wCAAwC,IAE7D,EAAKtsC,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,SAAUiH,KAAM,IAAI,EAAU6P,IAAsBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpH,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCm7E,EAAkBxxE,EAAW,GAAG3J,MAChC86F,EAAoBt7F,EAAEyL,cAAF,MAExB,IAAI6vF,EAAGC,cAAc,aAIrB,IAFA,IAESh8F,EAAI,EAAGA,EAAIo8E,EAAOrxE,OAAS,EAAG/K,GAAK,EACxC+7F,EAAGuM,SAASlsB,EAAOp8E,GAAGiB,MAAOm7E,EAAOp8E,EAAI,GAAGiB,MAAOjB,GAAKo8E,EAAOrxE,OAAS,MAG5E,GAAO,EAAO,uIAAuI,IAE5J,EAAKsI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BkK,EAAgBP,EAAW,GAAG3J,MAC9B86F,EAAoBt7F,EAAEyL,cAAF,MAEpB6vF,EAAGC,cAAc,gBAErBD,EAAGwM,YAAY7oD,EAAGC,EAAGx0C,MAEtB,GAAO,EAAO,mJAAmJ,IAExK,EAAKkI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BkK,EAAgBP,EAAW,GAAG3J,MAC9B86F,EAAoBt7F,EAAEyL,cAAF,MAEpB6vF,EAAGC,cAAc,gBAErBD,EAAGyM,YAAY9oD,EAAGC,EAAGx0C,MAEtB,GAAO,EAAO,yGAAyG,IAE9H,EAAKkI,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACXiL,cAAF,MAEpB6vF,EAAGC,cAAc,WAErBD,EAAG0M,UAAW,EACd1M,EAAGj+C,aAEJ,GAAO,EAAO,kFAAkF,IAEvG,EAAKzqC,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChD,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACXiL,cAAF,MAEpB6vF,EAAGC,cAAc,UAErBD,EAAG0M,UAAW,EACd1M,EAAGj+C,aAEJ,GAAO,EAAO,gFAAgF,IAErG,EAAKzqC,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAoBt7F,EAAEyL,cAAF,MAExB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,+DAA+D,IAlN9D,EAF9B,yDA0NkB2sF,EAA0B1c,GACpC,GAAG0c,aAAuB,GAAY,CAClC,IAAI4P,EAA8B,GADA,uBAElC,YAAc5P,EAAYtH,OAA1B,+CAAiC,KAAzBuK,EAAyB,QAC7B2M,EAAU3/F,KAAKs/F,cAActM,EAAG7vF,cAAH,MAA2Bw8F,IAH1B,kFAKlC,OAAOtsB,EAAOnrE,OAAOy3F,GAGrB,OADG5P,EAAYyE,iBAAiBzE,EAAYoF,sBACrC9hB,EAAOnrE,OAAO6nF,EAAYwE,sBAAsBxxF,KAAI,SAASmvF,GAAO,MAAO,CAACv7C,EAAGu7C,EAAMv7C,EAAGC,EAAGs7C,EAAMt7C,WAnOpH,GAAkC,GA2OrB,GAAb,YAII,WAAYy8B,EAA0B8rB,EAClCniE,EAA0BiL,GAAuD,MAAzBy3D,EAAyB,oEACjF,0BAAM1iE,EAAaiL,KAFek3D,eAFtC,EAAAO,UAAoB,EAMhB,EAAKA,SAAWA,EAChB,IAAIzB,EAAO,EAAOC,EAAO,EACzB,EAAK5J,kBAAoB,GAEzB,IAAK,IAAIr9F,EAAI,EAAGA,EAAIo8E,EAAOrxE,QAAS,CAChC,IAAI20C,EAAI08B,EAAOp8E,KACX2/C,EAAIy8B,EAAOp8E,KACfgnG,GAAQtnD,EACRunD,GAAQtnD,EACR,EAAK09C,kBAAkB/vF,KAAK,CAAEoyC,EAAGA,EAAGC,EAAGA,IAZsC,OAe7Ey8B,EAAOrxE,OAAS,IAChB,EAAK0yF,eAAiBuJ,EAAO,EAAK3J,kBAAkBtyF,OACpD,EAAK2yF,eAAiBuJ,EAAO,EAAK5J,kBAAkBtyF,QAGnDm9F,IACD,EAAK7F,YAAc,KAGvB,EAAKvkD,SACL,EAAKijD,oBAzB4E,EALzF,mDAkCY90F,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAoB,IAAI6I,EAAc,GAAI5/F,KAAKm/F,aAAcn/F,KAAKo5E,YAAYp8C,YAAa2X,GAM/F,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IA3Cf,+BAiDQ,IAAIykD,EAAwBp5F,KAAKgwF,cAkBjC,GAhB0B,MAAtBhwF,KAAKgwF,eACLoJ,EAAI,IAAIrZ,KAAKsa,SACbr6F,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,IAGhCA,EAAEn0D,QAGgB,MAAlBjlC,KAAKq5F,WAAqBr5F,KAAKm/F,cAC/B/F,EAAEkB,UAAUt6F,KAAKq5F,UAAWr5F,KAAKy5F,WAEb,MAApBz5F,KAAKs5F,aACLF,EAAEmB,UAAUv6F,KAAKu5F,YAAav5F,KAAKs5F,YAAat5F,KAAK85F,YAAa,IAGlE95F,KAAKs0F,kBAAkBtyF,OAAS,EAAG,CACnCo3F,EAAExoB,OAAO5wE,KAAKs0F,kBAAkB,GAAG39C,EAAG32C,KAAKs0F,kBAAkB,GAAG19C,GAChE,IAAK,IAAI3/C,EAAI,EAAGA,EAAI+I,KAAKs0F,kBAAkBtyF,OAAQ/K,IAC/CmiG,EAAE8B,OAAOl7F,KAAKs0F,kBAAkBr9F,GAAG0/C,EAAG32C,KAAKs0F,kBAAkBr9F,GAAG2/C,IAIpE52C,KAAKm/F,cAAgBn/F,KAAK0/F,WAC1BtG,EAAEqB,YAGgB,MAAlBz6F,KAAKq5F,WAAqBr5F,KAAKm/F,cAC/B/F,EAAEsB,YA/Ed,+BAmFa/jD,EAAWC,GAAiC,IAAtB7B,IAAsB,yDAC7Ch8C,EAAI,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC1B52C,KAAKgwF,cAAc9jB,UAAUwU,eAAeyO,aAAap2F,EAAGA,GAC5DiH,KAAKs0F,kBAAkB/vF,KAAK,CAAEoyC,EAAG59C,EAAE49C,EAAGC,EAAG79C,EAAE69C,IAC3C52C,KAAKw0F,iBAAkB,EACnBz/C,GAAQ/0C,KAAK+0C,WAxFzB,kCA2FgB4B,EAAWC,EAAWx0C,GAC1BA,EAAQ,IAAGA,EAAQ,GACnBA,EAAQpC,KAAKs0F,kBAAkBtyF,SAAQI,EAAQpC,KAAKs0F,kBAAkBtyF,QAC1E,IAAIjJ,EAAI,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC1B52C,KAAKgwF,cAAc9jB,UAAUwU,eAAeyO,aAAap2F,EAAGA,GAC5DiH,KAAKs0F,kBAAkBv8E,OAAO3V,EAAO,EAAG,CAAEu0C,EAAG59C,EAAE49C,EAAGC,EAAG79C,EAAE69C,IACvD52C,KAAKw0F,iBAAkB,EACvBx0F,KAAK+0C,WAlGb,kCAqGgB4B,EAAWC,EAAWx0C,GAG9B,GAFIA,EAAQ,IAAGA,EAAQ,GACnBA,EAAQpC,KAAKs0F,kBAAkBtyF,SAAQI,EAAQpC,KAAKs0F,kBAAkBtyF,QACtC,GAAjChC,KAAKs0F,kBAAkBtyF,OAA1B,CACA,IAAIjJ,EAAI,IAAIgnF,KAAKmP,MAAMv4C,EAAGC,GAC1B52C,KAAKgwF,cAAc9jB,UAAUwU,eAAeyO,aAAap2F,EAAGA,GAC5DiH,KAAKs0F,kBAAkBlyF,GAAOu0C,EAAI59C,EAAE49C,EACpC32C,KAAKs0F,kBAAkBlyF,GAAOw0C,EAAI79C,EAAE69C,EACpC52C,KAAKw0F,iBAAkB,EACvBx0F,KAAK+0C,YA9Gb,+BAiHa4B,EAAWC,EAAWx0C,GACd,GAATA,GAAuB,GAATA,IACdpC,KAAKs0F,kBAAkBlyF,GAAS,CAAEu0C,EAAGA,EAAGC,EAAGA,GAC3C52C,KAAKw0F,iBAAkB,EACvBx0F,KAAK+0C,YArHjB,gCAyHco7B,EAAYC,EAAYC,EAAYC,GAC1CtwE,KAAKs0F,kBAAoB,CAAC,CAAE39C,EAAGw5B,EAAIv5B,EAAGw5B,GAAM,CAAEz5B,EAAG05B,EAAIz5B,EAAG05B,IACxDtwE,KAAKw0F,iBAAkB,EACvBx0F,KAAK+0C,WA5Hb,gDA+H8Bs+B,GACtBrzE,KAAKs0F,kBAAoB,GACzB,IAAK,IAAIr9F,EAAI,EAAGA,EAAIo8E,EAAOrxE,OAAQ/K,GAAK,EACpC+I,KAAKs0F,kBAAkB/vF,KAAK,CAAEoyC,EAAG08B,EAAOp8E,GAAI2/C,EAAGy8B,EAAOp8E,EAAI,KAE9D+I,KAAKw0F,iBAAkB,EACvBx0F,KAAK+0C,aArIb,GAAmC,I,0nCC9O5B,IAAM,GAAb,YAEI,WAAY/9C,GAAc,yBAEtB,0BAAM,YAAaA,EAAQ,cAEtBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAIlD,EAAKhU,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACnG,CAAE3H,WAAY,MAAOiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC6/B,EAAel2B,EAAW,GAAG3J,MAC7Bk/C,EAAcv1C,EAAW,GAAG3J,MAC5Bi+C,EAAgBt0C,EAAW,GAAG3J,MAC9Bk+C,EAAiBv0C,EAAW,GAAG3J,MAE/B6+F,EAAK,IAAI,GAAgBh/D,EAAMqf,EAAKjB,EAAOC,EAAQp/C,EAAO29B,KAAK6N,iBAAkB9qC,GACrFA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,qHAAqH,IAEtI,EAAKzsF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACJ,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACTiL,cAAF,MACtBgzC,EAAgBt0C,EAAW,GAAG3J,MAE9B86F,EAAGC,cAAc,cAErBD,EAAG78C,MAAQA,EAAQ68C,EAAGhD,cAAcxE,MAAM70C,EAC1Cq8C,EAAG0B,eAAiB1B,EAAGj7D,KAAOi7D,EAAG78C,MAAM,EAEvC68C,EAAGj+C,aAEJ,GAAO,EAAO,mCAAmC,IAEpD,EAAKzqC,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACJ,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACTiL,cAAF,MACtBizC,EAAiBv0C,EAAW,GAAG3J,MAE/B86F,EAAGC,cAAc,eAErBD,EAAG58C,OAASA,EAAS48C,EAAGhD,cAAcxE,MAAM50C,EAC5Co8C,EAAG2B,eAAiB3B,EAAG57C,IAAM47C,EAAG58C,OAAO,EAEvC48C,EAAGj+C,aAEJ,GAAO,EAAO,iCAAiC,IAEtD,EAAKzqC,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACTiL,cAAF,MAE1B,IAAI6vF,EAAGC,cAAc,YAErB,OAAOD,EAAG78C,MAAQ68C,EAAGyB,eAEtB,GAAO,EAAO,2BAA2B,IAEhD,EAAKnqF,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACTiL,cAAF,MAE1B,IAAI6vF,EAAGC,cAAc,aAErB,OAAOD,EAAG58C,OAAS48C,EAAGyB,eAEvB,GAAO,EAAO,yBAAyB,IAE1C,EAAKnqF,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAsBt7F,EAAEyL,cAAF,MAE1B,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,iEAAiE,IApGpE,EAF9B,kBAAoC,GA6GvB,GAAb,YAEI,WAAmB20B,EAAqBqf,EAAoBjB,EAAsBC,EAC9EpZ,EAA0BiL,GAA4B,yBACtD,0BAAMjL,EAAaiL,KAFJlQ,OAAqB,EAAAqf,MAAoB,EAAAjB,QAAsB,EAAAC,SAG9E,EAAKs+C,eAAiB38D,EAAOoe,EAAQ,EACrC,EAAKw+C,eAAiBv9C,EAAMhB,EAAS,EAErC,EAAKrB,SAEL,EAAKijD,oBAPiD,E,UAH9D,e,EAAA,G,EAAA,+BAcY90F,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAsB,IAAI8I,EAAgB7/F,KAAK+3B,KAAM/3B,KAAKo3C,IAAKp3C,KAAKm2C,MAAOn2C,KAAKo2C,OAAQp2C,KAAKo5E,YAAYp8C,YAAa2X,GAM1H,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IAvBf,+BA4BQ30C,KAAKs0F,kBAAoB,CACrB,CAAE39C,EAAG32C,KAAK+3B,KAAM6e,EAAG52C,KAAKo3C,KAAO,CAAET,EAAG32C,KAAK+3B,KAAM6e,EAAG52C,KAAKo3C,IAAMp3C,KAAKo2C,QACjE,CAAEO,EAAG32C,KAAK+3B,KAAO/3B,KAAKm2C,MAAOS,EAAG52C,KAAKo3C,IAAMp3C,KAAKo2C,QAAU,CAAEO,EAAG32C,KAAK+3B,KAAO/3B,KAAKm2C,MAAOS,EAAG52C,KAAKo3C,MAGpG,IAAIgiD,EAAwBp5F,KAAKgwF,cAEP,MAAtBhwF,KAAKgwF,eACLoJ,EAAI,IAAIrZ,KAAKsa,SACbr6F,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,IAGhCA,EAAEn0D,QAGgB,MAAlBjlC,KAAKq5F,WACLD,EAAEkB,UAAUt6F,KAAKq5F,UAAWr5F,KAAKy5F,WAEb,MAApBz5F,KAAKs5F,aACLF,EAAEmB,UAAUv6F,KAAKu5F,YAAav5F,KAAKs5F,YAAat5F,KAAK85F,YAAa,IAGtEV,EAAExoB,OAAO5wE,KAAK+3B,KAAM/3B,KAAKo3C,KACzBgiD,EAAE8B,OAAOl7F,KAAK+3B,KAAO/3B,KAAKm2C,MAAOn2C,KAAKo3C,KACtCgiD,EAAE8B,OAAOl7F,KAAK+3B,KAAO/3B,KAAKm2C,MAAOn2C,KAAKo3C,IAAMp3C,KAAKo2C,QACjDgjD,EAAE8B,OAAOl7F,KAAK+3B,KAAM/3B,KAAKo3C,IAAMp3C,KAAKo2C,QACpCgjD,EAAEqB,YAEoB,MAAlBz6F,KAAKq5F,WACLD,EAAEsB,e,6BA1Dd,GAAqC,I,yoBClH9B,IAAM,GAAb,YAEI,WAAY1jG,GAAc,a,4FAAA,UACtB,0BAAM,aAAcA,EAAQ,CACxB,CACIoJ,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,QAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,QAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,oBAIf4G,cAAgB,wEAnBC,EAF9B,O,mOAAA,SAAqC,I,0nCCK9B,IAAM,GAAb,YAEI,WAAY/I,GAAc,yBAEtB,0BAAM,mBAAoBA,EAAQ,qCAE7BonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAElD,EAAKhU,UAAU,IAAIvJ,EAAO,mBAAoB,IAAI8B,EAAc,CAC5D,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACnG,CAAE3H,WAAY,MAAOiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrG,CAAE3H,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC6/B,EAAel2B,EAAW,GAAG3J,MAC7Bk/C,EAAcv1C,EAAW,GAAG3J,MAC5Bi+C,EAAgBt0C,EAAW,GAAG3J,MAC9Bk+C,EAAiBv0C,EAAW,GAAG3J,MAC/B61E,EAAiBlsE,EAAW,GAAG3J,MAE/B6+F,EAAK,IAAI,GAAuBh/D,EAAMqf,EAAKjB,EAAOC,EAAQ23B,EAAQ/2E,EAAO29B,KAAK6N,iBAAkB9qC,GACpGA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,kIAAkI,IAEvJ,EAAKzsF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACFiL,cAAF,MAEjC,IAAI6vF,EAAGC,cAAc,YAErB,OAAOD,EAAG78C,MAAQ68C,EAAGhD,cAAcxE,MAAM70C,KAE1C,GAAO,EAAO,2BAA2B,IAEhD,EAAKrsC,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACFiL,cAAF,MAEjC,IAAI6vF,EAAGC,cAAc,aAErB,OAAOD,EAAG58C,OAAS48C,EAAGhD,cAAcxE,MAAM50C,KAE3C,GAAO,EAAO,yBAAyB,IAE1C,EAAKtsC,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACzDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACFiL,cAAF,MAEjC,IAAI6vF,EAAGC,cAAc,aAErB,OAAOD,EAAGjlB,OAASilB,EAAGhD,cAAcxE,MAAM50C,KAE3C,GAAO,EAAO,8BAA8B,IAE/C,EAAKtsC,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAA6Bt7F,EAAEyL,cAAF,MAEjC,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,wEAAwE,IA7E3E,EAF9B,kBAA2C,GAsF9B,GAAb,YAEI,WAAmB20B,EAAqBqf,EAAoBjB,EAAsBC,EAAuB23B,EACrG/wC,EAA0BiL,GAA4B,yBACtD,0BAAMjL,EAAaiL,KAFJlQ,OAAqB,EAAAqf,MAAoB,EAAAjB,QAAsB,EAAAC,SAAuB,EAAA23B,SAGrG,EAAK2mB,eAAiB38D,EAAOoe,EAAQ,EACrC,EAAKw+C,eAAiBv9C,EAAMhB,EAAS,EAErC,EAAKk+C,kBAAoB,GAEzB,EAAKwL,gBAAgB/nE,EAAOg2C,EAAQ32B,EAAM22B,EAAQzhE,KAAKumE,GAAG,GAC1D,EAAKitB,gBAAgB/nE,EAAOg2C,EAAQ32B,EAAMhB,EAAS23B,EAAQzhE,KAAKumE,IAChE,EAAKitB,gBAAgB/nE,EAAOoe,EAAQ43B,EAAQ32B,EAAMhB,EAAS23B,EAAQ,EAAEzhE,KAAKumE,GAAG,GAC7E,EAAKitB,gBAAgB/nE,EAAOoe,EAAQ43B,EAAQ32B,EAAM22B,EAAQ,GAC1D,EAAKumB,kBAAkB/vF,KAAK,CAACoyC,EAAG5e,EAAOg2C,EAAQn3B,EAAGQ,IAElD,EAAKrC,SACL,EAAKijD,oBAdiD,E,UAH9D,e,EAAA,G,EAAA,+BAqBY90F,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAA6B,IAAIgJ,EAAuB//F,KAAK+3B,KAAM/3B,KAAKo3C,IAAKp3C,KAAKm2C,MAAOn2C,KAAKo2C,OAAQp2C,KAAK+tE,OAAQ/tE,KAAKo5E,YAAYp8C,YAAa2X,GAMrJ,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IA9Bf,sCAkCoBqrD,EAAcC,EAAcC,GAIxC,IAHA,IACIC,EAAK7zF,KAAKumE,GAAG,EADT,EAGA57E,EAAI,EAAGA,GAHP,EAGeA,IACnB+I,KAAKs0F,kBAAkB/vF,KAAK,CAACoyC,EAAGqpD,EAAOhgG,KAAK+tE,OAAOzhE,KAAKymE,IAAImtB,EAAaC,EAAGlpG,GAAI2/C,EAAGqpD,EAAOjgG,KAAK+tE,OAAOzhE,KAAK0mE,IAAIktB,EAAaC,EAAGlpG,OAvC3I,+BA6CQ,IAAImiG,EAAwBp5F,KAAKgwF,cAEP,MAAtBhwF,KAAKgwF,eACLoJ,EAAI,IAAIrZ,KAAKsa,SACbr6F,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,IAGhCA,EAAEn0D,QAGgB,MAAlBjlC,KAAKq5F,WACLD,EAAEkB,UAAUt6F,KAAKq5F,UAAWr5F,KAAKy5F,WAEb,MAApBz5F,KAAKs5F,aACLF,EAAEmB,UAAUv6F,KAAKu5F,YAAav5F,KAAKs5F,YAAat5F,KAAK85F,YAAa,IAGtEV,EAAEgH,gBAAgBpgG,KAAK+3B,KAAK/3B,KAAKo3C,IAAKp3C,KAAKm2C,MAAOn2C,KAAKo2C,OAAQp2C,KAAK+tE,QAE9C,MAAlB/tE,KAAKq5F,WACLD,EAAEsB,e,6BAlEd,GAA4C,I,yoBC3FrC,IAAM,GAAb,YAEI,WAAY1jG,GAAc,a,4FAAA,UACtB,0BAAM,YAAaA,EAAQ,CACvB,CACIoJ,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,UAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,yBAIf4G,cAAgB,+EAdC,EAF9B,O,mOAAA,SAAoC,I,yoBCI7B,IAAM,GAAb,YAEI,WAAY/I,GAAc,O,4FAAA,UACtB,0BAAM,QAASA,EAAQ,gCAElBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAH5B,2BAKtB,IALsB,IAKtB,EALsB,iBAKdklC,EALc,QAMlB,EAAKj5C,aAAa,IAAI7J,EAAU8iD,EAAMhsD,KAAM6U,IAAqB,SAACnU,GAAYA,EAAMA,MAAQsrD,EAAMhsD,QAAQ,EAAMuM,EAAW4C,QAAQ,EAAM68C,EAAMrjD,eADnJ,EAAiBmjD,GAAWC,OAA5B,+CAAmC,IALb,yFAStB,EAAK38C,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAEtD,EAAK0D,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACJ,SAACe,GACG,IAAI2hD,EAAgB3hD,EAAW,GAAG3J,MAClCorD,GAAWQ,KAAKN,MAElB,GAAO,EAAM,gMApBO,EAF9B,O,mOAAA,SAAgC,G,uKCJzB,IAAM,GAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,4CAIuChsD,EAAc4K,EAAei+F,EAA4BtI,GAE3E,MAAT31F,IACAA,EAAQ,GAEZ5K,GAAQ,IAAM4K,EAEd,IAAIk+F,EAAUC,EAAgBC,aAAahpG,GAU3C,OARe,MAAX8oG,IAEAA,EAAUC,EAAgBE,WAAW1I,EAAQsI,EAAajnB,aAE1DmnB,EAAgBC,aAAahpG,GAAQ8oG,GAIlCA,IArBf,iCAyB8BvI,EAAqB3e,GAE3C,IAAIsnB,EAAStnB,EAAY2U,IAAIoC,SAASwQ,QAAQC,QAAQF,OAAO3I,GACzDznD,EAAIynD,EAAO5hD,MACXgmD,EAAIpE,EAAO3hD,OAEf,GAAIsqD,EAAO1+F,SAAW,EAAIsuC,EAAI6rD,EAC1B,MAAO,CAAC,CAAExlD,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAGrG,EAAGsG,EAAG,GAAK,CAAED,EAAGrG,EAAGsG,EAAGulD,GAAK,CAAExlD,EAAG,EAAGC,EAAGulD,IAGvE,IAAImE,EAAmB,GAInBO,EAAkB,GACtBN,EAAgBO,gBAAgB,CAACnqD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAGrG,EAAE,EAAGsG,EAAG,GAHpCmqD,EAIDF,GACrBN,EAAgBO,gBAAgB,CAACnqD,EAAGrG,EAAE,EAAGsG,EAAG,GAAI,CAACD,EAAGrG,EAAE,EAAGsG,EAAGulD,EAAE,GALxC4E,EAMDF,GACrBN,EAAgBO,gBAAgB,CAACnqD,EAAGrG,EAAE,EAAGsG,EAAGulD,EAAE,GAAI,CAACxlD,EAAG,EAAGC,EAAGulD,EAAE,GAPxC4E,EAQDF,GACrBN,EAAgBO,gBAAgB,CAACnqD,EAAG,EAAGC,EAAGulD,EAAE,GAAI,CAACxlD,EAAG,EAAGC,EAAG,GATpCmqD,EAUDF,GAGrB,IADA,IAAIG,EAAM,CAACrqD,EAAGrG,EAAE,EAAGsG,EAAGulD,EAAE,GACxB,MAAiB0E,EAAjB,eAAwB,CAApB,IAAII,EAAK,KACTV,EAAgBU,MAAMX,EAASW,EAAOD,EAAI1wD,EAAG6rD,EAAGuE,GAIpD,IADA,IlB4N6B94F,EAAUu0C,EAAUpjD,EAEjD6zE,EACAC,EAEA31E,EkBjOI+kC,GAAgB,GACbA,GAAK,CACRA,GAAO,EACP,IAAI,IAAIhlC,EAAI,EAAGA,EAAIqpG,EAAQt+F,OAAS,EAAG/K,IlByNd2Q,EkBxNQ04F,EAAQrpG,GlBwNNklD,EkBxNUmkD,GAASrpG,EAAE,GAAGqpG,EAAQt+F,QlBwNtBjJ,EkBxN+BunG,EAAQrpG,EAAE,GlB0N1F21E,SACAC,SAEA31E,SAHA01E,EAAKzwB,EAAExF,EAAI/uC,EAAE+uC,EACbk2B,EAAK1wB,EAAEvF,EAAIhvC,EAAEgvC,IAEb1/C,EAAIoV,KAAK+lE,KAAKxF,EAAKA,EAAKD,EAAKA,IAEzB,KACGmlB,GAAQnqF,EAAG7O,GAGfuT,KAAK6uD,IAAI0R,EAAK9zE,EAAE49C,EAAIi2B,EAAK7zE,EAAE69C,EAAIuF,EAAExF,EAAI/uC,EAAEgvC,EAAIuF,EAAEvF,EAAIhvC,EAAE+uC,GAAKz/C,GkBlO5C,IACHopG,EAAQvoF,OAAO9gB,EAAE,EAAG,GACpBglC,GAAO,GAOnB,OAAOqkE,IApEf,sCAwEmC56D,EAAc4Q,EAAY59C,EAAW26E,GAKhE,IAHA,IAAImf,GAAMl8C,EAAIK,EAAIjR,EAAMiR,IAAIj+C,EAAE,GAC1B+5F,GAAMn8C,EAAIM,EAAIlR,EAAMkR,IAAIl+C,EAAE,GAEtBzB,EAAI,EAAGA,GAAKyB,EAAI,EAAI,GAAKzB,IAC7Bo8E,EAAO9uE,KAAK,CACRoyC,EAAGjR,EAAMiR,EAAI67C,EAAGv7F,EAChB2/C,EAAGlR,EAAMkR,EAAI67C,EAAGx7F,MAhFhC,4BAuFyBqpG,EAAkB56D,EAAc4Q,EACjDH,EAAeC,EAAgBsqD,GAQ/B,IANA,IAII/pD,EAAWC,EAJX50C,EAAS+vF,GAAQrsD,EAAO4Q,GACxBk8C,GAAMl8C,EAAIK,EAAIjR,EAAMiR,GAAK30C,EACzBywF,GAAMn8C,EAAIM,EAAIlR,EAAMkR,GAAK50C,EAIpB/K,EAAI,EAAGA,GAAK+K,EAAS,IAE1B20C,EAAIjR,EAAMiR,EAAI1/C,EAAIu7F,EAClB57C,EAAIlR,EAAMkR,EAAI3/C,EAAIw7F,EAEb8N,EAAgBW,cAAcvqD,EAAGC,EAAGT,EAAOC,EAAQsqD,IAL3BzpG,KAUjCqpG,EAAQ/7F,KAAK,CAAEoyC,EAAGA,EAAGC,EAAGA,MA1GhC,oCA+GiCD,EAAWC,EAAWT,EAAeC,EAAgBsqD,GAE9E,OAAI/pD,EAAI,GAAKC,EAAI,GAAKD,EAAIR,GAASS,EAAIR,GAQ3B,GAJJsqD,EAAO,EAAIp0F,KAAK+5B,MAAMsQ,GAAK,EAAIR,EAAQ7pC,KAAK+5B,MAAMuQ,GAAK,O,EArHvE,O,6BAAA,K,0nCAEmB,GAAA4pD,aAA4C,GCWxD,IAAM,GAAb,YAEI,WAAYxpG,GAAc,kBAEtB,0BAAM,SAAUA,EAAQ,uLAEnBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,UAElD,IAAI6iF,EAAwBnqG,EAAOqnB,UAAUC,QAAQ,aAN/B,OAUtB,EAAKhU,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,qBAAsBiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACvI,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,YAAaiH,KAAM+gG,EAAgBjxF,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEnG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BkpG,EAAwCv/F,EAAW,GAAG3J,MACtDkK,EAAgBP,EAAW,GAAG3J,MAC9BugG,EAA+B52F,EAAW,GAAG3J,MAE7C6+F,EAAK,IAAI,GAAapgD,EAAGC,EAAGwqD,EAAmB/jF,UAAUlkB,WAAYiJ,EAAOpL,EAAO29B,KAAK6N,iBAAkB9qC,EAAG,KAAM+gG,EAAUp7E,UAAUlkB,YAC3IzB,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,oUAAoU,IAEzV,EAAKzsF,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,QAASiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,SAAUpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClH,CAAE3H,WAAY,YAAaiH,KAAM+gG,EAAgBjxF,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEnG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCq7F,EAAuB1xF,EAAW,GAAG3J,MACrCugG,EAA+B52F,EAAW,GAAG3J,MAEjD,GAAY,MAATq7F,EAAH,CAKA,IAAIwD,EAAK,IAAI,GAAa,EAAG,EAAG,GAAI,EAAG//F,EAAO29B,KAAK6N,iBAAkB9qC,EAAG67F,EAAMpwF,cAAN,MAA8Bs1F,EAAUp7E,UAAUlkB,YAC1HzB,EAAEyL,cAAF,MAA2B4zF,OALvB//F,EAAO29B,KAAK6N,iBAAiB0E,eAAe,qCAOjD,GAAO,EAAO,sIAAsI,IAE3J,EAAK58B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,QAASiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,SAAUpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClH,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCq7F,EAAuB1xF,EAAW,GAAG3J,MAEzC,GAAY,MAATq7F,EAAH,CAKA,IAAIwD,EAAK,IAAI,GAAa,EAAG,EAAG,GAAI,EAAG//F,EAAO29B,KAAK6N,iBAAkB9qC,EAAG67F,EAAMpwF,cAAN,MAA8B,UACtGzL,EAAEyL,cAAF,MAA2B4zF,OALvB//F,EAAO29B,KAAK6N,iBAAiB0E,eAAe,qCAOjD,GAAO,EAAO,sIAAsI,IAE3J,EAAK58B,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,qBAAsBiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACvI,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BkpG,EAAwCv/F,EAAW,GAAG3J,MACtDkK,EAAgBP,EAAW,GAAG3J,MAE9B6+F,EAAK,IAAI,GAAapgD,EAAGC,EAAGwqD,EAAmB/jF,UAAUlkB,WAAYiJ,EAAOpL,EAAO29B,KAAK6N,iBAAkB9qC,GAC9GA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,qUAAqU,IAE1V,EAAKzsF,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,qBAAsBiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEvI,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BkpG,EAAwCv/F,EAAW,GAAG3J,MAEtD6+F,EAAK,IAAI,GAAapgD,EAAGC,EAAGwqD,EAAmB/jF,UAAUlkB,WAAY,KAAMnC,EAAO29B,KAAK6N,iBAAkB9qC,GAC7GA,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,oUAAoU,IAEzV,EAAKzsF,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,qBAAsBiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEvI,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkpG,EAAwCv/F,EAAW,GAAG3J,MACtD86F,EAAiCt7F,EAAEyL,cAAF,MAEjC6vF,EAAGC,cAAc,aAErBD,EAAGqO,WAAWD,EAAmB/jF,UAAUlkB,eAE5C,GAAO,EAAO,0RAA0R,IAE/S,EAAKmR,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,qBAAsBiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACvI,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkpG,EAAwCv/F,EAAW,GAAG3J,MACtDkK,EAAgBP,EAAW,GAAG3J,MAC9B86F,EAAiCt7F,EAAEyL,cAAF,MAEjC6vF,EAAGC,cAAc,aAErBD,EAAGqO,WAAWD,EAAmB/jF,UAAUlkB,WAAYiJ,MAExD,GAAO,EAAO,0RAA0R,IAE/S,EAAKkI,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkK,EAAgBP,EAAW,GAAG3J,MAC9B86F,EAAiCt7F,EAAEyL,cAAF,MAEjC6vF,EAAGC,cAAc,aAErBD,EAAGqO,WAAWrO,EAAGsO,YAAal/F,MAE/B,GAAO,EAAO,qCAAqC,IAE1D,EAAKkI,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,aAAciH,KAAM,IAAI,EAAUgP,IAAmBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrH,CAAE3H,WAAY,aAAciH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,cAAepO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC5H,CAAE3H,WAAY,kBAAmBiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAE3G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCqpG,EAAsB1/F,EAAW,GAAG3J,MACpCspG,EAAgC3/F,EAAW,GAAG3J,MAC9CupG,EAA0B5/F,EAAW,GAAG3J,MACxC86F,EAAiCt7F,EAAEyL,cAAF,MAEjCu+F,EAAoB,GARb,uBASX,YAAcH,EAAd,+CAA0B,KAAjB19F,EAAiB,QACtB69F,EAAQn9F,KAAKV,EAAE3L,QAVR,kFAaP86F,EAAGC,cAAc,kBAErBD,EAAG2O,cAAcD,EAASF,EAAWnkF,UAAUlkB,WAAYsoG,MAE5D,GAAO,EAAO,6BAA6B,IAElD,EAAKn3F,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,YAAaiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrG,CAAE3H,WAAY,UAAWiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACnG,CAAE3H,WAAY,aAAciH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,cAAepO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC5H,CAAE3H,WAAY,kBAAmBiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAE3G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC0pG,EAAoB//F,EAAW,GAAG3J,MAClC2pG,EAAkBhgG,EAAW,GAAG3J,MAChCspG,EAAgC3/F,EAAW,GAAG3J,MAC9CupG,EAA0B5/F,EAAW,GAAG3J,MACxC86F,EAAiCt7F,EAAEyL,cAAF,MAErC,IAAI6vF,EAAGC,cAAc,iBAArB,CAEA,IAAIyO,EAAoB,GAExB,GAAIE,EAAYC,GAAWA,EAAUD,EAAY,IAC7C,IAAK,IAAI3qG,EAAI2qG,EAAW3qG,EAAI4qG,EAAS5qG,IAAKyqG,EAAQn9F,KAAKtN,GAG3D+7F,EAAG2O,cAAcD,EAASF,EAAWnkF,UAAUlkB,WAAYsoG,OAE5D,GAAO,EAAO,6BAA6B,IAElD,EAAKn3F,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IACzD,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACEiL,cAAF,MAEjC6vF,EAAGC,cAAc,kBAErBD,EAAG8O,eAAc,MAElB,GAAO,EAAO,yEAAyE,IAE9F,EAAKx3F,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACEiL,cAAF,MAEjC6vF,EAAGC,cAAc,mBAErBD,EAAG+O,oBAEJ,GAAO,EAAO,oCAAoC,IAEzD,EAAKz3F,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,IAC3D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACEiL,cAAF,MAEjC6vF,EAAGC,cAAc,oBAErBD,EAAGgP,qBAEJ,GAAO,EAAO,qDAAqD,IAE1E,EAAK13F,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACzGgS,IACA,SAACjR,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCkyF,EAAgBvoF,EAAW,GAAG3J,MAC9B86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,aAErBD,EAAGwG,SAASpP,MAEb,GAAO,EAAO,6GAA6G,IAElI,EAAK9/E,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAmBt7F,EAAEyL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,8DAA8D,IAGnF,EAAKkH,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,YAErB,OAAOD,EAAGiP,cAEX,GAAO,EAAO,2BAA2B,IAEhD,EAAK33F,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,aAErB,OAAOD,EAAGkP,eAEX,GAAO,EAAO,yBAAyB,IA/SxB,EAF9B,kBAAiC,GAuTpB,GAAb,YAWI,WAAmBvrD,EAAkBC,EAAkBp/C,EAAqB4K,EACxE46B,EAA0BiL,EAA8Bk6D,GACrB,MAA5B1J,EAA4B,uDAAR,SAG3B,GAHmC,YACnC,0BAAMz7D,EAAaiL,KAHJ0O,IAAkB,EAAAC,IAAkB,EAAAp/C,OAAqB,EAAA4K,QAEjE,EAAAq2F,YAXX,EAAA2J,iBAA6B,GAC7B,EAAAC,eAAyB,EACzB,EAAAC,qBAA+B,EAC/B,EAAAC,cAAwB,EACxB,EAAAC,iBAA2B,EAE3B,EAAAhB,WAAa,OACb,EAAAF,YAAsB,GAOO,MAAtBa,EACC,EAAKd,WAAW,KAAMj/F,OACnB,CACH,EAAKqgG,oBAAoBN,GACzB,IAAIhM,EAASgM,EAAmBnS,cAAciF,YAC9C,EAAKt+C,EAAIw/C,EAAOp+D,KAAOo+D,EAAOhgD,MAAM,EACpC,EAAKS,EAAIu/C,EAAO/+C,IAAM++C,EAAO//C,OAAO,EAGxC,IAAI2hD,EAAsB,EAAK/H,cAE/B,EAAKA,cAAc3P,eAAe+K,UAAU,EAAKz0C,EAAIohD,EAAO5hD,MAAQ,EAAG,EAAKS,EAAImhD,EAAO3hD,OAAS,GAEhG,EAAK45C,cAAc9jB,UAAUmf,WAE7B,EAAKjS,YAAY8R,MAAMwD,SAASqJ,GAEhC,EAAKrD,eAAiBqD,EAAO5hD,MAAQ,EACrC,EAAKw+C,eAAiBoD,EAAO3hD,OAAS,EArBH,2BAuBnC,YAAa,EAAKk+C,kBAAlB,+CAAoC,QAvBD,yFA4BnC,EAAK0D,oBA5B8B,E,UAb3C,e,EAAA,G,EAAA,2CA6CwBmK,GAEhB,IAAIhM,EAASgM,EAAmBnS,cAAciF,YAE1C9+C,EAAQggD,EAAOhgD,MACfC,EAAS+/C,EAAO//C,OAEdssD,EAAM,IAAI3iB,KAAK4iB,kBACjB,CACIlK,UAA6B,qBAAlBz4F,KAAKy4F,UAAmC1Y,KAAKqN,YAAYC,QAAUtN,KAAKqN,YAAYwV,OAC/FzsD,MAAOA,EACPC,OAAQA,IAGZhyB,EAAyB,IAAI27D,KAAK8iB,cAAcH,GAEhDI,EAAMX,EAAmBnS,cAC7BhwF,KAAKo5E,YAAY2U,IAAIoC,SAASp7C,OAAO+tD,EAAK,CACtCC,cAAe3+E,EACf8nD,WAAW,IAAI6T,KAAKiL,QAASI,WAAW+K,EAAOp+D,MAAOo+D,EAAO/+C,OAGjE,IAAIi8B,EAA6B,GACjCA,EAASrzE,KAAKs/F,cAAc6C,EAAoB9uB,GAvBD,2BAyB/C,YAAaA,EAAb,+CAAoB,KAAZt6E,EAAY,QAChBA,EAAE49C,GAAKw/C,EAAOp+D,KACdh/B,EAAE69C,GAAKu/C,EAAO/+C,KA3B6B,kFA8B9Cp3C,KAAKs0F,kBAAoBjhB,EAC1BrzE,KAAKs0F,kBAAoBqK,GAAWC,SAASvrB,GAE7CrzE,KAAKw0F,iBAAkB,EAEvBx0F,KAAKgwF,cAAgB,IAAIjQ,KAAK4Y,OAAOv0E,GAErC+9E,EAAmB3S,oBAAmB,KAlF9C,oCAsFkBO,EAA0B1c,GACpC,GAAG0c,aAAuB,GAAY,4BAClC,YAAcA,EAAYtH,OAA1B,+CAAiC,KAAzBuK,EAAyB,QAC7B3f,EAASrzE,KAAKs/F,cAActM,EAAG7vF,cAAH,MAA2BkwE,IAFzB,kFAIlC,OAAOA,EAGP,OADG0c,EAAYyE,iBAAiBzE,EAAYoF,sBACrC9hB,EAAOnrE,OAAO6nF,EAAYwE,sBAAsBxxF,KAAI,SAASmvF,GAAO,MAAO,CAACv7C,EAAGu7C,EAAMv7C,EAAGC,EAAGs7C,EAAMt7C,SA9FpH,iCAqGQ,OAD0B52C,KAAKgwF,cACjB75C,MAAQn2C,KAAKy0F,cArGnC,kCA0GQ,OAD0Bz0F,KAAKgwF,cACjB55C,OAASp2C,KAAKy0F,cA1GpC,8BA6GYvxF,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAmB,IAAIiM,EAAahjG,KAAK22C,EAAG32C,KAAK42C,EAAG52C,KAAKxI,KAAMwI,KAAKoC,MAAOpC,KAAKo5E,YAAYp8C,YAAa2X,GAM7G,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IAtHf,+BA0Hay1C,GACLpqF,KAAKgwF,cAAc5F,MAAQA,IA3HnC,iCA8He5yF,EAAe4K,GAEtB,GAAI5K,GAAQwI,KAAKxI,MAAQ4K,GAASpC,KAAKoC,MAAvC,CAEY,MAAR5K,IAAcA,EAAOwI,KAAKxI,MACjB,MAAT4K,IAAeA,EAAQ,GAC3BpC,KAAKoC,MAAQA,EAEbpC,KAAKshG,YAAc9pG,EAEnB,IAAIyrG,EAAS,GAEe,MAAxBhtD,OAAOitD,gBAEPD,EAAShtD,OAAOitD,eAGpB,IAAIC,EAAQpjB,KAAKqjB,OAAO/U,OAAOgV,UAAUJ,EAAS,oCAC9CK,EAAgB9rG,EAAO,IAAM4K,EAC7Bg2F,EAAU+K,EAAMI,SAASD,GAE7B,GAAe,MAAXlL,EAAiB,CAEjB,GAAsB,qBAAlBp4F,KAAKy4F,UAAkC,CAEvC,IAAItgG,EAAI6H,KAAKo5E,YAAY2T,eAAeuW,GAExC,GAAS,MAALnrG,EAAW,CACX,IAAI,EAAS,IAAI4nF,KAAK4Y,OAAOP,GAEzBoL,EAAkBzjB,KAAK8iB,cAActqG,OAAO,CAC5C49C,MAAO,EAAOA,MACdC,OAAQ,EAAOA,OACfqiD,UAAW1Y,KAAKqN,YAAYC,UAGhCrtF,KAAKo5E,YAAY2U,IAAIoC,SAASp7C,OAAO,EAAQ,CACzCguD,cAAeS,IAEnBxjG,KAAKo5E,YAAY2T,eAAeuW,GAAiBE,EACjDrrG,EAAIqrG,EAIO,OADfpL,EAAUjgG,KACWigG,EAAU+K,EAAMI,SAASD,IAmClD,IAAIvL,EAAmC/3F,KAAKgwF,cAC9B,MAAV+H,GACAA,EAAS,IAAIhY,KAAK4Y,OAAOP,GACzBp4F,KAAKgwF,cAAgB+H,GAErBA,EAAOK,QAAUA,EAGrBp4F,KAAKs0F,kBAAoB,GAAgBmP,qBAAqBjsG,EAAM4K,EAAOpC,KAAM,IAAI+/E,KAAK4Y,OAAOwK,EAAMI,SAASD,KAChHtjG,KAAKw0F,iBAAkB,OAGG,MAAtBx0F,KAAKgwF,gBACLhwF,KAAKgwF,cAAgB,IAAIjQ,KAAK4Y,WA1N9C,sEAqOkB4I,EAAsBC,EAAoBC,GACpDzhG,KAAK8hG,eAAc,GACnB9hG,KAAKoiG,iBAAmBb,EACxBvhG,KAAKwhG,WAAaA,EAClBxhG,KAAKsiG,qBAAuBb,EAAkB,IAC9CzhG,KAAKuiG,cAAgB,EACrBviG,KAAKqiG,eAAgB,EACrBriG,KAAKo5E,YAAY2N,iBAAiBxiF,KAAKvE,QA5O/C,oCA+OkB0jG,GACV,GAAI1jG,KAAKqiG,cAAe,CACpB,IAAIsB,EAAmB3jG,KAAKo5E,YAAY2N,iBACpC9vF,EAAI0sG,EAAiBv+F,QAAQpF,MACjC2jG,EAAiB5rF,OAAO9gB,EAAG,GAE/B+I,KAAKqiG,eAAgB,EACjBqB,GAAc1jG,KAAK4zF,YAAW,KAtP1C,uCA0PQ5zF,KAAKwiG,iBAAkB,IA1P/B,wCA8PQxiG,KAAKwiG,iBAAkB,IA9P/B,2BAiQSoB,GAED,IAAI5jG,KAAKwiG,gBAAT,CAEA,IAAIqB,EAEJ,GAAuB,gBAAnB7jG,KAAKwhG,WAA8B,CACnC,IAAIsC,EAAyC,EAA/B9jG,KAAKoiG,iBAAiBpgG,OAAahC,KAAKsiG,qBAClDyB,EAAsBz3F,KAAKyE,MAAM/Q,KAAKuiG,cAAgBuB,GACtDE,EAAiBhkG,KAAKuiG,cAAgBwB,EAAsBD,GAChED,EAAQ7jG,KAAKsiG,qBAAuB0B,IACvBhkG,KAAKoiG,iBAAiBpgG,SAC/B6hG,EAAQ,EAAI7jG,KAAKoiG,iBAAiBpgG,OAAS6hG,GAE/CA,EAAQv3F,KAAKyE,MAAM8yF,QAEnB,GAAuB,QAAnB7jG,KAAKwhG,WAAsB,CAC3B,IAAIyC,EAASjkG,KAAKoiG,iBAAiBpgG,OAAShC,KAAKsiG,qBAC7C,EAAsBh2F,KAAKyE,MAAM/Q,KAAKuiG,cAAgB0B,GACtD,EAAiBjkG,KAAKuiG,cAAgB,EAAsB0B,EAChEJ,EAAQ7jG,KAAKsiG,qBAAuB,EACpCuB,EAAQv3F,KAAKyE,MAAM8yF,QAGnB,IADAA,EAAQv3F,KAAKyE,MAAM/Q,KAAKsiG,qBAAuBtiG,KAAKuiG,iBACvCviG,KAAKoiG,iBAAiBpgG,OAE/B,YADAhC,KAAK8hG,eAAc,GAK/B9hG,KAAKuiG,eAAiBqB,EAEtB5jG,KAAKqhG,WAAW,KAAMrhG,KAAKoiG,iBAAiByB,U,6BAjSpD,GAAkC,I,yoBC5T3B,IAAM,GAAb,YAEI,WAAY7sG,GAAc,a,4FAAA,UACtB,0BAAM,gBAAiBA,EAEnBktG,cAAcr5F,QACV,SAACs5F,GACG,OAAoB,MAAbA,EAAI/hG,OAA8B,GAAb+hG,EAAI/hG,SAEtCW,KAAI,SAACohG,GACH,MAAO,CACH/jG,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAYgrG,EAAI3sG,YAMvBuI,cAAgB,iCAjBC,EAF9B,O,mOAAA,SAAwC,I,0nCCFjC,IAAM,GAAb,YAEI,WAAY/I,GAAc,yBAEtB,0BAAM,OAAQA,EAAQ,mEAEjBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAIlD,EAAKhU,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACvG,CAAE3H,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BksG,EAAmBviG,EAAW,GAAG3J,MACjC0d,EAAe/T,EAAW,GAAG3J,MAE7B86F,EAAK,IAAI,GAAWr8C,EAAGC,EAAGwtD,EAAUxuF,EAAM5e,EAAO29B,KAAK6N,iBAAkB9qC,GAC5EA,EAAEyL,cAAF,MAA2B6vF,KAE5B,GAAO,EAAO,+IAA+I,IAEpK,EAAK1oF,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCksG,EAAmBviG,EAAW,GAAG3J,MAChBR,EAAEyL,cAAF,MAElBkhG,YAAYD,MAEhB,GAAO,EAAO,uDAAuD,IAE5E,EAAK95F,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,YAAaiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,aAAcpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1H,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC82E,EAA+BntE,EAAW,GAAG3J,MAC5BR,EAAEyL,cAAF,MAElBmhG,aAAat1B,EAAU3xD,UAAUlkB,eAErC,GAAO,EAAO,yHAAyH,IAE9I,EAAKmR,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC0d,EAAe/T,EAAW,GAAG3J,MACZR,EAAEyL,cAAF,MAElBohG,QAAQ3uF,MAEZ,GAAO,EAAO,mBAAmB,IAExC,EAAKtL,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAiBt7F,EAAEyL,cAAF,MAErB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,4DAA4D,IAEjF,EAAKkH,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACdiL,cAAF,MAErB,IAAI6vF,EAAGC,cAAc,YAErB,OAAOD,EAAGiP,cAEX,GAAO,EAAO,sCAAsC,IAE3D,EAAK33F,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDoN,IACA,SAACpO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACdiL,cAAF,MAErB,IAAI6vF,EAAGC,cAAc,aAErB,OAAOD,EAAGkP,eAEX,GAAO,EAAO,oCAAoC,IAvGnC,EAF9B,kBAA+B,GAgHlB,GAAb,YAkBI,WAAmBvrD,EAAkBC,EAAkBwtD,EAC5CxuF,EACPonB,EAA0BiL,GAA4B,yBACtD,0BAAMjL,EAAaiL,KAHJ0O,IAAkB,EAAAC,IAAkB,EAAAwtD,WAC5C,EAAAxuF,OAjBX,EAAAo5D,UAAoB,OAEpB,EAAAw1B,UACI,IAAIzkB,KAAK0kB,UAAU,CACf98C,WAAY,QACZD,SAAU,EAAK08C,SACfvrC,UAAW,SACXjR,WAAY,SACZjkD,KAAM,CAAC,EAAK01F,WACZppB,OAAQ,EAAKqpB,YACboL,gBAAiB,EAAKnL,YACtBoL,YAAY,EACZC,UAAU,EACVC,MAAO,SAOX,EAAKnQ,eAAiB/9C,EACtB,EAAKg+C,eAAiB/9C,EAEtB,EAAK0iD,YAAc,KACnB,EAAKkL,UAAUv0B,OAAS,KAExB,EAAKqkB,kBAAoB,GAEzB,EAAKv/C,SACL,EAAKijD,oBAXiD,E,UApB9D,e,EAAA,G,EAAA,+BAkCY90F,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAiB,IAAI+N,EAAW9kG,KAAK22C,EAAG32C,KAAK42C,EAAG52C,KAAKokG,SAAUpkG,KAAK4V,KAAM5V,KAAKo5E,YAAYp8C,YAAa2X,GAQ5G,OAPAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG/nB,UAAYhvE,KAAKgvE,UAEpB+nB,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IA7Cf,+BAmDQ,IAAIykD,EAAoBp5F,KAAKgwF,cAE7B,GAA0B,MAAtBhwF,KAAKgwF,cACLoJ,EAAI,IAAIrZ,KAAKglB,KAAK/kG,KAAK4V,KAAM5V,KAAKwkG,WAClCxkG,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKgwF,cAAc3P,eAAe+K,UAAUprF,KAAK22C,EAAG32C,KAAK42C,GAEzD52C,KAAKgwF,cAAc9jB,UAAUmf,WAC7BrrF,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,OAC7B,CAOH,OANAA,EAAExjF,KAAO5V,KAAK4V,KACd5V,KAAKwkG,UAAU7gG,KAAO3D,KAAKq5F,UAC3Br5F,KAAKwkG,UAAUv0B,OAASjwE,KAAKs5F,YAC7Bt5F,KAAKwkG,UAAUE,gBAAkB1kG,KAAKu5F,YACtCH,EAAEhP,MAAQpqF,KAAKy5F,UACfz5F,KAAKwkG,UAAU98C,SAAW1nD,KAAKokG,SACvBpkG,KAAKgvE,WACT,IAAK,OAAQoqB,EAAE4L,OAAOruD,EAAI,EAAG,MAC7B,IAAK,SAAUyiD,EAAE4L,OAAOruD,EAAI,GAAK,MACjC,IAAK,QAASyiD,EAAE4L,OAAOruD,EAAI,EAE/ByiD,EAAE19E,MAAQ1b,KAAKwkG,UAKnB,GAFAxkG,KAAK00F,eAAiB,EACtB10F,KAAK20F,eAAiB,EACN,MAAb30F,KAAK4V,KAAa,CACjB,IAAIqvF,EAAKllB,KAAKmlB,YAAYC,YAAYnlG,KAAK4V,KAAM5V,KAAKwkG,WAEtDxkG,KAAK00F,eAAiBuQ,EAAG9uD,MAAQ,EACjCn2C,KAAK20F,eAAiBsQ,EAAG7uD,OAAS,KAjF9C,kCAuFgBguD,GACRpkG,KAAKokG,SAAWA,EAChBpkG,KAAK+0C,WAzFb,8BA4FYn/B,GACJ5V,KAAK4V,KAAOA,EACZ5V,KAAK+0C,WA9Fb,mCAiGiBi6B,GACThvE,KAAKgvE,UAAYA,EACjBhvE,KAAK+0C,WAnGb,iCAwGQ,OADwB/0C,KAAKgwF,cACpB75C,QAxGjB,kCA6GQ,OADwBn2C,KAAKgwF,cACpB55C,Y,6BA7GjB,GAAgC,I,yoBCnHzB,IAAM,GAAb,YAEI,WAAYp/C,GAAc,a,4FAAA,UACtB,0BAAM,OAAQA,EAAQ,wIAEjBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAK/T,aAAa,IAAI7J,EAAU,KAAMuP,IAAqB,SAAC/X,GAAYA,EAAMA,MAAQoU,KAAKumE,MAAM,EAAM9uE,EAAW4C,QAAQ,EAAM,iCAChI,EAAK4D,aAAa,IAAI7J,EAAU,IAAKuP,IAAqB,SAAC/X,GAAYA,EAAMA,MAAQoU,KAAK84F,KAAK,EAAMrhG,EAAW4C,QAAQ,EAAM,yBAE9H,EAAKC,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAEtD,EAAK0D,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGsO,IACA,SAACvN,GACG,OAAOyK,KAAK+5B,MAAcxkC,EAAW,GAAG3J,UACzC,GAAO,EAAM,wBAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGsO,IACA,SAACvN,GACG,OAAOyK,KAAK6sB,MAAct3B,EAAW,GAAG3J,UACzC,GAAO,EAAM,qEAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGsO,IACA,SAACvN,GACG,OAAOyK,KAAK43D,KAAariE,EAAW,GAAG3J,UACxC,GAAO,EAAM,gEAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGsO,IACA,SAACvN,GACG,OAAOyK,KAAKiE,KAAa1O,EAAW,GAAG3J,UACxC,GAAO,EAAM,sKAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGmP,IACA,SAACpO,GACG,OAAOyK,KAAK+lE,KAAaxwE,EAAW,GAAG3J,UACxC,GAAO,EAAM,kJAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAClDoN,IACA,SAACpO,GACG,OAAOyK,KAAKikC,YACb,GAAO,EAAM,0DAEpB,EAAKjmC,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpG,CAAE3H,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGmP,IACA,SAACpO,GACG,OAAOyK,KAAKqK,IAAY9U,EAAW,GAAG3J,MAAe2J,EAAW,GAAG3J,UACpE,GAAO,EAAM,2CAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GmP,IACA,SAACpO,GACG,OAAgBA,EAAW,GAAG3J,MAASoU,KAAKumE,GAAK,OAClD,GAAO,EAAM,2EAEpB,EAAKvoE,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,eAAgBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3GmP,IACA,SAACpO,GACG,OAAgBA,EAAW,GAAG3J,MAAS,IAAMoU,KAAKumE,MACnD,GAAO,EAAM,2EAEpB,EAAKvoE,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGmP,IACA,SAACpO,GACG,OAAOyK,KAAK+4F,IAAYxjG,EAAW,GAAG3J,UACvC,GAAO,EAAM,iCAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGmP,IACA,SAACpO,GACG,OAAOyK,KAAKu8B,IAAYhnC,EAAW,GAAG3J,UACvC,GAAO,EAAM,oDAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGmP,IACA,SAACpO,GACG,OAAOyK,KAAKg5F,MAAczjG,EAAW,GAAG3J,UACzC,GAAO,EAAM,8CAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GmP,IACA,SAACpO,GACG,OAAOyK,KAAK0mE,IAAYnxE,EAAW,GAAG3J,UACvC,GAAO,EAAM,qCAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GmP,IACA,SAACpO,GACG,OAAOyK,KAAKymE,IAAYlxE,EAAW,GAAG3J,UACvC,GAAO,EAAM,uCAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,cAAeiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GmP,IACA,SAACpO,GACG,OAAOyK,KAAKi5F,IAAY1jG,EAAW,GAAG3J,UACvC,GAAO,EAAM,uCAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,eAAgBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC3GmP,IACA,SAACpO,GACG,OAAOyK,KAAKk5F,KAAa3jG,EAAW,GAAG3J,UACxC,GAAO,EAAM,iDAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,iBAAkBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7GmP,IACA,SAACpO,GACG,OAAOyK,KAAKm5F,KAAa5jG,EAAW,GAAG3J,UACxC,GAAO,EAAM,mDAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,iBAAkBiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7GmP,IACA,SAACpO,GACG,OAAOyK,KAAKo5F,KAAa7jG,EAAW,GAAG3J,UACxC,GAAO,EAAM,mDAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGmP,IACA,SAACpO,GACG,OAAOyK,KAAK6uF,MAAct5F,EAAW,GAAG3J,MAAe2J,EAAW,GAAG3J,UACtE,GAAO,EAAM,2LAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnGmP,IACA,SAACpO,GACG,OAAOyK,KAAK6uD,IAAYt5D,EAAW,GAAG3J,UACvC,GAAO,EAAM,qCAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,OAAQiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGkP,IACA,SAACnO,GACG,OAAOyK,KAAK6uD,IAAYt5D,EAAW,GAAG3J,UACvC,GAAO,EAAM,qCAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGsO,IACA,SAACvN,GACG,OAAOyK,KAAK6uD,IAAYt5D,EAAW,GAAG3J,UACvC,GAAO,EAAM,qCAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FsO,IACA,SAACvN,GACG,OAAOyK,KAAKi3D,IAAY1hE,EAAW,GAAG3J,MAAe2J,EAAW,GAAG3J,UACpE,GAAO,EAAM,+CAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,IAAKiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC/F,CAAE3H,WAAY,IAAKiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC/FkP,IACA,SAACnO,GACG,OAAOyK,KAAKi3D,IAAY1hE,EAAW,GAAG3J,MAAe2J,EAAW,GAAG3J,UACpE,GAAO,EAAM,+CAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGmP,IACA,SAACpO,GACG,OAAOyK,KAAKi3D,IAAY1hE,EAAW,GAAG3J,MAAe2J,EAAW,GAAG3J,UACpE,GAAO,EAAM,+CAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7FsO,IACA,SAACvN,GACG,OAAOyK,KAAKC,IAAY1K,EAAW,GAAG3J,MAAe2J,EAAW,GAAG3J,UACpE,GAAO,EAAM,gDAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,IAAKiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC/F,CAAE3H,WAAY,IAAKiH,KAAM4P,GAAoBE,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC/FkP,IACA,SAACnO,GACG,OAAOyK,KAAKC,IAAY1K,EAAW,GAAG3J,MAAe2J,EAAW,GAAG3J,UACpE,GAAO,EAAM,gDAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGmP,IACA,SAACpO,GACG,OAAOyK,KAAKC,IAAY1K,EAAW,GAAG3J,MAAe2J,EAAW,GAAG3J,UACpE,GAAO,EAAM,gDArNE,EAF9B,O,mOAAA,SAA+B,G,88BCExB,IAAM,GAAb,YAMI,WAAYlB,GAAc,yBACtB,0BAAM,SAAUA,EAAQ,+FAH5B2uG,gBAA0B,EAKtB,EAAKC,YAAc,IAAI,EAAqB5uG,EAAOqnB,UAAUC,QAAQ,gBAErE,EAAKF,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAK/T,aAAa,IAAI7J,EAAU,MAAO1J,EAAOqnB,UAAUC,QAAQ,gBAC5D,SAACpmB,GAAYA,EAAMA,MAAQ,EAAK0tG,eAAe,EAAM7hG,EAAW4C,QAAQ,EAAM,6DAElF,EAAKC,YAAYG,iCAGjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAsDtD,EAAK0D,UAAU,IAAIvJ,EAAO,oBAAqB,IAAI8B,EAAc,IAC7DuM,IACA,SAACvN,GACG,OAAOgtD,KAAK/pB,MAAQ,EAAK6gE,mBAE3B,GAAO,EAAM,oGAxEG,EAN9B,kBAAiC,GAoFpB,GAAb,YAEI,WAAY3uG,GAAc,yBACtB,0BAAM,cAAeA,EAAQ,sHAExBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAKhU,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GACG7K,EAAO29B,KAAK6N,iBAAiB0J,aAAavhB,MAAM9oB,EAAW,GAAG3J,UAC/D,GAAO,EAAM,uBAEpB,EAAKoS,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GACG7K,EAAO29B,KAAK6N,iBAAiB0J,aAAathB,QAAQ/oB,EAAW,GAAG3J,UACjE,GAAO,EAAM,uDAjBE,EAF9B,kBAAsC,G,88BCpF/B,IAAM,GAAb,YAEI,WAAYlB,GAAc,yBACtB,0BAAM,cAAeA,EAAQ,8HAExBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAClD,EAAK1X,YAAYG,iCAEjB,EAAKH,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAEtD,EAAK0D,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvD,MACA,SAAChB,GACG7K,EAAO29B,KAAK6N,iBAAiB0J,aAAajH,WAC3C,GAAO,EAAM,0BAEpB,EAAK36B,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,cAAeiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,eAAgBpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC9H,MACJ,SAACe,GACG,IAAI9J,EAAmB8J,EAAW,GAAG3J,MACjCwJ,EAAiB3J,EAAEqL,MAAO6iB,qBAAqB,sBAErC,MAAVvkB,GAEA1K,EAAO29B,KAAK6N,iBAAiBkhD,aAAaxB,oBAAoB39E,MAAK,SAAC/L,GAEhE,IAAIiJ,EAAUC,aAAM,EAANA,EAAQD,QAClBD,EAASE,aAAM,EAANA,EAAQF,OAEjBmoF,EAAyB,CACzB,CACIvpF,KAAMrI,EAAEqL,MACRlL,MAAOH,GAEX,CACIqI,KAAMiM,GACNnU,MAAOM,IAIA,MAAXiJ,EACAzK,EAAO29B,KAAK6N,iBAAiB6F,SAAS3mC,EAAQioF,EAAe,MAAM,GAClD,MAAVnoF,GACPA,EAAO,UAOrB,GAAO,EAAM,kJAjDO,EAF9B,kBAAsC,GAgEzB,GAAb,YAEI,WAAYxK,GAAc,yBACtB,0BAAM,cAAeA,EAAQ,sNAExBsT,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,MAAOiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,wDAPI,EAF9B,kBAAiC,G,qnCC9D1B,IAAM,GAAb,YAEI,WAAY9b,GAAc,yBACtB,0BAAM,WAAYA,KAEbsT,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,IAE/CiQ,GACA,MACA,GAAO,EAAO,2CAPI,EAF9B,kBAA8B,GAsBjB,GAAb,YAKI,WAAY9b,GAAc,yBACtB,0BAAM,QAASA,EAAQ,2DAJ3B6xF,aAA6B,GAC7B,EAAAgd,cAAwB,EAKpB,EAAKznF,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAK1X,YAAY4G,YAAc,IAAI,EAAc,EAAK5G,aAEtD,EAAK0D,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CACI1J,WAAY,WAAYiH,KAAMpJ,EAAOqnB,UAAUC,QAAQ,YACvDpO,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAEtD,CACI3H,WAAY,gBAAiBiH,KAAMgP,GACnCc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAEtDgS,IACA,SAACjR,GAEG,IAAIikG,EAAmCjkG,EAAW,GAAG3J,MACjDkuC,EAAqBvkC,EAAW,GAAG3J,MAEnC6tG,EAAyB,CACzBC,cAAeF,EACf1/D,GAAIA,EACJ6/D,cAAe,EACf5hD,SAAS,EACT3iD,OAAQokG,EAAG1iG,MAAM4I,UAAU,MAAO,IAAInJ,EAAc,MAWxD,EAAKgmF,aAAatkF,KAAKwhG,GAEvBn9D,QAAQC,IAAI,iCAAmCzC,EAAK,WAErD,GAAO,EAAM,6FAGpB,EAAK8/D,sBA7CiB,E,UAL9B,e,EAAA,G,EAAA,6C,QAwDQ,GAAIlmG,KAAK6oF,aAAa7mF,OAAS,EAAG,CAC9B,IAAIg7B,EAA+B,QAApB,EAAc,QAAd,EAAGh9B,KAAKhJ,cAAM,eAAE29B,YAAI,eAAE6N,iBAErC,GAAmB,MAAfxF,EAAqB,CACrB,IAAKh9B,KAAK6lG,cAAgB7oE,EAAYokB,OAASC,GAAiBgD,QAAS,CACrE,IAAIlsD,EAAY0sC,YAAYC,MADyC,uBAErE,YAAuB9kC,KAAK6oF,aAA5B,+CAA0C,KAAjCsd,EAAiC,QAClC//D,EAAKjuC,EAAIguG,EAAWF,cACpB7/D,GAAM+/D,EAAW//D,KACjBpmC,KAAKomG,SAASD,EAAYnpE,EAAa1wB,KAAK+5B,MAAMD,IAClD+/D,EAAWF,cAAgB9tG,IANkC,mFAWzE,OAAQ6kC,EAAYokB,OAChB,KAAKC,GAAiBplB,KACtB,KAAKolB,GAAiBt1C,MACtB,KAAKs1C,GAAiB0Y,gBAClB/5D,KAAK6oF,aAAe,GACpB7oF,KAAK6lG,cAAe,IASpC,IAAI9nF,EAAO/d,KAEX+qC,YAAW,WACPhtB,EAAKmoF,wBACN,MAzFX,+BA6FaC,EAAwBnpE,EAA0BoJ,GACvD,IAAIujD,EAAyB,CACzB,CACIvpF,KAAM+lG,EAAWH,cAAc5iG,MAC/BlL,MAAOiuG,EAAWH,gBAQ1BhmG,KAAK6lG,cAAe,EACpB,IAAI9nF,EAAO/d,KAEXg9B,EAAYqL,SAAS89D,EAAWzkG,OAAQioF,GAAe,SAAC3sD,GACpDjf,EAAK8nF,cAAe,KACrB,Q,6BA9GX,GAAgC,G,yoBC5BzB,IAAM,GAAb,YAEI,WAAY7uG,GAAc,O,4FAAA,SAEtB,0BAAM,MAAOA,EAAQ,+DAErB,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAEtC+nF,EAAuBr3F,EAAY8xB,QACvCulE,EAAMltG,WAAa,IACnBktG,EAAMlgG,gBAAiB,EAEvB,IAAImgG,EAAoB,CACpBntG,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMimG,GAEV,EAAKngG,cAAc3B,KAAK+hG,GAExB,IAAIC,EAAuBv3F,EAAY8xB,QACvCylE,EAAMptG,WAAa,IACnBotG,EAAMpgG,gBAAiB,EAEvB,IAAIqgG,EAAoB,CACpBrtG,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMmmG,GA1BY,OA4BtB,EAAKrgG,cAAc3B,KAAKiiG,GAExB,EAAKl8F,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,GACA,MACA,GAAM,EAAO,iDAEjB,EAAK9E,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,GACA,MACA,GAAM,EAAO,iCAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,MAAOiH,KAAMimG,EAAOn2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpFwP,GACA,MACA,GAAM,EAAO,oFAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,QAASiH,KAAMmmG,EAAOr2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtFwP,GACA,MACA,GAAM,EAAO,gEAEjB,EAAKhG,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,MAAOiH,KAAMimG,EAAOn2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpFylG,EACA,MACA,GAAM,EAAO,mHAEjB,EAAKj8F,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,MAAOiH,KAAMimG,EAAOn2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpF,CAAE3H,WAAY,QAASiH,KAAMmmG,EAAOr2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtFylG,EACA,MACA,GAAM,EAAO,uQAEjB,EAAKj8F,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,KACA,MACA,GAAM,EAAO,0CApEK,EAF9B,O,mOAAA,SAA8B,G,uKCOvB,IAAM,GAAb,WAOI,WAAoBolC,EAAqCjL,EAAkChmC,I,4FAAc,SAArF,KAAAixC,gBAAqC,KAAAjL,cAAkC,KAAAhmC,SAL3F,KAAAyvG,SAAoB,GACpB,KAAAt/D,WAAsB,GAEtB,KAAApkC,IAAuB,IAAIjD,I,UAL/B,O,EAAA,G,EAAA,2BAUQtH,GACA,OAAOwH,KAAK+C,IAAIjL,IAAIU,EAAIN,SAXhC,0BAcQM,EAAYN,GAEZ,IAAIwuG,EAAM1mG,KAAK+C,IAAIjL,IAAIU,EAAIN,OAY3B,OAVU,MAAPwuG,EACC1mG,KAAKymG,SAASliG,KAAK/L,GAEnBwH,KAAKmnC,WAAWpvB,OAAO/X,KAAKmnC,WAAW/hC,QAAQshG,GAAM,GAGzD1mG,KAAKmnC,WAAW5iC,KAAKrM,GAErB8H,KAAK+C,IAAIoC,IAAI3M,EAAIN,MAAOA,GAEjBwuG,IA5Bf,6CAgCwB,2BAChB,YAAc1mG,KAAKymG,SAAnB,+CAA6B,KAApB5iG,EAAoB,QACzB,KAAMA,EAAEzD,gBAAgBH,GAAiB,CAAC,SAAU,UAAW,UAAW,UAAW,aAAamF,QAAQvB,EAAEzD,KAAKjH,aAAe,GAC5H,OAAO,GAHC,6GAMhB,YAAc6G,KAAKmnC,WAAnB,+CAA+B,KAAtB,EAAsB,QAC3B,KAAM,EAAE/mC,gBAAgBH,GAAiB,CAAC,SAAU,UAAW,UAAW,UAAW,aAAamF,QAAQ,EAAEhF,KAAKjH,aAAe,GAC5H,OAAO,GARC,kFAWhB,OAAO,IA3Cf,kCAgDQ,GAAI6G,KAAKkoC,uBAAwB,CAE7B,IADA,IAAIlvC,EAAI,IACC/B,EAAI,EAAGA,EAAI+I,KAAKymG,SAASzkG,OAAQ/K,IACtC+B,GAAUgH,KAAKymG,SAASxvG,GAAGiB,MAAQ,OAAS8H,KAAKmnC,WAAWlwC,GAAGiB,MAC3DjB,EAAI+I,KAAKymG,SAASzkG,OAAS,IAAGhJ,GAAK,MAG3C,OAAOA,EAAI,IA0Bf,IAvBA,IAAIwL,EAAyB,CACzB0F,KAAM,EACNC,OAAQ,EACRnI,OAAQ,GAGR4C,EAA0B,CAC1B,CACIxE,KAAMnH,EAAUuM,KAChBhB,SAAUA,EACVM,cAAc,GAElB,CACI1E,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,IACPsM,SAAUA,EACVM,cAAc,IAIlBqjC,EAAqB,IAAItlC,EAAc,IAElC,EAAI,EAAG,EAAI7C,KAAKmnC,WAAWnlC,OAAQ,IAAK,CAE7C,IAAIxJ,EAAMwH,KAAKymG,SAAS,GACpBjuG,EAAI4H,gBAAgBH,GAAiBzH,EAAI4H,gBAAgB,GACzDwE,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAOM,EAAI4H,KAAKsP,OAAOlX,EAAK6T,IAAqBnU,MACjDsM,SAAUA,EACVM,cAAc,KAGlBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAU/5B,EAAI4H,KACdlI,MAAOM,EAAIN,MACX4M,cAAc,EACdN,SAAUA,IAEdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUmpB,WAChB1gB,OAAmClJ,EAAI4H,KAAM4L,UAAU,WAAYm8B,GACnE9lB,aAAa,EACbC,iBAAkB,EAClBxd,cAAc,EACdN,SAAUA,KAKlBI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAGdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,OACPsM,SAAUA,EACVM,cAAc,IAElBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAId,IAAItM,EAAQ8H,KAAKmnC,WAAW,GACT,MAAfjvC,EAAMA,OAAiBA,EAAMkI,gBAAgBH,GAAiB/H,EAAMkI,gBAAgB,GACpFwE,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAsB,MAAfA,EAAMA,MAAgB,OAASA,EAAMkI,KAAKsP,OAAOxX,EAAOmU,IAAqBnU,MACpFsM,SAAUA,EACVM,cAAc,KAGlBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUr6B,EAAMkI,KAChBlI,MAAOA,EAAMA,MACb4M,cAAc,EACdN,SAAUA,IAEdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUmpB,WAChB1gB,OAAmCxJ,EAAMkI,KAAM4L,UAAU,WAAYm8B,GACrE9lB,aAAa,EACbC,iBAAkB,EAClBxd,cAAc,EACdN,SAAUA,KAKlBI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAGV,EAAIxE,KAAKmnC,WAAWnlC,OAAS,IAC7B4C,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,KACPsM,SAAUA,EACVM,cAAc,IAElBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChByM,SAAUvmB,GACV+Z,SAAUntB,EAAUoD,KACpByI,cAAc,EACdN,SAAUA,KAOtBI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUwvB,aAChB8J,SAAUlmB,GACVnU,MAAO,IACPsM,SAAUA,EACVM,cAAc,IAGlBF,EAAWL,KAAK,CACZnE,KAAMnH,EAAUktB,SAChBC,SAAUntB,EAAUoD,KACpBu2B,SAAUvmB,GACVvH,cAAc,EACdN,SAAUA,IAWdI,EAAWL,KAAK,CACZnE,KAAMnH,EAAUyhB,OAChBkG,iCAAiC,EACjCC,wBAAwB,EACxB/b,cAAc,EACdN,SAAUA,EACV4jC,mBAAmB,IAGvB,IAAI3mC,EAAmB,CACnBzK,OAAQgJ,KAAKhJ,OACb4N,WAAYA,EACZkC,aAAc,MAGdpF,EAAiB,IAAIX,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,GAAqB5K,GAAS,GAAO,GAGxG,OAFAzB,KAAKg9B,YAAYqL,SAAS3mC,EAAQ,IAAI,kBAAMknC,QAAQC,IAAI,4BAA0B,GAE3E,KAzOf,6BA6OQ,OAAO7oC,KAAKmnC,WAAWnlC,SA7O/B,gCAiPQ,OAAiC,GAA1BhC,KAAKmnC,WAAWnlC,SAjP/B,kCAoPgBxJ,GACR,OAAkC,MAA3BwH,KAAK+C,IAAIjL,IAAIU,EAAIN,SArPhC,oCAwPkBA,GAAY,2BACtB,YAAa8H,KAAKmnC,WAAlB,+CACI,GADyB,QACpBjvC,OAASA,EAAMA,MAAO,OAAO,EAFhB,kFAItB,OAAO,IA5Pf,8BAgQQ8H,KAAKmnC,WAAa,GAClBnnC,KAAKymG,SAAW,GAChBzmG,KAAK+C,IAAIkiC,a,6BAlQjB,K,yoBCLO,IAAM,GAAb,YAEI,WAAYjuC,GAAc,O,4FAAA,SAEtB,0BAAM,UAAWA,EAAQ,yEAEzB,IAAIgY,EAAahY,EAAOqnB,UAAUC,QAAQ,UAE1C,EAAKF,aAAoBpP,GAEzB,IAAIq3F,EAAuBr3F,EAAY8xB,QACvCulE,EAAMltG,WAAa,IACnBktG,EAAMlgG,gBAAiB,EAEvB,IAAImgG,EAAoB,CACpBntG,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMimG,GAEV,EAAKngG,cAAc3B,KAAK+hG,GAExB,IAAIC,EAAuBv3F,EAAY8xB,QACvCylE,EAAMptG,WAAa,IACnBotG,EAAMpgG,gBAAiB,EAEvB,IAAIqgG,EAAoB,CACpBrtG,WAAY,IACZmnB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACzCue,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GACvC5B,KAAMmmG,GAEV,EAAKrgG,cAAc3B,KAAKiiG,GAIxB,IAAIx9D,EAA2BhyC,EAAOqnB,UAAUC,QAAQ,OAAQwiB,QAlC1C,OAmCtBkI,EAAa9iC,cAAgB,CAACogG,EAAKE,GAEnC,EAAKngG,WAAW9B,KAAKykC,GAErB,EAAK1+B,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjC+wC,EAAK,IAAI,GAAUvxC,EAAGV,EAAO29B,KAAK6N,iBAAkBxrC,GACxDU,EAAEyL,cAAF,UAA+B8lC,KAEhC,GAAO,EAAO,iCAAiC,IAGtD,EAAK3+B,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,MAAOiH,KAAMimG,EAAOn2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACpF,CAAE3H,WAAY,QAASiH,KAAMmmG,EAAOr2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtFylG,GACA,SAAC1kG,GACG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCM,EAAaqJ,EAAW,GACxB3J,EAAe2J,EAAW,GAG9B,OAFoBnK,EAAEyL,cAAF,UAEVgC,IAAI3M,EAAKN,MAEpB,GAAO,EAAO,uQAErB,EAAKoS,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,UAEV8hC,WAGd,GAAO,EAAO,sDAElB,EAAK36B,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,MAAOiH,KAAMimG,EAAOn2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCM,EAAaqJ,EAAW,GAG5B,OAFoBnK,EAAEyL,cAAF,UAEVwjG,YAAYnuG,MAG1B,GAAO,EAAO,oFAElB,EAAK8R,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,QAASiH,KAAMmmG,EAAOr2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACtFwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCA,EAAe2J,EAAW,GAG9B,OAFoBnK,EAAEyL,cAAF,UAEVyjG,cAAc1uG,MAG5B,GAAO,EAAO,gEAElB,EAAKoS,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,CAC/C,CAAE1J,WAAY,MAAOiH,KAAMimG,EAAOn2F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpFylG,GACA,SAAC1kG,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCM,EAAaqJ,EAAW,GAGxBgC,EAFgBnM,EAAEyL,cAAF,UAEFrL,IAAIU,GACtB,OAAY,MAALqL,EAAY,KAAOA,EAAE3L,SAGhC,GAAO,EAAO,mHAGlB,EAAKoS,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,UAEV2kC,aAGd,GAAO,EAAO,qCAElB,EAAKx9B,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDuM,IACA,SAACvN,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,UAEV4kC,UAGd,GAAO,EAAO,4DAElB,EAAKz9B,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAKwJ,IACzD,SAACxK,GAKG,OAHuBA,EAAW,GAAG3J,MACfiL,cAAF,UAEV6kC,eAEX,GAAO,IAzJQ,EAF9B,O,mOAAA,SAAkC,G,okBCA3B,IAAM,GAAb,YAEI,WAAYhxC,GAAc,M,IAAA,O,4FAAA,S,EAEtB,U,EAAA,gBAAM,WAAYA,EAAQ,a,gDAErBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAElD,EAAKhU,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAKG,IAHA,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCknG,EAAyB,GACrBnoG,EAAI,EAAGA,GAAK,EAAGA,IACnBmoG,EAAa76F,KAAK1C,EAAW5K,GAAGiB,OAGpC,IAAImnG,EAAK,IAAI,GAAcD,GAAc,EAAMpoG,EAAO29B,KAAK6N,iBAAkB9qC,GAC7EA,EAAEyL,cAAF,MAA2Bk8F,KAE5B,GAAO,EAAO,kCAAkC,IAEvD,EAAK/0F,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAoBt7F,EAAEyL,cAAF,MAExB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,gEAAgE,IAvC/D,EAF9B,O,mOAAA,SAAmC,G,m9BCK5B,IAAM,GAAb,YAEI,WAAYpM,GAAc,kBAEtB,0BAAM,gBAAiBA,EAAQ,yEAE1BonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAClD,IAAIuoF,EAAsB7vG,EAAOqnB,UAAUC,QAAQ,aAC/CwoF,EAAkB9vG,EAAOqnB,UAAUC,QAAQ,SANzB,OAWtB,EAAKhU,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IAAK,MAC9D,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAIjCiL,EAA4C,CAC5CyrD,KAHQ,IAAIC,MAMhBn3D,EAAEyL,cAAF,IAAyBA,KAI1B,GAAO,EAAO,6GACf,IAGN,EAAKmH,UAAU,IAAIvJ,EAAO,MAAO,IAAI8B,EAAc,IAApC,OACX,SAAChB,GAEG,IAAInK,EAAmB,IAAI,EAAJ,OAInByL,EAA4C,CAC5CyrD,KAHQ,IAAIC,MAQhB,OAFAn3D,EAAEyL,cAAF,IAAyBA,EAElBzL,KAER,GAAO,EAAM,6GACd,IAEN,EAAK4S,UAAU,IAAIvJ,EAAO,KAAM,IAAI8B,EAAc,CAC9C,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,aAAciH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACtG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KANvF,OASX,SAACe,GAEG,IAAInK,EAAmB,IAAI,EAAJ,OACnBqvG,EAAez6F,KAAKyE,MAAMlP,EAAW,GAAG3J,OACxC8uG,EAAgB16F,KAAKyE,MAAMlP,EAAW,GAAG3J,OACzC+uG,EAAqB36F,KAAKyE,MAAMlP,EAAW,GAAG3J,OAC9CgvG,EAAe56F,KAAKyE,MAAMlP,EAAW,GAAG3J,OACxCivG,EAAiB76F,KAAKyE,MAAMlP,EAAW,GAAG3J,OAC1CkvG,EAAiB96F,KAAKyE,MAAMlP,EAAW,GAAG3J,OAI1CiL,EAA4C,CAC5CyrD,KAHO,IAAIC,KAAKk4C,EAAMC,EAAQ,EAAGC,EAAYC,EAAMC,EAAQC,IAQ/D,OAFA1vG,EAAEyL,cAAF,IAAwBA,EAEjBzL,KAER,GAAO,EAAM,qJACd,IAEN,EAAK4S,UAAU,IAAIvJ,EAAO,KAAM,IAAI8B,EAAc,CAC9C,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAM0mG,EAAW52F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC1F,CAAE3H,WAAY,aAAciH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACtG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KANvF,OASX,SAACe,GAEG,IAAInK,EAAmB,IAAI,EAAJ,OACnBqvG,EAAez6F,KAAKyE,MAAMlP,EAAW,GAAG3J,OACxC8uG,EAA2BnlG,EAAW,GAAG3J,MACzC+uG,EAAqB36F,KAAKyE,MAAMlP,EAAW,GAAG3J,OAC9CgvG,EAAe56F,KAAKyE,MAAMlP,EAAW,GAAG3J,OACxCivG,EAAiB76F,KAAKyE,MAAMlP,EAAW,GAAG3J,OAC1CkvG,EAAiB96F,KAAKyE,MAAMlP,EAAW,GAAG3J,OAI1CiL,EAA4C,CAC5CyrD,KAHO,IAAIC,KAAKk4C,EAAMC,EAAM3pF,UAAUQ,QAASopF,EAAYC,EAAMC,EAAQC,IAQ7E,OAFA1vG,EAAEyL,cAAF,IAAyBA,EAElBzL,KAER,GAAO,EAAM,qJACd,IAEN,EAAK4S,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KADrF,OAGX,SAACe,GACG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCmvG,EAAe/6F,KAAKyE,MAAMlP,EAAW,GAAG3J,OAExCovG,EAA8C5vG,EAAEyL,cAAF,IAAyByrD,KACvE24C,EAAgB,IAAI14C,KAAKy4C,EAAQvqC,UAAiB,GAALsqC,EAAQ,KAAK,KAE1DpL,EAAoB,IAAI,EAAJ,OAEpB94F,EAA4C,CAC5CyrD,KAAM24C,GAKV,OAFAtL,EAAG94F,cAAH,IAA0BA,EAEnB84F,KAER,GAAO,EAAO,uIAAuI,IAE5J,EAAK3xF,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KADrF,OAGX,SAACe,GACG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCmvG,EAAe/6F,KAAKyE,MAAMlP,EAAW,GAAG3J,OAExCovG,EAA8C5vG,EAAEyL,cAAF,IAAyByrD,KACvE24C,EAAgB,IAAI14C,KAAKy4C,EAAQvqC,UAAiB,GAALsqC,EAAQ,KAAK,KAE1DpL,EAAoB,IAAI,EAAJ,OAEpB94F,EAA4C,CAC5CyrD,KAAM24C,GAKV,OAFAtL,EAAG94F,cAAH,IAA0BA,EAEnB84F,KAER,GAAO,EAAO,uIAAuI,IAE5J,EAAK3xF,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,OAAQiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpFsO,IACA,SAACvN,GACG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+jG,EAAoBp6F,EAAW,GAAG3J,MAElCsvG,EAA8C9vG,EAAEyL,cAAF,IAAyByrD,KAAKmO,UAC5E0qC,EAA8CxL,EAAG94F,cAAH,IAA0ByrD,KAAKmO,UAEjF,OAAOzwD,KAAKiE,KAAKi3F,EAAQC,MAE1B,GAAO,EAAO,kJAAkJ,IAEvK,EAAKn9F,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,OAAQiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpFsO,IACA,SAACvN,GACG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+jG,EAAoBp6F,EAAW,GAAG3J,MAKtC,OAHkDR,EAAEyL,cAAF,IAAyByrD,KAAKmO,UAC9Bk/B,EAAG94F,cAAH,IAA0ByrD,KAAKmO,WAE1E,SAER,GAAO,EAAO,kFAAkF,IAEvG,EAAKzyD,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEEiL,cAAF,IAAyByrD,KAAKK,iBAEpE,GAAO,EAAO,yBAAyB,IAE9C,EAAK3kD,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IACzDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEEiL,cAAF,IAAyByrD,KAAKI,WAAa,KAEjF,GAAO,EAAO,oFAAoF,IAEzG,EAAK1kD,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IACzDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEEiL,cAAF,IAAyByrD,KAAKG,aAEpE,GAAO,EAAO,iEAAiE,IAEtF,EAAKzkD,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEEiL,cAAF,IAAyByrD,KAAKwY,cAEpE,GAAO,EAAO,+CAA+C,IAEpE,EAAK98D,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEEiL,cAAF,IAAyByrD,KAAKyY,gBAEpE,GAAO,EAAO,2BAA2B,IAEhD,EAAK/8D,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDuM,IACA,SAACvN,GAGG,OAFuBA,EAAW,GAAG3J,MAEEiL,cAAF,IAAyByrD,KAAK84C,gBAEpE,GAAO,EAAO,4BAA4B,IAEjD,EAAKp9F,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDwJ,IACA,SAACxK,GACG,IAEI+sD,EAFmB/sD,EAAW,GAAG3J,MAEMiL,cAAF,IAAyByrD,KAE9D+4C,EAAK,SAACzvG,GACN,OAAGA,EAAQ,GAAW,IAAMA,EACrB,GAAKA,GAGhB,gBAAUyvG,EAAG/4C,EAAKG,WAAlB,YAAgC44C,EAAG/4C,EAAKI,WAAa,GAArD,YAA2D24C,EAAG/4C,EAAKK,eAAnE,YAAqF04C,EAAG/4C,EAAKwY,YAA7F,YAA4GugC,EAAG/4C,EAAKyY,cAApH,YAAqIsgC,EAAG/4C,EAAK84C,kBAE9I,GAAO,EAAO,yDAAyD,IAE9E,EAAKp9F,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IACxDgkG,GACA,SAAChlG,GACG,IAEI+lG,EAFmB/lG,EAAW,GAAG3J,MAEKiL,cAAF,IAAyByrD,KAAKi5C,SACtE,OAAOhB,EAActpF,aAAaqqF,EAAM,GAAGjvG,UAE5C,GAAO,EAAO,yHAAyH,IAE9I,EAAK2R,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDikG,GACA,SAACjlG,GACG,IAEIimG,EAFmBjmG,EAAW,GAAG3J,MAEYiL,cAAF,IAAyByrD,KAAKI,WAC7E,OAAO83C,EAAUvpF,aAAauqF,GAAYnvG,UAE3C,GAAO,EAAO,wGAAwG,IAhRvG,EAF9B,kBAAwC,GAyR3B,GAAb,YAEI,WAAY3B,GAAc,yBACtB,0BAAM,YAAaA,EAAQ,CACvB,CACIoJ,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,UAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,YAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,YAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,cAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,WAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,WAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,eAIf4G,cAAgB,YAvCC,EAF9B,kBAAmC,IA6CtB,GAAb,YAEI,WAAY/I,GAAc,yBACtB,0BAAM,QAASA,EAAQ,CACnB,CACIoJ,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,UAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,WAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,QAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,SAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,OAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,QAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,QAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,UAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,aAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,WAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,YAEhB,CACIiH,KAAMnH,EAAUmoB,cAChB5c,SAAU,KACVrL,WAAY,gBAIf4G,cAAgB,QAhEC,EAF9B,kBAA+B,I,okBC3UxB,IAAM,GAAb,YAEI,WAAY/I,GAAc,M,IAAA,O,4FAAA,S,EAEtB,U,EAAA,gBAAM,OAAQA,EAAQ,kD,gDAEjBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAElD,EAAKhU,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCi4E,EAAatuE,EAAW,GAAG3J,MAC3Bk4E,EAAavuE,EAAW,GAAG3J,MAC3Bm4E,EAAaxuE,EAAW,GAAG3J,MAC3Bo4E,EAAazuE,EAAW,GAAG3J,MAI3BmnG,EAAK,IAAI,GAFgB,CAAClvB,EAAIC,EAAIC,EAAIC,IAED,EAAOt5E,EAAO29B,KAAK6N,iBAAkB9qC,GAC9EA,EAAEyL,cAAF,MAA2Bk8F,KAE5B,GAAO,EAAO,2EAA2E,IAE5F,EAAK/0F,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAoBt7F,EAAEyL,cAAF,MAExB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,uDAAuD,IAExE,EAAKkH,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BkK,EAAgBP,EAAW,GAAG3J,MAC9B86F,EAAoBt7F,EAAEyL,cAAF,MAEpB6vF,EAAGC,cAAc,aAErBD,EAAG+U,SAASpxD,EAAGC,EAAGx0C,EAAQ,MAE3B,GAAO,EAAO,qGAAqG,IAE1H,EAAKkI,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCi4E,EAAatuE,EAAW,GAAG3J,MAC3Bk4E,EAAavuE,EAAW,GAAG3J,MAC3Bm4E,EAAaxuE,EAAW,GAAG3J,MAC3Bo4E,EAAazuE,EAAW,GAAG3J,MACnB86F,EAAoBt7F,EAAEyL,cAAF,MAE5B6vF,EAAGC,cAAc,cAErBD,EAAGgV,UAAU73B,EAAIC,EAAIC,EAAIC,MAE1B,GAAO,EAAO,oGAAoG,IA9E3G,EAF9B,O,mOAAA,SAA+B,G,okBCDxB,IAAM,GAAb,YAEI,WAAYt5E,GAAc,M,iGAAA,S,EAEtB,K,EAAA,gBAAM,UAAWA,EAAQ,iDAAzB,G,mDAEKonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAK/T,aAAa,IAAI7J,EAAU,IAAKuP,GACjC,MAAM,EAAOlM,EAAW4C,QAAQ,EAAO,6BAE3C,EAAK4D,aAAa,IAAI7J,EAAU,IAAKuP,GACjC,MAAM,EAAOlM,EAAW4C,QAAQ,EAAO,6BAE3C,EAAKI,iCAEL,IAAIkhG,EAAS,EAAKvhG,aAAa5O,IAAI,KAAKsK,MACpC8lG,EAAS,EAAKxhG,aAAa5O,IAAI,KAAKsK,MAflB,OAkBtB,EAAKkI,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,GAClH,CAAEhJ,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAClH,MACA,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAE9BR,EAAE8L,WAAWykG,GAAU,CAAE7nG,KAAM6P,GAAqB/X,MAAOy+C,GAC3Dj/C,EAAE8L,WAAW0kG,GAAU,CAAE9nG,KAAM6P,GAAqB/X,MAAO0+C,MAE5D,GAAO,EAAO,iFAAiF,IAEtG,EAAKtsC,UAAU,IAAIvJ,EAAO,uBAAwB,IAAI8B,EAAc,CAChE,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,GAClH,CAAEhJ,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAF9G,OAIX,SAACN,GAEG,IAAInK,EAAmB,IAAI,EAAJ,OACnBK,EAAY8J,EAAW,GAAG3J,MAC1BiwG,EAAmBtmG,EAAW,GAAG3J,MAOrC,OALAiwG,GAAY77F,KAAKumE,GAAK,IAEtBn7E,EAAE8L,WAAWykG,GAAU,CAAE7nG,KAAM6P,GAAqB/X,MAAOoU,KAAKymE,IAAIo1B,GAAYpwG,GAChFL,EAAE8L,WAAW0kG,GAAU,CAAE9nG,KAAM6P,GAAqB/X,MAAOoU,KAAK0mE,IAAIm1B,GAAYpwG,GAEzEL,KAER,GAAO,EAAM,6NAA6N,IAEjP,EAAK4S,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDwJ,IACA,SAACxK,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAErC,iBAAWy+C,EAAX,YAAgBC,EAAhB,QAED,GAAO,EAAO,gEAAgE,IAErF,EAAKtsC,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDoN,IACA,SAACpO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAEjC06E,EAAQtmE,KAAK6uF,MAAMvkD,EAAGD,GAAKrqC,KAAKumE,GAAK,IAEzC,OAAOD,GAAS,EAAIA,EAAQ,IAAMA,KAEnC,GAAO,EAAO,kDAAkD,IAEvE,EAAKtoE,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDoN,IACA,SAACpO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAEjC06E,EAAQtmE,KAAK6uF,MAAMvkD,EAAGD,GAE1B,OAAOi8B,GAAS,EAAIA,EAAkB,EAAVtmE,KAAKumE,GAASD,KAE3C,GAAO,EAAO,sDAAsD,IAE3E,EAAKtoE,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrDoN,IACA,SAACpO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAErC,OAAOoU,KAAK+lE,KAAK17B,EAAIA,EAAIC,EAAIA,MAE9B,GAAO,EAAO,sCAAsC,IAE3D,EAAKtsC,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IAA7C,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAEjC+jG,EAAoB,IAAI,EAAJ,OACpBj6F,EAAiBsK,KAAK+lE,KAAK17B,EAAIA,EAAIC,EAAIA,GAa3C,OAXItqC,KAAK6uD,IAAIn5D,GAAU,OACnB20C,GAAK30C,EACL40C,GAAK50C,IAEL20C,EAAI,EACJC,EAAI,GAGRqlD,EAAGz4F,WAAWykG,GAAU,CAAE7nG,KAAM6P,GAAqB/X,MAAOy+C,GAC5DslD,EAAGz4F,WAAW0kG,GAAU,CAAE9nG,KAAM6P,GAAqB/X,MAAO0+C,GAErDqlD,KAER,GAAO,EAAO,qHAAqH,IAE1I,EAAK3xF,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAD5G,OAGX,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAEjC8J,EAAiBH,EAAW,GAAG3J,MAE/BhB,EAAIoV,KAAK+lE,KAAK17B,EAAIA,EAAIC,EAAIA,GAC1B1/C,EAAI,IAEJQ,EAAE8L,WAAWykG,GAAQ/vG,MAAQy+C,EAAIz/C,EAAI8K,EACrCtK,EAAE8L,WAAW0kG,GAAQhwG,MAAQ0+C,EAAI1/C,EAAI8K,MAI1C,GAAO,EAAO,mHAAmH,IAExI,EAAKsI,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,SAAUiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAD7F,OAGX,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+jG,EAAoBp6F,EAAW,GAAG3J,MAElCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAEjCi4E,EAAa8rB,EAAGz4F,WAAWykG,GAAQ/vG,MACnCk4E,EAAa6rB,EAAGz4F,WAAW0kG,GAAQhwG,MAEnCkwG,EAAsB,IAAI,EAAJ,OAK1B,OAHAA,EAAK5kG,WAAWykG,GAAU,CAAE7nG,KAAM6P,GAAqB/X,MAAOy+C,EAAIw5B,GAClEi4B,EAAK5kG,WAAW0kG,GAAU,CAAE9nG,KAAM6P,GAAqB/X,MAAO0+C,EAAIw5B,GAE3Dg4B,KAER,GAAO,EAAO,+KAA+K,IAEpM,EAAK99F,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,SAAUiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAD7F,OAGX,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+jG,EAAoBp6F,EAAW,GAAG3J,MAElCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAEjCi4E,EAAa8rB,EAAGz4F,WAAWykG,GAAQ/vG,MACnCk4E,EAAa6rB,EAAGz4F,WAAW0kG,GAAQhwG,MAEnCkwG,EAAsB,IAAI,EAAJ,OAK1B,OAHAA,EAAK5kG,WAAWykG,GAAU,CAAE7nG,KAAM6P,GAAqB/X,MAAOy+C,EAAIw5B,GAClEi4B,EAAK5kG,WAAW0kG,GAAU,CAAE9nG,KAAM6P,GAAqB/X,MAAO0+C,EAAIw5B,GAE3Dg4B,KAER,GAAO,EAAO,uLAAuL,IAE5M,EAAK99F,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,UAAWiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,GACzG,CAAEhJ,WAAY,UAAWiH,KAAM,MAAM8P,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KACzG8N,IACA,SAACpO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+jG,EAAoBp6F,EAAW,GAAG3J,MAElCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAKrC,OAAOy+C,EAHUslD,EAAGz4F,WAAWykG,GAAQ/vG,MAGvB0+C,EAFCqlD,EAAGz4F,WAAW0kG,GAAQhwG,SAIxC,GAAO,EAAM,sDAAsD,IAG1E,EAAKoS,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAD5G,OAGX,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAEjCc,EAAY6I,EAAW,GAAG3J,MAE1BkwG,EAAsB,IAAI,EAAJ,OAI1B,OAHAA,EAAK5kG,WAAWykG,GAAU,CAAE7nG,KAAM6P,GAAqB/X,MAAOy+C,EAAI39C,GAClEovG,EAAK5kG,WAAW0kG,GAAU,CAAE9nG,KAAM6P,GAAqB/X,MAAO0+C,EAAI59C,GAE3DovG,KAER,GAAO,EAAO,uLAAuL,IAE5M,EAAK99F,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,WAAYiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAD9G,OAGX,SAACN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAEjCy+C,EAAYj/C,EAAE8L,WAAWykG,GAAQ/vG,MACjC0+C,EAAYl/C,EAAE8L,WAAW0kG,GAAQhwG,MAEjC06E,GAAiB/wE,EAAW,GAAG3J,MAAQoU,KAAKumE,GAAK,IACjDG,EAAc1mE,KAAK0mE,IAAIJ,GACvBG,EAAczmE,KAAKymE,IAAIH,GAEvBw1B,EAAsB,IAAI,EAAJ,OAI1B,OAHAA,EAAK5kG,WAAWykG,GAAU,CAAE7nG,KAAM6P,GAAqB/X,MAAOy+C,EAAIo8B,EAAMn8B,EAAIo8B,GAC5Eo1B,EAAK5kG,WAAW0kG,GAAU,CAAE9nG,KAAM6P,GAAqB/X,MAAOy+C,EAAIq8B,EAAMp8B,EAAIm8B,GAErEq1B,KAER,GAAO,EAAO,6MAA6M,IAGlO,EAAK99F,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGmP,IACA,SAACpO,GACG,IAAIsuE,EAAqBtuE,EAAW,GAAG3J,MACnCk4E,EAAqBvuE,EAAW,GAAG3J,MAGnC00E,EAFqB/qE,EAAW,GAAG3J,MAEzBi4E,EACVtD,EAFqBhrE,EAAW,GAAG3J,MAEzBk4E,EACd,OAAO9jE,KAAK+lE,KAAKzF,EAAKA,EAAKC,EAAKA,MACjC,GAAO,EAAM,0DAxRE,EAF9B,O,mOAAA,SAAkC,G,88BCD3B,IAAM,GAAb,YAEI,WAAY71E,GAAc,yBACtB,0BAAM,gBAAiBA,EAAQ,yNAE1BsT,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,kFAElB,EAAKxI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,+EAElB,EAAKxI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,GACA,MACA,GAAO,EAAO,6EAElB,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,GACA,MACA,GAAO,EAAO,iFAElB,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,GACA,MACA,GAAO,EAAO,kFAtCI,EAF9B,kBAA4C,GA+C/B,GAAb,YAEI,WAAY9b,GAAc,iBACtB,0BAAM,eAAgBA,EAAQ,6OAE9B,IAAIwzF,EAA4CxzF,EAAOqnB,UAAUC,QAAQ,iBAHnD,OAKtB,EAAKjY,WAAW9B,KAAKimF,GAErB,EAAKlgF,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,kFAElB,EAAKxI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,+EAElB,EAAKxI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,GACA,MACA,GAAO,EAAO,6EAElB,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,GACA,MACA,GAAO,EAAO,iFAElB,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChGgS,GACA,MACA,GAAO,EAAO,kFA1CI,EAF9B,kBAAuC,G,+4BC3ChC,IAAM,GAAb,YAEI,WAAY9b,GAAc,iBACtB,0BAAM,kBAAmBA,EAAQ,2IAEjC,IAAIgY,EAAoBhY,EAAOqnB,UAAUC,QAAQ,UACjD,EAAKF,aAAapP,GAElB,EAAK1E,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,UAAWiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACtG,CAAE3H,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GgS,IACA,SAACjR,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACHiL,cAAF,OAC5BsJ,EAAkB5K,EAAW,GAAG3J,MAChCmwG,EAAsBxmG,EAAW,GAAG3J,MAExC4yF,EAAGhH,KAAKr3E,EAAS47F,MAElB,GAAO,EAAO,+RAA+R,IAEhT,EAAK/9F,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,YAAaiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACxG,CAAE3H,WAAY,OAAQiH,KAAM4O,EAAYkB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1FgS,IACA,SAACjR,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACHiL,cAAF,OAC5B3K,EAAcqJ,EAAW,GAAG3J,MAC5BA,EAAuB2J,EAAW,GAAG3J,MAEzC4yF,EAAGwd,YAAY9vG,EAAKN,MAErB,GAAO,EAAO,+NAA+N,IAEpP,EAAKoS,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,YAAaiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxGkO,GACA,SAACnN,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACHiL,cAAF,OAC5B3K,EAAcqJ,EAAW,GAAG3J,MAEhC,OAAO4yF,EAAGyd,YAAY/vG,MAEvB,GAAO,EAAO,meAAme,IAMxf,IAJA,IAjDkB,aAqDb,IAAIf,EAAM,KACX,EAAK6S,UAAU,IAAIvJ,EAAOtJ,EAAOA,OAAQ,IAAIoL,EAAc,IACvDwJ,IACA,SAACxK,GAKG,OAHuBA,EAAW,GAAG3J,MACHiL,cAAF,OAEtB1L,EAAOmM,QAElB,GAAO,EAAO,YAAcnM,EAAO+wG,KAAO,wBAAwB,KAV7E,MAJiE,CAAC,CAAC5kG,IAAK,UAAWnM,OAAQ,eAAgB+wG,KAAM,YAChH,CAAC5kG,IAAK,eAAgBnM,OAAQ,cAAe+wG,KAAM,iBACpD,CAAC5kG,IAAK,WAAYnM,OAAQ,cAAe+wG,KAAM,iBAAkB,CAAC5kG,IAAK,WAAYnM,OAAQ,cAAe+wG,KAAM,iBAEhH,eAA8B,IArDZ,OAmElB,EAAKl+F,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDuM,IACA,SAACvN,GAKG,OAHuBA,EAAW,GAAG3J,MACHiL,cAAF,OAEtBf,SAEX,GAAO,EAAO,2cAA2c,IA5E9c,EAF9B,O,mOAAA,SAA0C,GAsF7BqmG,GAAb,WAOI,WAAmBxgE,EAAsCygE,EAC7C9mG,EAAmB0jE,EAAwBC,EAA6BqW,EAAyB+sB,GAAgB,WAD1G,KAAA1gE,gBAAsC,KAAAygE,kBAC7C,KAAA9mG,KAAmB,KAAA0jE,UAAwB,KAAAC,eAA6B,KAAAqW,WAAyB,KAAA+sB,WAN7G,KAAAC,cAAgD,GAChD,KAAAxmG,MAAgB,EAET,KAAAymG,WAAqB,E,UALhC,O,EAAA,G,EAAA,4BAYSp8F,EAAiB47F,GAClBroG,KAAK0oG,gBAAgBI,aAAa9oG,KAAK4B,GAAI6K,EAAS47F,KAb5D,kCAgBgB7vG,GACR,OAAOwH,KAAK4oG,cAAcpwG,KAjBlC,kCAoBgBA,EAAaN,GACrB8H,KAAK4oG,cAAcpwG,GAAON,O,6BArBlC,K,+4BCnFO,IAAM,GAAb,YAEI,WAAYlB,GAAc,kBACtB,0BAAM,YAAaA,EAAQ,8SAEtBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAClD,IAAIyqF,EAA6B/xG,EAAOqnB,UAAUC,QAAQ,mBACtD0qF,EAA+BhyG,EAAOqnB,UAAUC,QAAQ,UALtC,OAOtB,EAAKhU,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IACrD,MACA,SAAChB,G,QAEOnK,EAAmBmK,EAAW,GAAG3J,MAEjC8kC,EAA+B,QAApB,EAAc,QAAd,EAAG,EAAKhmC,cAAM,eAAE29B,YAAI,eAAE6N,iBAEjCsoD,EAAK,IAAI,GAAgBpzF,EAAGslC,EAAa+rE,EAAqBC,GAElEtxG,EAAEyL,cAAF,OAA4B2nF,KAE7B,GAAO,EAAO,2CAA2C,IAEhE,EAAKxgF,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC1G,CAAE3H,WAAY,WAAYiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+wG,EAAsBpnG,EAAW,GAAG3J,MACpCgxG,EAAmBrnG,EAAW,GAAG3J,MAEjC4yF,EAAsBpzF,EAAEyL,cAAF,OAC1B2nF,EAAGqe,QAAQF,EAAaC,GAExBxxG,EAAEyL,cAAF,OAA4B2nF,KAE7B,GAAO,EAAO,4RACjB,IAEJ,EAAKxgF,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,UAAWiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACtG,CAAE3H,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1GgS,IACA,SAACjR,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACTiL,cAAF,OACtBsJ,EAAkB5K,EAAW,GAAG3J,MAChCmwG,EAAsBxmG,EAAW,GAAG3J,MAExC4yF,EAAGse,UAAU38F,EAAS47F,MAEvB,GAAO,EAAO,qTAAqT,IAE1U,EAAK/9F,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,IACA,SAACjR,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACTiL,cAAF,OACtBkmG,EAAgBxnG,EAAW,GAAG3J,MAElC4yF,EAAGwe,qBAAqBD,MAEzB,GAAO,EAAO,gOAAgO,IAErP,EAAK/+F,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,YAAaiH,KAAM,IAAI,EAAUiM,IAAsB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvHgS,IACA,SAACjR,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACTiL,cAAF,OAGtBomG,EAF2B1nG,EAAW,GAAG3J,MAEH6K,KAAI,SAACymG,GAAD,OAASA,EAAItxG,SAE3D4yF,EAAG2e,yBAAyBF,MAE7B,GAAO,EAAO,2MAA2M,IAEhO,EAAKj/F,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,WAAYiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGgS,IACA,SAACjR,GAEG,IACIipF,EADmBjpF,EAAW,GAAG3J,MACTiL,cAAF,OACtB+lG,EAAmBrnG,EAAW,GAAG3J,MAErC4yF,EAAG2e,yBAAyB,CAACP,OAE9B,GAAO,EAAO,uMAAuM,IAE5N,EAAK5+F,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjDiQ,IACA,SAACjR,GAE0BA,EAAW,GAAG3J,MACTiL,cAAF,OAEvBumG,gBAEJ,GAAO,EAAO,yKAAyK,IAE9L,EAAKp/F,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAClD,KACA,MACA,GAAO,EAAO,+EAA+E,IAEjG,EAAKyH,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnD,KACA,MACA,GAAO,EAAO,8DAA8D,IAEhF,EAAKyH,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,CACrD,CAAE1J,WAAY,SAAUiH,KAAM2oG,EAAqB74F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrG,CAAE3H,WAAY,UAAWiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACtG,CAAE3H,WAAY,cAAeiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1G,KACA,MACA,GAAO,EAAO,0FAA0F,IAE5G,EAAKwJ,UAAU,IAAIvJ,EAAO,yBAA0B,IAAI8B,EAAc,CAClE,CAAE1J,WAAY,cAAeiH,KAAM2oG,EAAqB74F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1G,KACA,MACA,GAAO,EAAO,+HAA+H,IAEjJ,EAAKwJ,UAAU,IAAIvJ,EAAO,4BAA6B,IAAI8B,EAAc,CACrE,CAAE1J,WAAY,cAAeiH,KAAM2oG,EAAqB74F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1G,KACA,MACA,GAAO,EAAO,uIAAuI,IAEzJ,EAAKwJ,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,UAAWiH,KAAM,IAAI,EAAU2oG,GAAsB74F,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACrH,CAAE3H,WAAY,WAAYiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,KACA,MACA,GAAO,EAAO,qHAAqH,IA7IjH,EAF9B,O,mOAAA,SAAoC,GAsJvB,GAAb,WAgBI,WAAoBmnC,EAAsCjL,EAC9C+rE,EAAoCC,GAA4B,WADxD,KAAA/gE,gBAAsC,KAAAjL,cAC9C,KAAA+rE,sBAAoC,KAAAC,kBARhD,KAAAW,WAAsC,GACtC,KAAAC,cAAyD,GAIzD,KAAA51D,QAAkB,EA0DlB,KAAA61D,eAA2B,GArDvB,IAAI3mG,EAAsB+kC,EAAc7kC,MAQxCpD,KAAK8pG,aAAe5mG,EAAMsD,QAAQkqB,MAAK,SAAAr5B,GAAC,MAAmB,YAAfA,EAAEsK,aAC9C3B,KAAK+pG,cAAgB7mG,EAAMsD,QAAQkqB,MAAK,SAAAr5B,GAAC,MAAmB,aAAfA,EAAEsK,aAC/C3B,KAAKgqG,gBAAkB9mG,EAAMsD,QAAQkqB,MAAK,SAAAr5B,GAAC,MAAmB,8CAAfA,EAAEsK,aACjD3B,KAAKiqG,wBAA0B/mG,EAAMsD,QAAQkqB,MAAK,SAAAr5B,GAAC,MAAmB,2CAAfA,EAAEsK,aACzD3B,KAAKkqG,2BAA6BhnG,EAAMsD,QAAQkqB,MAAK,SAAAr5B,GAAC,MAAmB,8CAAfA,EAAEsK,aAC5D3B,KAAKmqG,qBAAuBjnG,EAAMsD,QAAQkqB,MAAK,SAAAr5B,GAAC,MAAmB,0CAAfA,EAAEsK,a,UAhC9D,O,EAAA,G,EAAA,+BAoCYsnG,EAAqBC,GAAgB,WAEtClpG,KAAKg9B,YAAYrI,KAAKyvB,aACrBpkD,KAAKg9B,YAAYkK,eAAe,iKAKpC0F,GAAK,oBAAqB,IAAI,SAACW,GAE3B,IAAIV,GAAeoJ,OAAOm0D,SAASC,SAASj4F,WAAW,SAAW,SAAW,SAAW6jC,OAAOm0D,SAASE,KAAO,aAC/G,EAAKC,WAAa,IAAIC,UAAU39D,GAEhC,EAAK09D,WAAWE,QAAU,SAAC1+F,GAAmB,EAAK2+F,QAAQ3+F,IAC3D,EAAKw+F,WAAWI,QAAU,SAACr2D,GAAwB,EAAKs2D,QAAQt2D,IAChE,EAAKi2D,WAAWt0B,UAAY,SAAC3hC,GAA0B,EAAKu2D,UAAUv2D,IAEtE,EAAKi2D,WAAWO,OAAS,SAACx2D,GACtB,IAAIxH,EAAmC,CACnCxjC,QAAS,EACT8N,MAAOm2B,EAASn2B,MAChBuxF,SAAUO,EACVD,YAAaA,GAGjB,EAAKjsE,YAAYmmD,kCAAkC5+E,KAAK,EAAKgmG,YAC7D,EAAKv2D,QAAS,EACd,EAAK+2D,WAAWvuE,KAAKC,UAAUqQ,IAC/B,EAAKk+D,eAhErB,iCAyEev+F,GAEP,GAAKzM,KAAKg0C,OAGN,IACIh0C,KAAKuqG,WAAWzmB,KAAKr3E,GACvB,MAAOs5E,GACLn9C,QAAQC,IAAIk9C,QALhB/lF,KAAK6pG,eAAetlG,KAAKkI,KA5ErC,8BAsFY6nC,GACJt0C,KAAKg0C,QAAS,EACdh0C,KAAKirG,UAAUjrG,KAAK+pG,cAAe,MAxF3C,mCA2FiBmB,EAAkB99D,EAAc7a,GACzC,IAAI9lB,EAAwC,CACxCnD,QAAS,EACT8jC,KAAMA,EACN7a,SAAUA,EACV44E,aAAcD,GAElBlrG,KAAK+qG,WAAWvuE,KAAKC,UAAUhwB,MAlGvC,gCAqGc2gC,EAAc7a,GACpB,IAAI9lB,EAAqC,CACrCnD,QAAS,EACT8jC,KAAMA,EACN7a,SAAUA,GAEdvyB,KAAK+qG,WAAWvuE,KAAKC,UAAUhwB,MA3GvC,mCAkHQzM,KAAK+qG,WAAWvuE,KAAKC,UAHqB,CACtCnzB,QAAS,KAGbtJ,KAAKuqG,WAAWtvD,QAChB,IAAImwD,EAAMprG,KAAKg9B,YAAYmmD,kCAC3BioB,EAAIrzF,OAAOqzF,EAAIhmG,QAAQpF,KAAKuqG,YAAa,KArHjD,gCAwHcj2D,GAEN,IAAI/G,EAA8B/Q,KAAKY,MAAMkX,EAAMlH,MACnD,GAAwBnkC,MAApBskC,EAASjkC,QAEb,OAAQikC,EAASjkC,SACb,KAAK,EACD,IAAI+hG,EAAsB,IAAI,EAAcrrG,KAAK+oG,qBAC7CuC,EAA6B,IAAI7C,GAAsB4C,EAAqBrrG,KAAMutC,EAASg+D,QAC3Fh+D,EAAS+3B,QAAS/3B,EAASg4B,aAAch4B,EAASquC,SAAUruC,EAASo7D,UACzE0C,EAAoBloG,cAApB,OAA8CmoG,EAC9CtrG,KAAK2pG,WAAWplG,KAAK+mG,GACrBtrG,KAAK4pG,cAAcr8D,EAASg+D,SAAWD,EACvCtrG,KAAKirG,UAAUjrG,KAAKiqG,wBAAyB,CAAC,CAAE7pG,KAAMJ,KAAK+oG,oBAAqB7wG,MAAOmzG,KACvF,MACJ,KAAK,EACD,IAAIG,EAAexrG,KAAK4pG,cAAcr8D,EAASk+D,gBAC/C,GAAoB,MAAhBD,EAAsB,OAC1BxrG,KAAKirG,UAAUjrG,KAAKgqG,gBAAiB,CACjC,CAAE5pG,KAAMJ,KAAK+oG,oBAAqB7wG,MAAOszG,EAAavjE,eACtD,CAAE7nC,KAAMiM,GAAqBnU,MAAOq1C,EAASH,MAC7C,CAAEhtC,KAAMiM,GAAqBnU,MAAOq1C,EAAShb,YAEjD,MACJ,KAAK,EACD,IAAIm5E,EAAgB1rG,KAAK4pG,cAAcr8D,EAASo+D,yBAChD,GAAqB,MAAjBD,EAAuB,OAC3B1rG,KAAK2pG,WAAW5xF,OAAO/X,KAAK2pG,WAAWvkG,QAAQsmG,GAAgB,GAC/D1rG,KAAK4pG,cAAcr8D,EAASo+D,8BAA2B1iG,EACvDjJ,KAAKirG,UAAUjrG,KAAKkqG,2BAA4B,CAC5C,CAAE9pG,KAAMJ,KAAK+oG,oBAAqB7wG,MAAOwzG,EAAczjE,iBAE3D,MACJ,KAAK,EACDjoC,KAAKgpG,gBAAgBrD,gBAAkBp4D,EAASq+D,iBAAmB/8C,KAAK/pB,MACxE9kC,KAAK6rG,UAAYt+D,EAASs+D,UAC1B,MACJ,KAAK,EACD,MACJ,KAAK,EACD7rG,KAAK8rG,eAAev+D,MAhKpC,qCAqKmBA,GACX,IAAIw+D,EAAoB,EACpBC,EAAwB,GAFsB,uBAIlD,YAAmBz+D,EAAS0+D,QAA5B,+CAAqC,KAA5BC,EAA4B,QACjC,GAAIA,EAAOtqG,IAAM5B,KAAK6rG,UAClBE,EAAYG,EAAO9pG,UAChB,CACH,IAAI+pG,EAAcnsG,KAAK4pG,cAAcsC,EAAOtqG,IACzB,MAAfuqG,IACAA,EAAY/pG,MAAQ8pG,EAAO9pG,MAC3B4pG,EAAaznG,KAAK,CACdnE,KAAMJ,KAAK+oG,oBACX7wG,MAAOi0G,EAAYlkE,mBAbe,kFAmBlD,IAAImkE,EAAoB,CACpBhsG,KAAM,IAAI,EAAUJ,KAAK+oG,qBACzB7wG,MAAO8zG,GAGXhsG,KAAKirG,UAAUjrG,KAAKmqG,qBAAsB,CAACiC,EAAY,CAAEhsG,KAAMgP,GAAkBlX,MAAO6zG,OA7LhG,8BAiMYhgG,GACJ/L,KAAKg9B,YAAYkK,eAAe,yCAlMxC,+BAqMU,WACFlnC,KAAKg0C,QAAS,EACXh0C,KAAK6pG,eAAe7nG,OAAS,IAC5BhC,KAAK6pG,eAAe93F,SAAQ,SAAA1a,GAAC,OAAI,EAAK0zG,WAAW1zG,MACjD2I,KAAK6pG,eAAiB,IAE1B7pG,KAAKirG,UAAUjrG,KAAK8pG,aAAc,MA3M1C,gCA8McpoG,EAAgBioF,GACR,MAAVjoF,IACJioF,EAAc5xE,OAAO,EAAG,EAAG,CACvB3X,KAAMJ,KAAKioC,cAAc7kC,MACzBlL,MAAO8H,KAAKioC,gBAGZjoC,KAAKg9B,YAAYokB,OAASC,GAAiBoiC,gBAC3CzjF,KAAKg9B,YAAYitD,kCAAkCvoF,EAAOD,QAASkoF,GAEnE3pF,KAAKg9B,YAAYqL,SAAS3mC,EAAQioF,GAAe,eAAW,MAxNxE,2CA4NyB0f,GACjB,IAAI58F,EAAuC,CACvCnD,QAAS,EACT+/F,MAAOA,EACPE,UAAW,IAGfvpG,KAAK+qG,WAAWvuE,KAAKC,UAAUhwB,MAnOvC,+CAsO6B88F,GACrB,IAAI98F,EAAuC,CACvCnD,QAAS,EACT+/F,MAAOE,EAAUvnG,OACjBunG,UAAWA,GAGfvpG,KAAK+qG,WAAWvuE,KAAKC,UAAUhwB,S,6BA7OvC,K,iyCCvJO,IAAM,GAAb,YAEI,WAAmBzV,GAAc,kBAE7B,0BAAM,UAAWA,EAAQ,uBAFVA,SAIf,EAAKonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAClD,EAAKve,cAAgB,kYAQU,CAAC,CAAC,SAAU,yCAA0C,CAAC,SAAU,yCAChG,CAAC,UAAW,wDAAyD,CAAC,UAAW,wDACjF,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,MAAO,cAAe,CAAC,WAAY,6BAA8B,CAAC,SAAU,eAC1I,CAAC,QAAS,8BAA+B,CAAC,SAAU,4BAA6B,CAAC,UAAW,2CAC7F,CAAC,cAAe,+EAChB,CAAC,SAAU,oCAAqC,CAAC,UAAW,oCAAqC,CAAC,SAAU,oCAE5G,CAAC,SAAU,oCACX,CAAC,QAAS,uCACV,CAAC,YAAa,yCACd,CAAC,iBAAkB,4CACnB,CAAC,eAAgB,0CACjB,CAAC,QAAS,gCACV,CAAC,aAAc,wCACf,CAAC,OAAQ,kFACT,CAAC,QAAS,0CAEV,CAAC,UAAW,iGACZ,CAAC,UAAW,sGAICgS,SAAQ,SAAA/L,GACjB,EAAKuE,aAAa,IAAI7J,EAAUsF,EAAS,GAAIoJ,IAAkB,SAACzW,GAAaA,EAAOT,MAAQlB,EAAO29B,KAAK6N,iBAAiBmkD,iBAAiB0lB,IAAIrmG,EAAS,OACnJ,EAAOjC,EAAW4C,QAAQ,EAAMX,EAAS,QArCpB,MAwCK,CAAC,CAAC,QAAS,iCAAkC,CAAC,MAAO,0CACvF,CAAC,MAAO,oCAAqC,CAAC,MAAO,kBAAmB,CAAC,MAAO,mBAGhE+L,SAAQ,SAAA/L,GACpB,EAAKuE,aAAa,IAAI7J,EAAUsF,EAAS,GAAIqG,IAAqB,SAAC1T,GAAaA,EAAOT,MAAQlB,EAAO29B,KAAK6N,iBAAiBmkD,iBAAiB0lB,IAAIrmG,EAAS,OACtJ,EAAOjC,EAAW4C,QAAQ,EAAMX,EAAS,QAGjD,EAAKuE,aAAa,IAAI7J,EAAU,MAAOwQ,IAAmB,SAACvY,GAAaA,EAAOT,MAAQlB,EAAO29B,KAAK6N,iBAAiBmkD,iBAAiB0lB,IAAI7zG,OACrI,EAAOuL,EAAW4C,QAAQ,EAAM,2BAGpC,EAAK2D,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnD,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCmnG,EAAuB,EAAKiN,oBAAoB50G,GACpDA,EAAEyL,cAAF,WAAgCk8F,KAEjC,GAAO,EAAO,wCAAwC,IAE7D,EAAK/0F,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GAEG,IACIw9F,EADmBx9F,EAAW,GAAG3J,MACRiL,cAAF,WASvB65B,EAAchmC,EAAO29B,KAAK6N,iBAC9BxF,EAAY8sB,yBACZu1C,EAAG1qE,OACHqI,EAAY8sB,4BAEb,GAAO,EAAO,kCAAkC,IAEvD,EAAKx/C,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChD,MACA,SAAChB,GAEG,IACIw9F,EADmBx9F,EAAW,GAAG3J,MACRiL,cAAF,WAEvB65B,EAAchmC,EAAO29B,KAAK6N,iBAC9BxF,EAAY8sB,yBACZu1C,EAAG1qE,OACHqI,EAAY8sB,4BAEb,GAAO,EAAO,kCAAkC,IAEvD,EAAKx/C,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChD,MACA,SAAChB,GAE0BA,EAAW,GAAG3J,MACRiL,cAAF,WAExBopG,UAEJ,GAAO,EAAO,yGAAyG,IAE9H,EAAKjiG,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,IAClD,MACA,SAAChB,GAE0BA,EAAW,GAAG3J,MACRiL,cAAF,WAExBqpG,YAEJ,GAAO,EAAO,+GAA+G,IAEpI,EAAKliG,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,IACA,SAACjR,GAEG,IACIw9F,EADmBx9F,EAAW,GAAG3J,MACRiL,cAAF,WACvBgzC,EAAgBt0C,EAAW,GAAG3J,MAC9Bk+C,EAAiBv0C,EAAW,GAAG3J,MAEnCmnG,EAAGoN,aAAat2D,EAAOC,MAExB,GAAO,EAAO,uEAAuE,IAE5F,EAAK9rC,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,IACA,SAACjR,GAEG,IACIw9F,EADmBx9F,EAAW,GAAG3J,MACRiL,cAAF,WACvBgzC,EAAgBt0C,EAAW,GAAG3J,MAC9Bk+C,EAAiBv0C,EAAW,GAAG3J,MAEnCmnG,EAAGoN,aAAat2D,EAAOC,MAExB,GAAO,EAAO,uEAAuE,IAE5F,EAAK9rC,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GACjG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,WAAYiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACvGgS,IACA,SAACjR,GAEG,IACIw9F,EADmBx9F,EAAW,GAAG3J,MACRiL,cAAF,WACvBgzC,EAAgBt0C,EAAW,GAAG3J,MAC9Bk+C,EAAiBv0C,EAAW,GAAG3J,MAC/Bi4F,EAAmBtuF,EAAW,GAAG3J,MAErCmnG,EAAGlP,SAAWA,EACdkP,EAAGoN,aAAat2D,EAAOC,MAExB,GAAO,EAAO,uEAAuE,IAE5F,EAAK9rC,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAChDiQ,GACA,MAAM,GAAO,EAAO,qOAAqO,IAE7P,EAAKxI,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpDiQ,GACA,MAAM,GAAO,EAAO,uZAAuZ,IAE/a,EAAKxI,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjDiQ,GACA,MAAM,GAAO,EAAO,mXAAmX,IAE3Y,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IACxDiQ,GACA,MAAM,GAAO,EAAO,4RAA4R,IAEpT,EAAKxI,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,IACzDiQ,GACA,MAAM,GAAO,EAAO,mRAAmR,IAE3S,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IACxDiQ,GACA,MAAM,GAAO,EAAO,4TAA4T,IAEpV,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IACxDiQ,GACA,MAAM,GAAO,EAAO,uUAAuU,IAE/V,EAAKxI,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDiQ,GACA,MAAM,GAAO,EAAO,sRAAsR,IAE9S,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,IACxDiQ,GACA,MAAM,GAAO,EAAO,6HAA6H,IAErJ,EAAKxI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDiQ,GACA,MAAM,GAAO,EAAO,mHAAmH,IAE3I,EAAKxI,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtDiQ,GACA,MAAM,GAAO,EAAO,oMAAoM,IAE5N,EAAKxI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDiQ,GACA,MAAM,GAAO,EAAO,gMAAgM,IA4BxN,EAAK45F,oBAAoB,QAAS,GAAI,GAClC,6BAEJ,EAAKA,oBAAoB,aAAc,CAAC,OAAQ18F,GAC5C,mEAEJ,EAAK08F,oBAAoB,aAAc,CAAC,iBAAkBrgG,GACtD,uQAAwQA,IAE5Q,EAAKqgG,oBAAoB,aAAc,CAAC,KAAM,KAAM,MAAO18F,GACvD,wLAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,OAAQt9F,GACtC,wBAEJ,EAAKs9F,oBAAoB,OAAQ,CAAC,OAAQrgG,GACtC,wBAEJ,EAAKqgG,oBAAoB,OAAQ,CAAC,MAAO,SAAU,CAACt9F,GAAkBY,IAClE,wBAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,QAAS18F,GACvC,wBAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,MAAO18F,GACjD,6IAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,SAAU18F,GAC1D,6IAEJ,EAAK08F,oBAAoB,SAAU,GAAI,GACnC,8DAEJ,EAAKA,oBAAoB,SAAU,CAAC,OAAQt9F,GACxC,0BAEJ,EAAKs9F,oBAAoB,SAAU,CAAC,OAAQrgG,GACxC,0BAEJ,EAAKqgG,oBAAoB,SAAU,CAAC,MAAO,SAAU,CAACt9F,GAAkBY,IACpE,0BAEJ,EAAK08F,oBAAoB,SAAU,CAAC,QAAS18F,GACzC,0BAEJ,EAAK08F,oBAAoB,SAAU,CAAC,KAAM,KAAM,MAAO18F,GACnD,+IAEJ,EAAK08F,oBAAoB,SAAU,CAAC,KAAM,KAAM,KAAM,SAAU18F,GAC5D,+IAEJ,EAAK08F,oBAAoB,eAAgB,CAAC,UAAW18F,GACjD,2BAEJ,EAAK08F,oBAAoB,WAAY,GAAI,GACrC,qEAEJ,EAAKA,oBAAoB,QAAS,CAAC,QAAS18F,GACxC,qDAAsD3D,IAE1D,EAAKqgG,oBAAoB,QAAS,CAAC,iBAAkBrgG,GACjD,8NAA+NA,IAEnO,EAAKqgG,oBAAoB,QAAS,CAAC,OAAQ,SAAU18F,GACjD,qDAAsD3D,IAE1D,EAAKqgG,oBAAoB,QAAS,CAAC,KAAM,KAAM,MAAO18F,GAClD,iEAAkE3D,IAEtE,EAAKqgG,oBAAoB,QAAS,CAAC,KAAM,KAAM,KAAM,SAAU18F,GAC3D,2EAA4E3D,IAEhF,EAAKqgG,oBAAoB,YAAa,CAAC,SAAU,SAAU,KAAM,CAACrgG,GAAqBA,GAAqB2D,IACxG,8JAA+J3D,IAEnK,EAAKqgG,oBAAoB,YAAa,CAAC,QAASrgG,GAC5C,8HAEJ,EAAKqgG,oBAAoB,YAAa,CAAC,OAAQ,OAAQ,CAACrgG,GAAqB2D,IACzE,qLAEJ,EAAK08F,oBAAoB,YAAa,CAAC,OAAQ,OAAQ,OAAQ,QAAS,CAACrgG,GAAqB2D,GAAoBA,GAAoBA,IAClI,qLAEJ,EAAK08F,oBAAoB,YAAa,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,YAAa,CAACrgG,GAAqB2D,GAAoBA,GAAoBA,GAAoBA,IAClK,qLAOJ,EAAK08F,oBAAoB,WAAY,CAAC,QAASrgG,GAC3C,+IAEJ,EAAKqgG,oBAAoB,OAAQ,CAAC,OAAQ,MAAO,QAAS,UAAW18F,GACjE,oHAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,UAAW18F,GAC3E,2IAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,UAAW,UAAW,UAAW,WAAY18F,GAC7G,2IAEJ,EAAK08F,oBAAoB,SAAU,CAAC,OAAQ,MAAO,SAAU18F,GACzD,+FAEJ,EAAK08F,oBAAoB,SAAU,CAAC,OAAQ,MAAO,QAAS,UAAW18F,GACnE,kJAEJ,EAAK08F,oBAAoB,SAAU,CAAC,OAAQ,MAAO,QAAS,UAAW,UAAW,UAAW,WAAY18F,GACrG,kJAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,UAAW18F,GAC3E,+IAEJ,EAAK08F,oBAAoB,UAAW,CAAC,OAAQ,MAAO,QAAS,UAAW18F,GACpE,qLAEJ,EAAK08F,oBAAoB,SAAU,CAAC,IAAK,IAAK,UAAW18F,GACrD,6FAEJ,EAAK08F,oBAAoB,cAAe,CAAC,QAASrgG,GAC9C,kJAGJ,EAAKqgG,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,MAAO18F,GACvD,qDAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO18F,GACnE,6DAEJ,EAAK08F,oBAAoB,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO18F,GACvE,6EAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO18F,GAC/E,uFAEJ,EAAK08F,oBAAoB,SAAU,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO18F,GACjF,0HAEJ,EAAK08F,oBAAoB,QAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO18F,GAChF,kJAEJ,EAAK08F,oBAAoB,aAAc,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM18F,GAC9D,gTAAiTA,IAErT,EAAK08F,oBAAoB,eAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM18F,GAChE,mTAAoTA,IAExT,EAAK08F,oBAAoB,cAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM18F,GACnE,qTAAsTA,IAE1T,EAAK08F,oBAAoB,gBAAiB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM18F,GACrE,wTAAyTA,IAG7T,EAAK08F,oBAAoB,aAAc,GAAI,GACvC,8GAEJ,EAAKA,oBAAoB,WAAY,GAAI,GACrC,sCAEJ,EAAKA,oBAAoB,aAAc,CAAC,QAASrgG,GAC7C,sNAEJ,EAAKqgG,oBAAoB,WAAY,CAAC,QAASrgG,GAC3C,2CAEJ,EAAKqgG,oBAAoB,SAAU,CAAC,IAAK,KAAM18F,GAC3C,2DAEJ,EAAK08F,oBAAoB,QAAS,CAAC,IAAK,KAAM18F,GAC1C,yBAEJ,EAAK08F,oBAAoB,MAAO,CAAC,IAAK,IAAK,SAAU,CAAC18F,GAAoBA,GAAoB3D,IAC1F,0CAEJ,EAAKqgG,oBAAoB,SAAU,CAAC,IAAK,IAAK,KAAM18F,GAChD,2DAEJ,EAAK08F,oBAAoB,QAAS,CAAC,IAAK,IAAK,KAAM18F,GAC/C,yBAEJ,EAAK08F,oBAAoB,cAAe,CAAC,IAAK,KAAM18F,GAChD,kIAEJ,EAAK08F,oBAAoB,cAAe,CAAC,IAAK,IAAK,KAAM18F,GACrD,kIAEJ,EAAK08F,oBAAoB,MAAO,CAAC,QAAS18F,GACtC,sDAEJ,EAAK08F,oBAAoB,MAAO,CAAC,QAAS,QAAS,SAAU18F,GACzD,8DAKJ,EAAK08F,oBAAoB,cAAe,GAAI,GACxC,iDAEJ,EAAKA,oBAAoB,OAAQ,GAAI,GACjC,gGAEJ,EAAKA,oBAAoB,MAAO,GAAI,GAChC,sFAEJ,EAAKA,oBAAoB,QAAS,CAAC,UAAW18F,GAC1C,iDAEJ,EAAK08F,oBAAoB,QAAS,CAAC,UAAW,WAAY18F,GACtD,iDAEJ,EAAK08F,oBAAoB,QAAS,CAAC,UAAW,UAAW,WAAY18F,GACjE,iDAEJ,EAAK08F,oBAAoB,YAAa,CAAC,IAAK,KAAM18F,GAC9C,oDAEJ,EAAK08F,oBAAoB,YAAa,CAAC,IAAK,IAAK,KAAM18F,GACnD,oDAEJ,EAAK08F,oBAAoB,SAAU,CAAC,SAAU18F,GAC1C,4KAEJ,EAAK08F,oBAAoB,UAAW,CAAC,SAAU18F,GAC3C,2LAEJ,EAAK08F,oBAAoB,UAAW,CAAC,SAAU18F,GAC3C,2LAEJ,EAAK08F,oBAAoB,SAAU,CAAC,SAAU18F,GAC1C,kMAEJ,EAAK08F,oBAAoB,SAAU,CAAC,SAAU18F,GAC1C,mMAEJ,EAAK08F,oBAAoB,UAAW,CAAC,SAAU18F,GAC3C,2LAEJ,EAAK08F,oBAAoB,YAAa,CAAC,QAASrgG,GAC5C,gJAKJ,EAAKqgG,oBAAoB,WAAY,CAAC,QAAS18F,GAC3C,oCAKJ,EAAK08F,oBAAoB,YAAa,CAAC,UAAWt9F,GAC9C,iHAEJ,EAAKs9F,oBAAoB,YAAa,CAAC,SAAU,UAAWt9F,GACxD,4KAEJ,EAAKs9F,oBAAoB,OAAQ,CAAC,OAAQ,IAAK,KAAM,CAACrgG,GAAqB2D,GAAoBA,IAC3F,kBAEJ,EAAK08F,oBAAoB,OAAQ,CAAC,OAAQ,IAAK,IAAK,KAAM,MAAO,CAACrgG,GAAqB2D,GAAoBA,GAAoBA,GAAoBA,IAC/I,wJAKJ,EAAK08F,oBAAoB,SAAU,CAAC,MAAO,QAAS18F,GAChD,sDAAuDA,IAE3D,EAAK08F,oBAAoB,SAAU,CAAC,QAAS18F,GACzC,oDAAqDA,IAEzD,EAAK08F,oBAAoB,OAAQ,CAAC,KAAM18F,GACpC,uCAAwCA,IAE5C,EAAK08F,oBAAoB,MAAO,CAAC,QAAS,YAAa18F,GACnD,+DAAgEA,IAEpE,EAAK08F,oBAAoB,MAAO,CAAC,IAAK,KAAM18F,GACxC,6CAA8CA,IAElD,EAAK08F,oBAAoB,MAAO,CAAC,IAAK,KAAM18F,GACxC,8CAA+CA,IAEnD,EAAK08F,oBAAoB,MAAO,CAAC,KAAM18F,GACnC,qCAAsCA,IAE1C,EAAK08F,oBAAoB,MAAO,CAAC,KAAM18F,GACnC,oCAAqCA,IAEzC,EAAK08F,oBAAoB,MAAO,CAAC,KAAM18F,GACnC,sCAAuCA,IAE3C,EAAK08F,oBAAoB,MAAO,CAAC,KAAM18F,GACnC,sCAAuCA,IAE3C,EAAK08F,oBAAoB,OAAQ,CAAC,KAAM18F,GACpC,yCAA0CA,IAE9C,EAAK08F,oBAAoB,OAAQ,CAAC,KAAM18F,GACpC,2CAA4CA,IAEhD,EAAK08F,oBAAoB,UAAW,CAAC,SAAU18F,GAC3C,oDAAqDA,IAEzD,EAAK08F,oBAAoB,UAAW,CAAC,SAAU18F,GAC3C,oDAAqDA,IAEzD,EAAK08F,oBAAoB,OAAQ,CAAC,KAAM18F,GACpC,2CAA4CA,IAEhD,EAAK08F,oBAAoB,QAAS,CAAC,IAAK,KAAM18F,GAC1C,2CAA4CA,IAEhD,EAAK08F,oBAAoB,OAAQ,CAAC,IAAK,KAAM18F,GACzC,4CAA6CA,IAEjD,EAAK08F,oBAAoB,KAAM,CAAC,IAAK,KAAM18F,GACvC,sCAAuCA,IAE3C,EAAK08F,oBAAoB,MAAO,CAAC,KAAMt9F,GACnC,qCAAsCA,IAE1C,EAAKs9F,oBAAoB,QAAS,CAAC,KAAM18F,GACrC,uCAAwCZ,IAE5C,EAAKs9F,oBAAoB,OAAQ,CAAC,KAAM18F,GACpC,oDAAqDZ,IAEzD,EAAKs9F,oBAAoB,QAAS,CAAC,KAAM18F,GACrC,oDAAqDZ,IAEzD,EAAKs9F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,MAAO18F,GACvD,0DAA2DA,IAE/D,EAAK08F,oBAAoB,OAAQ,CAAC,IAAK,IAAK,KAAM18F,GAC9C,6HAA8HA,IAElI,EAAK08F,oBAAoB,YAAa,CAAC,QAAS,MAAO,OAAQ18F,GAC3D,oLAAqLA,IAMzL,EAAK08F,oBAAoB,OAAQ,GAAI,GACjC,sBAAuBt9F,IAE3B,EAAKs9F,oBAAoB,QAAS,GAAI,GAClC,qCAAsCt9F,IAE1C,EAAKs9F,oBAAoB,MAAO,GAAI,GAChC,kDAAmDt9F,IAEvD,EAAKs9F,oBAAoB,OAAQ,GAAI,GACjC,oCAAqCt9F,IAEzC,EAAKs9F,oBAAoB,OAAQ,GAAI,GACjC,oCAAqCt9F,IAEzC,EAAKs9F,oBAAoB,SAAU,GAAI,GACnC,oCAAqCt9F,IAEzC,EAAKs9F,oBAAoB,SAAU,GAAI,GACnC,qCAAsCt9F,IAE1C,EAAKs9F,oBAAoB,YAAa,CAAC,KAAMt9F,GACzC,mEAEJ,EAAKs9F,oBAAoB,YAAa,CAAC,QAASrgG,GAC5C,oCAAqC2D,IAEzC,EAAK08F,oBAAoB,aAAc,CAAC,QAASrgG,GAC7C,oFAAqF2D,IAEzF,EAAK08F,oBAAoB,cAAe,CAAC,QAASrgG,GAC9C,wFAAyF2D,IAE7F,EAAK08F,oBAAoB,cAAe,CAAC,WAAY18F,GACjD,6DAEJ,EAAK08F,oBAAoB,SAAU,CAAC,QAASrgG,GACzC,+HAEJ,EAAKqgG,oBAAoB,WAAY,CAAC,QAASrgG,GAC3C,8EAEJ,EAAKqgG,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO18F,GAC/E,+LAEJ,EAAK08F,oBAAoB,SAAU,GAAI,GACnC,qFAEJ,EAAKA,oBAAoB,SAAU,GAAI,GACnC,4GAGJ,EAAK3lG,iCAloBwB,EAFrC,O,mOAAA,sDAwoBwB5N,EAAoBwzG,EAA0BrhG,EAA+BnM,EAAiB8B,GAE9G,IAAIY,EAAyB,GAC7B,GAAI4B,MAAMkjB,QAAQrb,GACd,IAAK,IAAIrU,EAAI,EAAGA,EAAI01G,EAAe3qG,OAAQ/K,IACvC4K,EAAW0C,KAAK,CAAEpL,WAAYwzG,EAAe11G,GAAImJ,KAAMkL,EAAerU,GAAIiZ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,SAGhIe,EAAa8qG,EAAe5pG,KAAI,SAACvL,GAAW,MAAO,CAAE2B,WAAY3B,EAAM4I,KAAMkL,EAAgB4E,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,MAGjI,MAAdG,EACAjB,KAAKsK,UAAU,IAAIvJ,EAAO5H,EAAY,IAAI0J,EAAchB,GAAa,MACjE,SAACA,GAAc,MAEPw9F,EADmBx9F,EAAW,GAAG3J,MACRiL,cAAF,WACvBypG,EAAQ/qG,EAAW0L,MAAM,GAAGxK,KAAI,SAAAhK,GAAC,OAAIA,EAAEb,UAE3C,EAAAmnG,EAAGgN,KAAIlzG,GAAP,WAAsByzG,OAEvB,GAAO,EAAOztG,GAAS,IAE9Ba,KAAKsK,UAAU,IAAIvJ,EAAO5H,EAAY,IAAI0J,EAAchB,GAAaZ,GACjE,SAACY,GAAc,MAEPw9F,EADmBx9F,EAAW,GAAG3J,MACRiL,cAAF,WACvBypG,EAAQ/qG,EAAW0L,MAAM,GAAGxK,KAAI,SAAAhK,GAAC,OAAIA,EAAEb,SAE3C,OAAO,EAAAmnG,EAAGgN,KAAIlzG,GAAP,WAAsByzG,OAE9B,GAAO,EAAOztG,GAAS,MAtqB1C,0CA6qBwB0tG,GAAyE,oH,IAErF7vE,EAA+B,QAApB,EAAc,QAAd,EAAGh9B,KAAKhJ,cAAM,eAAE29B,YAAI,eAAE6N,iBAGrC,GAAoC,MAAhCxF,EAAY2pD,iBAAhB,CAMA,GAA+B,MAA3B3pD,EAAYo8C,YAMhB,OAAO,IAAI,GAAiBp5E,KAAKhJ,OAAQgmC,EAAa6vE,GAJlD7vE,EAAYkK,eAAe,+FAN3BlK,EAAYkK,eAAe,sEAprBvC,GAAqC,GAusBxB,GAAb,WAkBI,WAAoBlwC,EAAwBgmC,EAAiCiL,GAA4B,I,EAAA,kBAArF,KAAAjxC,SAAwB,KAAAgmC,cAAiC,KAAAiL,gBAX7E,KAAAkO,MAAgB,IAChB,KAAAC,OAAiB,IAKjB,KAAA02D,aAAuB,EAOnB9sG,KAAKg9B,YAAY2pD,iBAAmB3mF,KAEpCA,KAAKksF,gBAAkB1hD,OAAO,eAC9B,IAAI8iD,EAAettF,KAAKhJ,OAAO29B,KAAK6N,iBAAiB0J,aAAaqhD,iBAElEvtF,KAAK+sG,cAAgB,WACjB,IAAItf,EAAWH,EAAaxiC,QAAQ,YAChC4iC,EAAmBD,EAASt3C,QAC5Bw3C,EAAoBF,EAASr3C,SAI7B,EAAKA,OAAS,EAAKD,MAAQw3C,EAAYD,EACvCJ,EAAa1+C,IAAI,CACb,MAAS,EAAKuH,MAAQ,EAAKC,OAASu3C,EAAY,KAChD,OAAUA,EAAY,OAG1BL,EAAa1+C,IAAI,CACb,OAAU,EAAKwH,OAAS,EAAKD,MAAQu3C,EAAW,KAChD,MAASA,EAAW,QAKhCJ,EAAa3gD,IAAI,eACjB2gD,EAAajhD,GAAG,cAAersC,KAAK+sG,eAEpC/sG,KAAK+sG,gBAEL/sG,KAAK4tF,gBAAkBpjD,OAAO,eAC9BxqC,KAAKksF,gBAAgBpiD,OAAO9pC,KAAK4tF,iBAEjCN,EAAaxjD,OAAO9pC,KAAKksF,iBACzBoB,EAAariD,OAEbqiD,EAAa,GAAGO,cAAgB,SAAUp2E,GACtCA,EAAEwhC,kBAGwB,QAA9B,EAAAj5C,KAAKhJ,OAAO29B,KAAKw3D,qBAAa,SAAEC,qBA5DxC,gDAgEiBj2C,EAAeC,GACxBp2C,KAAKm2C,MAAQA,EACbn2C,KAAKo2C,OAASA,EACdp2C,KAAK+sG,gBACL/sG,KAAKqsG,IAAII,aAAazsG,KAAKm2C,MAAOn2C,KAAKo2C,OAAQp2C,KAAKmwF,UACpDnwF,KAAKw8C,KAAK9rB,KAAK,UAAUke,IAAI,CACzB,MAAS,GACT,OAAU,OAvEtB,6BA6EQ5uC,KAAKg9B,YAAY2lD,aAAc,EAC/B3iF,KAAKgtG,gBAAgBhtG,KAAK4tF,mBA9ElC,sCAiFoBpxC,GAEZ,IAAIz+B,EAAO/d,KACPitG,GAA6B,EACjCjtG,KAAKw8C,KAAOA,EAwFZx8C,KAAKqsG,IAAM,IAAIa,IAtFF,SAACA,GAEVA,EAAGC,MAAQ,WACPpvF,EAAKoyE,SAAW+c,EAAGE,IAEnB,IAAIC,EAAqB,WAErBJ,GAAoB,GAOpBh2G,EAAI,EAER8mB,EAAKktF,UAAU,SAAS,WACT,KAALh0G,GAAQo2G,OAGlBtvF,EAAKktF,UAAU,YAAY,WACZ,KAALh0G,GAAQo2G,QAMtBH,EAAGtpD,QAAU,WACT7lC,EAAKktF,UAAU,YAGnBiC,EAAGI,KAAO,WACFvvF,EAAKif,YAAYokB,OAASC,GAAiBgD,SAAYtmC,EAAK+uF,aACvDG,IACDA,GAAoB,EACpBlvF,EAAKktF,UAAU,QAAQ,WACnBgC,GAAoB,MAIhClvF,EAAKowE,QAMT+e,EAAGK,aAAe,WACdxvF,EAAKktF,UAAU,iBAGnBiC,EAAGM,cAAgB,WACfzvF,EAAKktF,UAAU,kBAGnBiC,EAAGO,aAAe,WACd1vF,EAAKktF,UAAU,iBAGnBiC,EAAGQ,aAAe,WACd3vF,EAAKktF,UAAU,iBAGnBiC,EAAGS,aAAe,WACd5vF,EAAKktF,UAAU,iBAGnBiC,EAAGU,YAAc,WACb7vF,EAAKktF,UAAU,gBAGnBiC,EAAGW,WAAa,WACZ9vF,EAAKktF,UAAU,eAGnBiC,EAAGY,WAAa,WACZ/vF,EAAKktF,UAAU,eAGnBiC,EAAGa,YAAc,WACbhwF,EAAKktF,UAAU,kBAOGzuD,EAAK,IAC/BA,EAAK9rB,KAAK,UAAUke,IAAI,CACpB,MAAS,GACT,OAAU,OAhLtB,6BAwLY5uC,KAAKg9B,YAAYokB,OAASC,GAAiBgD,UAC3CrkD,KAAKg9B,YAAY4mD,cAAc,OAAO,EAAM,IAC5C5jF,KAAKg9B,YAAY0lD,cAAe,EAChC1iF,KAAKg9B,YAAY4mD,cAAc,OAAO,EAAO,QA3LzD,6BAiMQ5jF,KAAK8sG,aAAc,IAjM3B,+BAqMQ9sG,KAAK8sG,aAAc,IArM3B,gCAwMckB,GAAqD,IAA3BhiE,EAA2B,uDAAJ,KAEnD9oC,EAAsBlD,KAAKioC,cAAc7kC,MACzC1B,EAASwB,EAAM+iB,qBAAqB+nF,EAAmB,MAEvDvsG,EAAUC,aAAM,EAANA,EAAQD,QAEtB,GAAe,MAAXA,EAAJ,CAKA,IAAIkoF,EAAyB,CACzB,CACIvpF,KAAM8C,EACNhL,MAAO8H,KAAKioC,gBAIpBjoC,KAAKg9B,YAAYqL,SAAS3mC,EAAQioF,GAAe,SAAC3sD,GAC9B,MAAZgP,GAAkBA,MACH,QAApBgiE,QAbiB,MAAZhiE,GAAkBA,MAhNlC,qCAkOwB,MAAZhsC,KAAKqsG,KAAarsG,KAAKqsG,IAAIxlE,SAC/B7mC,KAAKksF,gBAAgBrlD,SACrB7mC,KAAKhJ,OAAO29B,KAAK6N,iBAAiB0J,aAAaqhD,iBAAiBniD,OAChEprC,KAAKg9B,YAAY2lD,aAAc,EAC/B3iF,KAAKg9B,YAAY2pD,iBAAmB,SAtO5C,K,o6CCxsBO,IAAM,GAAb,YAEI,WAAY3vF,GAAc,yBAEtB,0BAAM,SAAUA,EAAQ,kOAEnBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,gBAElD,EAAKhU,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAE1BmnG,EAAK,IAAI,GAAa1oD,EAAGC,GAAG,EAAO5/C,EAAO29B,KAAK6N,iBAAkB9qC,GACrEA,EAAEyL,cAAF,MAA2Bk8F,KAE5B,GAAO,EAAO,0KAA0K,IAG/L,EAAK/0F,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,IAAKiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,aAAciH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1B+1G,EAAsBpsG,EAAW,GAAG3J,MAEpCmnG,EAAK,IAAI,GAAa1oD,EAAGC,EAAGq3D,EAAYj3G,EAAO29B,KAAK6N,iBAAkB9qC,GAC1EA,EAAEyL,cAAF,MAA2Bk8F,KAE5B,GAAO,EAAO,qMAAqM,IAG1N,EAAK/0F,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,SAAUiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC8J,EAAiBH,EAAW,GAAG3J,MAC/B86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,YAErBD,EAAGiB,QAAQjyF,MAEZ,GAAO,EAAO,iPAAiP,IAEtQ,EAAKsI,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,CAChD,CAAE1J,WAAY,aAAciH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACzG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC06E,EAAgB/wE,EAAW,GAAG3J,MAC9B86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,SAErBD,EAAGkb,KAAKt7B,MAET,GAAO,EAAO,kVAAkV,IAEvW,EAAKtoE,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IACjD,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEnB6vF,EAAGC,cAAc,WAErBD,EAAGmb,WAAY,MAEhB,GAAO,EAAO,qEAAqE,IAE1F,EAAK7jG,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnD,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEnB6vF,EAAGC,cAAc,aAErBD,EAAGmb,WAAY,MAEhB,GAAO,EAAO,iEAAiE,IAEtF,EAAK7jG,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,eAAgBiH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC5G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCinG,EAAwBt9F,EAAW,GAAG3J,MACtC86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,iBAErBD,EAAGmM,aAAaA,MAEjB,GAAO,EAAO,oGAAoG,IAEzH,EAAK70F,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,aAAciH,KAAMkQ,GAAsBJ,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC1G,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC+1G,EAAsBpsG,EAAW,GAAG3J,MACpC86F,EAAmBt7F,EAAEyL,cAAF,MAEnB6vF,EAAGC,cAAc,eAErBD,EAAGob,cAAcH,MAElB,GAAO,EAAO,yFAAyF,IAE9G,EAAK3jG,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAArC,OAEX,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAmBt7F,EAAEyL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,QAErB,OAAOD,EAAGkB,QAAex8F,EAAE0L,UAE5B,GAAO,EAAO,8DAA8D,IAzI7D,EAF9B,kBAAiC,GA0JpB,GAAb,YA4BI,WAAYirG,EAAgBC,EAAwBL,EAChDjxE,EAA0BiL,GAA4B,kBACtD,0BAAMjL,EAAaiL,KAF6BgmE,aA1BpD,EAAAM,aAA8B,GAC9B,EAAA37B,MAAgB,EAEhB,EAAA47B,UAAoB,EAKpB,EAAAvQ,KAAe,EACf,EAAAC,KAAe,EAEf,EAAAuQ,wBAAkC,EAElC,EAAAC,WAAqB,GAErB,EAAAP,WAAqB,EAErB,EAAAQ,cAAwB,EACxB,EAAAC,UAAoB,EACpB,EAAAC,UAAoB,EAEpB,EAAAC,UAAoB,EACpB,EAAAC,UAAoB,EAEpB,EAAAC,kBAA4B,EAMxB,EAAKT,aAAahqG,KAAK,CACnBoyC,EAAG03D,EACHz3D,EAAG03D,EACHxjF,MAAO,EACPs/D,MAAO,EACP6kB,UAAW,IAEf,EAAKC,kBAEL,EAAK5V,YAAc,SAEnB,EAAKhF,kBAAoB,GAEzB,IAAIM,EAAY,IAAI7U,KAAK0O,UAhB6B,OAiBtD,EAAKuB,cAAgB4E,EAErB,EAAKua,YAAc,IAAIpvB,KAAKsa,SAC5BzF,EAAUlG,SAAS,EAAKygB,aACxB,EAAKA,YAAYv+B,OAAOy9B,EAAQC,GAChC,EAAKQ,SAAWT,EAChB,EAAKU,SAAWT,EAEhB,EAAKc,OAAS,IAAIrvB,KAAKsa,SACvBzF,EAAUlG,SAAS,EAAK0gB,QACxB,EAAKA,OAAOh9E,QAAU,EAAK67E,WAC3B,EAAKoB,WAAWhB,EAAQC,EAAQ,EAAK17B,OAKrC,EAAKwG,YAAY8R,MAAMwD,SAAS,EAAKsB,eAErC,EAAKgI,oBAnCiD,E,UA7B9D,e,EAAA,G,EAAA,yCAqEQ,IAAIh2F,EAAShC,KAAKuuG,aAAavsG,OAC3BstG,EAAkBtvG,KAAKuuG,aAAavsG,EAAS,GACjDhC,KAAKi+F,MAAQqR,EAAgB34D,EAC7B32C,KAAKk+F,MAAQoR,EAAgB14D,EAC7B52C,KAAK00F,eAAiB10F,KAAKi+F,KAAOj8F,EAClChC,KAAK20F,eAAiB30F,KAAKk+F,KAAOl8F,IA1E1C,mCA6EiB,GACL,GAAgBhC,KAAKwuG,WACrBxuG,KAAKwuG,SAAW,EAChBxuG,KAAK+0C,SACL/0C,KAAKyuG,wBAAyB,KAjF1C,oCAqFkBxjE,GACVjrC,KAAKovG,OAAOh9E,QAAU6Y,IAtF9B,2BAyFS2nC,GACD5yE,KAAK4yE,OAASA,EAAQ,IAAMtmE,KAAKumE,GACjC,IAAIy8B,EAA+BtvG,KAAKuuG,aAAavuG,KAAKuuG,aAAavsG,OAAS,GAChFhC,KAAKqvG,WAAWC,EAAgB34D,EAAG24D,EAAgB14D,EAAG52C,KAAK4yE,SA5FnE,6BA+FW28B,EAAwBC,EAAaC,GACxCzvG,KAAKkuG,KAAKluG,KAAK4yE,OACf,IAAI08B,EAAkBtvG,KAAKuuG,aAAavuG,KAAKuuG,aAAavsG,OAAS,GACnEhC,KAAKqvG,WAAWC,EAAgB34D,EAAG24D,EAAgB14D,EAAG52C,KAAK4yE,OAC3D,4CAAa28B,EAAgBC,EAAIC,KAnGzC,8BAsGYvsG,GAEJ,IAAIyxC,EAAoB,IAAI,EAAczxC,GACtC6zF,EAAmB,IAAI2Y,EAAa1vG,KAAKuuG,aAAa,GAAG53D,EAAG32C,KAAKuuG,aAAa,GAAG33D,EACjF52C,KAAKiuG,WAAYjuG,KAAKo5E,YAAYp8C,YAAa2X,GAMnD,OALAA,EAAGxxC,cAAH,MAA4B4zF,EAE5BA,EAAG9L,SAASjrF,MACZ+2F,EAAGhiD,SAEIJ,IAhHf,8BAmHY3yC,GAAc,WAEdstG,EAA+BtvG,KAAKuuG,aAAavuG,KAAKuuG,aAAavsG,OAAS,GAC5E2tG,EAA8B,CAC9Bh5D,EAAG24D,EAAgB34D,EAAI30C,EAASsK,KAAKymE,IAAI/yE,KAAK4yE,OAC9Ch8B,EAAG04D,EAAgB14D,EAAI50C,EAASsK,KAAK0mE,IAAIhzE,KAAK4yE,OAC9C9nD,MAAO9qB,KAAKmuG,UAAYnuG,KAAKs5F,YAAc,KAC3ClP,MAAOpqF,KAAK85F,YACZmV,UAAWjvG,KAAKu5F,aAGpBv5F,KAAKuuG,aAAahqG,KAAKorG,GAgBvB3vG,KAAKw0F,iBAAkB,EACvBx0F,KAAKyuG,wBAAyB,EAC9BzuG,KAAKkvG,kBAGAlvG,KAAKgvG,mBACNhvG,KAAKgvG,kBAAmB,EACxBjkE,YAAW,WACP,EAAKikE,kBAAmB,EACxB,EAAKj6D,SACL,EAAKs6D,WAAWM,EAAeh5D,EAAGg5D,EAAe/4D,EAAG,EAAKg8B,SAC1D,QAzJf,6BA8JWj8B,EAAWC,GACd,IAAI+4D,EAA8B,CAC9Bh5D,EAAGA,EACHC,EAAGA,EACH9rB,MAAO,KACPs/D,MAAOpqF,KAAK85F,YACZmV,UAAWjvG,KAAKu5F,aAGpBv5F,KAAKuuG,aAAahqG,KAAKorG,GAEvB3vG,KAAKw0F,iBAAkB,EACvBx0F,KAAKyuG,wBAAyB,EAC9BzuG,KAAKkvG,kBACLlvG,KAAKqvG,WAAWM,EAAeh5D,EAAGg5D,EAAe/4D,EAAG52C,KAAK4yE,SA5KjE,iCAgLej8B,EAAWC,EAAWg8B,GAC7B5yE,KAAKovG,OAAOnqE,QACZjlC,KAAKovG,OAAO7U,UAAU,EAAG,SAAU,EAAG,IACtCv6F,KAAKovG,OAAOx+B,OAAOj6B,EAAGC,GAEtB,IAAIg5D,EAAKtjG,KAAKymE,IAAIH,GACdi9B,EAAKvjG,KAAK0mE,IAAIJ,GAEdk9B,GAAOxjG,KAAK0mE,IAAIJ,GAChBm9B,EAAMzjG,KAAKymE,IAAIH,GAEfo9B,EAAgBhwG,KAAK0uG,WAAa,EAClCuB,EAAiBjwG,KAAK0uG,WAAa,EACnCwB,EAAkBlwG,KAAK0uG,WAAa,EAExC1uG,KAAKovG,OAAOx+B,OAAOj6B,EAAIi5D,EAAKI,EAAep5D,EAAIi5D,EAAKG,GACpDhwG,KAAKovG,OAAOlU,OAAOvkD,EAAIi5D,EAAKK,EAAiBH,EAAMI,EAAiBt5D,EAAIi5D,EAAKI,EAAiBF,EAAMG,GACpGlwG,KAAKovG,OAAOlU,OAAOvkD,EAAIi5D,EAAKK,EAAiBH,EAAMI,EAAiBt5D,EAAIi5D,EAAKI,EAAiBF,EAAMG,GACpGlwG,KAAKovG,OAAOlU,OAAOvkD,EAAIi5D,EAAKI,EAAep5D,EAAIi5D,EAAKG,KAlM5D,+BAuMQ,IAAI5W,EAAmBp5F,KAAKmvG,YAE5BnvG,KAAK2uG,cAAgB,EACrB3uG,KAAK4uG,UAAY,EACjB5uG,KAAK6uG,UAAY,EAES,MAAtB7uG,KAAKgwF,eACLoJ,EAAI,IAAIrZ,KAAKsa,SACbr6F,KAAKgwF,cAAgBoJ,EACrBp5F,KAAKo5E,YAAY8R,MAAMwD,SAAS0K,IAGhCA,EAAEn0D,QAGgB,MAAlBjlC,KAAKq5F,WAAqBr5F,KAAKwuG,UAC/BpV,EAAEkB,UAAUt6F,KAAKq5F,UAAWr5F,KAAKy5F,WAGrC,IAAI0W,EAAanwG,KAAKuuG,aAAa,GACnCnV,EAAExoB,OAAOu/B,EAAWx5D,EAAGw5D,EAAWv5D,GAG9B52C,KAAKwuG,UACLpV,EAAEmB,UAAUv6F,KAAKu5F,YAAav5F,KAAKs5F,YAAat5F,KAAK85F,YAAa,IAEtE,IAAK,IAAI7iG,EAAI,EAAGA,EAAI+I,KAAKuuG,aAAavsG,OAAQ/K,IAAK,CAC/C,IAAIm5G,EAAkBpwG,KAAKuuG,aAAat3G,GACxB,MAAZm5G,EAAGtlF,OACE9qB,KAAKwuG,UACF4B,EAAGnB,WAAajvG,KAAK2uG,eAAiByB,EAAGtlF,OAAS9qB,KAAK4uG,WAAawB,EAAGhmB,OAASpqF,KAAK6uG,YACrFzV,EAAEmB,UAAU6V,EAAGnB,UAAWmB,EAAGtlF,MAAOslF,EAAGhmB,MAAO,IAC9CpqF,KAAK2uG,cAAgByB,EAAGnB,UACxBjvG,KAAK4uG,UAAYwB,EAAGtlF,MACpB9qB,KAAK6uG,UAAYuB,EAAGhmB,OAG5BgP,EAAE8B,OAAOkV,EAAGz5D,EAAGy5D,EAAGx5D,IAGlBwiD,EAAExoB,OAAOw/B,EAAGz5D,EAAGy5D,EAAGx5D,GAKtB52C,KAAKwuG,UACLpV,EAAEqB,YAGgB,MAAlBz6F,KAAKq5F,WAAqBr5F,KAAKwuG,UAC/BpV,EAAEsB,YAzPd,mCA6PiB3K,GAELA,aAAuB2f,GAAgB3f,EAAY0e,wBACnD1e,EAAYsgB,yBAGZrwG,KAAKyuG,wBACLzuG,KAAKqwG,yBAGT,IAAIrb,EAAKh1F,KAAKgwF,cAAciF,YACxBC,EAAMnF,EAAYC,cAAciF,YAEpC,QAAID,EAAGj9D,KAAOm9D,EAAI58D,OAAS48D,EAAIn9D,KAAOi9D,EAAG18D,UAErC08D,EAAG59C,IAAM89C,EAAIxT,QAAUwT,EAAI99C,IAAM49C,EAAGtT,UAEpCqO,EAAW,OACJA,EAAY0D,aAAazzF,MAGN,MAA1BA,KAAKs0F,mBAA8D,MAAjCvE,EAAYuE,oBAG9Ct0F,KAAKw0F,iBAAiBx0F,KAAKm1F,sBAC3BpF,EAAYyE,iBAAiBzE,EAAYoF,sBrCrN/C,SAAgCC,EAAkBC,GAKpD,IAAK,IAAIp+F,EAAI,EAAGA,EAAIm+F,EAAQpzF,OAAQ/K,IAChC,GAAI+6F,GAAoBqD,EAASD,EAAQn+F,IACrC,OAAO,EAIf,IAAK,IAAI,EAAI,EAAG,EAAIo+F,EAAQrzF,OAAQ,IAChC,GAAIgwF,GAAoBoD,EAASC,EAAQ,IACrC,OAAO,EAIf,OAAO,EqCsMIib,CAAsBtwG,KAAKu0F,sBAAuBxE,EAAYwE,2BAxR7E,+CA6RQv0F,KAAKs0F,kBAAoBt0F,KAAKuuG,aAAaxrG,KAAI,SAACqtG,GAAS,MAAO,CAAEz5D,EAAGy5D,EAAGz5D,EAAGC,EAAGw5D,EAAGx5D,QA7RzF,8BAiSQ52C,KAAKuuG,aAAe,GACpBvuG,KAAKuuG,aAAahqG,KAAK,CACnBoyC,EAAG,IACHC,EAAG,IACH9rB,MAAO,EACPs/D,MAAO,EACP6kB,UAAW,IAEfjvG,KAAKkvG,kBAELlvG,KAAKs0F,kBAAoB,GAEzBt0F,KAAK4yE,MAAQ,EACb5yE,KAAKs5F,YAAc,EACnBt5F,KAAK0uG,WAAa,GAClB1uG,KAAK+0C,SACL/0C,KAAKqvG,WAAW,IAAK,IAAK,KAjTlC,gDAsTQ,IAAIC,EAA+BtvG,KAAKuuG,aAAavuG,KAAKuuG,aAAavsG,OAAS,GAC5E20C,EAAI24D,EAAgB34D,EACpBC,EAAI04D,EAAgB14D,EAHL,uBAKnB,YAAe52C,KAAKo5E,YAAYqP,OAAhC,+CAAwC,KAA/BuK,EAA+B,QACpC,GAAIA,GAAMhzF,MAAQgzF,EAAG5C,cAAcz5C,EAAGC,GAClC,OAAO,GAPI,qFArT3B,mCAiUiB25D,GACT,IAAIjB,EAA+BtvG,KAAKuuG,aAAavuG,KAAKuuG,aAAavsG,OAAS,GAC5E20C,EAAI24D,EAAgB34D,EACpBC,EAAI04D,EAAgB14D,EAHF,uBAKtB,YAAe52C,KAAKo5E,YAAYqP,OAAhC,+CAAwC,KAA/BuK,EAA+B,QACpC,GAAIA,GAAMhzF,MAAQgzF,EAAG5C,cAAcz5C,EAAGC,IAC9Bo8C,aAAc,IAAqBA,EAAGqG,WAAakX,EAAO,OAAO,GAPvD,qFAjU9B,mCA8UiBhd,GACT,IAAI+b,EAA+BtvG,KAAKuuG,aAAavuG,KAAKuuG,aAAavsG,OAAS,GAC5E20C,EAAI24D,EAAgB34D,EACpBC,EAAI04D,EAAgB14D,EACxB,OAAO28C,EAAMnD,cAAcz5C,EAAGC,Q,6BAlVtC,GAAkC,I,28BCrJ3B,IAAM,GAAb,YAEI,WAAY5/C,EAAwBwnB,GAAwB,yBAExD,0BAAM,qBAAsBxnB,EAAQ,sGAFJwnB,cAKhC,EAAKlU,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,IAAK,MACnE,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAExBs4G,EAAsBC,UAAUz5G,GAEtC05G,eAAeh5G,MAEvB,GAAO,EAAO,qDAAqD,IAc1E,EAAK4S,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnD,MACA,SAAChB,GACI2uG,EAAsBC,UAAUz5G,GAAQoyD,gBAE1C,GAAO,EAAO,sBAAsB,IAE3C,EAAK9+C,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IACpD,MACA,SAAChB,GACG2uG,EAAsBC,UAAUz5G,GAAQsyD,eAEzC,GAAO,EAAO,uBAAuB,IAE5C,EAAKh/C,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,CAC3D,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,IACA,SAACjR,GAEG,IAAI8uG,EAAgB9uG,EAAW,GAAG3J,MAClCs4G,EAAsBC,UAAUz5G,GAAQ45G,UAAYD,KAErD,GAAO,EAAM,uDAAuD,IAG3E,EAAKrmG,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,IAAKiQ,GACpE,MACA,GAAO,EAAO,iDAElB,EAAKxI,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,QAASiH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,oDAElB,EAAKxI,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,CAC/D,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,GACA,MACA,GAAO,EAAO,0DAElB,EAAKxI,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,kEA3EsC,EAFhE,O,mOAAA,iDAiFqB9b,GACb,IAAIgmC,EAAchmC,EAAO29B,KAAK6N,iBAM9B,OAL+C,MAA3CxF,EAAY4pD,8BACZ5pD,EAAY4pD,4BAA8B,IAAI,GAA4B5vF,GAC1EgmC,EAAY4pD,4BAA4BiqB,cAGrC7zE,EAAY4pD,gCAxF3B,GAA2C,GA+F9B,GAAb,WA6CI,WAAoB5vF,GAAa,WAAb,KAAAA,SA3CpB,KAAA85G,uBAAmC,CAAC,YAAa,QAAS,cAAe,YACzE,KAAAC,oBAAgC,CAAC,wBAAyB,oBAAqB,8BAA+B,sBAAuB,4BACrI,KAAAC,iCAAoE,CAChE,wBAAyB,YACzB,oBAAqB,YACrB,8BAA+B,WAC/B,sBAAuB,QACvB,2BAA4B,eAIhC,KAAAC,gBAA6C,CACzC,MAAS,GACT,UAAa,GACb,WAAc,GACd,QAAW,GACX,UAAa,GACb,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAO,IACP,IAAO,IACP,IAAO,IACP,OAAU,GACV,SAAY,GACZ,OAAU,KAId,KAAAC,qBAAwF,GAExF,KAAArL,cAAwB,EACxB,KAAA+K,UAAoB,IACpB,KAAAO,cAAwB,EAIS,2BAC7B,YAAiBnxG,KAAK8wG,uBAAtB,+CAA8C,KAArC1wG,EAAqC,QAC1CJ,KAAKkxG,qBAAqB9wG,GAAQ,IAFT,mFA7CrC,0DAoDwB,2BAEhB,YAAgBJ,KAAK8wG,uBAArB,+CAA4C,KAApC1wG,EAAoC,QACxC,GAAGJ,KAAKkxG,qBAAqB9wG,GAAM4B,OAAS,EACxC,OAAO,GAJC,kFAQhB,OAAO,IA5Df,qCAiEmBtK,GACX,IAAIwL,EAAexL,EAAE0L,MADM,uBAG3B,YAAepD,KAAK+wG,oBAApB,+CAAyC,KAAhCxlD,EAAgC,QACjC7pD,EAAiBwB,EAAM+iB,qBAAqBslC,GAC5CnrD,EAAOJ,KAAKgxG,iCAAiCzlD,GAE1B,OAAnB7pD,aAAM,EAANA,EAAQD,UAAqC,OAAlBC,aAAM,EAANA,EAAQF,SACnCxB,KAAKkxG,qBAAqB9wG,GAAMmE,KAAK,CACjCnE,KAAgCA,EAChCsB,OAAQA,EACRumC,cAAevwC,KAXA,qFAjEnC,uCAmFqBA,GACMA,EAAE0L,MAArB,IAD6B,uBAG7B,YAAepD,KAAK+wG,oBAApB,+CAAyC,KAAhCxlD,EAAgC,QACjCnrD,EAAOJ,KAAKgxG,iCAAiCzlD,GAEjDvrD,KAAKkxG,qBAAqB9wG,GACtBJ,KAAKkxG,qBAAqB9wG,GAAMyK,QAAO,SAAA2oC,GAAE,OAAIA,EAAGvL,eAAiBvwC,MAP5C,qFAnFrC,mCA+Fc,WACFslC,EAAch9B,KAAKhJ,OAAO29B,KAAK6N,iBAEnCxiC,KAAKoxG,gBAAkB,SAAC54G,GACpB,GAAkB,GAAdA,EAAIwJ,OAAa,4BACjB,YAAe,EAAKkvG,qBAAL,MAAf,+CAAmD,KAA1C19D,EAA0C,QAC/C,EAAK69D,aAAa79D,EAAG9xC,OAAQ8xC,EAAGvL,cAAe,CAAC,CAAE7nC,KAAM8Q,GAAmBhZ,MAAOM,MAFrE,uFAId,CACH,IAAIssD,EAAU,EAAKmsD,gBAAgBz4G,GACnC,GAAe,MAAXssD,EAAiB,4BACjB,YAAe,EAAKosD,qBAAL,YAAf,+CAAyD,KAAhD,EAAgD,QACrD,EAAKG,aAAa,EAAG3vG,OAAQ,EAAGumC,cAAe,CAAC,CAAE7nC,KAAM8Q,GAAmBhZ,MAAO4sD,MAFrE,sFAS7B9nB,EAAY0mD,aAAatB,iBAAiB79E,KAAKvE,KAAKoxG,mBAlH5D,qCAyHQ,IAAIp0E,EAAch9B,KAAKhJ,OAAO29B,KAAK6N,iBAC/BpgC,EAAQ46B,EAAY0mD,aAAatB,iBAAiBh9E,QAAQpF,KAAKoxG,iBAC/DhvG,GAAS,GAAG46B,EAAY0mD,aAAatB,iBAAiBrqE,OAAO3V,EAAO,GACxEpC,KAAKspD,cA5Hb,mCAgIiB5nD,EAAgBumC,GAA6E,IAA/CpmC,EAA+C,uDAAzB,GAAImqC,EAAqB,uCAClGvqC,EAAUC,EAAOD,QACjBD,EAASE,EAAOF,QAEpBK,EAAaA,EAAW0L,MAAM,IACnB+jG,QAAQ,CAAElxG,KAAM6nC,EAAc7kC,MAAOlL,MAAO+vC,IAExC,MAAXxmC,EACAzB,KAAKhJ,OAAO29B,KAAK6N,iBAAiB6F,SAAS3mC,EAAQG,EAAYmqC,GAAU,GACxD,MAAVxqC,GACPA,EAAOK,KA1InB,kCAgJQ7B,KAAK6lG,cAAe,IAhJ5B,mCAqJa7lG,KAAK6lG,eACN7lG,KAAK6lG,cAAe,EACpB7lG,KAAKkmG,yBAvJjB,4CA8JQ,GAAKlmG,KAAK6lG,aAAV,CAKA,GADA7lG,KAAKmxG,eAFI,GAGLnxG,KAAKmxG,cAAgBnxG,KAAK4wG,UAAW,CACrC5wG,KAAKmxG,eAAiBnxG,KAAK4wG,UAE3B,IAAIW,EAAQvxG,KAAKkxG,qBAAqB,aAHD,uBAIrC,YAAeK,EAAf,+CAAsB,KAAb/9D,EAAa,QAElBxzC,KAAKqxG,aAAa79D,EAAG9xC,OAAQ8xC,EAAGvL,cAAe,KANd,mFAYzC,IAAIlqB,EAAO/d,KACX+qC,YAAW,WACPhtB,EAAKmoF,wBAjBA,OAhKjB,8CAsL4BvvD,EAAWC,GAC/B,IAAI/0C,EAAsB,CACtB,CAAEzB,KAAMgP,GAAkBlX,MAAOoU,KAAK+5B,MAAMsQ,IAC5C,CAAEv2C,KAAMgP,GAAkBlX,MAAOoU,KAAK+5B,MAAMuQ,IAC5C,CAAEx2C,KAAMgP,GAAkBlX,MAAO,IAGjCq5G,EAAQvxG,KAAKkxG,qBAAL,SAP4B,uBAQxC,YAAeK,EAAf,+CAAsB,KAAb/9D,EAAa,QAClBxzC,KAAKqxG,aAAa79D,EAAG9xC,OAAQ8xC,EAAGvL,cAAepmC,IATX,uFAtLhD,K,gzBCtGO,IAAM,GAAb,YAEI,WAAmB7K,EAAgBwnB,GAAwB,O,4FAAA,UAEvD,0BAAM,iBAAkBxnB,EAAQ,mDAFjBA,SAIf,EAAKonB,aAAoBI,EAAYF,QAAQ,UAAUle,MAEvD,IAAIoxG,EAAgDx6G,EAAOqnB,UAAUC,QAAQ,qBANtB,OAYvD,EAAKhU,UAAU,IAAIvJ,EAAO,wBAAyB,IAAI8B,EAAc,IAAKuM,IACtE,SAACvN,GAEG,OAAOyK,KAAK+5B,MAAM,EAAKukD,iBAAiBz0C,UAEzC,GAAO,EAAM,yDAAyD,IAE7E,EAAK7rC,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,IAAKuM,IACpE,SAACvN,GAEG,OAAOyK,KAAK+5B,MAAM,EAAKukD,iBAAiBz0C,UAEzC,GAAO,EAAM,uDAAuD,IAE3E,EAAK7rC,UAAU,IAAIvJ,EAAO,4BAA6B,IAAI8B,EAAc,CACrE,CAAE1J,WAAY,MAAOiH,KAAMoxG,EAAuBthG,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAI4vG,EAAmC5vG,EAAW,GAAG3J,MAEX,GAAsBu4G,UAAUz5G,GACnE05G,eAAee,MAEvB,GAAO,EAAM,2CAA2C,IAE/D,EAAKnnG,UAAU,IAAIvJ,EAAO,4BAA6B,IAAI8B,EAAc,CACrE,CAAE1J,WAAY,MAAOiH,KAAMoxG,EAAuBthG,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGgS,IACA,SAACjR,GAEG,IAAI4vG,EAAmC5vG,EAAW,GAAG3J,MAEX,GAAsBu4G,UAAUz5G,GACnE06G,iBAAiBD,MAEzB,GAAO,EAAM,gDAAgD,IAEpE,EAAKnnG,UAAU,IAAIvJ,EAAO,mBAAoB,IAAI8B,EAAc,IAAKiQ,IACjE,SAACjR,GAE6C,GAAsB4uG,UAAUz5G,GACnEoyD,gBAER,GAAO,EAAM,yBAAyB,IAE7C,EAAK9+C,UAAU,IAAIvJ,EAAO,mBAAoB,IAAI8B,EAAc,IAAKiQ,IACjE,SAACjR,GAE6C,GAAsB4uG,UAAUz5G,GACnEsyD,eAER,GAAO,EAAM,wBAAwB,IAE5C,EAAKh/C,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,CAC3D,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,IACA,SAACjR,GAEG,IAAI8uG,EAAgB9uG,EAAW,GAAG3J,MAEQ,GAAsBu4G,UAAUz5G,GACnE45G,UAAYD,KAEpB,GAAO,EAAM,uDAAuD,IA5EpB,E,UAF/D,O,mOAAA,M,EAAA,G,EAAA,wCAmF2D,I,QAAxClmB,EAAwC,uDAAvB,IAAKC,EAAkB,uDAAH,IAE5CI,EAAsC,QAApC,EAAoB,QAApB,EAAc,QAAd,EAAG9qF,KAAKhJ,cAAM,eAAE29B,YAAI,eAAE6N,wBAAc,eAAI42C,YAE9C,GAAU,MAAN0R,EAAY,CAEZ,GAAIA,EAAG30C,OAASs0C,GAAUK,EAAG10C,QAAUs0C,EAAM,CAEzC,IAAIuB,EAAgB3/E,KAAK+5B,MAAMqkD,EAAOD,EAAS,KAC/CK,EAAGoB,gBAAgBt9C,IAAI,iBAAkBq9C,EAAQ,KAEjDnB,EAAGI,MAAM7K,eAAemL,MAAMV,EAAG30C,MAAQs0C,EAAQK,EAAG10C,OAASs0C,GAC7DI,EAAG30C,MAAQs0C,EACXK,EAAG10C,OAASs0C,EAIZI,EAAGI,MAAMhf,UAAUmf,WAEW,QAA9B,EAAArrF,KAAKhJ,OAAO29B,KAAKw3D,qBAAa,SAAEC,qBAIpC,OAAOtB,EAGP,IAAIkB,EAA6B,IAAI,EAAqBhsF,KAAKhJ,OAAOqnB,UAAUC,QAAQ,UACpF,EAAK,IAAI,GAAYmsE,EAAQC,EAAM1qF,KAAKhJ,OAAQg1F,GACpDA,EAAY7oF,cAAZ,MAAqC,O,6BA/GjD,GAA4C,G,yoBCArC,IAAM,GAAb,YAEI,WAAYnM,EAAgBwnB,GAAwB,a,4FAAA,UAEhD,0BAAM,WAAYxnB,EAAQ,wEAErBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,iBAElD,EAAK/T,aAAa,IAAI7J,EAAU,SAAU0O,IAAkB,SAAClX,GACzD,IAAI86F,EAAK96F,EAAMS,OAAOwK,cAAb,MACTjL,EAAMA,MAAQoU,KAAK+5B,MAAM/5B,KAAK6uD,IAAI63B,EAAG78C,MAAQ68C,EAAGhD,cAAcxE,MAAM70C,OACrE,EAAO5yC,EAAWoJ,SAAS,EAAO,yBAErC,EAAK5C,aAAa,IAAI7J,EAAU,OAAQ0O,IAAkB,SAAClX,GACvD,IAAI86F,EAAK96F,EAAMS,OAAOwK,cAAb,MACTjL,EAAMA,MAAQoU,KAAK+5B,MAAM/5B,KAAK6uD,IAAI63B,EAAG58C,OAAS48C,EAAGhD,cAAcxE,MAAM70C,OACtE,EAAO5yC,EAAWoJ,SAAS,EAAO,uBAGrC,EAAKpG,iCAGL,EAAKuD,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,IAAK,MACzD,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACrCR,EAAEyL,cAAF,OAA2B,EAE3B,IAAI4zF,EAAK,IAAI,GAAgB,GAAI,GAAI,IAAK,IAAK//F,EAAO29B,KAAK6N,iBAAkB9qC,GAC7EA,EAAEyL,cAAF,MAA2B4zF,EAE3Br/F,EAAEyL,cAAF,MAA2B,MAC3B4zF,EAAG2C,aAAa,aAEjB,GAAO,EAAO,4DAA4D,IAEjF,EAAKpvF,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACTiL,cAAF,MACtBsnF,EAAiB5oF,EAAW,GAAG3J,MAC/BwyF,EAAe7oF,EAAW,GAAG3J,MAE7B86F,EAAGC,cAAc,iBAErBD,EAAG58C,OAASs0C,EAAOsI,EAAGhD,cAAcxE,MAAM50C,EAC1Co8C,EAAG78C,MAAQs0C,EAASuI,EAAGhD,cAAcxE,MAAM70C,EAE3Cq8C,EAAG0B,eAAiB1B,EAAGj7D,KAAOi7D,EAAG78C,MAAM,EACvC68C,EAAG2B,eAAiB3B,EAAG57C,IAAM47C,EAAG58C,OAAO,EAEvC48C,EAAGj+C,aAEJ,GAAO,EAAO,4CAA4C,IAvDjB,EAFxD,O,mOAAA,SAAsC,GCR3B48D,GAA4C,CACnD,OAAQ,SACR,MAAS,SACT,IAAO,SACP,OAAQ,MACR,MAAS,MACT,KAAQ,IACR,KAAQ,SACR,QAAW,SACX,KAAQ,MACR,SAAY,SACZ,WAAY,QACZ,UAAa,QACb,OAAU,SACV,MAAS,QACT,KAAQ,QACR,QAAW,G,yoBCNR,IAAM,GAAb,YAEI,WAAY36G,EAAgBwnB,GAAwB,a,4FAAA,UAEhD,0BAAM,eAAgBxnB,EAAQ,+FAEzBuT,aAAa,IAAI7J,EAAU,QAAS2L,IAAqB,SAACnU,GAC3D,IAAIq4G,EAAQr4G,EAAMS,OAAOwK,cAAb,MACZjL,EAAMA,MAAiB,MAATq4G,EAAgB,UAAYA,KAC3C,EAAOxsG,EAAWgH,WAAW,EAAO,4BAEvC,EAAKR,aAAa,IAAI7J,EAAU,IAAK0O,IAAkB,SAAClX,GACpD,IAAI86F,EAAK96F,EAAMS,OAAOwK,cAAb,MACTjL,EAAMA,MAAQoU,KAAK+5B,MAAM2sD,EAAGF,iBAC7B,EAAO/uF,EAAWgH,WAAW,EAAO,iCACvC,EAAKR,aAAa,IAAI7J,EAAU,IAAK0O,IAAkB,SAAClX,GACpD,IAAI86F,EAAK96F,EAAMS,OAAOwK,cAAb,MACTjL,EAAMA,MAAQoU,KAAK+5B,MAAM2sD,EAAGD,iBAC7B,EAAOhvF,EAAWgH,WAAW,EAAO,iCAEvC,EAAKR,aAAa,IAAI7J,EAAU,SAAU0O,IAAkB,SAAClX,GACzDA,EAAMA,MAAQA,EAAMS,OAAOwK,cAAb,MAAoCyvE,SACnD,EAAO7uE,EAAWgH,WAAW,EAAO,4CAEvC,EAAKR,aAAa,IAAI7J,EAAU,QAAS0O,IAAkB,SAAClX,GACxDA,EAAMA,MAAQoU,KAAK+5B,MAAsD,IAAhDnuC,EAAMS,OAAOwK,cAAb,MAAoCsxF,gBAC9D,EAAO1wF,EAAWgH,WAAW,EAAO,0DAEvC,EAAKR,aAAa,IAAI7J,EAAU,WAAY4P,IAAsB,SAACpY,G,MAC/DA,EAAMA,MAAyD,QAApD,EAAGA,EAAMS,OAAOwK,cAAb,MAAoC6sF,qBAAa,eAAE59D,WAClE,EAAOruB,EAAWgH,WAAW,EAAO,6CAEvC,EAAKhE,iCAEL,EAAKuD,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7F,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MACxBwzC,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAE9B,IAAI86F,EAAGC,cAAc,kBAArB,CAEA,IAAIl6F,EAAgB,IAAIgnF,KAAKmP,MAAM,GAAI,IACvC8D,EAAGhD,cAAc7P,kBACjB6S,EAAGhD,cAAc9jB,UAAUwU,eAAewV,MAAMn9F,EAAGA,GAEnDi6F,EAAGzlB,KAAK52B,EAAI59C,EAAE49C,EAAGC,EAAI79C,EAAE69C,OAExB,GAAO,EAAO,sFAAsF,IAG3G,EAAKtsC,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MACxBwzC,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAE1B86F,EAAGC,cAAc,gBAErBD,EAAGzlB,KAAK52B,EAAGC,MAEZ,GAAO,EAAO,kCAAkC,IAEvD,EAAKtsC,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MACxByuG,EAAe/vG,EAAW,GAAG3J,MAE7B86F,EAAGC,cAAc,WAErBD,EAAGzH,OAAOqmB,MAEX,GAAO,EAAO,iJAAiJ,IAGtK,EAAKtnG,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAwBt7F,EAAEyL,cAAF,MACxBotG,EAAgB1uG,EAAW,GAAG3J,MAElCR,EAAEyL,cAAF,MAA2BotG,EAE3B,IAAIzlF,EAAgB6mF,GAAUpB,EAAMh/F,qBACvB,MAATuZ,IAAeA,EAAQ,GAEvBkoE,EAAGC,cAAc,iBAErBD,EAAG0G,aAAa5uE,GAChBkoE,EAAGj+C,aAEJ,GAAO,EAAO,8BAA8B,IAEnD,EAAKzqC,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MACxB0uG,EAAiBhwG,EAAW,GAAG3J,MAE/B86F,EAAGC,cAAc,iBAErBD,EAAGzH,OAAOsmB,EAAS7e,EAAGpgB,UAEvB,GAAO,EAAO,sIAAsI,IAE3J,EAAKtoE,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,CAC9D,CAAE1J,WAAY,eAAgBiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MACxB2uG,EAAwBjwG,EAAW,GAAG3J,MAEtC86F,EAAGC,cAAc,uBAErBD,EAAGY,WAAWke,MAEf,GAAO,EAAO,qDAAqD,IAE1E,EAAKxnG,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IAAK,MAC1D,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAExB6vF,EAAGC,cAAc,cAErBD,EAAG/C,aAEJ,GAAO,EAAO,qDAAqD,IAE1E,EAAK3lF,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,IAC/D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,uBAErB,OAAOD,EAAGmB,kBAEX,GAAO,EAAO,4CAA4C,IAEjE,EAAK7pF,UAAU,IAAIvJ,EAAO,wBAAyB,IAAI8B,EAAc,IACjE,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,yBAErB,OAAOD,EAAGoB,gBAEX,GAAO,EAAO,+CAA+C,IAEpE,EAAK9pF,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,IAC3D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,mBAErB,OAAOD,EAAG+e,iCAEX,GAAO,EAAO,iDAAiD,IAEtE,EAAKznG,UAAU,IAAIvJ,EAAO,oBAAqB,IAAI8B,EAAc,IAC7D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,qBAErB,OAAOD,EAAGgf,gCAEX,GAAO,EAAO,kDAAkD,IAxMvB,EAFxD,O,mOAAA,SAAuC,G,yoBCLhC,IAAM,GAAb,YAEI,WAAYh7G,GAAc,a,4FAAA,UACtB,0BAAM,oBAAqBA,EAAQ,8CAE9BsT,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IAAKiQ,GAC1D,MACA,GAAO,EAAO,iDAElB,EAAKxI,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,QAASiH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,oDAElB,EAAKxI,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,GACA,MACA,GAAO,EAAO,0DAElB,EAAKxI,UAAU,IAAIvJ,EAAO,WAAY,IAAI8B,EAAc,CACpD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,kEAzBI,EAF9B,O,mOAAA,SAAmD,G,yoBCI5C,IAAM,GAAb,YAEI,WAAY9b,EAAgBwnB,GAAwB,a,4FAAA,UAEhD,0BAAM,UAAWxnB,EAAQ,uEAEpBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,iBAElD,EAAK/T,aAAa,IAAI7J,EAAU,SAAU0O,IAAkB,SAAClX,GACzD,IAAIuyF,EAASvyF,EAAMS,OAAOwK,cAAb,OACbjL,EAAMA,MAAQoU,KAAK+5B,MAAMokD,MAC1B,EAAO1mF,EAAWoJ,SAAS,EAAO,wBAErC,EAAK5C,aAAa,IAAI7J,EAAU,OAAQ0O,IAAkB,SAAClX,GACvD,IAAIwyF,EAAOxyF,EAAMS,OAAOwK,cAAc,QACtCjL,EAAMA,MAAQoU,KAAK+5B,MAAMqkD,MAC1B,EAAO3mF,EAAWoJ,SAAS,EAAO,sBAErC,EAAKpG,iCAEL,EAAKuD,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IAAK,MACxD,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACrCR,EAAEyL,cAAF,OAA2B,EAG3B,IAAI4zF,EAAK,IAAI,GAAc,CAAC,GAAI,GAAI,IAAI,IAAK,GAAI,MAAK,EAAM//F,EAAO29B,KAAK6N,iBAAkB9qC,GAC1FA,EAAEyL,cAAF,MAA2B4zF,EAE3Br/F,EAAEyL,cAAF,OAA4B,IAC5BzL,EAAEyL,cAAc,QAAU,IAE1BzL,EAAEyL,cAAF,MAA2B,MAC3B4zF,EAAG2C,aAAa,aAEjB,GAAO,EAAO,yCAAyC,IAE1D,EAAKpvF,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAoBt7F,EAAEyL,cAAF,MACpBsnF,EAAiB5oF,EAAW,GAAG3J,MAC/BwyF,EAAe7oF,EAAW,GAAG3J,MAEjCR,EAAEyL,cAAF,OAA4BsnF,EAC5B/yF,EAAEyL,cAAc,QAAUunF,EAE1BD,GAAUuI,EAAGyB,YACb/J,GAAQsI,EAAGyB,YAEPzB,EAAGC,cAAc,gBAErBD,EAAGif,0BAA0B,CAAC,GAAI,GAAKvnB,EAAK,EAAG,GAAKD,EAAO,EAAG,GAAKC,EAAK,EAAG,GAAKD,EAAO,EAAG,GAAKC,EAAK,OAErG,GAAO,EAAO,2CAA2C,IAzDpB,EAFxD,O,mOAAA,SAAqC,G,yoBCD9B,IAAM,GAAb,YAEI,WAAY1zF,EAAgBwnB,GAAwB,a,4FAAA,UAEhD,0BAAM,QAASxnB,EAAQ,qEAElBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,iBAElD,EAAK/T,aAAa,IAAI7J,EAAU,SAAU0O,IAAkB,SAAClX,GACzD,IAAI86F,EAAK96F,EAAMS,OAAOwK,cAAb,MACTjL,EAAMA,MAAQoU,KAAK+5B,MAAM2sD,EAAGj7F,EAAIi7F,EAAGhD,cAAcxE,MAAM70C,MACxD,EAAO5yC,EAAWoJ,SAAS,EAAO,uBAErC,EAAKpG,iCAEL,EAAKuD,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IAAK,MACtD,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACrCR,EAAEyL,cAAF,OAA2B,EAE3B,IAAI4zF,EAAK,IAAI,GAAa,GAAI,GAAI,GAAI//F,EAAO29B,KAAK6N,iBAAkB9qC,GACpEA,EAAEyL,cAAF,MAA2B4zF,EAE3Br/F,EAAEyL,cAAF,MAA2B,MAC3B4zF,EAAG2C,aAAa,aAEjB,GAAO,EAAO,uCAAuC,IAE5D,EAAKpvF,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MACnB4qE,EAAiBlsE,EAAW,GAAG3J,MAE/B86F,EAAGC,cAAc,iBAErBD,EAAGkH,UAAUnsB,MAEd,GAAO,EAAO,uCAAuC,IAxCZ,EAFxD,O,mOAAA,SAAmC,G,yoBCK5B,IAAM,GAAb,YAEI,WAAY/2E,EAAgBwnB,GAAwB,O,4FAAA,SAEhD,IAAIxP,EAAawP,EAAYF,QAAQ,UAAUle,KAFC,OAIhD,0BAAM,UAAWpJ,EAAQ,sEAEpBuT,aAAa,IAAI7J,EAAU,IAAK0O,IAAkB,SAAClX,GACpD,IAAI86F,EAAK96F,EAAMS,OAAOwK,cAAb,MACTjL,EAAMA,MAAQoU,KAAK+5B,MAAM2sD,EAAGub,aAAavb,EAAGub,aAAavsG,OAAS,GAAG20C,MACtE,EAAO5yC,EAAWoJ,SAAS,EAAO,yBACrC,EAAK5C,aAAa,IAAI7J,EAAU,IAAK0O,IAAkB,SAAClX,GACpD,IAAI86F,EAAK96F,EAAMS,OAAOwK,cAAb,MACTjL,EAAMA,MAAQoU,KAAK+5B,MAAM2sD,EAAGub,aAAavb,EAAGub,aAAavsG,OAAS,GAAG40C,MACtE,EAAO7yC,EAAWoJ,SAAS,EAAO,yBAErC,EAAK5C,aAAa,IAAI7J,EAAU,SAAU0O,IAAkB,SAAClX,GACzDA,EAAMA,MAAQA,EAAMS,OAAOwK,cAAb,MAAoCyvE,SACnD,EAAO7uE,EAAWoJ,SAAS,EAAO,oCAErC,EAAK5C,aAAa,IAAI7J,EAAU,QAAS0O,IAAkB,SAAClX,GACxDA,EAAMA,MAAQoU,KAAK+5B,MAAsD,IAAhDnuC,EAAMS,OAAOwK,cAAb,MAAoCsxF,gBAC9D,EAAO1wF,EAAWoJ,SAAS,EAAO,kDAErC,EAAK5C,aAAa,IAAI7J,EAAU,WAAY4P,IAAsB,SAACpY,G,MAC/DA,EAAMA,MAAyD,QAApD,EAAGA,EAAMS,OAAOwK,cAAb,MAAoC6sF,qBAAa,eAAE59D,WAClE,EAAOruB,EAAWoJ,SAAS,EAAO,sCAErC,EAAK5C,aAAa,IAAI7J,EAAU,aAAc4P,IAAsB,SAACpY,GACjEA,EAAMA,MAAQA,EAAMS,OAAOwK,cAAb,MAAoCgrG,aACnD,EAAOpqG,EAAWoJ,SAAS,EAAO,8CAErC,EAAKpG,iCAEL,EAAKuD,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IAAK,MACxD,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACrCR,EAAEyL,cAAF,OAA2B,EAE3B,IAAI4zF,EAAK,IAAI,GAAa,IAAK,KAAK,EAAM//F,EAAO29B,KAAK6N,iBAAkB9qC,GACxEq/F,EAAGqX,eAAc,GACjBrX,EAAG4C,eAAe,GAClBjiG,EAAEyL,cAAF,MAA2B4zF,EAEe,GAAsB0Z,UAAUz5G,GACnE05G,eAAeh5G,MAEvB,GAAO,EAAO,wCAAwC,IAE7D,EAAK4S,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MACnB+uG,EAAgBrwG,EAAW,GAAG3J,MAE9B86F,EAAGC,cAAc,iBAErBD,EAAG0b,WAAawD,EAChBlf,EAAGkb,KAAK,OAET,GAAO,EAAO,wCAAwC,IAE7D,EAAK5jG,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MACnBotG,EAAgB1uG,EAAW,GAAG3J,MAE9B4yB,EAAgB6mF,GAAUpB,EAAMh/F,qBACvB,MAATuZ,IAAeA,EAAQ,GAEvBkoE,EAAGC,cAAc,iBAErBD,EAAG2G,eAAe7uE,GAClBkoE,EAAGj+C,aAEJ,GAAO,EAAO,sCAAsC,IAG3D,EAAKzqC,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MACnByuG,EAAe/vG,EAAW,GAAG3J,MAE7B86F,EAAGC,cAAc,WAErBD,EAAGkb,KAAK0D,MAET,GAAO,EAAO,0GAA0G,IAE/H,EAAKtnG,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MACnBgvG,EAAgBtwG,EAAW,GAAG3J,MAE9B86F,EAAGC,cAAc,UAErBD,EAAGiB,QAAQke,MAEZ,GAAO,EAAO,wEAAwE,IAE7F,EAAK7nG,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,IACtD,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEnB6vF,EAAGC,cAAc,gBAErBD,EAAGmb,WAAY,MAEhB,GAAO,EAAO,qEAAqE,IAE1F,EAAK7jG,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvD,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEnB6vF,EAAGC,cAAc,iBAErBD,EAAGmb,WAAY,MAEhB,GAAO,EAAO,iEAAiE,IAEtF,EAAK7jG,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnD,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEnB6vF,EAAGC,cAAc,YAErBD,EAAG/tD,WAEJ,GAAO,EAAO,2FAA2F,IAEhH,EAAK36B,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7F,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MACnBwzC,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAE1B86F,EAAGC,cAAc,mBAErBD,EAAGpiB,OAAOj6B,EAAGC,MAEd,GAAO,EAAO,kFAAkF,IAEvG,EAAKtsC,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,IAC9D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEnB6vF,EAAGC,cAAc,uBAErBD,EAAGpiB,OAAO,IAAK,QAEhB,GAAO,EAAO,sFAAsF,IAE3G,EAAKtmE,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MACnB0uG,EAAiBhwG,EAAW,GAAG3J,MAE/B86F,EAAGC,cAAc,iBAErBD,EAAGkb,KAAK2D,EAAS7e,EAAGpgB,UAErB,GAAO,EAAO,iFAAiF,IAEtG,EAAKtoE,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDuM,IACA,SAACvN,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,eAErB,OAAO3mF,KAAK+5B,MAAM2sD,EAAGpgB,UAEtB,GAAO,EAAO,2CAA2C,IAEhE,EAAKtoE,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1DuM,IACA,SAACvN,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,kBAErB,OAAO3mF,KAAK+5B,MAAM2sD,EAAGub,aAAavb,EAAGub,aAAavsG,OAAS,GAAG20C,MAE/D,GAAO,EAAO,sCAAsC,IAE3D,EAAKrsC,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1DuM,IACA,SAACvN,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,kBAErB,OAAO3mF,KAAK+5B,MAAM2sD,EAAGub,aAAavb,EAAGub,aAAavsG,OAAS,GAAG40C,MAE/D,GAAO,EAAO,sCAAsC,IAE3D,EAAKtsC,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,CAC9D,CAAE1J,WAAY,eAAgBiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MACxB2uG,EAAwBjwG,EAAW,GAAG3J,MAEtC86F,EAAGC,cAAc,uBAErBD,EAAGY,WAAWke,MAEf,GAAO,EAAO,qDAAqD,IAE1E,EAAKxnG,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IAAK,MAC1D,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAExB6vF,EAAGC,cAAc,cAErBD,EAAG/C,aAEJ,GAAO,EAAO,qDAAqD,IAE1E,EAAK3lF,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,IAC/D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,uBAErB,OAAOD,EAAGmB,kBAEX,GAAO,EAAO,4CAA4C,IAEjE,EAAK7pF,UAAU,IAAIvJ,EAAO,wBAAyB,IAAI8B,EAAc,IACjE,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,yBAErB,OAAOD,EAAGoB,gBAEX,GAAO,EAAO,+CAA+C,IAEpE,EAAK9pF,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,IAC3D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,mBAErB,OAAOD,EAAG+e,iCAEX,GAAO,EAAO,iDAAiD,IAEtE,EAAKznG,UAAU,IAAIvJ,EAAO,oBAAqB,IAAI8B,EAAc,IAC7D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,qBAErB,OAAOD,EAAGgf,gCAEX,GAAO,EAAO,kDAAkD,IAEvE,EAAK1nG,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACZiL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,WAErB,OAAOD,EAAGof,6BAEX,GAAO,EAAO,sHAAsH,IAE3I,EAAK9nG,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCm6G,EAAsBxwG,EAAW,GAAG3J,MACpC86F,EAAmBt7F,EAAEyL,cAAF,MAEvB,IAAI6vF,EAAGC,cAAc,WAArB,CAEA,IAAIsd,EAAQoB,GAAUU,GAGtB,OAFa,MAAT9B,IAAeA,EAAQ,GAEpBvd,EAAGsf,aAAa/B,OAExB,GAAO,EAAO,gJAAgJ,IAErK,EAAKjmG,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,SAAUiH,KAAM4O,EAAYkB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC5FwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAwBkJ,EAAW,GAAG3J,MACtC86F,EAAmBt7F,EAAEyL,cAAF,MACnBovG,EAAoB55G,EAAOwK,cAAP,MAExB,OAAyB,MAArBovG,GAA+BA,aAA6B,KAE5Dvf,EAAGC,cAAc,gBAArB,EAEOD,EAAGwf,aAAaD,OAExB,GAAO,EAAO,+FAA+F,IAIpH,EAAKjoG,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,IAAKiQ,GAChE,MACA,GAAO,EAAO,iDAElB,EAAKxI,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,QAASiH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,oDAElB,EAAKxI,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,CAC/D,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,GACA,MACA,GAAO,EAAO,0DAElB,EAAKxI,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,kEAtY8B,EAFxD,O,mOAAA,SAAoC,G,yoBCL7B,IAAM,GAAb,YAEI,WAAY9b,EAAgBwnB,GAAwB,a,4FAAA,UAEhD,0BAAM,QAASxnB,EAAQ,oEAElBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,iBAElD,EAAK/T,aAAa,IAAI7J,EAAU,OAAQ2L,IAAqB,SAACnU,GAC1D,IAAI0d,EAAO1d,EAAMS,OAAOwK,cAAb,MAAoCyS,KAC/C1d,EAAMA,MAAQ0d,KACf,EAAO7R,EAAWoJ,SAAS,EAAO,qBAErC,EAAK5C,aAAa,IAAI7J,EAAU,YAAa0O,IAAkB,SAAClX,GAC5D,IAAIksG,EAAWlsG,EAAMS,OAAOwK,cAAb,MAAoCihG,SACnDlsG,EAAMA,MAAQoU,KAAK+5B,MAAM+9D,MAC1B,EAAOrgG,EAAWoJ,SAAS,EAAO,cAErC,EAAKpG,iCAEL,EAAKuD,UAAU,IAAIvJ,EAAO,OAAQ,IAAI8B,EAAc,IAAK,MACrD,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACrCR,EAAEyL,cAAF,OAA2B,EAE3B,IAAI4zF,EAAK,IAAI,GAAW,GAAI,GAAI,GAAI,OAAQ//F,EAAO29B,KAAK6N,iBAAkB9qC,GAE1Eq/F,EAAG2C,aAAa,GAChBhiG,EAAEyL,cAAF,MAA2B4zF,KAE5B,GAAO,EAAO,sCAAsC,IAE3D,EAAKzsF,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,OAAQiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACnG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACdiL,cAAF,MACjByS,EAAe/T,EAAW,GAAG3J,MAE7B86F,EAAGC,cAAc,eAErBD,EAAGuR,QAAQ3uF,MAEZ,GAAO,EAAO,qCAAqC,IAE1D,EAAKtL,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,CAC3D,CAAE1J,WAAY,YAAaiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACrG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACdiL,cAAF,MACjB+uG,EAAgBrwG,EAAW,GAAG3J,MAE9B86F,EAAGC,cAAc,oBAErBD,EAAGqR,YAAY6N,MAEhB,GAAO,EAAO,4CAA4C,IAEjE,EAAK5nG,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACdiL,cAAF,MAErB,IAAI6vF,EAAGC,cAAc,kBAArB,CAEA,IAAIlrD,EAAOirD,EAAGoR,SAEVr8D,GADAA,GAAQ,GACA,EAEHA,GAAQ,GACL,EAGA,EAGZirD,EAAGqR,YAAYt8D,OAEhB,GAAO,EAAO,iDAAiD,IAEtE,EAAKz9B,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,IAC3D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACdiL,cAAF,MAErB,IAAI6vF,EAAGC,cAAc,mBAArB,CAEA,IAAIlrD,EAAOirD,EAAGoR,UAEVr8D,GADAA,GAAQ,GACA,EAEHA,GAAQ,GACL,EAGA,GAED,IACPA,EAAO,GAIXirD,EAAGqR,YAAYt8D,OAEhB,GAAO,EAAO,kDAAkD,IA/GvB,EAFxD,O,mOAAA,SAAkC,G,29CCa3B,IAAM,GAAb,YAEI,WAAY/wC,EAAgBwnB,GAAwB,iBAEhD,IAAIxP,EAAawP,EAAYF,QAAQ,UAAUle,KAE/C,0BAAM,QAASpJ,EAAQ,oEAEvB,IAAIy7G,EAA6Bj0F,EAAYF,QAAQ,WAAWle,KAC5DsyG,EAA4Bl0F,EAAYF,QAAQ,UAAUle,KAC1DuyG,EAA6Bn0F,EAAYF,QAAQ,WAAWle,KAC5DwyG,EAA+Bp0F,EAAYF,QAAQ,aAAale,KATpB,OAWhD,EAAKmK,aAAa,IAAI7J,EAAU,IAAK0O,IAAkB,SAAClX,GAAmBA,EAAMA,MAAQoU,KAAK+5B,MAAMnuC,EAAMS,OAAOwK,cAAb,OAAqCwzC,MAAM,EAAO5yC,EAAWoJ,SAAS,EAAO,yBACjL,EAAK5C,aAAa,IAAI7J,EAAU,IAAK0O,IAAkB,SAAClX,GAAmBA,EAAMA,MAAQoU,KAAK+5B,MAAMnuC,EAAMS,OAAOwK,cAAb,OAAqCyzC,MAAM,EAAO7yC,EAAWoJ,SAAS,EAAO,yBACjL,EAAK5C,aAAa,IAAI7J,EAAU,SAAU0O,IAAkB,SAAClX,GACzDA,EAAMA,MAAQA,EAAMS,OAAOwK,cAAb,MAAoCyvE,SACnD,EAAO7uE,EAAWoJ,SAAS,EAAO,oCAErC,EAAK5C,aAAa,IAAI7J,EAAU,QAAS0O,IAAkB,SAAClX,GACxDA,EAAMA,MAAQoU,KAAK+5B,MAAsD,IAAhDnuC,EAAMS,OAAOwK,cAAb,MAAoCsxF,gBAC9D,EAAO1wF,EAAWoJ,SAAS,EAAO,kDAErC,EAAK5C,aAAa,IAAI7J,EAAU,WAAY4P,IAAsB,SAACpY,G,MAC/DA,EAAMA,MAAyD,QAApD,EAAGA,EAAMS,OAAOwK,cAAb,MAAoC6sF,qBAAa,eAAE59D,WAClE,EAAOruB,EAAWoJ,SAAS,EAAO,sCAErC,EAAKpG,iCAEL,EAAKuD,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,IAAK,MACtD,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACrCR,EAAEyL,cAAF,OAA2B,EAE3B,IAAI65B,EAAchmC,EAAO29B,KAAK6N,iBAC1BqwD,EAAsC,GAAsB4d,UAAUz5G,GACtE+/F,EAAK,IAAI8b,GAAY71E,EAAatlC,EAAGm7F,GACzCn7F,EAAEyL,cAAF,MAA2B4zF,EAE3B,IAAIxnB,EAAmB,CACnB54B,EAAG,IACHC,EAAG,KAGPl/C,EAAEyL,cAAF,OAA4BosE,EAE5B,EAAKujC,oBAAoB/b,EAAI0b,EAAcC,EAAa11E,EAAauyC,GACrE73E,EAAEyL,cAAF,mBAAuC,EAEvC4zF,EAAGvL,MAAM,GAAKjc,EAAO54B,EAAG44B,EAAO34B,GAC/BmgD,EAAG/G,cAAc7P,kBAEjB0S,EAAO6d,eAAeh5G,MAGvB,GAAO,EAAO,uCAAuC,IAE5D,EAAK4S,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,CACvD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAClB4vG,EAAkBlxG,EAAW,GAAG3J,MAEpC,IAAI86F,EAAGC,cAAc,eAArB,CAEA,IAAI1jB,EAAmB73E,EAAEyL,cAAF,OACnB6vG,EAAYD,EAAU,IAC1B/f,EAAGxH,MAAMwnB,EAAYhgB,EAAGyB,YAAallB,EAAO54B,EAAG44B,EAAO34B,GACtDo8C,EAAGhD,cAAc7P,sBAElB,GAAO,EAAO,8BAA8B,IAGnD,EAAK71E,UAAU,IAAIvJ,EAAO,SAAU,IAAI8B,EAAc,CAClD,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAChG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAClByuG,EAAe/vG,EAAW,GAAG3J,MAEjC,IAAI86F,EAAGC,cAAc,UAArB,CACA,IAAI1jB,EAAmB73E,EAAEyL,cAAF,OAEvB6vF,EAAGzH,OAAOqmB,EAAMriC,EAAO54B,EAAG44B,EAAO34B,GACjCo8C,EAAGhD,cAAc7P,sBAElB,GAAO,EAAO,yGAAyG,IAE9H,EAAK71E,UAAU,IAAIvJ,EAAO,QAAS,IAAI8B,EAAc,CACjD,CAAE1J,WAAY,QAASiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAClBgvG,EAAgBtwG,EAAW,GAAG3J,MAElC,IAAI86F,EAAGC,cAAc,SAArB,CACA,IAAI1jB,EAAmB73E,EAAEyL,cAAF,OAEnB8vG,EAAWjgB,EAAGpgB,MAAQ,IAAMtmE,KAAKumE,GACjCjG,EAAKulC,EAAQ7lG,KAAKymE,IAAIkgC,GACtBpmC,EAAKslC,EAAQ7lG,KAAK0mE,KAAKigC,GAC3B1jC,EAAO54B,GAAKi2B,EACZ2C,EAAO34B,GAAKi2B,EAEZmmB,EAAGzlB,KAAKX,EAAIC,GACZmmB,EAAGhD,cAAc7P,sBAElB,GAAO,EAAO,sEAAsE,IAE3F,EAAK71E,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,CAC1D,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC7F,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAClBwzC,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAE9B,IAAI86F,EAAGC,cAAc,kBAArB,CACA,IAAI1jB,EAAmB73E,EAAEyL,cAAF,OAEvB6vF,EAAGzlB,KAAK52B,EAAI44B,EAAO54B,EAAGC,EAAI24B,EAAO34B,GACjCo8C,EAAGhD,cAAc7P,kBACjB5Q,EAAO54B,EAAIA,EACX44B,EAAO34B,EAAIA,MAEZ,GAAO,EAAO,gDAAgD,IAErE,EAAKtsC,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,IAC9D,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,sBAArB,CAEA,IAAI1jB,EAAmB73E,EAAEyL,cAAF,OAEvB6vF,EAAGzlB,KAAK,IAAMgC,EAAO54B,EAAG,IAAM44B,EAAO34B,GACrCo8C,EAAGhD,cAAc7P,kBACjB5Q,EAAO54B,EAAI,IACX44B,EAAO34B,EAAI,QAEZ,GAAO,EAAO,qFAAqF,IAE1G,EAAKtsC,UAAU,IAAIvJ,EAAO,eAAgB,IAAI8B,EAAc,CACxD,CAAE1J,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAClB0uG,EAAiBhwG,EAAW,GAAG3J,MAE/B86F,EAAGC,cAAc,kBAErBD,EAAGzH,OAAOsmB,EAAS7e,EAAGpgB,OACtBogB,EAAGhD,cAAc7P,sBAElB,GAAO,EAAO,0FAA0F,IAE/G,EAAK71E,UAAU,IAAIvJ,EAAO,cAAe,IAAI8B,EAAc,IACvDuM,IACA,SAACvN,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,eAIrB,OAFGD,EAAGpgB,MAAQ,IAAGogB,EAAGpgB,OAAS,IAAItmE,KAAK43D,KAAK8uB,EAAGpgB,OAAQ,MACnDogB,EAAGpgB,OAAS,MAAKogB,EAAGpgB,OAAS,IAAItmE,KAAK6sB,MAAM65D,EAAGpgB,MAAM,MACjDtmE,KAAK+5B,MAAM2sD,EAAGpgB,UAEtB,GAAO,EAAO,2CAA2C,IAEhE,EAAKtoE,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1DuM,IACA,SAACvN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAGrC,IAFsBR,EAAEyL,cAAF,MAEf8vF,cAAc,kBAGrB,OADuBv7F,EAAEyL,cAAF,OACTwzC,KAEf,GAAO,EAAO,sCAAsC,IAE3D,EAAKrsC,UAAU,IAAIvJ,EAAO,iBAAkB,IAAI8B,EAAc,IAC1DuM,IACA,SAACvN,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MAGrC,IAFsBR,EAAEyL,cAAF,MAEf8vF,cAAc,kBAGrB,OADuBv7F,EAAEyL,cAAF,OACTyzC,KAEf,GAAO,EAAO,sCAAsC,IAE3D,EAAKtsC,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,CAC9D,CAAE1J,WAAY,eAAgBiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACxG,MACA,SAACe,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MACxB2uG,EAAwBjwG,EAAW,GAAG3J,MAEtC86F,EAAGC,cAAc,uBAErBD,EAAGY,WAAWke,MAEf,GAAO,EAAO,qDAAqD,IAE1E,EAAKxnG,UAAU,IAAIvJ,EAAO,YAAa,IAAI8B,EAAc,IAAK,MAC1D,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAElB6vF,EAAGC,cAAc,cAErBD,EAAG/C,aAEJ,GAAO,EAAO,qDAAqD,IAE1E,EAAK3lF,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,IAC/D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,uBAErB,OAAOD,EAAGmB,kBAEX,GAAO,EAAO,4CAA4C,IAEjE,EAAK7pF,UAAU,IAAIvJ,EAAO,wBAAyB,IAAI8B,EAAc,IACjE,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,yBAErB,OAAOD,EAAGoB,gBAEX,GAAO,EAAO,+CAA+C,IAEpE,EAAK9pF,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,IAC3D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,mBAErB,OAAOD,EAAG+e,iCAEX,GAAO,EAAO,iDAAiD,IAEtE,EAAKznG,UAAU,IAAIvJ,EAAO,oBAAqB,IAAI8B,EAAc,IAC7D,MACA,SAAChB,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACPiL,cAAF,MAE5B,IAAI6vF,EAAGC,cAAc,qBAErB,OAAOD,EAAGgf,gCAEX,GAAO,EAAO,kDAAkD,IAEvE,EAAK1nG,UAAU,IAAIvJ,EAAO,qBAAsB,IAAI8B,EAAc,IAC9D,MACA,SAAChB,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjC86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,sBAArB,CAEAD,EAAGsK,kBACH,IAAI/tB,EAAmB73E,EAAEyL,cAAF,OAEvB,EAAK2vG,oBAAoB9f,EAAIyf,EAAcC,EAAa,EAAK17G,OAAO29B,KAAK6N,iBAAkB+sC,GAC3F73E,EAAEyL,cAAF,mBAAuC,MAGxC,GAAO,EAAO,oCAAoC,IAEzD,EAAKmH,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,IACnDyN,IACA,SAACzO,GAEG,IACImxF,EADmBnxF,EAAW,GAAG3J,MACbiL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,WAArB,CALW,2BAOX,YAAkBD,EAAG5Z,YAAYqP,OAAjC,+CAAyC,KAAhC8K,EAAgC,QACrC,GAAIA,GAASP,GAAOA,EAAGS,aAAaF,GAAQ,OAAO,GAR5C,kFAWX,OAAO,MAER,GAAO,EAAO,wFAAwF,IAE7G,EAAKjpF,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpGwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCm6G,EAAsBxwG,EAAW,GAAG3J,MACpC86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,WAArB,CAEA,IAAIsd,EAAQoB,GAAUU,GACT,MAAT9B,IAAeA,EAAQ,GAThB,2BAWX,YAAkBvd,EAAG5Z,YAAYqP,OAAjC,+CAAyC,KAAhC8K,EAAgC,QACrC,GAAIA,GAASP,EACT,GAAGO,aAAiBsf,GAAY,4BAC5B,YAAgBtf,EAAM9K,OAAtB,+CAA6B,KACrByqB,EADqB,QACH/vG,cAAL,MACjB,GAAI+vG,aAAsB,IAAqB3C,GAAS2C,EAAW7Z,WAC5DrG,EAAGS,aAAayf,GACf,OAAO,GALS,wFAW5B,GAAG3f,aAAiB,IAAqBgd,GAAShd,EAAM8F,WAChDrG,EAAGS,aAAaF,GAAQ,OAAO,GAzBxC,kFAgCX,OAAO,MAER,GAAO,EAAO,8GAA8G,IAEnI,EAAKjpF,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,SAAUiH,KAAM4O,EAAYkB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAC5FwP,IACA,SAACzO,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCS,EAAwBkJ,EAAW,GAAG3J,MACtC86F,EAAkBt7F,EAAEyL,cAAF,MAClBovG,EAAoB55G,EAAOwK,cAAP,MAExB,OAAyB,MAArBovG,GAA+BA,aAA6B,KAE5Dvf,EAAGC,cAAc,gBAArB,EAEOD,EAAGS,aAAa8e,OAExB,GAAO,EAAO,kGAAkG,IAEvH,EAAKjoG,UAAU,IAAIvJ,EAAO,4BAA6B,IAAI8B,EAAc,CACrE,CAAE1J,WAAY,KAAMiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC9F,CAAE3H,WAAY,KAAMiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC9F,CAAE3H,WAAY,KAAMiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC9F,CAAE3H,WAAY,KAAMiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC9F,CAAE3H,WAAY,KAAMiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC9F,CAAE3H,WAAY,KAAMiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC9F,CAAE3H,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCi4E,EAAatuE,EAAW,GAAG3J,MAC3Bk4E,EAAavuE,EAAW,GAAG3J,MAC3Bm4E,EAAaxuE,EAAW,GAAG3J,MAC3Bo4E,EAAazuE,EAAW,GAAG3J,MAC3Bi7G,EAAatxG,EAAW,GAAG3J,MAC3Bk7G,EAAavxG,EAAW,GAAG3J,MAC3Bm6G,EAAsBxwG,EAAW,GAAG3J,MACpC86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,6BAArB,CAEIv7F,EAAEyL,cAAF,oBACAzL,EAAEyL,cAAF,mBAAuC,EACvC6vF,EAAGsK,mBAGP,IAAIiT,EAAQoB,GAAUU,GACT,MAAT9B,IAAeA,EAAQ,GAE3B,IAAI5zE,EAAM,IAAI,EAAc81E,GACxBY,EAAW,IAAI,GAAc,CAACljC,EAAIC,EAAIC,EAAIC,EAAI6iC,EAAIC,IAAK,EAAM,EAAKp8G,OAAO29B,KAAK6N,iBAAkB7F,GACpGA,EAAIx5B,cAAJ,MAA6BkwG,EAE7B,IAAI9jC,EAAmB73E,EAAEyL,cAAF,OAEvBkwG,EAAS9nB,OAAOyH,EAAGpgB,MAAO,EAAG,GAC7BygC,EAAS7nB,MAAMwH,EAAGyB,YAAa,EAAG,GAClC4e,EAAS9lC,KAAKgC,EAAO54B,EAAG44B,EAAO34B,GAC/By8D,EAAS3Z,aAAa6W,GACtB8C,EAAS1Z,eAAe,SACxB0Z,EAASzZ,eAAe,GACxB5G,EAAGtrD,IAAI/K,OAER,GAAO,EAAO,+EAA+E,IAEpG,EAAKryB,UAAU,IAAIvJ,EAAO,6BAA8B,IAAI8B,EAAc,CACtE,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BuyF,EAAiB5oF,EAAW,GAAG3J,MAC/BwyF,EAAe7oF,EAAW,GAAG3J,MAC7Bm6G,EAAsBxwG,EAAW,GAAG3J,MACpC86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,8BAArB,CAEIv7F,EAAEyL,cAAF,oBACAzL,EAAEyL,cAAF,mBAAuC,EACvC6vF,EAAGsK,mBAGP,IAAIiT,EAAQoB,GAAUU,GACT,MAAT9B,IAAeA,EAAQ,GAE3B,IAAI5zE,EAAM,IAAI,EAAci2E,GACxBU,EAAkB,IAAI,GAAgB38D,EAAI,IAAMC,EAAI,IAAM6zC,EAAS,GAAKC,EAAO,GAAK,EAAK1zF,OAAO29B,KAAK6N,iBAAkB7F,GAC3HA,EAAIx5B,cAAJ,MAA6BmwG,EAE7B,IAAI/jC,EAAmB73E,EAAEyL,cAAF,OAEvBmwG,EAAgB/nB,OAAOyH,EAAGpgB,MAAO,EAAG,GACpC0gC,EAAgB9nB,MAAMwH,EAAGyB,YAAa,EAAG,GACzC6e,EAAgB/lC,KAAKgC,EAAO54B,EAAG44B,EAAO34B,GACtC08D,EAAgB5Z,aAAa6W,GAC7B+C,EAAgB3Z,eAAe,SAC/B2Z,EAAgB1Z,eAAe,GAC/B5G,EAAGtrD,IAAI/K,OAER,GAAO,EAAO,gFAAgF,IAErG,EAAKryB,UAAU,IAAIvJ,EAAO,4BAA6B,IAAI8B,EAAc,CACrE,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAClG,CAAE3H,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAChG,CAAE3H,WAAY,QAASiH,KAAMiM,GAAqB6D,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACpG,MACA,SAACe,GAEG,IAAInK,EAAmBmK,EAAW,GAAG3J,MACjCy+C,EAAY90C,EAAW,GAAG3J,MAC1B0+C,EAAY/0C,EAAW,GAAG3J,MAC1BuyF,EAAiB5oF,EAAW,GAAG3J,MAC/BwyF,EAAe7oF,EAAW,GAAG3J,MAC7Bm6G,EAAsBxwG,EAAW,GAAG3J,MACpC86F,EAAkBt7F,EAAEyL,cAAF,MAEtB,IAAI6vF,EAAGC,cAAc,6BAArB,CAEIv7F,EAAEyL,cAAF,oBACAzL,EAAEyL,cAAF,mBAAuC,EACvC6vF,EAAGsK,mBAGP,IAAIiT,EAAQoB,GAAUU,GACT,MAAT9B,IAAeA,EAAQ,GAE3B7lB,GAAc,GACdD,GAAkB,GAElB,IAAI9tD,EAAM,IAAI,EAAcg2E,GACxBY,EAAgB,IAAI,GAAc58D,EAAI8zC,EAAS,EAAI,IAAM7zC,EAAI8zC,EAAO,EAAI,IAAMD,EAAS,EAAGC,EAAO,EAAG,EAAK1zF,OAAO29B,KAAK6N,iBAAkB7F,GAC3IA,EAAIx5B,cAAJ,MAA6BowG,EAE7B,IAAIhkC,EAAmB73E,EAAEyL,cAAF,OAEvBowG,EAAchoB,OAAOyH,EAAGpgB,MAAO,EAAG,GAClC2gC,EAAc/nB,MAAMwH,EAAGyB,YAAa,EAAG,GACvC8e,EAAchmC,KAAKgC,EAAO54B,EAAG44B,EAAO34B,GACpC28D,EAAc7Z,aAAa6W,GAC3BgD,EAAc5Z,eAAe,SAC7B4Z,EAAc3Z,eAAe,GAC7B5G,EAAGtrD,IAAI/K,OAER,GAAO,EAAO,gFAAgF,IAGrG,EAAKryB,UAAU,IAAIvJ,EAAO,kBAAmB,IAAI8B,EAAc,IAAKiQ,GAChE,MACA,GAAO,EAAO,iDAElB,EAAKxI,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,QAASiH,KAAM8Q,GAAmBhB,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,oDAElB,EAAKxI,UAAU,IAAIvJ,EAAO,sBAAuB,IAAI8B,EAAc,CAC/D,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KACjGgS,GACA,MACA,GAAO,EAAO,0DAElB,EAAKxI,UAAU,IAAIvJ,EAAO,gBAAiB,IAAI8B,EAAc,CACzD,CAAE1J,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,IAAKiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,GAC7F,CAAE3H,WAAY,SAAUiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,KAClGgS,GACA,MACA,GAAO,EAAO,kEA/hB8B,EAFxD,+DAwiBwB63E,EAAiB6oB,EAAsBd,EAAoB11E,EAA0BuyC,GACrG,IAAIp3E,EAAmB,IAAI,EAAcq7G,GACrCC,EAAoB,IAAI,GAAc,EAAE,IAAK,GAAI,GAAI,GAAI,GAAI,KAAK,EAAMz2E,EAAa7kC,GACzFA,EAAEgL,cAAF,MAA2BswG,EAC3BA,EAAGlmC,KAAKgC,EAAO54B,EAAG44B,EAAO34B,GACzB68D,EAAG/Z,aAAa,UAChB+Z,EAAG9Z,eAAe,SAClB8Z,EAAG7Z,eAAe,GAClBjP,EAAGjjD,IAAIvvC,GAEP,IAAIb,EAAmB,IAAI,EAAco7G,GACrCx7F,EAAmB,IAAI,GAAa,EAAG,EAAG,GAAI8lB,EAAa1lC,GAC/DA,EAAE6L,cAAF,MAA2B+T,EAC3BA,EAAGq2D,KAAKgC,EAAO54B,EAAG44B,EAAO34B,GACzB1/B,EAAGwiF,aAAa,QAChBxiF,EAAGyiF,eAAe,SAClBziF,EAAG0iF,eAAe,GAClBjP,EAAGjjD,IAAIpwC,OAzjBf,GAAmC,GA+jB7Bu7G,G,YACF,WAAY71E,EAA0BiL,EAAsCyrE,GAAyD,yBACjI,0BAAM12E,EAAaiL,KADqDyrE,+BAAyD,E,qDAKjI1zG,KAAK0zG,6BAA6BhC,iBAAiB1xG,KAAKioC,eACxD,kD,GAPkB,I,yoBC9kBnB,IAAM,GAAb,YAEI,WAAYjxC,GAAc,a,4FAAA,UAEtB,0BAAM,SAAUA,EAAQ,4BAEnBonB,aAAoBpnB,EAAOqnB,UAAUC,QAAQ,WAElD,EAAKvX,iCAGL,EAAKuD,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,QAASiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KACnHiN,IACA,SAACvN,GAE0BA,EAAW,GAAG3J,MAArC,IACIy7G,EAAgB9xG,EAAW,GAAG3J,MAElC,OAAOoU,KAAK6sB,MAAM7sB,KAAKikC,SAASojE,MAEjC,GAAO,EAAO,kFAAkF,IAEvG,EAAKrpG,UAAU,IAAIvJ,EAAO,UAAW,IAAI8B,EAAc,CACnD,CAAE1J,WAAY,OAAQiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,GAClH,CAAEhJ,WAAY,KAAMiH,KAAMgP,GAAkBc,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KAChHiN,IACA,SAACvN,GAEG,IAAI+xG,EAAe/xG,EAAW,GAAG3J,MAC7BypF,EAAa9/E,EAAW,GAAG3J,MAE/B,OAAOoU,KAAK6sB,MAAM7sB,KAAKikC,UAAUoxC,EAAKiyB,EAAO,GAAKA,MAEnD,GAAO,EAAM,qFAAqF,IAEzG,EAAKtpG,UAAU,IAAIvJ,EAAO,aAAc,IAAI8B,EAAc,CACtD,CAAE1J,WAAY,OAAQiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,GACrH,CAAEhJ,WAAY,KAAMiH,KAAM6P,GAAqBC,YAAa,KAAMrQ,eAAgB,KAAMiB,SAAS,EAAMqB,YAAY,KACnH8N,IACA,SAACpO,GAEG,IAAI+xG,EAAe/xG,EAAW,GAAG3J,MAC7BypF,EAAa9/E,EAAW,GAAG3J,MAE/B,OAAOoU,KAAKikC,UAAUoxC,EAAKiyB,GAAQA,KAEpC,GAAO,EAAM,8DAA8D,IA7C5D,EAF9B,O,mOAAA,SAAiC,G,srCCwG1B,IAAM,GAAb,WAkDI,WAAY9xE,EAAmBnN,GAC3B,GADyC,WAAd,KAAAA,OA7C/B,KAAAs2B,oBAAgC,GAIhC,KAAA1jD,gBAA0B,EAE1B,KAAAssG,YAA4B,GAC5B,KAAAC,qBAAiC,GACjC,KAAAC,2BAA2D,GAE3D,KAAA9/F,OAAoB,CAAC,GAAI,GAAI,GAAI,IAyBjC,KAAA+/F,oBAAgE,GAChE,KAAA/gD,oBAAgE,GAUhD,MAARnxB,GAA6B,MAAb9hC,KAAK20B,KAAzB,CAEA30B,KAAK8hC,KAAOA,EAEZ,IAAIoR,EAAOpR,EAAKtqC,KAEZy8G,EAAaC,EAAOC,OAAOjhE,GACb,MAAd+gE,EACAA,EAAa,EAEbA,IAEJC,EAAOC,OAAOjhE,GAAQ+gE,EAElBA,EAAa,IAAG/gE,GAAQ,KAAO+gE,EAAa,KAChDj0G,KAAK8iB,IAAMna,OAAOyrG,IAAIR,KAAK,CAAE1gE,KAAMA,EAAMmhE,OAAQ,aACjDr0G,KAAKiX,MAAQtO,OAAOuP,OAAOw1C,YAAY5rB,EAAKlsB,KAAM,SAAU5V,KAAK8iB,KACjE9iB,KAAKiX,MAAM4mD,cAAc,CAAEpe,QAAS,IAEpCz/C,KAAKyyC,mBAAqBzyC,KAAKiX,MAAMy7B,0BAErC,IAAI30B,EAAO/d,KAEXA,KAAKiX,MAAMiyC,oBAAmB,WAC1B,IAAIC,EAAYprC,EAAK9G,MAAMy7B,0BAS3B,GAPIyW,GAAaprC,EAAK00B,qBAClB10B,EAAK+jB,KAAKkD,OAAQ,EAClBjnB,EAAK+jB,KAAK8N,OAAQ,EAClB7xB,EAAK+jB,KAAK4R,iCAAkC,EAC5C31B,EAAK00B,mBAAqB0W,IAG1BprC,EAAK4W,KAAKyvB,aAAa,CACvB,IAAIkwD,EAAoB3/E,EACrB2/E,EAAMpkE,mBAAqBokE,EAAM9lE,KAAK5sC,IACA,MAAlCmc,EAAK+jB,KAAK6rB,sBAAgC5vC,EAAK+jB,KAAKilC,iCACnDhpD,EAAK+jB,KAAKilC,+BAAgC,EAC1ChpD,EAAK+jB,KAAK6rB,qBAAuB5vC,EAAK+jB,KAAKlsB,KAC3CmI,EAAK+jB,KAAK8N,OAAQ,EAClB0kE,EAAMnxD,eAAezU,YAAY,MAAM,GACvC4lE,EAAMt2C,UAAUvO,gBAAgBlB,6BAChC+lD,EAAMvlE,gBAAgBu4B,qBAAqBvpD,EAAK+jB,OAGpD/jB,EAAK+jB,KAAKilC,+BAAgC,OAhG9D,kEAuGmCviE,GAE3B,GAA+B,MAA5BxE,KAAKyf,oBAA6B,OAAO,KAFgC,2BAI5E,YAAczf,KAAKyf,oBAAnB,+CAAuC,KAA/BhY,EAA+B,QACnC,GAAGA,EAAGrH,MAAQnH,EAAUU,cAAgB8N,EAAGrH,MAAQnH,EAAUe,YAAY,4BACrE,YAAqByN,EAAGjB,QAAxB,+CAAgC,KAAxB+tG,EAAwB,QAC5B,GAAyB,MAAtBA,EAAU/vG,UAAyC,MAArB+vG,EAAUh0F,SACpCg0F,EAAU/vG,SAAS0F,MAAQ1F,EAASukD,YAAcwrD,EAAUh0F,QAAQrW,MAAQ1F,EAASukD,WACpF,OAAOwrD,GAJkD,qFALD,kFAgB5E,OAAO,OAvHf,kCAmJgB7jE,GACR,IAAI5O,EAAO9hC,KAAK8hC,KAiBhB,MAhBmB,CACflgC,GAAIkgC,EAAKlgC,GACTpK,KAAMsqC,EAAKtqC,KACXoe,KAAMksB,EAAKlsB,KACX+3C,qBAAsB7rB,EAAK6rB,qBAC3BgB,eAAgB7sB,EAAK6sB,eACrBoY,8BAA+BjlC,EAAKilC,8BACpCx0B,QAASzQ,EAAKyQ,QACdtB,cAAenP,EAAKmP,cACpBC,wBAAyBpP,EAAKoP,wBAC9BwC,gCAAiC5R,EAAK4R,gCACtCjD,aAAcC,EAAU9uC,GACxB6sC,aAAa,EACb+lE,UAAW,KAlKvB,6CAwK2B36E,EAAkCvY,EACrDkyC,EAAoCjyC,GAEpC,IAAI+sD,EAAkB,GACtBA,EAAM/pE,KAAKs1B,EAAmB3vB,MAHwC,2BAItE,YAAeoX,EAAf,+CAA+B,KAAtBgyC,EAAsB,QACvBgb,EAAMlpE,QAAQkuD,EAAGppD,MAAQ,GACzBokE,EAAM/pE,KAAK+uD,EAAGppD,OANgD,kFAiBtE,IAPA,IAAI6sB,EAA0B,CAC1B8C,mBAAoBA,EACpBvY,eAAgBA,EAChBkyC,gBAAiBA,EACjBjyC,qBAAsBA,GAG1B,MAAiB+sD,EAAjB,eAAwB,CAAnB,IAAIpkE,EAAI,KACLuqG,EAAUz0G,KAAKizD,oBAAoB/oD,GACxB,MAAXuqG,IACAz0G,KAAKizD,oBAAoB/oD,GAAQ,GACjCuqG,EAAUz0G,KAAKizD,oBAAoB/oD,IAEvCuqG,EAAQlwG,KAAKwyB,MAhMzB,uCAsMqBgyB,EAAoB2rD,GACjC10G,KAAKupE,mCACuC,MAAxCvpE,KAAK20G,cAAc5rD,GAAY,IAC/B/oD,KAAK40G,cAAc7rD,EAAY,GAE/B2rD,GACA10G,KAAK4pE,+BA5MjB,oCAgNkB1/D,GAAqC,wDAE/C,IAF+C,IAEtCjT,EAAI,EAAGA,EAAI+I,KAAK6zG,YAAY7xG,OAAQ/K,IAAK,CAC9C,IAAIklD,EAAIn8C,KAAK6zG,YAAY58G,GACzB,GAAIklD,EAAEjyC,MAAQA,EAKV,OAJAlK,KAAK6zG,YAAY97F,OAAO9gB,EAAG,GACR,MAAfklD,EAAEv1B,YACFu1B,EAAEv1B,UAAUygE,gBAAap+E,GAEtBkzC,EAIf,OAAO,OA7Nf,oCAiOkBjyC,EAAcC,GAExB,IAAIk9E,EAAyB,CACzBn9E,KAAMA,EACNC,OAAQA,EACRyc,UAAW,MAMf,OAHA5mB,KAAK60G,kBAAkBxtB,GACvBrnF,KAAK6zG,YAAYtvG,KAAK8iF,GAEfA,IA5Of,wCAgPsBA,EAAwBytB,G,MAEV,MAAxBztB,EAAWzgE,YACXygE,EAAWzgE,UAAUygE,gBAAap+E,GAGnB,MAAf6rG,IAAqBA,EAAc90G,KAAK+0G,eAE5C,IAAIC,EAA8B,KAC9BC,EAA0B,IAT+B,uBAW7D,YAAoBH,EAApB,+CAAiC,KAAxBrzG,EAAwB,+BAC7B,YAAsBA,EAAQmD,WAA9B,+CAA0C,KAAjCgiB,EAAiC,QAElC1c,EAA0B,QAAtB,EAAG0c,aAAS,EAATA,EAAWpiB,gBAAQ,eAAE0F,KAChC,GAAY,MAARA,GAAgBA,GAAQm9E,EAAWn9E,KAAM,CACrCA,EAAOm9E,EAAWn9E,KAAO+qG,IACzBD,EAAmBpuF,EACnBquF,EAAkB/qG,EAAOm9E,EAAWn9E,MAGxC,QAVqB,oFAX4B,kFA4B7Dm9E,EAAWzgE,UAAYouF,EACC,MAApBA,IACAA,EAAiB3tB,WAAaA,KA9Q1C,oCAyRQ,IAAIytB,EAAyB,GAM7B,GAJwB,MAApB90G,KAAKuf,aACLu1F,EAAYvwG,KAAKvE,KAAKuf,aAGJ,MAAlBvf,KAAKqe,UAAmB,4BAExB,YAAiBre,KAAKqe,UAAUmG,SAAhC,+CAA0C,KAAjCpkB,EAAiC,QACtC,GAAIA,aAAgB,EAAO,CACoB,MAAvCA,EAAKyG,gCACLiuG,EAAYvwG,KAAKnE,EAAKyG,gCAFH,2BAIvB,YAAmBzG,EAAKoG,QAAxB,+CAAiC,KAAxB9E,EAAwB,QACP,MAAlBA,EAAOD,SACPqzG,EAAYvwG,KAAK7C,EAAOD,UANT,kFASgC,MAAnDrB,EAAKwG,YAAYC,gCACjBiuG,EAAYvwG,KAAKnE,EAAKwG,YAAYC,gCAVf,2BAYvB,YAAmBzG,EAAKwG,YAAYJ,QAApC,+CAA6C,KAApC,EAAoC,QACnB,MAAlB,EAAO/E,SACPqzG,EAAYvwG,KAAK,EAAO9C,UAdT,qFAHP,mFAyB5B,OAAOqzG,IAxTf,mDA8TQ90G,KAAKupE,mCAEL,IAAI/d,EAAqD,GAJnC,uBAMtB,YAAuBxrD,KAAK6zG,YAA5B,+CAAyC,KAAhCxsB,EAAgC,QACrC77B,EAAYjnD,KAAK,CACbyE,MAAO,CAAE4O,gBAAiByvE,EAAWn9E,KAAMyN,cAAe0vE,EAAWn9E,KAAM4N,YAAa,EAAGD,UAAW,GACtGV,QAAS,CACL0zC,aAAa,EAAMvvB,UAAW,yBAC9BokC,cAAe,CACX50C,MAAO,UACPtmB,SAAUmE,OAAOuP,OAAO0nD,kBAAkBC,MAE9C3X,QAAS,CACLp9B,MAAO,UACPtmB,SAAUmE,OAAOuP,OAAOq0C,gBAAgBC,QAE5C0oD,gBAAiB,uBACjBC,WAAYxsG,OAAOuP,OAAOk9F,uBAAuBC,6BAGrDhuB,WAAYA,KAvBE,kFA2BtBrnF,KAAK8zG,qBAAuB9zG,KAAK20B,KAAK2vB,kBAAkBsG,iBAAiB5qD,KAAK8zG,qBAAsBtoD,GAEpGxrD,KAAK+zG,2BAA6B,GAClC,IAAK,IAAI98G,EAAI,EAAGA,EAAI+I,KAAK8zG,qBAAqB9xG,OAAQ/K,IAClD+I,KAAK+zG,2BAA2B/zG,KAAK8zG,qBAAqB78G,IAAM+I,KAAK6zG,YAAY58G,KA3V7F,yDAgWoC,2BAC5B,YAAuB+I,KAAK20B,KAAK2vB,kBAAkBoE,WAAW4sD,oBAA9D,+CAAmF,KAA1EC,EAA0E,QAC/E,GAA0C,qBAAtCA,EAAWp+F,QAAQ+9F,gBAAwC,CAC3D,IAAI7tB,EAAarnF,KAAK+zG,2BAA2BwB,EAAW3zG,IAC1C,MAAdylF,IACAA,EAAWn9E,KAAOqrG,EAAWvsG,MAAM4O,mBALnB,qFAhWpC,gDA2W8B1N,EAAcC,GACpC,OAA4B,MAAxBnK,KAAKof,gBACE,OAGPlV,EAAOlK,KAAKof,gBAAgBxE,WAAW1Q,MACvCA,GAAQlK,KAAKof,gBAAgBxE,WAAW1Q,MAAQC,EAASnK,KAAKof,gBAAgBxE,WAAWzQ,UAEzFD,EAAOlK,KAAKof,gBAAgBxE,WAAW1Q,KACvCC,EAASnK,KAAKof,gBAAgBxE,WAAWzQ,OAAS,GAG/CnK,KAAKof,gBAAgBlC,oBAAoBhT,EAAMC,MAvX9D,sCA4XQ,IAAI+gB,EAAK,EAFA,uBAGT,YAAelrB,KAAKiU,OAApB,+CAA4B,SACrBlC,SAAQ,SAAAhG,GAAK,OAAImf,GAAqB,SAAfnf,EAAM+J,MAAmB,EAAI,MAJlD,kFAQT,OAAOoV,IAlYf,uCAuYQ,OAAwB,MAApBlrB,KAAKuf,cAC0B,MAA/Bvf,KAAKuf,YAAY3a,aACd5E,KAAKuf,YAAY3a,WAAW5C,OAAS,GAA2C,GAAtChC,KAAKuf,YAAY3a,WAAW5C,QAAehC,KAAKuf,YAAY3a,WAAW,GAAGxE,MAAQnH,EAAU8mB,mBAzYrJ,sDA8YQ,OAAO/f,KAAKiX,MAAM7J,SAASzE,OAAOuP,OAAOC,oBAAoBC,IAAI,KA9YzE,4CAkZ0B5T,EAAwBosB,GAC1C,IAAIW,EAAqCvxB,KAAKg0G,oBAAoBxvG,EAAS0F,MACvD,MAAhBqnB,IACAA,EAAe,GACfvxB,KAAKg0G,oBAAoBxvG,EAAS0F,MAAQqnB,GAE9CA,EAAahtB,KAAK,CACdC,SAAUA,EACVosB,QAASA,MA1ZrB,wCA+ZsB1mB,EAAcC,GAE5B,IAAIqrG,EAAkBx1G,KAAKg0G,oBAAoB9pG,GAC/C,GAAuB,MAAnBsrG,EAAyB,OAAO,KAEpC,IAAIC,EAAoC,KALE,uBAM1C,YAAcD,EAAd,+CAA+B,KAAtBz8G,EAAsB,QAC3B,GAAIoR,GAAUpR,EAAEyL,SAAS2F,QAAUA,GAAUpR,EAAEyL,SAAS2F,OAASpR,EAAEyL,SAASxC,OAAQ,CAEhF,IAAI4uB,GADJ6kF,EAAgB18G,GACY63B,QAC5B,GAAIA,aAAmB7vB,EACnB,MAAO,CAAEX,KAAMwwB,EAAShwB,UAAU,GAGtC,IAAIR,EAAcwwB,aAAmBjxB,EAAQixB,EAAUA,EAAQxwB,KAE/D,OAAIq1G,EAAcjxG,SAASxC,OAAS,GAAqB,MAAhB4uB,EAAQxwB,KAEtC,CAAEA,KAAYA,EAAMQ,UAAU,GAGlC,CAAER,KAAMA,EAAMQ,SAAU60G,EAAcjxG,SAASxC,OAAS,KArB7B,kFA0B1C,OAAO,OAzbf,2CA4byBkI,EAAcC,GAE/B,IAAIqrG,EAAkBx1G,KAAKg0G,oBAAoB9pG,GAC/C,GAAuB,MAAnBsrG,EAAyB,OAAO,KAEpC,IAAIE,EAAwC,KALC,uBAM7C,YAAcF,EAAd,+CAA+B,KAAtBz8G,EAAsB,QACvBoR,GAAUpR,EAAEyL,SAAS2F,QAAUA,EAASpR,EAAEyL,SAAS2F,OAASpR,EAAEyL,SAASxC,QAEnEjJ,EAAEyL,SAASxC,OAAS,IACK,MAArB0zG,GAGG38G,EAAE63B,mBAAmB7vB,GAAU20G,EAAkB9kF,mBAAmB,KAFvE8kF,EAAoB38G,IAXS,kFAqB7C,OAA4B,MAArB28G,EAA4B,KAAYA,EAAkB9kF,UAjdzE,6BAqdQ,IAAIv5B,EAAI,IAAI68G,EAAOl0G,KAAK8hC,KAAM9hC,KAAK20B,MACnCt9B,EAAE4f,MAAQjX,KAAKiX,MACf5f,EAAEkoB,YAAcvf,KAAKuf,YACrBvf,KAAKuf,YAAc,KACnBloB,EAAE+nB,gBAAkBpf,KAAKof,gBACzBpf,KAAKof,gBAAkB,KACvB/nB,EAAEgnB,UAAYre,KAAKqe,UAEnBhnB,EAAE0uC,YAAc/lC,KAAK+lC,YACrB1uC,EAAEuuC,2BAA6B5lC,KAAK4lC,2BAEpCvuC,EAAEw8G,YAAc7zG,KAAK6zG,YACrB7zG,KAAK6zG,YAAc,GACnB,IAAI8B,EAAWt+G,EAAE09G,cAEjBY,EAAS5jG,SAAQ,SAAChZ,GAAD,OAAOA,EAAE/B,OAASK,KAhBnC,2BAkBA,YAAcA,EAAEw8G,YAAhB,+CAA6B,KAApB13D,EAAoB,QACzBn8C,KAAK6zG,YAAYtvG,KAAK,CAClB2F,KAAMiyC,EAAEjyC,KACRC,OAAQgyC,EAAEhyC,OACVyc,UAAW,OAGfvvB,EAAEw9G,kBAAkB14D,EAAGw5D,IAzB3B,kFA+BA,OAFA31G,KAAK8hC,KAAKkD,OAAQ,EAEX3tC,IAnff,8BAwfQ2I,KAAKg0G,oBAAsB,GAEV,MAAbh0G,KAAK8hC,MAAgB9hC,KAAK8hC,KAAKkD,QAE/BhlC,KAAK0T,UAAY,KACjB1T,KAAKiU,OAAO,GAAK,GAGjBjU,KAAKiU,OAAO,GAAK,IAMrBjU,KAAKiU,OAAO,GAAK,GACjBjU,KAAK+zB,UAAY,GACjB/zB,KAAKqe,UAAY,IAAIu3F,GAGrB51G,KAAKiU,OAAO,GAAK,GACjBjU,KAAKof,gBAAkB,IAAI,GAAY,KAAM,CAAElV,KAAM,EAAGC,OAAQ,EAAGnI,OAAQ,GAAK,CAAEkI,KAAM,IAAQC,OAAQ,EAAGnI,OAAQ,IACnHhC,KAAKuf,YAAc,KAEnBvf,KAAKizD,oBAAsB,GAC3BjzD,KAAKoiC,iBAAmB,IAAItiC,MAhhBpC,kCAohBa,2BAEL,YAAeE,KAAKiU,OAApB,+CAA4B,CACxB,GADwB,QAClByc,MAAK,SAAA3kB,GAAK,MAAmB,SAAfA,EAAM+J,SACtB,OAAO,GAJV,kFAWL,OAAO,IA/hBf,mDAqiBQ,IAAIyyE,EAAgB,GAFE,uBAItB,YAAevoF,KAAKiU,OAApB,+CAA4B,KAAnBgqC,EAAmB,QACxBsqC,EAAOA,EAAKrgF,OAAO+1C,IALD,kFAQtBsqC,EAAKrsC,MAAK,SAACt0C,EAAGu0C,GACV,OAAIv0C,EAAEpD,SAAS0F,KAAOiyC,EAAE33C,SAAS0F,KACtB,EAEPiyC,EAAE33C,SAAS0F,KAAOtC,EAAEpD,SAAS0F,MACrB,EAERtC,EAAEpD,SAAS2F,QAAUgyC,EAAE33C,SAAS2F,OACzB,GAEH,KAGZ,IAAK,IAAIlT,EAAI,EAAGA,EAAIsxF,EAAKvmF,OAAS,EAAG/K,IAAK,CACtC,IAAIygB,EAAK6wE,EAAKtxF,GACV4+G,EAAKttB,EAAKtxF,EAAI,GACdygB,EAAGlT,SAAS0F,MAAQ2rG,EAAGrxG,SAAS0F,MAAQwN,EAAGlT,SAAS2F,OAAS,GAAK0rG,EAAGrxG,SAAS2F,SAC7B,GAA9CnK,KAAK81G,kBAAkBp+F,EAAG5B,MAAO+/F,EAAG//F,OACnCyyE,EAAKxwE,OAAO9gB,EAAI,EAAG,GAEnBsxF,EAAKxwE,OAAO9gB,EAAG,GAEnBA,KAIR,OAAOsxF,IArkBf,wCAwkBsBwtB,EAAoBC,GAClC,MAAa,SAAVD,EAA0B,EAChB,SAAVC,EAA0B,EAChB,WAAVD,EAA4B,EAClB,WAAVC,EAA4B,EACxB,IA7kBf,0C,UAilBYjzD,EAAoD,QAA1C,EAA0B,QAA1B,EAAY,QAAZ,EAAG/iD,KAAK8hC,YAAI,eAAE6R,oBAAY,eAAE+G,sBAAc,eAAEhqB,KAAK,6BAC/D,GAAkB,MAAdqyB,IAEJA,EAAWryB,KAAK,mBAAmBmW,SAE/B7mC,KAAK+lC,aAAa,CAClB,IAAIkwE,EAAkBzrE,OAAO,oHAC7BuY,EAAWjZ,OAAOmsE,GAClB,IAAIl4F,EAAO/d,KACXi2G,EAAgB5pE,GAAG,aAAa,SAAC50B,GAAD,OAAOA,EAAEg9B,qBACzCwhE,EAAgB5pE,GAAG,SAAS,SAAC50B,GACzBA,EAAEg9B,kBAEF12B,EAAK4W,KAAK+1B,gBAAgB3sC,GAE1BA,EAAK4W,KAAK6N,iBAAiBkD,eAhmB3C,uCA4H2B+N,EAAa9e,GAmBhC,OAFgB,IAAIu/E,EAfL,CACX18G,KAAMi8C,EAAEj8C,KACRoe,KAAM69B,EAAE79B,KACR+3C,qBAAsBla,EAAEka,qBACxBgB,eAAgBlb,EAAEkb,eAClBoY,+BAA+B,EAC/B/hC,OAAO,EACP4K,OAAO,EACP2C,QAASkB,EAAElB,QACX3wC,GAAI6xC,EAAE7xC,GACNqvC,cAAewC,EAAExC,cACjBC,wBAAyBuC,EAAEvC,wBAC3BwC,gCAAiCD,EAAEC,iCAGR/e,OA7IvC,KAEW,GAAAuhF,aAAuB,EA6CvB,GAAA/B,OAAqC,GA0jBzC,IAAM,GAAb,YACI,WAAYx/E,GAAc,yBAEtB,0BAAM,CAAEn9B,KAAM,cAAeoe,KAAM,GAAI+3C,qBAAsB,KAAMgB,eAAgB,KAAMoY,+BAA+B,EAAO/hC,OAAO,EAAO4K,OAAO,EAAM2C,QAAS,EAAImB,iCAAiC,GAAO/e,KAE1MptB,gBAAiB,EACtB,EAAKgY,YAAc,KAEnB,EAAK0lB,QAGL,EAAK5mB,UAAU4lB,QAAQnxB,IACvB,EAAKuL,UAAU4lB,QAAQ70B,IACvB,EAAKiP,UAAU4lB,QAAQj0B,IACvB,EAAKqO,UAAU4lB,QAAQh0B,IACvB,EAAKoO,UAAU4lB,QAAQ/yB,IACvB,EAAKmN,UAAU4lB,QAAQ3zB,IACvB,EAAK+N,UAAU4lB,QAAQ53B,IACvB,EAAKgS,UAAU4lB,QAAQ,IACvB,EAAK5lB,UAAU4lB,QAAQjxB,IAEvB,EAAKqL,UAAU4lB,QAAQhxB,IACvB,EAAKoL,UAAU4lB,QAAQ/wB,IACvB,EAAKmL,UAAU4lB,QAAQ9wB,IACvB,EAAKkL,UAAU4lB,QAAQ7wB,IACvB,EAAKiL,UAAU4lB,QAAQ5wB,IAGvB,EAAKgL,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QAEvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QAEvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QAEV,EAAK5lB,UAAUC,QAAQ,SAAU63F,oBAG9C,EAAK93F,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QAEvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,QAIvB53B,GAAoBrV,OAApB,MAnGsB,EAD9B,iEA+GuB,2BACf,YAAiBgJ,KAAKqe,UAAUmG,SAAhC,+CAA0C,SACjCxc,uBAFM,uFA/GvB,GAAgC,IAyHnB,GAAb,YACI,WAAY2sB,EAAgBnW,GAAwB,yBAEhD,0BAAM,CAAEhnB,KAAM,8BAA+Boe,KAAM,GAAI+3C,qBAAsB,KAAMgB,eAAgB,KAAMoY,+BAA+B,EAAO/hC,OAAO,EAAO4K,OAAO,EAAM2C,QAAS,EAAImB,iCAAiC,GAAO/e,KAE1NptB,gBAAiB,EACtB,EAAKgY,YAAc,KAEnB,EAAK0lB,QAEL,EAAK5mB,UAAU4lB,QAAQ,IAAI,GAAJ,QACvB,EAAK5lB,UAAU4lB,QAAQ,IAAI,GAAJ,MAA4BzlB,IACnD,EAAKH,UAAU4lB,QAAQ,IAAI,GAAJ,MAAiCzlB,IACxD,EAAKH,UAAU4lB,QAAQ,IAAI,GAAJ,MAAgCzlB,IACvD,EAAKH,UAAU4lB,QAAQ,IAAI,GAAJ,MAA2BzlB,IAClD,EAAKH,UAAU4lB,QAAQ,IAAI,GAAJ,MAA0BzlB,IACjD,EAAKH,UAAU4lB,QAAQ,IAAI,GAAJ,MAAwBzlB,IAC/C,EAAKH,UAAU4lB,QAAQ,IAAI,GAAJ,MAAuBzlB,IAC9C,EAAKH,UAAU4lB,QAAQ,IAAI,GAAJ,MAAyBzlB,IAChD,EAAKH,UAAU4lB,QAAQ,IAAI,GAAJ,MAAwBzlB,IAlBC,EADxD,iEAuBuB,2BACf,YAAiBxe,KAAKqe,UAAUmG,SAAhC,+CAA0C,SACjCxc,uBAFM,uFAvBvB,GAA+B,IAkClB,GAAb,WAQI,WAAoB2sB,EAAgByhF,GAAmE,IAAlCC,EAAkC,uDAAF,GAAE,WAAnF,KAAA1hF,OAAiD,KAAA0hF,sBAN7D,KAAAl/G,QAAoB,GACpB,KAAAm/G,UAAsC,GAG9C,KAAAtxE,OAAiB,EAGToxE,IACAp2G,KAAKgiC,WAAa,IAAI,GAAWrN,GACjC30B,KAAK6zC,UAAU7zC,KAAKgiC,aAH2E,2BAQnG,YAAeq0E,EAAf,+CAAmC,KAA3B/vC,EAA2B,QAC/BtmE,KAAKu2G,iBAAiBjwC,IATyE,mFAR3G,oDAqBqBntE,GACb,OAAOA,GACH,IAAK,MAAO6G,KAAK6zC,UAAU,IAAI,GAAU7zC,KAAK20B,KAAM30B,UAvBhE,6CA4B2Bq2G,GAEnBr2G,KAAK7I,QAAU6I,KAAK7I,QAAQ0T,QAAQ,SAAAxT,GAAC,OAAMA,EAAEkQ,gBAAmBlQ,aAAa,MAC7E2I,KAAKs2G,UAAY,GAH+B,2BAKhD,YAAat2G,KAAK7I,QAAlB,+CAA0B,KAAlBE,EAAkB,QACtB2I,KAAKs2G,UAAUj/G,EAAEyqC,KAAKtqC,MAASH,GANa,kFAShD,GAA0B,MAAvBg/G,EAA4B,4BAC3B,YAAeA,EAAf,+CAAmC,KAA3B/vC,EAA2B,QAC/BtmE,KAAKu2G,iBAAiBjwC,IAFC,sFArCvC,qCA6CmB7L,GAAiB,2BAC5B,YAAkBz6D,KAAK7I,QAAvB,+CAA+B,KAAvBH,EAAuB,QAC3B,GAAGA,EAAO8qC,KAAKlgC,IAAM64D,EAAW,OAAOzjE,GAFf,kFAI5B,OAAO,OAjDf,sCAqDQ,OAAOgJ,KAAKgiC,aArDpB,4CAyDQhiC,KAAKgiC,WAAWh6B,wBAzDxB,6BA6DQ,IAAIujD,EAAkB,IAAIirD,EAAYx2G,KAAK20B,MAAM,GADjD,uBAEA,YAAc30B,KAAK7I,QAAnB,+CAA4B,KAAnBE,EAAmB,QACnBA,EAAEkQ,gBACHgkD,EAAG1X,UAAUx8C,EAAE+pF,SAJvB,kFAOA,OAAO71B,IAnEf,uCAsEqBzpB,GAAU,2BACvB,YAAc9hC,KAAK7I,QAAnB,+CAA4B,KAAnBE,EAAmB,QACxB,GAAIA,EAAEyqC,MAAQA,EACV,OAAOzqC,GAHQ,kFAMvB,OAAO,OA5Ef,kCA+Ea,2BACL,YAAc2I,KAAK7I,QAAnB,+CAA4B,CACxB,GADwB,QAClB0uC,YACF,OAAO,GAHV,kFAML,OAAO,IArFf,uCAyFQ,GAAI7lC,KAAK7I,QAAQ6K,OAAS,EAAG,4BACzB,YAAehC,KAAK7I,QAApB,+CAA6B,KAApBotB,EAAoB,QACzB,IAAKA,EAAGhd,eACJ,OAAOgd,GAHU,mFAO7B,OAAO,OAhGf,gCAqGQ,GAAIvkB,KAAKglC,MAEL,OADAhlC,KAAKglC,OAAQ,GACN,EAGX,IAAIA,GAAQ,EAPT,uBAQH,YAAchlC,KAAK7I,QAAnB,+CAA4B,CACxB,GADwB,QAClB2qC,KAAKkD,MAAO,CACdA,GAAQ,EACR,QAXL,kFAcH,OAAOA,IAjHf,iCAqHeyxE,EAA+BC,GACtC,IAAI9gF,EAAM,GADuD,uBAEjE,YAAc51B,KAAK7I,QAAnB,+CAA4B,KAAnBE,EAAmB,QACpBA,EAAEyqC,KAAKtqC,MAAQk/G,IACVr/G,EAAEkQ,iBAAkBkvG,GACrB7gF,EAAIrxB,KAAKlN,KAL4C,kFASjE,OAAOu+B,IA9Hf,gCAiIc5+B,GACNgJ,KAAK7I,QAAQoN,KAAKvN,GAClBgJ,KAAKs2G,UAAUt/G,EAAO8qC,KAAKtqC,MAAQR,IAnI3C,2CAsIyB8qC,GAAU,2BAC3B,YAAc9hC,KAAK7I,QAAnB,+CAA4B,KAAnBE,EAAmB,QACxB,GAAIA,EAAEyqC,MAAQA,EAAM,CAChB9hC,KAAKsyC,aAAaj7C,GAClB,QAJmB,qFAtInC,mCA+IiBL,GAELgJ,KAAK7I,QAAQiO,QAAQpO,GAAU,IAEnCgJ,KAAK7I,QAAQ4gB,OAAO/X,KAAK7I,QAAQiO,QAAQpO,GAAS,GAClDgJ,KAAKs2G,UAAUt/G,EAAO8qC,KAAKtqC,WAAQyR,EACnCjJ,KAAKglC,OAAQ,KArJrB,gCAwJc2xE,GACN,OAAO32G,KAAKs2G,UAAUK,KAzJ9B,8BA4JYx9G,GAAkB,2BACtB,YAAmB6G,KAAK7I,QAAxB,+CAAiC,KAAxBH,EAAwB,QAC7B,GAAwB,MAApBA,EAAOqnB,UAAmB,CAC1B,IAAIje,EAAOpJ,EAAOqnB,UAAUC,QAAQnlB,GACpC,GAAY,MAARiH,EACA,MAAO,CAAEA,KAAMA,EAAMpJ,OAAQA,KALnB,kFAUtB,OAAO,OAtKf,6CAyK2B4/G,EAAuBvuG,GAE1C,IAAIqU,EAAqD,GAFc,uBAIvE,YAAmB1c,KAAK7I,QAAxB,+CAAiC,KAAxBH,EAAwB,QAC7B,GAAwB,MAApBA,EAAOqnB,UAAmB,4BAC1B,YAAiBrnB,EAAOqnB,UAAUmG,SAAlC,+CAA4C,KAAnCpkB,EAAmC,QACxC,GAAIpJ,GAAU4/G,GAAkBx2G,aAAgB,GAASA,EAAKS,YAAckD,EAAW4C,QAChF3P,EAAOuQ,eAAgB,CAE1B,IAAIkqD,EAAS,SAEY,MAAtBrxD,EAAKL,cACJ0xD,EAASrxD,EAAKL,cACP/I,EAAOuQ,iBAEVkqD,EADArxD,aAAgBH,EACP,sBAEA,gBAIjB,IAAIuxD,EAAO,CACPnvD,MAAOjC,EAAKjH,WACZs4D,OAAQA,EACR1oD,WAAY3I,EAAKjH,WACjBuP,KAAMtI,aAAgBH,EAClB0I,OAAOC,UAAUC,mBAAmBguG,OAASluG,OAAOC,UAAUC,mBAAmBiuG,MACrF9tG,MAAOX,EACP0uG,SAAW32G,aAAgB,GAASA,aAAgB,IAAcA,EAAK8F,cAAclE,OAAS,GAGlG0a,EAAgBnY,KAAKitD,KA3BH,qFALqC,kFAsCvE,OAAO90C,MA/Mf,KAyNak5F,GAAb,mCAEI,KAAApxF,SAAmB,GACnB,KAAAwyF,QAA6B,IAAIl3G,IAHrC,2CAKYM,GACJJ,KAAKwkB,SAASjgB,KAAKnE,GACnBJ,KAAKg3G,QAAQ7xG,IAAI/E,EAAKjH,WAAYiH,KAP1C,8BAWQJ,KAAKwkB,SAASxiB,OAAS,EACvBhC,KAAKg3G,QAAQ/xE,UAZrB,8BAeY9rC,GACJ,OAAO6G,KAAKg3G,QAAQl/G,IAAIqB,OAhBhC,K,uKC1kCO,IAAM89G,GAAb,WAaI,WAAoB10C,EACR20C,EAA4BC,EAC3BnrE,EAA+CorE,I,4FAA+B,SAFvE,KAAA70C,aACR,KAAA20C,YAA4B,KAAAC,UAC3B,KAAAnrE,WAA+C,KAAAorE,YACpDp3G,KAAKq3G,a,UAhBjB,O,EAAA,G,EAAA,oCAmBc,WACFt5F,EAAO/d,KAEU,MAAlBA,KAAKo3G,WACJp3G,KAAKuiE,WAAWpmD,SAAS43B,WAAW0xB,MAAK,SAACrjE,EAAOwuB,GAC1CA,GAAW,EAAK2xC,WAAW,KAC1BxkD,EAAKq5F,UAAY5sE,OAAO5Z,OAKpC5wB,KAAKs3G,WAAa9sE,OAAO,kCAEzBxqC,KAAKs3G,WAAW1oE,IAAI,CAChBuH,MAAOn2C,KAAKm3G,QAAU,OAAS,MAC/B/gE,OAAQp2C,KAAKm3G,QAAU,MAAQ,OAC/BrrB,OAAQ9rF,KAAKm3G,QAAU,aAAe,eAGvCn3G,KAAKk3G,UACJl3G,KAAKs3G,WAAW1oE,IAAI,CAChBwI,IAAK,MACLrf,KAAM,QAGP/3B,KAAKm3G,QACJn3G,KAAKs3G,WAAW1oE,IAAI,CAChB8yC,OAAQ,MACR3pD,KAAM,QAGV/3B,KAAKs3G,WAAW1oE,IAAI,CAChBwI,IAAK,MACL9e,MAAO,QAKnBt4B,KAAKuiE,WAAWz4B,OAAO9pC,KAAKs3G,YAE5B,IAAIthE,EAAeC,OAAOC,aAAe,UAAY,QAErDl2C,KAAKs3G,WAAWjrE,GAAG2J,EAAe,QAAQ,SAAC2jC,GAEvC,IAAIhjC,EAAIgjC,EAAGzW,QACPtsB,EAAI+iC,EAAG7O,QAEXtgC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,eAAe,SAAC4jC,GAC/C,IAAIhN,EAAKgN,EAAG1W,QAAUvsB,EAClBk2B,EAAK+M,EAAG9O,QAAUl0B,EAEtB74B,EAAKw5F,MAAM3qC,EAAIC,GAEfl2B,EAAIijC,EAAG1W,QACPtsB,EAAIgjC,EAAG9O,WAIXtgC,OAAOlvB,UAAU+wB,GAAG2J,EAAe,aAAa,WAC5CxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,eACpCxL,OAAOlvB,UAAUqxB,IAAIqJ,EAAe,mBAM5CjL,YAAW,WACPhtB,EAAKw5F,MAAM,EAAG,KACf,OAvFX,+BA2FazsF,GACL9qB,KAAKs3G,WAAW1oE,IAAI,mBAAoB9jB,KA5FhD,4BA+FU8hD,EAAYC,GACd,GAAG7sE,KAAKm3G,QAAQ,CACZ,IAAI/gE,EAASvmC,OAAOM,SAASnQ,KAAKuiE,WAAW3zB,IAAI,UAAU9kC,QAAQ,KAAM,KACrE0tG,EAAc3nG,OAAOM,SAASnQ,KAAKo3G,UAAUxoE,IAAI,UAAU9kC,QAAQ,KAAM,KACzE2vE,EAAYz5E,KAAKk3G,UAAY9gE,GAAUy2B,EAAKz2B,GAAUy2B,EACtD4qC,EAAiBz3G,KAAKk3G,UAAYM,GAAe3qC,EAAK2qC,GAAe3qC,EACzE7sE,KAAKuiE,WAAW3zB,IAAI,SAAU6qC,EAAY,MAC1Cz5E,KAAKo3G,UAAUxoE,IAAI,SAAU6oE,EAAiB,MAC9Cz3G,KAAKgsC,SAASytC,OACX,CACH,IAAItjC,EAAQtmC,OAAOM,SAASnQ,KAAKuiE,WAAW3zB,IAAI,SAAS9kC,QAAQ,KAAM,KACnE4tG,EAAa7nG,OAAOM,SAASnQ,KAAKo3G,UAAUxoE,IAAI,SAAS9kC,QAAQ,KAAM,KACvE0vE,EAAWx5E,KAAKk3G,UAAY/gE,GAASy2B,EAAKz2B,GAASy2B,EACnD+qC,EAAgB33G,KAAKk3G,UAAYQ,GAAc9qC,EAAK8qC,GAAc9qC,EACtE5sE,KAAKuiE,WAAW3zB,IAAI,QAAS4qC,EAAW,MACxCx5E,KAAKo3G,UAAUxoE,IAAI,QAAS+oE,EAAgB,MAC5C33G,KAAKgsC,SAASwtC,GAElBx5E,KAAKuiE,WAAW3zB,IAAI,OAAQ,iB,6BAjHpC,K,uKCWO,IAAM,GAAb,WAKI,WAAoBpwB,EAAkCo5F,EAA2CjjF,GAAkB,Y,4FAAA,SAA/F,KAAAnW,cAAkC,KAAAo5F,eAA2C,KAAAjjF,OAFjG,KAAAqb,MAAoB,GAIhB,IAAIjyB,EAAO/d,KAFoG,uBAI/G,YAAmBwe,EAAY8F,YAAW,GAA1C,+CAAkD,KAAzCttB,EAAyC,QAE9CgJ,KAAK63G,UAAU7gH,IAN4F,kFAU/G,IAAI8gH,EAAYF,EAAaz7F,SACzB47F,EAAavtE,OAAO,mGACxBstE,EAAUhuE,OAAOiuE,GAEjBA,EAAW1rE,GAAG,SAAS,WAEnB,IAAIr1C,EAAS,EAAK29B,KAAKkjF,UAAU,CAAEjiG,KAAM,GAAIrM,MAAO,kBAAmBnJ,KAAM,SACzEmzC,EAAW,EAAKskE,UAAU7gH,GAE9B,EAAK+jD,cAAcxH,GAAU,WAErBx1B,EAAKi6F,aAAezkE,GACpBx1B,EAAKk6F,WAAW1kE,S,UA3BpC,O,EAAA,G,EAAA,wCAmCkB,WACVvzC,KAAKgwC,MAAMj+B,SAAQ,SAAA0hC,GAAC,OAAI,EAAKykE,WAAWzkE,QApChD,8BAwCY0kE,GACJ,IAAIp6F,EAAO/d,KACPo4G,EAAW5tE,OAAO,oHAClB2tE,EAAO5uG,MAAQ,8DACnBvJ,KAAK43G,aAAa9tE,OAAOsuE,GAEzB,IAAI7kE,EAAqB,CACrBv8C,OAAQ,KACRohH,SAAUA,EACVh4G,KAAM,OACNi4G,KAAMF,EAAOviG,MAGjB5V,KAAKgwC,MAAMzrC,KAAKgvC,GAEhB6kE,EAAS/rE,GAAG,SAAS,SAACiI,GAClBv2B,EAAKk6F,WAAW1kE,QAxD5B,gCA8Dcv8C,GACN,IAAI+mB,EAAO/d,KACPo4G,EAAW5tE,OAAO,wIAAD,OAEgCxzC,EAAO8qC,KAAKtqC,KAF5C,yKAKrBwI,KAAK43G,aAAa9tE,OAAOsuE,GAEzB,IAAI7kE,EAAqB,CACrBv8C,OAAQA,EACRohH,SAAUA,EACVh4G,KAAM,QAgCV,OA7BAJ,KAAKgwC,MAAMzrC,KAAKgvC,GAEhBv8C,EAAO8qC,KAAK6R,aAAe,CACvBn8C,KAAMR,EAAO8qC,KAAKtqC,KAClBkjD,eAAgB09D,EAChBjlE,UAAU,EACVD,KAAM,IAGVklE,EAAS1nF,KAAK,cAAc2b,GAAG,aAAa,SAAC50B,GACzCsG,EAAKu6F,SAAS/kE,EAAU97B,MAG5B2gG,EAAS1nF,KAAK,cAAc2b,GAAG,SAAS,SAAC50B,GAAQA,EAAEwhC,iBAAkBxhC,EAAEg9B,qBAEvE2jE,EAAS/rE,GAAG,SAAS,SAACiI,GAClBv2B,EAAKk6F,WAAW1kE,MAGpB6kE,EAAS,GAAG76D,iBAAiB,eAAe,SAAUjJ,GAClDA,EAAM2E,iBACNxC,GAAgB,CAAC,CACb3C,QAAS,aACT9H,SAAU,WACNjuB,EAAKg9B,cAAcxH,GAAU,kBAEjCe,EAAM+I,MAAO/I,EAAMgJ,UACxB,GAEI/J,IA1Gf,+BA8GaA,EAAoB31B,GACzBA,EAAGq7B,iBACHr7B,EAAG62B,kBACH,IAAI12B,EAAO/d,KACXy2C,GAAgB,CAAC,CACb3C,QAAS,YACT9H,SAAU,cAGX,CACC8H,QAAS,+BACThpB,MAAO,UACPkhB,SAAU,WACNjuB,EAAKm6F,WAAW3kE,MAEpB31B,EAAGy/B,MAAQ,EAAGz/B,EAAG0/B,MAAQ,KA7HrC,iCAiIe/J,GACPA,EAAS6kE,SAASvxE,SAClB7mC,KAAK20B,KAAK2d,aAAaiB,EAASv8C,QAChCgJ,KAAKgwC,MAAQhwC,KAAKgwC,MAAMnlC,QAAO,SAACknC,GAAD,OAAQA,GAAMwB,KACzCvzC,KAAKg4G,aAAezkE,IAChBvzC,KAAKgwC,MAAMhuC,OAAS,EACpBhC,KAAKi4G,WAAWj4G,KAAKgwC,MAAM,KAE3BhwC,KAAK20B,KAAK2vB,kBAAkB9R,SAAS,0BACrCxyC,KAAK20B,KAAK2vB,kBAAkBuZ,cAAc,CAAE3P,UAAU,MAI9DluD,KAAKgwC,MAAMj+B,SAAQ,SAAC+vB,GACE,MAAfA,EAAK9qC,SACJ8qC,EAAK9qC,OAAO8qC,KAAK8N,OAAQ,QAhJzC,mCAqJiB54C,GAAc,2BACvB,YAAqBgJ,KAAKgwC,MAA1B,+CAAiC,KAAxBuD,EAAwB,QACzBA,EAASv8C,QAAUA,GACnBgJ,KAAKk4G,WAAW3kE,IAHD,qFArJ/B,oCA6JkBA,EAAoBvH,GAC9B,IACIwQ,EAAOjJ,EAAS6kE,SAAS1nF,KAAK,gBAC9B0tB,EAAW7K,EAASv8C,OAAO8qC,KAAKtqC,KAAK4N,QAAQ,KAEjDuwC,GAAa6G,EAAMA,GAAM,SAAC8B,GACtB/K,EAASv8C,OAAO8qC,KAAKtqC,KAAO8mD,EAC5B9B,EAAKtH,KAAKoJ,GACM,MAAZtS,GAAkBA,MAJE,MAAZoS,EAAmB,KAAO,CAAE1Y,MAAO,EAAG4Q,IAAK8H,MAjKnE,2CA4KYp+C,KAAKgwC,MAAMhuC,OAAS,GACpBhC,KAAKi4G,WAAWj4G,KAAKgwC,MAAM,MA7KvC,iCAiLeuD,GAAkB,WACzB,GAAgB,MAAZA,EACJ,OAAQA,EAASnzC,MACb,IAAK,OACDJ,KAAK20B,KAAK4jF,SAASntE,OACnBprC,KAAK20B,KAAK6jF,WAAWvtE,OACrBjrC,KAAK20B,KAAK+1B,gBAAgBnX,EAASv8C,QACnCgJ,KAAK20B,KAAK2vB,kBAAkB/X,QAC5B,MACJ,IAAK,OACDvsC,KAAK20B,KAAK6jF,WAAWptE,OACrBprC,KAAK20B,KAAK4jF,SAASttE,OAEnB,IAAIwtE,EAAwC,GACxCh3D,EAAiB,GAGjBi3D,EAAMziE,OAAO0iE,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GAEtB,OADAr3D,EAAKl9C,KAAKs0G,GACH,MAIfH,EAAIvoB,SAASx3B,MAAMogD,YAAc,SAAU/kG,EAAQglG,EAAK7hG,EAAS8hG,EAAKC,GAClE,IAAI9hG,EAAQpD,EAAOglG,GAGnB,OAFAv3D,EAAKl9C,KAAK6S,EAAM+hG,SAET,IAGXT,EAAI3jE,OAAOxB,EAAS8kE,MAEpBr4G,KAAKw/C,SAASiC,EAAMg3D,GAAW,WAE3B,IAAIW,EAAMnjE,OAAO0iE,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GACtB,OAAOL,EAAUI,MAIzBO,EAAIjpB,SAASx3B,MAAMogD,YAAc,SAAU/kG,EAAQglG,EAAK7hG,EAAS8hG,EAAKC,GAClE,IAAI9hG,EAAQpD,EAAOglG,GAEnB,OAAOP,EAAUrhG,EAAM+hG,SAASrvG,QAAQ,QAAS,KAIrD,IAAIorC,EAAOkkE,EAAIrkE,OAAOxB,EAAS8kE,MAC/B,EAAK1jF,KAAK4jF,SAASrjE,KAAKA,MAE5Bl1C,KAAK43G,aAAalnF,KAAK,YAAYya,YAAY,aAC/CoI,EAAS6kE,SAASltE,SAAS,gBArO3C,+BA0OauW,EAAgB43D,EAAqCrtE,GAC1D,IAAIjuB,EAAO/d,KACX,GAAIyhD,EAAKz/C,OAAS,EAAG,CACjB,IAAIs3G,EAAgB73D,EAAKntC,MACzB3L,OAAOuP,OAAOsnC,SAAS85D,EAAe,SAAU,CAAE75D,QAAS,IAAKC,MAAK,SAAC9pC,GAClEyjG,EAAQC,GAAiB1jG,EACzBmI,EAAKyhC,SAASiC,EAAM43D,EAASrtE,WAIjCA,MApPZ,+BA0Pah1C,GACLgJ,KAAK43G,aAAalnF,KAAK,YAAYya,YAAY,aAE/CnrC,KAAKg4G,YAAch4G,KAAKgwC,MAAMtf,MAAK,SAAC6iB,GAAD,OAAcA,EAASv8C,QAAUA,KAE5C,MAApBgJ,KAAKg4G,aAAqBh4G,KAAKg4G,YAAYI,SAASltE,SAAS,kB,6BA/PzE,K,uKCZO,IAAMquE,GAAb,yB,4FAAA,S,UAAA,O,EAAA,G,EAAA,4BAIgBxsE,GAER,GAAIkJ,OAAOujE,UAAW,CAElB,IAAI1sE,EAA4BmJ,OAAOujE,UAAUpiD,KAAK,SAAU,GAE5Dr5C,EAAO/d,KAEX8sC,EAAQ29D,QAAU,SAAyC7sF,GACvDgrB,QAAQC,IAAI,4BAA8BjrB,EAAGxd,OAGjD0sC,EAAQ2sE,UAAY,SAAyC77F,GACzDG,EAAK27F,GAAK5sE,EAAQlU,OAClB7a,EAAK27F,GAAGjP,QAAU,SAASn2D,GAGvB1L,QAAQC,IAAI,oBAAsByL,EAAMyD,OAAOhsC,MAAMU,UAEvDsgC,KAGND,EAAQ6sE,gBAAkB,SAAS/7F,GAE/BG,EAAK27F,GAAK97F,EAAGm6B,OAAOnf,OACF7a,EAAK27F,GAAGE,kBAAkB,UAAW,CAAEC,QAAS,WAAYC,eAAe,IAGjFC,YAAYC,WAAa,SAAS1lE,WAOlD1L,QAAQC,IAAI,8BAvCxB,kCA6CuBoxE,EAAkB9B,GAETn4G,KAAK05G,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAE9DC,IAAI,CAClBF,SAAUA,EACV9B,OAAQA,MAnDpB,mCAwDwB8B,GAEQj6G,KAAK05G,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAE9DnxE,OAAOkxE,KA5DjC,gCAiEqBA,EAAkBjuE,GAE/B,IAEIc,EAFoB9sC,KAAK05G,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAEhDpiH,IAAImiH,GAEpCntE,EAAQ29D,QAAU,SAACn2D,GACftI,EAAS,OAGbc,EAAQ2sE,UAAY,SAACnlE,GACI,MAAlBxH,EAAQlU,OACPoT,EAAS,MAETA,EAASc,EAAQlU,OAAOu/E,c,6BA/ExC,K,uKCgCO,IAAM,GAAb,WAmFI,WAAY37D,EAAmC49D,GAAsB,Y,4FAAA,SAAtB,KAAAA,aAvC/C,KAAA1zC,yBAAqC,GAqBrC,KAAAwY,qBAAsB,EACtB,KAAA3sC,QAAkB,EAalB,KAAA8nE,0BAAoC,EAMhCr6G,KAAKs6G,WAAW99D,GAEhBx8C,KAAK0vD,QAAQlT,GAEbx8C,KAAKu6G,cAELv6G,KAAKw5G,UAAY,IAAID,GACrBv5G,KAAKw5G,UAAUpiD,MAAK,WAEM,MAAlB,EAAKpxB,OAAOpkC,IACZ,EAAK44G,iBAKbx6G,KAAKs/E,eAAiB,IAAIhB,GAAet+E,M,UApGjD,O,EAAA,G,EAAA,oCAC4B,OAAO,IADnC,wCAGsBhJ,EAAgBkZ,MAHtC,oCAMQ,OAAOlQ,KAAK+hD,WANpB,uCASQ,OAAO/hD,KAAKg9B,cATpB,4CAYQ,OAAOh9B,KAAKqyC,mBAZpB,oCAeQ,OAAOryC,KAAKm/E,WAfpB,wCAkBQ,OAAOn/E,KAAKkY,OAAOA,SAlB3B,oCAsBQ,OAAOlY,KAAKkvC,WAtBpB,qCA0BQ,OAAOlvC,KAAKg+D,YA1BpB,yCA8BQ,OAAOh+D,KAAKw9E,gBA9BpB,iD,MAkCQ,OAAIx9E,KAAKgmC,OAAOC,aACwB,QAApC,EAAOjmC,KAAKy6G,aAAazC,mBAAW,eAAEhhH,OAE/BgJ,KAAKqyC,iBAAiB7zB,YAAYk8F,mBArCrD,oCAwGe,I,EAAA,OAEU,QAAjB,EAAA16G,KAAKy6G,oBAAY,SAAEE,iBAEnB36G,KAAK46G,cAAc56G,KAAKo6G,YAEpBp6G,KAAKgmC,OAAOC,cACZjmC,KAAKy6G,aAAe,IAAI,GAAqBz6G,KAAKqyC,iBAAiB7zB,YAAaxe,KAAK66G,cAAe76G,MACpGA,KAAKy6G,aAAaK,qBAClB96G,KAAKo6G,WAAWvvG,QAAO,SAACstG,GAAD,MAA2B,QAAfA,EAAO/3G,QAAgB2R,SAAQ,SAAComG,GAAD,OAAY,EAAKsC,aAAaM,QAAQ5C,OAExGn4G,KAAK0qD,gBAAgB1qD,KAAKqyC,iBAAiB7zB,YAAYk8F,oBAnHnE,iCAyHel+D,GACP,IAAIw+D,EAA8Bx+D,EAAKpP,KAAK,eAExCptC,KAAKgmC,OADS,MAAdg1E,GAA2C,iBAAdA,EACfx+E,KAAKY,MAAM49E,EAAWpoG,MAAM,KAAK3P,KAAK,MAEtC,GAIgB,MAA/BjD,KAAKgmC,OAAOogD,kBACXpmF,KAAKgmC,OAAOogD,gBAAkBpmF,KAAKgmC,OAAOqgD,aAAermF,KAAKgmC,OAAOi1E,WAAaj7G,KAAKgmC,OAAOC,cAAgBjmC,KAAKgmC,OAAOk1E,eAG3Hl7G,KAAKgmC,OAAOogD,kBACqB,MAA5BpmF,KAAKgmC,OAAOC,eAAsBjmC,KAAKgmC,OAAOC,cAAe,GACpC,MAAzBjmC,KAAKgmC,OAAOi1E,YAAmBj7G,KAAKgmC,OAAOi1E,WAAY,GAC5B,MAA3Bj7G,KAAKgmC,OAAOqgD,cAAqBrmF,KAAKgmC,OAAOqgD,aAAc,GAC9B,MAA7BrmF,KAAKgmC,OAAOk1E,gBAAuBl7G,KAAKgmC,OAAOk1E,eAAgB,IAG/C,MAArBl7G,KAAKgmC,OAAO+9B,QAAe/jE,KAAKgmC,OAAO+9B,MAAQ,GACtB,MAAzB/jE,KAAKgmC,OAAOoc,YAAmBpiD,KAAKgmC,OAAOoc,UAAY,MA9IlE,sCAmJoBprD,GAERgJ,KAAKgmC,OAAOC,cAAiD,MAAjCjmC,KAAKy6G,aAAazC,cAC9Ch4G,KAAKy6G,aAAazC,YAAYhhH,OAAOwyE,YAAcxpE,KAAKskD,kBAAkBmlB,iBAG1EzpE,KAAKgmC,OAAOC,cACZjmC,KAAKy6G,aAAaU,SAASnkH,GAS/BgJ,KAAKskD,kBAAkBuZ,cAAc,CACjC3P,UAAU,EACV1G,oBAAqB,IAEzBxnD,KAAKkY,OAAOA,OAAOk2C,SAASp3D,EAAOigB,OAGT,MAAtBjgB,EAAOwyE,aACPxpE,KAAKskD,kBAAkBqlB,iBAAiB3yE,EAAOwyE,aAGnDxyE,EAAO4yE,+BA9Kf,oCAoLe,WAEHzyE,EAAU6I,KAAKqyC,iBAAiB7zB,YAAY8F,YAAW,GAEvDvG,EAAO/d,KAEXA,KAAKw5G,UAAU4B,UAAUp7G,KAAKgmC,OAAOpkC,IAAI,SAACy5G,G,MAChB,MAAlBA,EACA1wE,aAAY,WACR5sB,EAAKu9F,gBACN,KACA,WAEH,IAAIlB,EAAuB59E,KAAKY,MAAMi+E,GAClCE,EAAYnB,EAAWp4G,OAHxB,uBAKH,YAAmB7K,EAAnB,+CAA4B,KAAnBH,EAAmB,QACP,QAAjB,EAAA+mB,EAAK08F,oBAAY,SAAEnoE,aAAat7C,GAChC+mB,EAAKu0B,aAAat7C,IAPnB,6GAUH,IAVG,IAUH,EAVG,iBAUMQ,EAVN,QAYKyiH,EAAW,EAAKj0E,OAAOpkC,GAAKpK,EAChC,EAAKgiH,UAAU4B,UAAUnB,GAAU,SAAC9B,G,QAChC,GAAc,MAAVA,EAAgB,CAEhB,IAAI,EAASp6F,EAAK85F,UAAU,CACxBtuG,MAAO/R,EACPoe,KAAMuiG,EACN/3G,KAAM,SAGO,QAAjB,EAAA2d,EAAK08F,oBAAY,SAAE5C,UAAU,GAC7B95F,EAAKy9F,aAAavwC,OAAO,KAK7B,GAAiB,KADjBswC,IAEI5wE,aAAY,WACR5sB,EAAKu9F,gBACN,KACc,QAAjB,EAAAv9F,EAAK08F,oBAAY,SAAEK,qBACM,MAArB/8F,EAAK08F,cAAsB,CAC3B,IAAI,EAAU18F,EAAKs0B,iBAAiB7zB,YAAY8F,YAAW,GACvD,EAAQtiB,OAAS,GAAG+b,EAAK2sC,gBAAgB,EAAQ,SAzBrE,EAAiB0vD,EAAjB,+CAA6B,IAV1B,2FA/LnB,oCAmPQ,IAAIjjH,EAAU6I,KAAKqyC,iBAAiB7zB,YAAY8F,YAAW,GAEvD81F,EAAuB,GACvBqB,GAAuB,EAI3B,GAFAtkH,EAAQ4a,SAAQ,SAAA1a,GAAC,OAAIokH,EAAcA,IAAgBpkH,EAAEyqC,KAAK8N,SAEtD6rE,EAAa,4BAEb,YAAmBtkH,EAAnB,+CAA4B,KAAnBH,EAAmB,QACxBojH,EAAW71G,KAAKvN,EAAO8qC,KAAKtqC,MAC5B,IAAIyiH,EAAWj6G,KAAKgmC,OAAOpkC,GAAK5K,EAAO8qC,KAAKtqC,KAC5CwI,KAAKw5G,UAAUkC,YAAYzB,EAAUjjH,EAAOmuC,iCAC5CnuC,EAAO8qC,KAAK8N,OAAQ,GANX,kFAUb5vC,KAAKw5G,UAAUkC,YAAY17G,KAAKgmC,OAAOpkC,GAAI46B,KAAKC,UAAU29E,OApQtE,0CAyQqB,WACbp6G,KAAKw5G,UAAU4B,UAAUp7G,KAAKgmC,OAAOpkC,IAAI,SAACy5G,GACtC,GAAsB,MAAlBA,EAAJ,CAII,IAAIjB,EAAuB59E,KAAKY,MAAMi+E,GAFnC,uBAIH,YAAiBjB,EAAjB,+CAA6B,KAApB5iH,EAAoB,QAErByiH,EAAW,EAAKj0E,OAAOpkC,GAAKpK,EAChC,EAAKgiH,UAAUmC,aAAa1B,IAP7B,kFAUH,EAAKT,UAAUmC,aAAa,EAAK31E,OAAOpkC,UAvRxD,oCAgSkBw4G,GACVp6G,KAAKqyC,iBAAmB,IAAI,GAAU,qBAAsBryC,KAAM,GAClEA,KAAKqyC,iBAAiBjD,SAASgT,UAAYpiD,KAAKgmC,OAAOoc,UACvDpiD,KAAKqyC,iBAAiBm0B,2BAEtB,IALgC,uBAMhC,YAAmB4zC,EAAnB,+CAA+B,KAAtBjC,EAAsB,QACR,QAAfA,EAAO/3G,MACPJ,KAAK63G,UAAUM,IARS,qFAhSxC,gCA+ScA,GACN,IAAInhH,EAAiB,GAAOwrD,gBAAgB,CACxC5gD,GAAI5B,KAAKqyC,iBAAiB7zB,YAAY8F,YAAW,GAAMtiB,OACvDxK,KAAM2gH,EAAO5uG,MACbqM,KAAMuiG,EAAOviG,KACb+3C,qBAAsB,KACtBgB,eAAgB,KAChBoY,+BAA+B,EAC/Bx0B,QAAS,EACT9B,aAAc,EACdhC,aAAa,EACbiF,iCAAiC,EACjC8gE,UAAW,GACZx0G,MAEHA,KAAKqyC,iBAAiB7zB,YAAYq1B,UAAU78C,GAE5C,IAAI+mB,EAAO/d,KAMX,OAJAhJ,EAAOigB,MAAMiyC,oBAAmB,WAC5BnrC,EAAK69F,oCAGF5kH,IAtUf,mCAyUiBA,GACTgJ,KAAKqyC,iBAAiB7zB,YAAY8zB,aAAat7C,KA1UvD,8BA8UYwlD,GAAyB,WAI7BA,EAAK5N,IAAI,CACL,mBAAoB,OACpB,kBAAmB,SAGvB,IAAIitE,EAAarxE,OAAO,qCACpBsxE,EAAoB97G,KAAK+7G,yBAAyBv/D,GAElDk8B,EAAY14E,KAAKg8G,eAEjBj1D,EAAavc,OAAO,qCACxBxqC,KAAKw4G,WAAahuE,OAAO,qCACzBxqC,KAAKu4G,SAAW/tE,OAAO,iDACvBxqC,KAAKw7G,aAAehxE,OAAO,mHAE3Buc,EAAWjd,OAAO9pC,KAAKw4G,WAAYx4G,KAAKu4G,SAAUv4G,KAAKw7G,cAEvD,IAAIS,EAAmBj8G,KAAKk8G,sBAC5Bn1D,EAAWjd,OAAOmyE,GAElBj8G,KAAKw7G,aAAapwE,OAElBprC,KAAKw7G,aAAanvE,GAAG,SAAS,WAAQyvE,EAAkB7wE,UAExDjrC,KAAKu4G,SAASntE,OAEd,IAAI+wE,EAAe3xE,OAAO,uCACtB4xE,EAAkB5xE,OAAO,0CAG7B,GAAIxqC,KAAKgmC,OAAOogD,gBAAiB,CAC7B,IAAIhhC,EAAa5a,OAAO,qCAGxB,GAFAxqC,KAAKq8G,cAAcD,EAAiBD,GACpC/2D,EAAWtb,OAAOsyE,GACdp8G,KAAKgmC,OAAOC,aAAc,CAC1B,IAAI6xE,EAAY93G,KAAKs8G,eACrBl3D,EAAW3K,QAAQq9D,GACnB,IAAIb,GAAea,GAAW,GAAO,GAAO,eAEhDngE,GAASykE,GAGTP,EAAW/xE,OAAOid,EAAY3B,GAC9B,IAAI6xD,GAAe7xD,GAAY,GAAM,GAAM,WAAQ,EAAKltC,OAAOA,OAAO2uC,iBAEtEg1D,EAAWphE,QAAQsM,GAMlB/mD,KAAKgmC,OAAOogD,kBACby1B,EAAWphE,QAAQ0hE,GACnBA,EAAajxE,SAAS,wBACtB6b,EAAWnY,IAAI,CACX,SAAY,WACZ,OAAU,SAIlB4N,EAAKtR,SAAS,qBACdsR,EAAK1S,OAAO+xE,EAAYnjC,GACxB,IAAIu+B,GAAev+B,GAAW,GAAM,GAAO,WACvCluC,OAAO,gBAAgBwN,QAAQ,eAC/B,EAAK9/B,OAAOA,OAAO2uC,YAGvB7mD,KAAKkY,OAAS,IAAI,GAAOlY,MAAM,GAAO,GACtCA,KAAKkY,OAAOw3C,QAAQ1vD,KAAKw4G,YACzBx4G,KAAKw4G,WAAW9nF,KAAK,kBAAkBke,IAAI,UAAW,MAEzB,MAAzB4N,EAAKpO,KAAK,aAAqBoO,EAAKpO,KAAK,WAAY,KACzDpuC,KAAKw9E,cAAgB,IAAI,GAAchhC,EAAMx8C,MAC7CA,KAAKw9E,cAAc74B,OAEnB3kD,KAAKg+D,UAAY,IAAI,GAAUh+D,KAAMo8G,EAAiB5/D,GACtDx8C,KAAKg+D,UAAUtO,UAEf1vD,KAAKkvC,SAAW,IAAI,GAASlvC,KAAMA,KAAKu8G,gBACxCv8G,KAAKkvC,SAASwgB,UAEd,IAAI8sD,EAAsBhyE,OAAO,iDAC7BiyE,EAAejyE,OAAO,2CAC1BxqC,KAAKu8G,eAAezyE,OAAO0yE,GAC3BA,EAAoB1yE,OAAO2yE,GAE3Bz8G,KAAKm/E,SAAW,IAAI,GAASn/E,KAAMA,KAAK4/C,aAAc,MAEtD5/C,KAAKg9B,YAAc,IAAI,GAAYh9B,KAAMA,KAAKm/E,SAC1C,IAAI,GAAsBg9B,EAAcp1D,GACxC/mD,KAAKgqC,SAET,IAAI0yE,EAAclyE,OAAO,uFACzB2xE,EAAaryE,OAAO4yE,GAEpBA,EAAYrwE,GAAG,aAAa,SAACzuB,GACzBA,EAAGq7B,iBACHr7B,EAAG62B,kBACHgC,GAAgB,CAAC,CACb3C,QAAS,0BACTmD,KAAM,4BACNjL,SAAU,eAELpuB,EAAGy/B,MAAQ,EAAGz/B,EAAG0/B,MAAQ,MAGtCvS,YAAW,WACP,EAAK/N,YAAY0yB,UACjB,EAAKx3C,OAAOA,OAAO2uC,SACnB,EAAK9E,SAAW,IAAI,GAAS,GAC7B,EAAK/kB,YAAY+kD,eAAezd,aAAaq4C,yBAAyB,EAAK32E,OAAO+9B,OAClF,EAAK3a,eACN,OAlcX,4CAwcQ,OAAO5e,OAAO,6UAxctB,+CAkd6BoyE,GAA4B,WAC7CC,EAAUryE,OAAO,u4BAyCrB,OAnBAqyE,EAAQzxE,OAERwxE,EAAQ9yE,OAAO+yE,GAEfryE,OAAO,6BAA6B6B,GAAG,SAAS,WAC5CwwE,EAAQzxE,UAGZZ,OAAO,yBAAyB6B,GAAG,SAAS,WAExC,EAAKkuE,cACL,EAAKuC,oBAELD,EAAQzxE,OACR,EAAKowE,aAAapwE,OAClB,EAAKivE,0BAA4B,KAI9BwC,IA5ff,iDA+f+B/6E,EAAYt9B,GAEnC,GAAY,MAARs9B,EAAJ,CAIA,GAAI9hC,KAAKgmC,OAAOC,aAAc,CAC1B,IAAIsN,EAAWvzC,KAAKy6G,aAAazqE,MAAMtf,MAAK,SAAC6iB,GAAD,OAAcA,EAASv8C,OAAO8qC,MAAQA,KAClF,GAAgB,MAAZyR,EACA,OAGAA,EAASv8C,QAAUgJ,KAAKolC,4BACxBplC,KAAK0qD,gBAAgBnX,EAASv8C,QAGlCgJ,KAAKymE,qBAAuBlzB,EAASv8C,YAErCgJ,KAAKymE,qBAAuBzmE,KAAKqyC,iBAAiB7zB,YAAYk8F,iBAGlE,IAAI1xG,EAAQ,CACR8O,YAAatT,EAAS2F,OAAQyN,gBAAiBpT,EAAS0F,KACxD2N,UAAWrT,EAAS2F,OAAS3F,EAASxC,OAAQ2V,cAAenT,EAAS0F,MAG1ElK,KAAKskD,kBAAkB0lB,qCAAqChhE,GAC5DhJ,KAAK0mE,yBAA2B1mE,KAAKskD,kBAAkBsG,iBAAiB5qD,KAAK0mE,yBAA0B,CACnG,CACI19D,MAAOA,EACPmO,QAAS,CAAEmkB,UAAW,0BAA2BuvB,aAAa,IAElE,CACI7hD,MAAOA,EACPmO,QAAS,CAAE+yD,uBAAwB,uCAjiBnD,mDA0iBYlqE,KAAKolC,4BAA8BplC,KAAKymE,sBACxCzmE,KAAKskD,kBAAkBsG,iBAAiB5qD,KAAK0mE,yBAA0B,IAE3E1mE,KAAKymE,qBAAuB,KAC5BzmE,KAAK0mE,yBAA2B,KA9iBxC,qCAojBQ,IAAIoxC,EAAYttE,OAAO,wDAEnBuyE,EAAevyE,OAAO,yGAU1B,OARAxqC,KAAK66G,cAAgBrwE,OAAO,mDAM5BstE,EAAUhuE,OAAOizE,EAAc/8G,KAAK66G,eAE7B/C,IAhkBf,mCAokBgC,MAApB93G,KAAKupD,aACLjb,cAActuC,KAAKupD,aAGvB,IAAIxrC,EAAO/d,KACXA,KAAKupD,YAAc5e,aAAY,WAE3B5sB,EAAK0qC,mBAEN,OA7kBX,uC,QAolBQ,GAA6B,MAAzBzoD,KAAKqyC,kBAELryC,KAAKqyC,iBAAiB7zB,YAAY+nC,WAClCvmD,KAAK+hD,SAAStd,gBAAkB/G,GAAeiH,WAC5C3kC,KAAKg9B,YAAYokB,OAASC,GAAiBgD,SAC3CrkD,KAAKg9B,YAAYokB,OAASC,GAAiBC,OAC9C,IAEIthD,KAAK+hD,SAASG,QAAQliD,KAAKqyC,iBAAiB7zB,aAGrB,QADb,EACD,QADC,EAAGxe,KACbg+D,iBAAS,eAAE14B,oBAAY,SAAEkkB,WAAWxpD,KAAKqyC,kBAEzCryC,KAAKkY,OAAO8iD,0BAA0B,MAEtCh7D,KAAKslD,eAELtlD,KAAKuyC,UAEL,IAAIwuC,EAAsF,MAA1E/gF,KAAKg9B,YAAYgkD,mBAAmBhhF,KAAKqyC,iBAAiB7zB,aAEtEuiE,GACA/gF,KAAKg9B,YAAYokB,OAASC,GAAiB0Y,kBAC3C/5D,KAAKihF,yCACLjhF,KAAKg9B,YAAYitB,SAAS5I,GAAiBplB,OAI1C8kD,GACA/gF,KAAKg9B,YAAYokB,OAASC,GAAiBplB,MAAQj8B,KAAKg9B,YAAYokB,OAASC,GAAiBt1C,OAC/F/L,KAAKg9B,YAAYitB,SAAS5I,GAAiB0Y,iBAKjD,MAAOtiD,GACLmxB,QAAQ78B,MAAM0L,GACdzX,KAAK+hD,SAAStd,eAAiB/G,GAAe3xB,SAznB9D,uDAgoBQ/L,KAAKq6G,4BACiC,GAAlCr6G,KAAKq6G,2BACLr6G,KAAKw7G,aAAavwC,OAAO,OAloBrC,qCAuoBQjrE,KAAKg+D,UAAUpO,uBAAuB5vD,KAAKqyC,iBAAkBryC,KAAKolC,8BAvoB1E,wCA2oBsB4vC,MA3oBtB,+DAmpBQ,IAAIzpB,EAAKvrD,KAAKqyC,iBAAiB7zB,YAAY4iE,OAC3CphF,KAAKg9B,YAAYxe,YAAc+sC,EAC/BvrD,KAAKg9B,YAAYqkD,mBAAqBrhF,KAAKuyC,QAEvCvyC,KAAKg9B,YAAYokB,OAASC,GAAiB0Y,iBAAmB/5D,KAAKk/E,qBACnEl/E,KAAKg9B,YAAYitB,SAAS5I,GAAiBplB,QAxpBvD,oCA+pBkBmpB,EAAiCrC,GAE3C,IAAIi6D,EAAexyE,OAAO,sCAC1BwyE,EAAapuE,IAAI,WAAY,YAC7B,IAAIquE,EAAezyE,OAAO,yDAE1B,GAAIxqC,KAAKgmC,OAAOqgD,YAAa,CACzB,IAAI62B,EAAkB1yE,OAAO,2IAE7ByyE,EAAanzE,OAAOozE,GAKxB,GAFAD,EAAanzE,OAAOiZ,GAEhB/iD,KAAKgmC,OAAOk1E,cAAe,CAC3B,IAAIiC,EAAY3yE,OAAO,0GACvBwyE,EAAalzE,OAAOqzE,GAIxB,GAAIn9G,KAAKgmC,OAAOqgD,YAAa,CACzB,IAAI+2B,EAAa5yE,OAAO,iHACxBwyE,EAAalzE,OAAOszE,GAGxB,GAAIp9G,KAAKgmC,OAAOi1E,UAAW,CACvB,IAAIoC,EAAW7yE,OAAO,8FACtBwyE,EAAalzE,OAAOuzE,GAGxBL,EAAalzE,OAAOmzE,GAEpB73D,EAAWtb,OAAOkzE,GAElB,IAAIpkC,EAAQpuC,OAAO,6CAEnB,GAAIxqC,KAAKgmC,OAAOk1E,cAAe,CAC3B,IAAIoC,EAAY9yE,OAAO,4DACvBouC,EAAM9uC,OAAOwzE,GAGjB,GAAIt9G,KAAKgmC,OAAOqgD,YAAa,CACzB,IAAIk3B,EAAc/yE,OAAO,uPAUzBouC,EAAM9uC,OAAOyzE,GAGjB,GAAIv9G,KAAKgmC,OAAOi1E,UAAW,CACvB,IAAIuC,EAAYhzE,OAAO,sDACvBouC,EAAM9uC,OAAO0zE,GAGjBp4D,EAAWtb,OAAO8uC,KA3tB1B,qCAiuBQ,IAAIF,EAAYluC,OAAO,oCACvBxqC,KAAKu8G,eAAiB/xE,OAAO,yCAC7BkuC,EAAU5uC,OAAO9pC,KAAKu8G,gBAGtB,IAAIS,EAAexyE,OAAO,sCAC1BwyE,EAAapuE,IAAI,WAAY,YAC7B,IAAI6uE,EAASjzE,OAAO,qGAChBkzE,EAAelzE,OAAO,qHAC1BwyE,EAAalzE,OAAO2zE,EAAQC,GAC5B19G,KAAKu8G,eAAezyE,OAAOkzE,GAE3B,IAAIpkC,EAAQpuC,OAAO,6CACfmzE,EAAMnzE,OAAO,uEACjBxqC,KAAK4/C,aAAepV,OAAO,uCAE3B,IAAIozE,EAAmBpzE,OAAO,6sBA8C9B,OAjCAmzE,EAAI7zE,OAAO9pC,KAAK4/C,aAAcg+D,GAE9B59G,KAAKgqC,QAAUQ,OAAO,0tBA0BtBouC,EAAM9uC,OAAO9pC,KAAKgqC,QAAS2zE,GAC3B39G,KAAKu8G,eAAezyE,OAAO8uC,GAE3BjhC,GAAS+gC,GAEFA,IA/xBf,0CAmyBQ,OAAO14E,KAAKs/E,oB,6BAnyBpB,K,wNCjBO,IAAM,GAAb,yB,4FAAA,SAGI,KAAA3C,gBAAkB,EAIlB,KAAAkhC,iBAAmC,G,UAPvC,O,EAAA,G,EAAA,iCAWQ79G,KAAK4/E,YAEL5/E,KAAK6/E,uBAEL7/E,KAAK8/E,uBAELC,KAAKC,MAAMC,YAEXjgF,KAAKk+E,aAAe,IAAIpjE,KAnBhC,6CAwBQilE,KAAKG,UAAUrnF,UAAUsnF,gBAAkB,SAAUC,GACjD,IAAI9sD,EAAKtzB,KAAKqgF,eAOd,GANIrgF,KAAKsgF,WAAatgF,KAAKugF,kBACvBvgF,KAAKugF,gBAAkBvgF,KAAKsgF,SAE5BtgF,KAAKwgF,WAAa,GAGlBxgF,KAAKwgF,YAAcJ,EAAgBK,SAAU,CAE7C,IAAI5gE,EAAKugE,EAAgBM,eACrBC,EAAK3gF,KAAK0gF,eACdC,EAAG/4E,EAAK0rB,EAAG1rB,EAAIiY,EAAGjY,EAAM0rB,EAAG6oB,EAAIt8B,EAAGvoB,EAClCqpF,EAAGxkC,EAAK7oB,EAAG1rB,EAAIiY,EAAGs8B,EAAM7oB,EAAG6oB,EAAIt8B,EAAGtoB,EAClCopF,EAAGrpF,EAAKg8B,EAAGh8B,EAAIuoB,EAAGjY,EAAM0rB,EAAG/7B,EAAIsoB,EAAGvoB,EAClCqpF,EAAGppF,EAAK+7B,EAAGh8B,EAAIuoB,EAAGs8B,EAAM7oB,EAAG/7B,EAAIsoB,EAAGtoB,EAClCopF,EAAGC,GAAMttD,EAAGstD,GAAK/gE,EAAGjY,EAAM0rB,EAAGutD,GAAKhhE,EAAGvoB,EAAKuoB,EAAG+gE,GAC7CD,EAAGE,GAAMvtD,EAAGstD,GAAK/gE,EAAGs8B,EAAM7oB,EAAGutD,GAAKhhE,EAAGtoB,EAAKsoB,EAAGghE,GAE7C7gF,KAAKwgF,UAAYJ,EAAgBK,SAEjCzgF,KAAKygF,eA7CrB,oCAqDQ,IAAI,IAAY97B,OAChB3kD,KAAK6/E,yBAtDb,6CA0DQ7/E,KAAK28E,kBACuB,GAAxB38E,KAAK28E,iBACL38E,KAAK0lC,UA5DjB,kCAiEQ5yB,GAAkB6xC,OAClBv1C,GAAiBu1C,OACjB30C,GAAmB20C,OACnB10C,GAAoB00C,OACpBr0C,GAAqBq0C,OACrBt4C,GAAoBs4C,OACpBzzC,GAAkByzC,OAElB1xC,GAAY0xC,OACZzxC,GAAUyxC,OACVxxC,GAAWwxC,OACXvxC,GAAcuxC,OACdtxC,GAAYsxC,SA7EpB,8BAkFQ3kD,KAAK89G,uBAlFb,2CA2FsB,WAEdtzE,OAAO,gBAAgBi7B,MAAK,SAACrjE,EAAewuB,GACxC,IAAI4rB,EAAOhS,OAAO5Z,GACdwpF,EAAyB,GAC7B59D,EAAK9rB,KAAK,UAAU+0C,MAAK,SAACrjE,EAAewuB,GACrC,IAAImtF,EAAUvzE,OAAO5Z,GACjBxwB,EAAmB,OACI,MAAxB29G,EAAQ3wE,KAAK,UAAiBhtC,EAAoB29G,EAAQ3wE,KAAK,SAClE,IAAI+qE,EAAmB,CACnB/3G,KAAMA,EACNmJ,MAAOw0G,EAAQ3vE,KAAK,SACpBx4B,KAAMmoG,EAAQnoG,OAAOtD,QAEzB8nG,EAAW71G,KAAK4zG,MAGpB,EAAK6F,QAAQxhE,EAAM49D,QA5G/B,8BAkHY59D,EAA2B49D,GAER,IAAI,GAAa59D,EAAM49D,Q,6BApHtD,KA0HA5vE,QAAO,WAEH,IAAIyzE,EAAkB,IAAI,GAEtBhb,EAAS,GACTib,EAAa,2BAEU,MAAxBjoE,OAAOitD,gBAEND,EAAShtD,OAAOitD,eAIU,MAA3BjtD,OAAOkoE,mBAEND,EAAajoE,OAAOkoE,kBAIxBloE,OAAOmoE,QAAQp4E,OAAO,CAAEq4E,MAAO,CAAE,GAAMpb,EAASib,KAEhDjoE,OAAOmoE,QAAQp4E,OAAO,CAClB,SAAU,CACNs4E,mBAAoB,CAChB,IAAK,OAGbC,uBAAwB,CAAC,2BAG7BtoE,OAAOmoE,QAAQ,CAAC,0BAA0B,WAEtCH,EAAgBO,aAChBP,EAAgBvuD,aAKpBqwB,KAAKqjB,OACA/U,OAAO3mD,IAAIu7D,EAAS,oCACpBwb,MAAK","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[this.program.statements.length - 1];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if(this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null){\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for(let a of this.attributes){\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if(i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if(i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor){\r\n                if(currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0){\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if(method.isConstructor){\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if(firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if(!hasConstructorWithParameters && this.baseClass != null){\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if(this.baseClass != null){\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while(klass != null){\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null && !this.isAbstract) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for(let m1 of implementedMethods){\r\n                                if(m1.implements(m)){\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if(!isImplemented){\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for(let m1 of implementedMethods){\r\n                        if(m1.implements(m)){\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(!isImplemented){\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if(this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null){\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for(let a of this.attributes){\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass} {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound , staticClass: this};\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String){\r\n        if(this.getNonGenericIdentifier() == identifier) return this;\r\n        for(let if1 of this.extends){\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if(if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        return this.methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if(suits && isEllipsis){\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n                        \r\n                        for (let j = i; j < parameterTypes.length; j++) {\r\n                            let givenType = parameterTypes[i];\r\n        \r\n                            if (givenType == null) {\r\n                                suits = false; break;\r\n                            }\r\n        \r\n                            if (mParameterTypeEllispsis == givenType) {\r\n                                continue;\r\n                            }\r\n        \r\n                            if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                                howManyCastings++;\r\n                                continue;\r\n                            }\r\n        \r\n                            suits = false;\r\n                            break;\r\n                        }\r\n        \r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if(parameterTypes.length == 0){\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if(identifier == 'setCenter'){\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight(){\r\n        this.next(); // Consume first > of >>\r\n\r\n        if(this.nextChar == \">\"){\r\n            this.lexShiftRightUnsigned();\r\n        } else if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned(){\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft(){\r\n        this.next(); // Consume first < of <<\r\n\r\n        if(this.nextChar == '='){\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else{\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            let destType = method.getParameterType[i];\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCallEnsured: boolean = false;\r\n            if (methodNode.statements[0].type == TokenType.scopeNode) {\r\n                let stm = methodNode.statements[0].statements;\r\n                if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n                    superconstructorCallEnsured = true;\r\n                }\r\n            } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n                superconstructorCallEnsured = true;\r\n            }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        this.currentProgram.labelManager.removeNode(lst);\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            for (let p of node.constructorOperands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n                let srcType = parameterTypes[i];\r\n                for (let st of parameterStatements[i]) {\r\n                    this.currentProgram.statements.push(st);\r\n                }\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            for (let p of node.operands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n            let srcType = parameterTypes[i];\r\n            for (let st of parameterStatements[i]) {\r\n                this.currentProgram.statements.push(st);\r\n            }\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseTerm();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        if (this.tt == TokenType.colon) {\r\n            return left;\r\n        }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule && klass.getMethodBySignature(\"String toJson()\") == null) {\r\n            return null;\r\n        }\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, r);\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n    errorCallback?: (message: string) => void) {\r\n    showNetworkBusy(true);\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    forcedUpdatesInARow: number = 0;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate){\r\n                    this.forcedUpdatesInARow++;\r\n                    counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if(this.forcedUpdatesInARow > 50){\r\n                        counterTillForcedUpdate = this.forcedUpdateEvery * 50;\r\n                    }\r\n                } \r\n                that.sendUpdates(() => {}, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false){\r\n\r\n        if(this.main.user == null || this.main.user.is_testuser){\r\n            if(callback != null) callback();\r\n            return;\r\n        } \r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            \r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {});\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if(!that.errorHappened){\r\n\r\n                    if(this.main.workspacesOwnerId == this.main.user.id){\r\n                        that.updateWorkspaces(request, response);\r\n                    }\r\n\r\n                    if(callback != null){\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            } );\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void){\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false):Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if(path.length == 1 && path[0] == \"\") path = [];\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if(withSort){\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'down.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", () => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    currentlyDraggedElement: AccordionElement;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement|AccordionElement[]) => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray = this.getCurrentlySelectedPath();\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => { this.sortElements(); });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], name2: string, path2: string[]) {\r\n\r\n        let nameWithPath1 = path1.join(\"/\");\r\n        if (nameWithPath1 != \"\") nameWithPath1 += \"/\";\r\n        nameWithPath1 += name1;\r\n\r\n        let nameWithPath2 = path2.join(\"/\");\r\n        if (nameWithPath2 != \"\") nameWithPath2 += \"/\";\r\n        nameWithPath2 += name2;\r\n\r\n        return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[]): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, element.name, element.path) < 0) return i - 1;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path);\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex);\r\n            jQuery(elementAtIndex).after(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <span>` + this.caption + `</span><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        if(this.withFolders){\r\n            $ce.on('dragover', (event) => {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            })\r\n\r\n            $ce.on('dragleave', (event) => {\r\n                $ce.removeClass('jo_file_dragover');\r\n            })\r\n\r\n            $ce.on('drop', (event) => {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = that.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, bName, b.path);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = \" jo_expanded\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                    event.preventDefault();\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    event.preventDefault();\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                    let element1 = that.currentlyDraggedElement;\r\n                    if (element1 != null) {\r\n                        that.moveElement(element1, element);\r\n                    }\r\n                });\r\n            }\r\n\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('drag', (event) => {\r\n                that.currentlyDraggedElement = element;\r\n            })\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'down', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.hide();\r\n                        } else {\r\n                            e.$htmlFirstLine.show();\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuer Ordner...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$newFolderAction.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n            \r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for(let element of this.elements){\r\n                if(element.path.join(\"/\").startsWith(sourcePath)){\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for(let el of movedElements){\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n                this.renderElement(el);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for(let el of this.elements){\r\n\r\n                        if(pathString.startsWith(el.path.join(\"/\"))){\r\n                            if(el.isFolder){\r\n                                el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement){\r\n        let ps: string = ae.path.join(\"/\");\r\n        if(ae.isFolder){\r\n            if(ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('span').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            //@ts-ignore\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.getMethods()) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n                let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n                if(!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)){\r\n                    let module: Module = <Module>accordionElement.externalElement;\r\n                    let file = module.file;\r\n\r\n                    if(file.submitted_date == null){\r\n                        cmiList.push({\r\n                            caption: \"Als Hausaufgabe markieren\",\r\n                            callback: (element: AccordionElement) => {\r\n\r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = dateToString(new Date());\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        cmiList.push({\r\n                            caption: \"Hausaufgabenmarkierung entfernen\",\r\n                            callback: (element: AccordionElement) => {\r\n                                \r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = null;\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                                \r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return cmiList;\r\n            }    \r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n        this.$synchronizeAction.on('mousedown', (e) => {\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if(file.submitted_date != null){\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if(file.text_before_revision){\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        } \r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if(klass.indexOf(\"jo_active\") >= 0){\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if(that.main.workspacesOwnerId != null){\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(!workspace.isFolder){\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if(that.main.workspacesOwnerId != null){\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n    \r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement|AccordionElement[]) => {\r\n            if(!Array.isArray(ae)) ae = [ae];\r\n            for(let a of ae){\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if(path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n\r\n            if(this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0){\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" + \r\n                                                      dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    caption: \"An einzelne Schüler/innen austeilen...\",\r\n                    callback: (element: AccordionElement) => { \r\n                        let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                        let workspace: Workspace = element.externalElement;\r\n                        new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                    }\r\n                }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => { \r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                                    // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                                    //     if (error == null) {\r\n                                    //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                                    //         workspace.renderSynchronizeButton();\r\n                                    //         this.showRepositoryButtonIfNeeded(workspace);\r\n                                    //     } else {\r\n                                    //         alert(error);\r\n                                    //     }\r\n                                    // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if(path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace){\r\n        if(w.repository_id != null && w.owner_id == this.main.user.id){\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if(m.file.text_before_revision != null){\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WORKSPACES\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        this.startAnimations();\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 0\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n                    jQuery('#main').css('visibility', 'visible');\r\n\r\n                    jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                    jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                    let user: UserData = response.user;\r\n                    user.is_testuser = loginRequest.username == \"Testuser\" && loginRequest.password == \"\";\r\n\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                                consoleHelperDone: false,\r\n                                newFileHelperDone: false,\r\n                                newWorkspaceHelperDone: false,\r\n                                speedControlHelperDone: false,\r\n                                homeButtonHelperDone: false,\r\n                                stepButtonHelperDone: false,\r\n                                repositoryButtonDone: false,\r\n                                folderButtonDone: false\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        jQuery('#bitteWarten').hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                        if (user.settings.classDiagram != null) {\r\n                            that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                        }\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n                        \r\n                        if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                            \r\n                            Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n            \r\n                        }\r\n            \r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            if(that.main.isEmbedded && key == \" \"){\r\n                for(let kpc of that.keyPressedCallbacks){\r\n                    kpc(key);\r\n                }    \r\n            }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n    }\r\n\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null \r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.worldHelper != null) {\r\n                    this.worldHelper.spriteAnimations = [];\r\n                }\r\n                this.gngEreignisbehandlungHelper?.detachEvents();\r\n                this.gngEreignisbehandlungHelper = null;\r\n\r\n                this.main.hideProgramPointerPosition();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n                this.currentProgramPosition--;\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n            this.webSocketsToCloseAfterProgramHalt = [];\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { InterpreterState, Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { KeyboardTool } from \"../../tools/KeyboardTool.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Punkt } from \"../../tools/MatheTools.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(x,y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(x,y);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n                wh.setAllHitpolygonsDirty();\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n                wh.setAllHitpolygonsDirty();\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.scale(factor, factor);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.scale(factor, factor);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n                wh.setAllHitpolygonsDirty();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.stage.localTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.localTransform.translate(-left, -top);\r\n                wh.stage.localTransform.scale(wh.initialWidth/width, wh.initialHeight/height);\r\n\r\n                // wh.stage.localTransform.translate(x, y);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n                wh.setAllHitpolygonsDirty();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.width);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.height);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: PIXI.Container;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n\r\n        this.initialHeight = height;\r\n        this.initialWidth = width;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.app = new PIXI.Application({\r\n            antialias: true,\r\n            width: width, height: height,\r\n            //resizeTo: $containerInner[0]\r\n        });\r\n\r\n\r\n        let that = this;\r\n        // let i = 0;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            // if (i++ % 2 == 0) \r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n\r\n        // this.stage.localTransform.translate(-400, -300);\r\n        // this.stage.localTransform.rotate(-45/180*Math.PI);\r\n        // this.stage.localTransform.translate(400,300);\r\n        // this.stage.transform.onChange();\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if(window.PointerEvent){\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x, y);\r\n                this.stage.localTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if(listenerType == \"mousedown\"){\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if(gngEreignisbehandlung != null){\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x, y);\r\n            this.stage.localTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0 \r\n        || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty(){\r\n        for(let shape of this.shapes){\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        this.summedDelta += delta;\r\n\r\n        for (let spriteHelper of this.spriteAnimations) {\r\n            spriteHelper.tick(delta);\r\n        }\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        this.summedDelta = 0;\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            if (this.actActors.length > 0) {\r\n                this.interpreter.timerFunction(33.33, true, 0.5);\r\n                //@ts-ignore\r\n                if(this.interpreter.state == InterpreterState.running){\r\n                    this.interpreter.timerStopped = false;\r\n                    this.interpreter.timerFunction(33.33, false, 0.08);\r\n                }\r\n            } else {\r\n                this.interpreter.timerFunction(33.33, false, 0.7);\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            // actActors: ActorData[] = [];\r\n            // keyPressedActors: ActorData[] = [];\r\n            // actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        this.app.renderer.backgroundColor = c.color;\r\n    }\r\n\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n        this.app.destroy();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => {return mls.shapeHelper.runtimeObject == listener});\r\n        if(index >= 0){\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der zweite Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n            this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n            ]), new ArrayType(vector2Class),\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n    \r\n                    return sh.getHitPolygon(vector2Class);\r\n    \r\n                }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if(this.worldHelper.defaultGroup == null){\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    tint(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c.color;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (!(this[\"lineElements\"] != null) && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let screen = this.worldHelper.app.screen;\r\n        return bounds.right < screen.left || bounds.left > screen.right\r\n            || bounds.bottom < screen.top || bounds.top > screen.bottom;\r\n    }\r\n\r\n    defineCenter(x: number, y: number){\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass):Value[] {\r\n\r\n        if(this.hitPolygonDirty){\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for(let p of this.hitPolygonTransformed){\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{type: doublePrimitiveType, value: p.x}, {type: doublePrimitiveType, value: p.y}];\r\n            ret.push({type: vector2Class, value: ro});\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlY, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if(alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class SectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let startAngle: number = parameters[4].value;\r\n                let endAngle: number = parameters[5].value;\r\n\r\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\r\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: boolean = parameters[1].value;\r\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"drawRadii\")) return;\r\n    \r\n                    sh.drawRadii = r;\r\n                    sh.render();\r\n    \r\n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SectorHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\r\n            g.drawCircle(this.mx, this.my, this.r);\r\n        } else {\r\n            if(this.drawRadii){\r\n                g.moveTo(this.mx, this.my);\r\n            }\r\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\r\n            if(this.drawRadii){\r\n                g.lineTo(this.mx, this.my);\r\n            }\r\n        }\r\n        if(this.drawRadii){\r\n            g.closePath();\r\n        }\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        if (dx * dx + dy * dy <= this.r * this.r) {\r\n            let towPI = 2*Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if(normalizedStartAngle <= normalizedEndAngle){\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }  \r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class ArcClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let ri: number = parameters[3].value;\r\n                let ra: number = parameters[4].value;\r\n                let startAngle: number = parameters[5].value;\r\n                let endAngle: number = parameters[6].value;\r\n\r\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ri = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ra = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.ri * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\r\n\r\n                return sh.ra * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ArcHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public ri: number,\r\n        public ra: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ra * Math.cos(alpha),\r\n                y: this.my + this.ra * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.endAngleRad - deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ri * Math.cos(alpha),\r\n                y: this.my + this.ri * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n\r\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\r\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\r\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\r\n            g.drawCircle(this.mx, this.my, this.ra)\r\n                .beginHole()\r\n                .drawCircle(this.mx, this.my, this.ri)\r\n                .endHole();\r\n        } else {\r\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\r\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\r\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\r\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\r\n        }\r\n\r\n        g.closePath();\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        let r2 = dx * dx + dy * dy;\r\n\r\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\r\n            let towPI = 2 * Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if (normalizedStartAngle <= normalizedEndAngle) {\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","/* \r\n * Convex hull algorithm - Library (TypeScript)\r\n * \r\n * Copyright (c) 2020 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n\r\n\r\nexport namespace convexhull {\r\n    \r\n    export interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tlet newPoints: Array<P> = points.slice();\r\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\r\n\t\treturn convexhull.makeHullPresorted(newPoints);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tlet upperHull: Array<P> = [];\r\n\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\r\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tlet lowerHull: Array<P> = [];\r\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t}\r\n\t\r\n\t\r\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\t\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i < toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"stopAnimation\")) return;\r\n\r\n                sh.stopAnimation(true);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation und macht das Sprite unsichtbar.', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"linear\") {\r\n        super(interpreter, runtimeObject);\r\n        \r\n        if(copyFromOtherShape == null){\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width/2;\r\n            this.y = bounds.top + bounds.height/2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        for(let p of this.hitPolygonInitial){\r\n            // p.x -= this.x;\r\n            // p.y -= this.centerYInitial;\r\n        }\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n            );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n        \r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for(let p of points){\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n         this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            for(let sh of shapeHelper.shapes){\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"];\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"nearest_neighbour\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = 2 * this.animationIndices.length - image;\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            this.textStyle.fill = this.fillColor;\r\n            this.textStyle.stroke = this.borderColor;\r\n            this.textStyle.strokeThickness = this.borderWidth;\r\n            g.alpha = this.fillAlpha;\r\n            this.textStyle.fontSize = this.fontsize;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let r: RuntimeObject = parameters[1].value;\r\n            let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n            if (method != null) {\r\n\r\n                module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                    let program = method?.program;\r\n                    let invoke = method?.invoke;\r\n\r\n                    let stackElements: Value[] = [\r\n                        {\r\n                            type: r.class,\r\n                            value: r\r\n                        },\r\n                        {\r\n                            type: stringPrimitiveType,\r\n                            value: key\r\n                        }\r\n                    ];\r\n\r\n                    if (program != null) {\r\n                        module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                    } else if (invoke != null) {\r\n                        invoke([]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n        }    \r\n        , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n\r\n        this.processTimerEntries();\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0;\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastPosX: number = -1;\r\n    lastPosY: number = -1;\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n        this.lastPosX = xStart;\r\n        this.lastPosY = yStart;\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.drawTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n    }\r\n\r\n\r\n    drawTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n        // console.log(\"MoveTo: \" + firstPoint.x + \", \" + firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear() {\r\n        this.lineElements = [];\r\n        this.lineElements.push({\r\n            x: 100,\r\n            y: 200,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.angle = 0;\r\n        this.borderColor = 0;\r\n        this.turtleSize = 40;\r\n        this.render();\r\n        this.drawTurtle(100, 200, 0);\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\r\n\r\nexport type GNGAktionsempfaengerData = {\r\n    type: GNGAktionsempfaengerType,\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class GNGEreignisbehandlung extends Klass {\r\n\r\n    constructor(module: Module, private moduleStore: ModuleStore) {\r\n\r\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\r\n\r\n\r\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let helper = GNGEreignisbehandlung.getHelper(module);\r\n\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\r\n\r\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n        //         let groesse: number = parameters[1].value;\r\n\r\n\r\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\r\n\r\n            }, false, false, \"Zeitgeber starten.\", false));\r\n\r\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\r\n\r\n            }, false, false, \"Zeitgeber anhalten.\", false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n    }\r\n\r\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\r\n        let interpreter = module.main.getInterpreter();\r\n        if (interpreter.gngEreignisbehandlungHelper == null) {\r\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\r\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\r\n        }\r\n\r\n        return interpreter.gngEreignisbehandlungHelper;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GNGEreignisbehandlungHelper {\r\n\r\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\r\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\r\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\r\n        \"TaktImpulsAusführen()\": \"ausführen\",\r\n        \"AktionAusführen()\": \"ausführen\",\r\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\r\n        \"TasteGedrückt(char)\": \"taste\",\r\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\r\n    };\r\n\r\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\r\n    keyToKeyCodeMap: { [key: string]: number } = {\r\n        \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 33,\r\n        \"Insert\": 155\r\n    }\r\n\r\n    // For gng library (Cornelsen-Verlag):\r\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\r\n\r\n    timerRunning: boolean = false;\r\n    taktdauer: number = 300;\r\n    remainingTime: number = 0;\r\n\r\n    onKeyDownMethod: (key: string) => void;\r\n\r\n    constructor(private module:Module){\r\n        for (let type of this.aktionsempfaengerTypes) {\r\n            this.aktionsempfaengerMap[type] = [];\r\n        }\r\n\r\n    }\r\n\r\n    hasAktionsEmpfaenger(): boolean {\r\n\r\n        for(let type of this.aktionsempfaengerTypes){\r\n            if(this.aktionsempfaengerMap[type].length > 0){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    registerEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let method: Method = klass.getMethodBySignature(ms);\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n                this.aktionsempfaengerMap[type].push({\r\n                    type: <GNGAktionsempfaengerType>type,\r\n                    method: method,\r\n                    runtimeObject: o\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unregisterEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            this.aktionsempfaengerMap[type] =\r\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\r\n        }\r\n    }\r\n\r\n\r\n    bindEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n\r\n        this.onKeyDownMethod = (key: string) => {\r\n            if (key.length == 1) {\r\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\r\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\r\n                }\r\n            } else {\r\n                let keyCode = this.keyToKeyCodeMap[key];\r\n                if (keyCode != null) {\r\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\r\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\r\n\r\n        // this.startTimer();\r\n\r\n    }\r\n\r\n    detachEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\r\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\r\n        this.stopTimer();\r\n    }\r\n\r\n\r\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        parameters = parameters.slice(0);\r\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\r\n\r\n        if (program != null) {\r\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke(parameters);\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        this.timerRunning = false;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        if (!this.timerRunning) {\r\n            this.timerRunning = true;\r\n            this.processTimerEntries();\r\n        }\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (!this.timerRunning) return;\r\n\r\n        let dt = 10;\r\n\r\n        this.remainingTime += dt;\r\n        if (this.remainingTime > this.taktdauer) {\r\n            this.remainingTime -= this.taktdauer;\r\n\r\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\r\n            for (let ae of liste) {\r\n\r\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, dt);\r\n\r\n    }\r\n\r\n    handleMouseClickedEvent(x: number, y: number) {\r\n        let parameters: Value[] = [\r\n            { type: intPrimitiveType, value: Math.round(x) },\r\n            { type: intPrimitiveType, value: Math.round(y) },\r\n            { type: intPrimitiveType, value: 1 }\r\n        ]\r\n\r\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\r\n        for (let ae of liste) {\r\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.unregisterEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.startTimer();\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.stopTimer();\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \r\n        }, false, Visibility.private, false, \"Breite des Rechtecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \r\n        }, false, Visibility.private, false, \"Höhe des Rechtecks\"));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","export var GNGFarben: {[identifier: string]: number} = {\r\n    \"weiß\": 0xffffff,\r\n    \"weiss\": 0xffffff,\r\n    \"rot\": 0xff0000,\r\n    \"grün\": 0x00ff00,\r\n    \"gruen\": 0x00ff00,\r\n    \"blau\": 0x0000ff,\r\n    \"gelb\": 0xffff00,\r\n    \"magenta\": 0xff00ff,\r\n    \"cyan\": 0x00ffff,\r\n    \"hellgelb\": 0xffff80,\r\n    \"hellgrün\": 0x80ff80,\r\n    \"hellgruen\": 0x80ff80,\r\n    \"orange\": 0xff8000,\r\n    \"braun\": 0x804000,\r\n    \"grau\": 0x808080,\r\n    \"schwarz\": 0x000000\r\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \r\n            let farbe = value.object.intrinsicData[\"Farbe\"];\r\n            value.value = farbe == null ? \"schwarz\" : farbe;\r\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterX()); \r\n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterY()); \r\n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                let p: PIXI.Point = new PIXI.Point(10, 10);\r\n                sh.displayObject.updateTransform();\r\n                sh.displayObject.transform.worldTransform.apply(p, p);\r\n        \r\n                sh.move(x - p.x, y - p.y);\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                o.intrinsicData[\"Farbe\"] = farbe;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGDreieckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let breite = value.object.intrinsicData[\"Breite\"];\r\n            value.value = Math.round(breite); \r\n        }, false, Visibility.private, false, \"Breite des Dreiecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let höhe = value.object.intrinsicData[\"Höhe\"];\r\n            value.value = Math.round(höhe); \r\n        }, false, Visibility.private, false, \"Höhe des Dreiecks\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n\r\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"Breite\"] = 100;\r\n                o.intrinsicData[\"Höhe\"] = 100;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\r\n\r\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n                    let breite: number = parameters[1].value;\r\n                    let höhe: number = parameters[2].value;\r\n\r\n                    o.intrinsicData[\"Breite\"] = breite;\r\n                    o.intrinsicData[\"Höhe\"] = höhe;    \r\n\r\n                    breite /= sh.scaleFactor;\r\n                    höhe /= sh.scaleFactor;\r\n\r\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n    \r\n                    sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\r\n    \r\n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\r\n    \r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGKreisClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \r\n        }, false, Visibility.private, false, \"Radius des Kreises\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\r\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n                let radius: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\r\n\r\n                sh.setRadius(radius);\r\n\r\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGTurtleClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \r\n        }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \r\n        }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \r\n        }, false, Visibility.private, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\r\n                rh.setShowTurtle(true);\r\n                rh.setBorderColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"größeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.turtleSize = größe;\r\n                sh.turn(0);\r\n\r\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.turn(grad);\r\n\r\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n\r\n                sh.forward(länge);\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftHeben\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftSenken\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Löschen\")) return;\r\n\r\n                sh.clear();\r\n\r\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.moveTo(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                sh.moveTo(100, 200);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.turn(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesAtLeastOneFigure();\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                return sh.touchesColor(farbe);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesShape(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\r\n\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { TextHelper } from \"../graphics/Text.js\";\r\n\r\nexport class GNGTextClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \r\n            let text = value.object.intrinsicData[\"Actor\"].text;\r\n            value.value = text; \r\n        }, false, Visibility.private, false, \"Angezeigter Text\"));\r\n\r\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \r\n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\r\n            value.value = Math.round(fontsize); \r\n        }, false, Visibility.private, false, \"Textgröße\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TextHelper(10, 10, 12, \"Text\", module.main.getInterpreter(), o);\r\n\r\n                rh.setFillColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let text: string = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextSetzen\")) return;\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\r\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\r\n\r\n                sh.setFontsize(größe);\r\n\r\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size += 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size += 2;\r\n                }\r\n                else {\r\n                    size += 4;\r\n                }\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size -= 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size -= 2;\r\n                }\r\n                else {\r\n                    size -= 4;\r\n                }\r\n                if (size < 1) {\r\n                    size = 1;\r\n                }\r\n\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GroupHelper } from \"../graphics/Group.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\ntype GNGPoint = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class GNGFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\r\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\r\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\r\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                let rh = new FigurHelper(interpreter, o, helper);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let center: GNGPoint = {\r\n                    x: 100,\r\n                    y: 200\r\n                };\r\n\r\n                o.intrinsicData[\"Center\"] = center;\r\n\r\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n                rh.scale(0.4, center.x, center.y);\r\n                rh.displayObject.updateTransform();\r\n\r\n                helper.registerEvents(o);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let groesse: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                let newFactor = groesse / 100;\r\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.rotate(grad, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                let angleRad = sh.angle / 180 * Math.PI;\r\n                let dx = länge * Math.cos(angleRad);\r\n                let dy = länge * Math.sin(-angleRad);\r\n                center.x += dx;\r\n                center.y += dy;                \r\n\r\n                sh.move(dx, dy);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(x - center.x, y - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = x;\r\n                center.y = y;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(100 - center.x, 200 - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = 100;\r\n                center.y = 200;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\r\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.x;\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.y;\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\r\n\r\n                sh.destroyChildren();\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n\r\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh) {\r\n                        if(shape instanceof FigurHelper){\r\n                            for(let part of shape.shapes){\r\n                                let partHelper = part.intrinsicData[\"Actor\"];\r\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\r\n                                    if(sh.collidesWith(partHelper)){\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n\r\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\r\n                                if (sh.collidesWith(shape)) return true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.collidesWith(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\r\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n                let x3: number = parameters[5].value;\r\n                let y3: number = parameters[6].value;\r\n                let farbeString: string = parameters[7].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(polygonClass);\r\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = triangle;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                triangle.rotate(sh.angle, 0, 0);\r\n                triangle.scale(sh.scaleFactor, 0, 0);\r\n                triangle.move(center.x, center.y);\r\n                triangle.setFillColor(farbe);\r\n                triangle.setBorderColor(\"black\");\r\n                triangle.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(rectangleClass);\r\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                rectangleHelper.rotate(sh.angle, 0, 0);\r\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\r\n                rectangleHelper.move(center.x, center.y);\r\n                rectangleHelper.setFillColor(farbe);\r\n                rectangleHelper.setBorderColor(\"black\");\r\n                rectangleHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\r\n                \r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\r\n                breite = breite - 0.1;\r\n\r\n                let rto = new RuntimeObject(ellipseClass);\r\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                ellipseHelper.rotate(sh.angle, 0, 0);\r\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\r\n                ellipseHelper.move(center.x, center.y);\r\n                ellipseHelper.setFillColor(farbe);\r\n                ellipseHelper.setBorderColor(\"black\");\r\n                ellipseHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\r\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\r\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\r\n        t.intrinsicData[\"Actor\"] = th;\r\n        th.move(center.x, center.y);\r\n        th.setFillColor(\"yellow\");\r\n        th.setBorderColor(\"black\");\r\n        th.setBorderWidth(2);\r\n        gh.add(t);\r\n\r\n        let c: RuntimeObject = new RuntimeObject(circleClass);\r\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\r\n        c.intrinsicData[\"Actor\"] = ch;\r\n        ch.move(center.x, center.y);\r\n        ch.setFillColor(\"blue\");\r\n        ch.setBorderColor(\"black\");\r\n        ch.setBorderWidth(2);\r\n        gh.add(c);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass FigurHelper extends GroupHelper {\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    destroy(){\r\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class RandomClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Random\", module, \"Zufallszahlengenerator\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\r\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let bound: number = parameters[1].value;\r\n\r\n                return Math.floor(Math.random()*bound);\r\n\r\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randint\", new Parameterlist([\r\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.floor(Math.random()*(to - from + 1) + from);\r\n\r\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\r\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.random()*(to - from) + from;\r\n\r\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        this.indexedDB = new EmbeddedIndexedDB();\r\n        this.indexedDB.open(() => {\r\n\r\n            if (this.config.id != null) {\r\n                this.readScripts();\r\n            }\r\n\r\n        });\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n\r\n        if(this.config.withBottomPanel == null){\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if(this.config.withBottomPanel){\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if(this.config.speed == null) this.config.speed = 9;\r\n        if(this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            $centerDiv.prepend($controlsDiv);\r\n            $controlsDiv.addClass('joe_controlPanel_top');\r\n            $editorDiv.css({\r\n                'position': 'relative',\r\n                'height': '1px'\r\n            });\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            jQuery('.jo_graphics').trigger('sizeChanged');\r\n            this.editor.editor.layout();\r\n        });\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n        let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n        $tabheadings.append($thRun, $thVariables);\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n\r\n        let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n            <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n            <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n            </ul>\r\n            </div>\r\n        `);\r\n\r\n        $vd.append(this.$debuggerDiv, $alternativeText);\r\n\r\n        this.$runDiv = jQuery(\r\n            `\r\n<div class=\"jo_tab jo_active jo_run\">\r\n<div class=\"jo_run-programend\">Programm beendet</div>\r\n<div class=\"jo_run-input\">\r\n    <div>\r\n        <div>\r\n            <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n            <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n            <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n                <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n            </div>\r\n\r\n            <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n</div>\r\n\r\n</div>\r\n\r\n`);\r\n\r\n        $tabs.append(this.$runDiv, $vd);\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}