{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/WorkspaceImporter.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/tools/GamepadTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Gamepad.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","canCastTo","length","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","position","switchStatement","push","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","caseFirst","sensitivity","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","LexerState","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","lexShiftLeft","lexShiftRight","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","annotation","getMethodBySignature","cie","signatureMap","cieType","editsProvider","uri","resource","edit","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","getSuperconstructorCalls","checkIfMethodIsVirtual","getParameterList","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","elementCount","ec","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","primitiveTypes","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","m1","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","count","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","forcedUpdatesInARow","getModifiedWorkspacesEvery","getModifiedWorkspacesCounter","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","forceUpdate","sendUpdates","$rect","css","sendDataToServer","sendIfNothingIsDirty","sendBeacon","getModifiedWorkspaces","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","navigator","workspaces","updateWorkspaces","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","version","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","alert","workspaceListPanel","sortElements","withSort","createNewWorkspace","path","isFolder","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indent","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","preventDefault","addFolder","newElement","newFolderCallback","$htmlFirstLine","addAction","$collapseAllAction","hasClass","slideUp","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","name2","path2","nameWithPath1","nameWithPath2","compareWithPath","insertIndex","getElementIndex","prepend","elementAtIndex","renderElement","insertElement","renameElement","$accordionDiv","close","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","button","targetGrow","parts","AccordionPanel","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","sort","b","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","originalEvent","dataTransfer","effectAllowed","ctrlKey","dropEffect","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","lastSymboltable","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","pmEntry","compilation","compile","getDebugger","libraries","libaries","Workspace","setAdditionalLibraries","restoreFromData","currentFileId","currentlyOpenModule","toExportedModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","SoundTools","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","init","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorDiv","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","text_before_revision","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","submitted_date","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m2","moduleWithWorkspace","setWorkspaceActive","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","detail","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","resourceEdits","usagePositionsInModule","Dialog","$dialog","$dialogMain","colorStyle","placeholder","$buttonRow","ischecked","$checkbox","$description","prop","is","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","$fileInputButton","addDiv","exportedWorkspaces","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","$dropZone","evt","firstWorkspace","wse","sendCreateWorkspace","student_edited_after_revision","sendCreateFile","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","$link","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","alterAdditionalLibraries","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","enableNewButton","renderSynchronizeButton","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","filename","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","downloadFile","toExportedWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","hash","position1Cm","position2Cm","sqrt","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","clearAfterLogout","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","location","loginWithTicket","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","GamepadTool","gamepads","gamepad","axes","gamepadIndex","buttonIndex","gp","getGamepads","pressed","axisIndex","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","getCompiler","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m3","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldContainer","sourceFrame","destinationFrame","Container","renderer","projection","projectionMatrix","renderTexture","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setHitPolygonDirty","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","parseColorToOpenGL","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","isGamepadButtonPressed","isGamepadConnected","getGamepadAxisValue","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","polygonBerührtPolygonExakt","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","belongsToGroup","index1","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","addToDefaultGroup","bh","BitmapHelperNew","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","baseTexture","update","red","green","blue","hex","intColorToHexRGB","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","startAngle","endAngle","drawRadii","startAngleRad","endAngleRad","SectorHelper","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","ArcHelper","beginHole","endHole","r2","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","convexhull","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","insertPoint","movePointTo","isClosed","points1","PolygonHelper","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","tilePosition","dob","SpriteHelper","prefix","javaOnlineDir","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","tileScale","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","vectorArrayClass","xIndex","yIndex","returnArray","pVector","deltaTimeMillis","printStream","setSpeedInStepsPerSecond","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","client","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","turtleX","turtleY","lastTurtleAngle","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","lastLineElement","moveTurtleTo","angleInDegrees","cx","cy","TurtleHelper","newLineElement","newTurtleX","newTurtleY","newAngle","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","Patcher","patches","patch","new","patchedText","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","main1","methodAST","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","patched","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","hideEditor","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","eraseDokuwikiSearchMarkup","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhMJ,CAAYA,MAAS,KAmMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAAUS,MAAQ,SATK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mB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QAEvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QACvB,EAAKjmB,UAAUimB,QAAQ,IAAI,GAAJ,QAEV,EAAKjmB,UAAUC,QAAQ,SAA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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String) {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight(){\r\n        this.next(); // Consume first > of >>\r\n\r\n        if(this.nextChar == \">\"){\r\n            this.lexShiftRightUnsigned();\r\n        } else if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned(){\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft(){\r\n        this.next(); // Consume first < of <<\r\n\r\n        if(this.nextChar == '='){\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else{\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if(node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, r);\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++;\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    getModifiedWorkspacesEvery: number = 10;\r\n    getModifiedWorkspacesCounter: number = 10;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate){\r\n                    this.forcedUpdatesInARow++;\r\n                    counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if(this.forcedUpdatesInARow > 50){\r\n                        counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                } \r\n\r\n                this.getModifiedWorkspacesCounter--;\r\n\r\n                that.sendUpdates(() => {}, forceUpdate, this.getModifiedWorkspacesCounter == 0);\r\n                if(this.getModifiedWorkspacesCounter == 0) this.getModifiedWorkspacesCounter = this.getModifiedWorkspacesEvery;\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();    \r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n\r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false, getModifiedWorkspaces: boolean = false){\r\n\r\n        if(this.main.user == null || this.main.user.is_testuser){\r\n            if(callback != null) callback();\r\n            return;\r\n        } \r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            \r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {}, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: getModifiedWorkspaces\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n\r\n            if(sendBeacon){\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if(!that.errorHappened){\r\n    \r\n                        if(this.main.workspacesOwnerId == this.main.user.id && response.workspaces != null){\r\n                            that.updateWorkspaces(request, response);\r\n                        }\r\n    \r\n                        if(callback != null){\r\n                            callback();\r\n                            return;\r\n                        }\r\n                    }\r\n                }, () => {\r\n                    that.errorHappened = true;\r\n                } );\r\n\r\n            }\r\n\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false){\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if(sendBeacon){\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if(response.success){\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false):Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if(path.length == 1 && path[0] == \"\") path = [];\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if(withSort){\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'down.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", () => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number){\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value/(duration/20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if(value < 0){\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string) {\r\n    var blob = new Blob([JSON.stringify(obj)], {type: 'text/plain'});\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else{\r\n        var e = document.createEvent('MouseEvents'),\r\n        a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => { \r\n                         this.sortElements();\r\n                         newElement.$htmlFirstLine[0].scrollIntoView(); \r\n                         animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n            \r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                for(let element of that.elements){\r\n                    if(element.isFolder){\r\n                        if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                            element.$htmlFirstLine.removeClass('jo_expanded');\r\n                            element.$htmlFirstLine.addClass('jo_collapsed');\r\n                        }                        \r\n                    }\r\n                    if(element.path.length > 0){\r\n                        element.$htmlFirstLine.slideUp(200);\r\n                    }\r\n                }                \r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], name2: string, path2: string[]) {\r\n\r\n        let nameWithPath1 = path1.join(\"/\");\r\n        if (nameWithPath1 != \"\") nameWithPath1 += \"/\";\r\n        nameWithPath1 += name1;\r\n\r\n        let nameWithPath2 = path2.join(\"/\");\r\n        if (nameWithPath2 != \"\") nameWithPath2 += \"/\";\r\n        nameWithPath2 += name2;\r\n\r\n        return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[]): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, element.name, element.path) < 0) return i - 1;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path);\r\n        if(ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n            jQuery(elementAtIndex).after(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, bName, b.path);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = \" jo_expanded\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if(element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'down', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => { \r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView(); \r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                           });\r\n                            });\r\n            \r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n                this.renderElement(el);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n\r\n                        if (pathString.startsWith(el.path.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            //@ts-ignore\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\nimport { Workspace } from \"../../workspace/Workspace.js\";\nimport { Main } from \"../Main.js\";\nimport { Dialog } from \"./Dialog.js\";\n\nexport class WorkspaceImporter {\n\n    dialog: Dialog;\n\n    constructor(private main: Main) {\n\n        this.dialog = new Dialog();\n        \n    }\n\n    show() {\n        this.dialog.init();\n        this.dialog.heading(\"Workspace importieren\");\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\n        \n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\n        this.dialog.addDiv($fileInputButton);\n        \n        let exportedWorkspaces: ExportedWorkspace[] = [];\n        \n        let $errorDiv = this.dialog.description(\"\", \"red\");\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\n        \n        let registerFiles = (files: FileList) => {\n            for (let f of files) {\n                var reader = new FileReader();\n                reader.onload = (event) => {\n                    let text: string = <string>reader.result;\n                    if (!text.startsWith(\"{\")) {\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n                    \n                    let ew: ExportedWorkspace = JSON.parse(text);\n                    \n                    if(ew.modules == null || ew.name == null || ew.settings == null){\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n\n                    exportedWorkspaces.push(ew);\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\n\n                };\n                reader.readAsText(f);\n            }\n        }\n\n        $fileInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            registerFiles(files);\n        })\n\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\n        this.dialog.addDiv($dropZone);\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\n\n\n\n        $dropZone.on('dragover', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\n        })\n        $dropZone.on('drop', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            var files = evt.originalEvent.dataTransfer.files;\n            registerFiles(files);\n        })\n\n        this.dialog.addDiv($workspacePreviewDiv);\n\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\n\n        this.dialog.buttons([\n            {\n                caption: \"Abbrechen\",\n                color: \"#a00000\",\n                callback: () => { this.dialog.close() }\n            },\n            {\n                caption: \"Importieren\",\n                color: \"green\",\n                callback: () => {\n                    \n                    let networkManager = this.main.networkManager;\n                    let projectExplorer = this.main.projectExplorer;\n\n                    let owner_id: number = this.main.user.id;\n                    if (this.main.workspacesOwnerId != null) {\n                        owner_id = this.main.workspacesOwnerId;\n                    }\n\n                    let count = 0;\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\n\n                    let firstWorkspace: Workspace;\n\n                    for(let wse of exportedWorkspaces){\n\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\n                        if(firstWorkspace == null) firstWorkspace = ws;\n                        ws.isFolder = false;\n                        ws.path = \"\";\n                        ws.settings = wse.settings;\n                        this.main.workspaceList.push(ws);\n\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\n                            count--;\n                            if (error == null) {\n                                projectExplorer.workspaceListPanel.addElement({\n                                    name: ws.name,\n                                    externalElement: ws,\n                                    iconClass: \"workspace\",\n                                    isFolder: false,\n                                    path: []\n                                });\n\n                                for(let mo of wse.modules){\n                                    let f: File = {\n                                        name: mo.name,\n                                        dirty: false,\n                                        saved: true,\n                                        text: mo.text,\n                                        text_before_revision: null,\n                                        submitted_date: null,\n                                        student_edited_after_revision: false,\n                                        version: 1,\n                                        is_copy_of_id: null,\n                                        repository_file_version: null,\n                                        identical_to_repository_version: null\n                                    };\n                                    let m = new Module(f, this.main);\n                                    ws.moduleStore.putModule(m);\n                                    networkManager.sendCreateFile(m, ws, owner_id,\n                                        (error: string) => {\n                                            count--;\n                                            if (error == null) {\n                                                projectExplorer.workspaceListPanel.sortElements();\n                                                this.dialog.close();\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\n                                            } else {\n                                                alert('Der Server ist nicht erreichbar!');\n                    \n                                            }\n                                        });\n                                }\n\n                            } else {\n                                alert('Der Server ist nicht erreichbar!');\n        \n                            }\n                        });\n\n\n\n                    }\n\n                }\n            },\n        ])\n    }\n\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (!workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile((ws).toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user);\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.restoreWorkspaces(response.workspaces);\r\n                    that.main.workspacesOwnerId = user.id;\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            if(that.main.isEmbedded && key == \" \"){\r\n                for(let kpc of that.keyPressedCallbacks){\r\n                    kpc(key);\r\n                }    \r\n            }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            debugger;\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if($jo_tabs.length == 0){\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n        \r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n                    \r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n            \r\n            this.summedDelta = 0;\r\n            \r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n            \r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            this.app.renderer.render(this.stage, {\r\n                renderTexture: rt,\r\n                transform: transform\r\n            });            \r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            this.stage.children.forEach(c => c.destroy());\r\n            this.stage.removeChildren();\r\n\r\n            let sprite = new PIXI.Sprite(rt);\r\n            sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n            //@ts-ignore\r\n            sprite.transform.onChange();\r\n            this.stage.projectionTransform = new PIXI.Matrix();\r\n            this.stage.addChild(sprite);\r\n\r\n        }, 300);\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n            this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string|number) {\r\n        let c: number;\r\n        if(typeof color == 'string'){\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if(this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlY, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if(alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroup();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroup();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i <= toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if(this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if(fontFamily != null){\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if(this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class GamepadClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let buttonIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\n\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\n\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\n\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\n\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let axisIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\n\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\n\n\n    }\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    turtleX: number = -1;\r\n    turtleY: number = -1;\r\n    lastTurtleAngle: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n        console.log(\"MoveTo: \" + xStart + \", \" + yStart);\r\n        this.turtleX = xStart;\r\n        this.turtleY = yStart;\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.angle);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngle: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngle = this.angle;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.newAngle);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.angle);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angle: number){\r\n        this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        this.turtle.localTransform.rotate(angle - this.lastTurtleAngle);\r\n        this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngle = this.angle;\r\n        this.turtleX = x;\r\n        this.turtleY = y;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear() {\r\n        this.lineElements = [];\r\n        this.lineElements.push({\r\n            x: 100,\r\n            y: 200,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.angle = 0;\r\n        this.borderColor = 0;\r\n        this.turtleSize = 40;\r\n        this.render();\r\n        this.moveTurtleTo(100, 200, 0);\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 33,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.private, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.private, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let p: PIXI.Point = new PIXI.Point(10, 10);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.private, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.private, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.private, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.private, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.private, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"größeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n\n                sh.turtleSize = größe;\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear();\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(10, 10, 12, \"Text\", module.main.getInterpreter(), o);\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n    \r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if(!this.config.hideStartPanel){\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n    \r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n    \r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if(this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if(this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if(this.config.withBottomPanel == null){\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if(this.config.hideEditor){\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if(this.config.withBottomPanel){\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if(this.config.speed == null) this.config.speed = 9;\r\n        if(this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if(this.config.hideEditor){\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if(!this.config.hideEditor){\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if(this.config.hideEditor){\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if(!this.config.hideStartPanel){\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if(this.config.hideStartPanel){\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }        \r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if(!this.config.hideEditor){\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n            \r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n                \r\n                $vd.append(this.$debuggerDiv, $alternativeText);\r\n                let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n                $tabs.append(this.$runDiv, $vd);\r\n                this.$rightDivInner.append($tabs);\r\n                makeTabs($rightDiv);\r\n            } else {\r\n                this.$rightDivInner.append(this.$runDiv);\r\n            }\r\n        \r\n        return $rightDiv;\r\n    }\r\n    \r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n    \r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}