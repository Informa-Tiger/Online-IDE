{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/regenerator-runtime/runtime.js","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/ColorLexer.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/compiler/types/TypeHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceImporter.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/MyColorProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/workspace/InconsistencyFixer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/tools/GamepadTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../src/client/runtimelibrary/Gamepad.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","PrimitiveType","initialValue","description","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","program","signature","id","parameters","hasGenericTypes","canCastTo","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","_a","map","tv","join","_b","RuntimeObject","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","LabelManager","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","position","switchStatement","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","Klass","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","StaticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Interface","cda","multiples","ArrayType","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","shouldImplement","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","equals","referenceElement","array","destType","castTo","s1","ObjectClass","IntegerClass","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","FloatClass","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","Infinity","CharacterClass","charPrimitiveType","charCodeAt","match","toLocaleUpperCase","toLocaleLowerCase","BooleanClass","toLowerCase","DoubleClass","NullType","VarType","IntPrimitiveType","negation","automatic","needsStatement","String","fromCharCode","FloatPrimitiveType","DoublePrimitiveType","BooleanPrimitiveType","VoidPrimitiveType","StringPrimitiveType","stringClass","localeCompare","caseFirst","sensitivity","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","split","CharPrimitiveType","voidPrimitiveType","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","m1","red","green","blue","alpha","m2","m3","LexerState","ColorHelper","predefinedColors","substr","Lexer","colorLexer","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","foundToken","openBracket","char","specialCharToken","pushToken","checkClosingBracket","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","parseStringLiteralEscapeCharacter","getColorInfo","StringLines","restOfLine","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","Formatter","autoFormatTriggerCharacters","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","e","e1","splice","delta","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","cssColors","style","setProperty","SymbolTable","parentSymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","Enum","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","CodeGenerator","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","annotation","getMethodBySignature","cie","signatureMap","cieType","editsProvider","uri","resource","edit","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","getSuperconstructorCalls","checkIfMethodIsVirtual","getParameterList","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","_c","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","bn","continueTargetLabel","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","elementCount","ec","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","Parser","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","operatorPrecedence","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","op","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","asError","VisibilityTokens","JsonTool","primitiveTypes","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","TypeResolver","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","setBaseClass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","Compiler","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","MainEmbedded","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","ListIteratorImplClass","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","ArrayListClass","collectionInterface","typeA","tvA","listInterface","iteratorType","ah","ListHelper","getIterator","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","nextMethod","hasNextMethod","iteratorAsValue","objWithError","isInteger","executeImmediatelyInNewStackframe","CollectionClass","iterableInterface","IterableClass","IteratorClass","ListClass","StackClass","vectorType","peek","VectorClass","SetClass","SetIteratorImplClass","MapHelper","SetIteratorHelper","SetHelper","console","log","addToSet","delete","HashSetClass","setInterface","mh","adAll","LinkedHashSetClass","QueueClass","DequeClass","QueueInterface","LinkedListClass","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","ConsoleClass","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","tList","InputManager","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","NotifierClient","networkManager","unsentMessages","connect","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","sendUpdates","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","DebuggerElement","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","AdhocCompiler","ModuleStore","Module","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","Evaluator","programMap","compiler","expression","pmEntry","compilation","compile","getDebugger","lastSymboltable","evaluate","Workspace","evaluator","libaries","restoreFromData","currentFileId","currentlyOpenModule","toExportedModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","Dialog","$dialog","$dialogMain","$div","colorStyle","placeholder","buttons","$buttonRow","button","$message","ischecked","$checkbox","$description","prop","is","WorkspaceImporter","dialog","init","heading","pathDescription","$fileInputButton","addDiv","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","waitMessage","close","firstWorkspace","wse","alterAdditionalLibraries","sendCreateWorkspace","mo","text_before_revision","submitted_date","student_edited_after_revision","sendCreateFile","setWorkspaceActive","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","Helper","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","$result","Debugger","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sounds","sound","player","Howl","src","preload","soundMap","play","ActionManager","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","ProgramPrinter","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","ConsoleEntry","withBottomBorder","$consoleEntry","$firstLine","valueString","span","MyConsole","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","javaOnlineFont","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","detachValue","Main","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","ErrorManager","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","showError","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","BottomDiv","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","MyCompletionItemProvider","triggerCharacters","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","_d","_e","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","_f","_g","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","MyHoverProvider","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","MyColorProvider","getCompiler","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","Editor","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","rejectReason","resourceEdits","usagePositionsInModule","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","MainMenu","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","SpeedControl","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","ProgramControlButtons","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","students","student","$studentLine","$studentClass","$studentName","rufname","familienname","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","WorkspaceSettingsDialog","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","ProjectExplorer","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","enableNewButton","removeWorkspace","setCaption","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","toExportedWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","ZoomControl","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","Diagram","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","DiagramElement","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","ClassBox","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","hashedSignature","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","hash","ArrowHead","position1Cm","position2Cm","sqrt","ex","ey","DiagramArrow","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","ClassDiagram","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","ListDiagram","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","ObjectDiagram","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","RightDiv","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","Sliders","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","TeacherExplorer","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","Login","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","clearAfterLogout","disconnect","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","InconsistencyFixer","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","loginWithTicket","initSliders","Interpreter","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","mainBase","flag","controlButtons","openHelper","KeyboardTool","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","GamepadTool","gamepads","gamepad","axes","gamepadIndex","buttonIndex","gp","getGamepads","pressed","axisIndex","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","WorldClass","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldHelper","WorldContainer","Container","sourceFrame","destinationFrame","renderer","projection","projectionMatrix","renderTexture","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setHitPolygonDirty","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","Actor","methodSignatures","actorListIdentifier","ActorHelper","isKeyDown","isGamepadButtonPressed","isGamepadConnected","getGamepadAxisValue","setTimerPaused","isPressed","AlignmentClass","streckeSchneidetStrecke","p0","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","polygonBerührtPolygonExakt","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","ShapeClass","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","ShapeHelper","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","belongsToGroup","index1","groupHelper","collidingShapes","BitmapClass","colorType","pointsX","pointsY","rh","BitmapHelperNew","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","addToDefaultGroupAndSetDefaultVisibility","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","baseTexture","update","intColorToHexRGB","uploadData","g","FilledShapeClass","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgb","FilledShapeHelper","borderAlpha","fsh","CircleClass","mx","my","CircleHelper","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","SectorClass","startAngle","endAngle","SectorHelper","drawRadii","startAngleRad","endAngleRad","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ArcClass","ri","ra","ArcHelper","beginHole","endHole","r2","ColorClass","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","EllipseClass","rx","ry","EllipseHelper","setRadiusX","setRadiusY","drawEllipse","CollisionPairClass","GroupClass","collisionPairType","collisionPairArrayType","GroupHelper","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","groupHelperCopy","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","convexhull","KeyClass","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","PolygonClass","shapeClass","closeAndFill","pointsNumber","ph","PolygonHelper","extractPoints","makeHull","addPoint","insertPoint","movePointTo","isClosed","points1","RectangleClass","RectangleHelper","RepeatTypeClass","RoundedRectangleClass","RoundedRectangleHelper","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","ScaleModeClass","SoundKlass","HitPolygonStore","spriteHelper","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","SpriteClass","scaleModeClass","spriteLibraryEntry","SpriteHelper","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","tilePosition","dob","prefix","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","TileClass","tileScale","SpriteLibraryClass","SpriteLibrary","sle","TextClass","fontsize","TextHelper","setFontsize","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","tm","TextMetrics","measureText","InputClass","GamepadClass","MathClass","E","exp","log10","tan","asin","acos","atan","MathToolsClass","vectorArrayClass","xIndex","yIndex","returnArray","pVector","SystemClass","deltaTimeMillis","printStream","PrintStreamClass","SystemToolsClass","setSpeedInStepsPerSecond","KeyListener","Runnable","TimerClass","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","MapClass","typeK","tvK","typeV","tvV","keyArray","old","HashMapClass","containsKey","containsValue","TriangleClass","LocalDateTimeClass","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","DayOfWeekEnum","MonthEnum","LineClass","setPoint","setPoints","Vector2Class","alphaDeg","oRet","MouseListenerInterface","MouseAdapterClass","WebSocketClientClass","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","WebSocketClass","webSocketClientType","systemClassType","WebSocketHelper","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","ProcessingClass","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","ProcessingHelper","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","TurtleClass","TurtleHelper","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","GNGEreignisbehandlungHelper","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","GNGZeichenfensterClass","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGRechteckClass","GNGFarben","GNGBaseFigurClass","moveAnchor","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","GNGAktionsempfaengerInterface","GNGDreieckClass","setAllPointsUntransformed","GNGKreisClass","GNGTurtleClass","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","GNGTextClass","GNGFigurClass","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","RandomClass","bound","from","DirectionClass","Patcher","patches","patch","new","patchedText","KeyEvent","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","patched","BaseModule","SoundClass","ActorClass","registerWorldType","GNGModule","KeyEventClass","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","hideEditor","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","eraseDokuwikiSearchMarkup","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","EmbeddedStarter","mainEmbeddedList","initJavaOnlineDivs","divsWithScriptLists","$script","srcAttr","dws","initDiv","fetch","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,sGC3ErD,IAAIC,EAAW,SAAUlC,GACvB,aAEA,IAAImC,EAAKvB,OAAOkB,UACZM,EAASD,EAAGJ,eAEZM,EAA4B,mBAAXpB,OAAwBA,OAAS,GAClDqB,EAAiBD,EAAQE,UAAY,aACrCC,EAAsBH,EAAQI,eAAiB,kBAC/CC,EAAoBL,EAAQnB,aAAe,gBAE/C,SAASyB,EAAOC,EAAKnB,EAAKN,GAOxB,OANAP,OAAOC,eAAe+B,EAAKnB,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZ+B,cAAc,EACdC,UAAU,IAELF,EAAInB,GAEb,IAEEkB,EAAO,GAAI,IACX,MAAOI,GACPJ,EAAS,SAASC,EAAKnB,EAAKN,GAC1B,OAAOyB,EAAInB,GAAON,GAItB,SAAS6B,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQpB,qBAAqBwB,EAAYJ,EAAUI,EAC/EC,EAAY3C,OAAOY,OAAO6B,EAAevB,WACzC0B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAG,EAAUG,QAuMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EAhLuB,iBAkL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAjLoB,cAiLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GApLoB,cAoLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,OAAOE,IAMT,IAHAP,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAIG,EAAWR,EAAQQ,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUR,GACnD,GAAIS,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBT,EAAQI,OAGVJ,EAAQY,KAAOZ,EAAQa,MAAQb,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GApNqB,mBAoNjBD,EAEF,MADAA,EAlNc,YAmNRH,EAAQK,IAGhBL,EAAQc,kBAAkBd,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQe,OAAO,SAAUf,EAAQK,KAGnCF,EA7NkB,YA+NlB,IAAIa,EAASC,EAASxB,EAASE,EAAMK,GACrC,GAAoB,WAAhBgB,EAAOE,KAAmB,CAO5B,GAJAf,EAAQH,EAAQmB,KAlOA,YAFK,iBAwOjBH,EAAOX,MAAQM,EACjB,SAGF,MAAO,CACLhD,MAAOqD,EAAOX,IACdc,KAAMnB,EAAQmB,MAGS,UAAhBH,EAAOE,OAChBf,EAhPgB,YAmPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,OA/QPe,CAAiB3B,EAASE,EAAMK,GAE7CD,EAcT,SAASkB,EAASI,EAAIjC,EAAKiB,GACzB,IACE,MAAO,CAAEa,KAAM,SAAUb,IAAKgB,EAAGxE,KAAKuC,EAAKiB,IAC3C,MAAOd,GACP,MAAO,CAAE2B,KAAM,QAASb,IAAKd,IAhBjC/C,EAAQgD,KAAOA,EAoBf,IAOImB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBrC,EAAOqC,EAAmB1C,GAAgB,WACxC,OAAO2C,QAGT,IAAIC,EAAWtE,OAAOuE,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BjD,GAC5BC,EAAO/B,KAAK+E,EAAyB9C,KAGvC0C,EAAoBI,GAGtB,IAAIE,EAAKP,EAA2BjD,UAClCwB,EAAUxB,UAAYlB,OAAOY,OAAOwD,GAYtC,SAASO,EAAsBzD,GAC7B,CAAC,OAAQ,QAAS,UAAU0D,SAAQ,SAAS5B,GAC3CjB,EAAOb,EAAW8B,GAAQ,SAASC,GACjC,OAAOoB,KAAKvB,QAAQE,EAAQC,SAkClC,SAAS4B,EAAclC,EAAWmC,GAgChC,IAAIC,EAgCJV,KAAKvB,QA9BL,SAAiBE,EAAQC,GACvB,SAAS+B,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOnC,EAAQC,EAAKgC,EAASC,GACpC,IAAItB,EAASC,EAASlB,EAAUK,GAASL,EAAWM,GACpD,GAAoB,UAAhBW,EAAOE,KAEJ,CACL,IAAIsB,EAASxB,EAAOX,IAChB1C,EAAQ6E,EAAO7E,MACnB,OAAIA,GACiB,iBAAVA,GACPiB,EAAO/B,KAAKc,EAAO,WACduE,EAAYG,QAAQ1E,EAAM8E,SAASC,MAAK,SAAS/E,GACtD4E,EAAO,OAAQ5E,EAAO0E,EAASC,MAC9B,SAAS/C,GACVgD,EAAO,QAAShD,EAAK8C,EAASC,MAI3BJ,EAAYG,QAAQ1E,GAAO+E,MAAK,SAASC,GAI9CH,EAAO7E,MAAQgF,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOX,KAiCZkC,CAAOnC,EAAQC,EAAKgC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUR,GACrC,IAAII,EAASI,EAASzB,SAASiB,EAAQI,QACvC,QA3TEyC,IA2TEzC,EAAsB,CAKxB,GAFAJ,EAAQQ,SAAW,KAEI,UAAnBR,EAAQI,OAAoB,CAE9B,GAAII,EAASzB,SAAiB,SAG5BiB,EAAQI,OAAS,SACjBJ,EAAQK,SAtUZwC,EAuUInC,EAAoBF,EAAUR,GAEP,UAAnBA,EAAQI,QAGV,OAAOO,EAIXX,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,kDAGJ,OAAOnC,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAASzB,SAAUiB,EAAQK,KAEzD,GAAoB,UAAhBW,EAAOE,KAIT,OAHAlB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMW,EAAOX,IACrBL,EAAQQ,SAAW,KACZG,EAGT,IAAIoC,EAAO/B,EAAOX,IAElB,OAAM0C,EAOFA,EAAK5B,MAGPnB,EAAQQ,EAASwC,YAAcD,EAAKpF,MAGpCqC,EAAQiD,KAAOzC,EAAS0C,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SA1XVwC,GAoYF7C,EAAQQ,SAAW,KACZG,GANEoC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQQ,SAAW,KACZG,GAoDX,SAASwC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB3B,KAAKiC,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIrC,EAASqC,EAAMQ,YAAc,GACjC7C,EAAOE,KAAO,gBACPF,EAAOX,IACdgD,EAAMQ,WAAa7C,EAGrB,SAASf,EAAQL,GAIf6B,KAAKiC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYoC,QAAQmB,EAAc1B,MAClCA,KAAKqC,OAAM,GA8Bb,SAASjC,EAAOkC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASjF,GAC9B,GAAIkF,EACF,OAAOA,EAAenH,KAAKkH,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIxH,GAAK,EAAGuG,EAAO,SAASA,IAC1B,OAASvG,EAAIqH,EAASG,QACpB,GAAItF,EAAO/B,KAAKkH,EAAUrH,GAGxB,OAFAuG,EAAKtF,MAAQoG,EAASrH,GACtBuG,EAAK9B,MAAO,EACL8B,EAOX,OAHAA,EAAKtF,WA1eTkF,EA2eII,EAAK9B,MAAO,EAEL8B,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM1C,GAIjB,SAASA,IACP,MAAO,CAAE5C,WA1fPkF,EA0fyB1B,MAAM,GA+MnC,OA7mBAG,EAAkBhD,UAAYiD,EAC9BpC,EAAO2C,EAAI,cAAeP,GAC1BpC,EAAOoC,EAA4B,cAAeD,GAClDA,EAAkB6C,YAAchF,EAC9BoC,EACArC,EACA,qBAaF1C,EAAQ4H,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAAShD,GAG2B,uBAAnCgD,EAAKH,aAAeG,EAAKrH,QAIhCT,EAAQgI,KAAO,SAASH,GAQtB,OAPIjH,OAAOqH,eACTrH,OAAOqH,eAAeJ,EAAQ9C,IAE9B8C,EAAOK,UAAYnD,EACnBpC,EAAOkF,EAAQnF,EAAmB,sBAEpCmF,EAAO/F,UAAYlB,OAAOY,OAAO8D,GAC1BuC,GAOT7H,EAAQmI,MAAQ,SAAStE,GACvB,MAAO,CAAEoC,QAASpC,IAsEpB0B,EAAsBE,EAAc3D,WACpCa,EAAO8C,EAAc3D,UAAWU,GAAqB,WACnD,OAAOyC,QAETjF,EAAQyF,cAAgBA,EAKxBzF,EAAQoI,MAAQ,SAASnF,EAASC,EAASC,EAAMC,EAAasC,QACxC,IAAhBA,IAAwBA,EAAc2C,SAE1C,IAAIC,EAAO,IAAI7C,EACbzC,EAAKC,EAASC,EAASC,EAAMC,GAC7BsC,GAGF,OAAO1F,EAAQ4H,oBAAoB1E,GAC/BoF,EACAA,EAAK7B,OAAOP,MAAK,SAASF,GACxB,OAAOA,EAAOrB,KAAOqB,EAAO7E,MAAQmH,EAAK7B,WAuKjDlB,EAAsBD,GAEtB3C,EAAO2C,EAAI5C,EAAmB,aAO9BC,EAAO2C,EAAIhD,GAAgB,WACzB,OAAO2C,QAGTtC,EAAO2C,EAAI,YAAY,WACrB,MAAO,wBAkCTtF,EAAQuI,KAAO,SAAS3G,GACtB,IAAI2G,EAAO,GACX,IAAK,IAAI9G,KAAOG,EACd2G,EAAKpB,KAAK1F,GAMZ,OAJA8G,EAAKC,UAIE,SAAS/B,IACd,KAAO8B,EAAKb,QAAQ,CAClB,IAAIjG,EAAM8G,EAAKE,MACf,GAAIhH,KAAOG,EAGT,OAFA6E,EAAKtF,MAAQM,EACbgF,EAAK9B,MAAO,EACL8B,EAQX,OADAA,EAAK9B,MAAO,EACL8B,IAsCXzG,EAAQqF,OAASA,EAMjB5B,EAAQ3B,UAAY,CAClBiG,YAAatE,EAEb6D,MAAO,SAASoB,GAcd,GAbAzD,KAAK0D,KAAO,EACZ1D,KAAKwB,KAAO,EAGZxB,KAAKb,KAAOa,KAAKZ,WArgBjBgC,EAsgBApB,KAAKN,MAAO,EACZM,KAAKjB,SAAW,KAEhBiB,KAAKrB,OAAS,OACdqB,KAAKpB,SA1gBLwC,EA4gBApB,KAAKiC,WAAW1B,QAAQ4B,IAEnBsB,EACH,IAAK,IAAIjI,KAAQwE,KAEQ,MAAnBxE,EAAKmI,OAAO,IACZxG,EAAO/B,KAAK4E,KAAMxE,KACjBgH,OAAOhH,EAAKoI,MAAM,MACrB5D,KAAKxE,QAphBX4F,IA0hBFyC,KAAM,WACJ7D,KAAKN,MAAO,EAEZ,IACIoE,EADY9D,KAAKiC,WAAW,GACLG,WAC3B,GAAwB,UAApB0B,EAAWrE,KACb,MAAMqE,EAAWlF,IAGnB,OAAOoB,KAAK+D,MAGd1E,kBAAmB,SAAS2E,GAC1B,GAAIhE,KAAKN,KACP,MAAMsE,EAGR,IAAIzF,EAAUyB,KACd,SAASiE,EAAOC,EAAKC,GAYnB,OAXA5E,EAAOE,KAAO,QACdF,EAAOX,IAAMoF,EACbzF,EAAQiD,KAAO0C,EAEXC,IAGF5F,EAAQI,OAAS,OACjBJ,EAAQK,SArjBZwC,KAwjBY+C,EAGZ,IAAK,IAAIlJ,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GACxBsE,EAASqC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOoC,EAAO,OAGhB,GAAIrC,EAAMC,QAAU7B,KAAK0D,KAAM,CAC7B,IAAIU,EAAWjH,EAAO/B,KAAKwG,EAAO,YAC9ByC,EAAalH,EAAO/B,KAAKwG,EAAO,cAEpC,GAAIwC,GAAYC,EAAY,CAC1B,GAAIrE,KAAK0D,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,GACzB,GAAI9B,KAAK0D,KAAO9B,EAAMG,WAC3B,OAAOkC,EAAOrC,EAAMG,iBAGjB,GAAIqC,GACT,GAAIpE,KAAK0D,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,OAG3B,KAAIuC,EAMT,MAAM,IAAIxF,MAAM,0CALhB,GAAImB,KAAK0D,KAAO9B,EAAMG,WACpB,OAAOkC,EAAOrC,EAAMG,gBAU9BzC,OAAQ,SAASG,EAAMb,GACrB,IAAK,IAAI3D,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMC,QAAU7B,KAAK0D,MACrBvG,EAAO/B,KAAKwG,EAAO,eACnB5B,KAAK0D,KAAO9B,EAAMG,WAAY,CAChC,IAAIuC,EAAe1C,EACnB,OAIA0C,IACU,UAAT7E,GACS,aAATA,IACD6E,EAAazC,QAAUjD,GACvBA,GAAO0F,EAAavC,aAGtBuC,EAAe,MAGjB,IAAI/E,EAAS+E,EAAeA,EAAalC,WAAa,GAItD,OAHA7C,EAAOE,KAAOA,EACdF,EAAOX,IAAMA,EAET0F,GACFtE,KAAKrB,OAAS,OACdqB,KAAKwB,KAAO8C,EAAavC,WAClB7C,GAGFc,KAAKuE,SAAShF,IAGvBgF,SAAU,SAAShF,EAAQyC,GACzB,GAAoB,UAAhBzC,EAAOE,KACT,MAAMF,EAAOX,IAcf,MAXoB,UAAhBW,EAAOE,MACS,aAAhBF,EAAOE,KACTO,KAAKwB,KAAOjC,EAAOX,IACM,WAAhBW,EAAOE,MAChBO,KAAK+D,KAAO/D,KAAKpB,IAAMW,EAAOX,IAC9BoB,KAAKrB,OAAS,SACdqB,KAAKwB,KAAO,OACa,WAAhBjC,EAAOE,MAAqBuC,IACrChC,KAAKwB,KAAOQ,GAGP9C,GAGTsF,OAAQ,SAASzC,GACf,IAAK,IAAI9G,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMG,aAAeA,EAGvB,OAFA/B,KAAKuE,SAAS3C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP1C,IAKb,MAAS,SAAS2C,GAChB,IAAK,IAAI5G,EAAI+E,KAAKiC,WAAWQ,OAAS,EAAGxH,GAAK,IAAKA,EAAG,CACpD,IAAI2G,EAAQ5B,KAAKiC,WAAWhH,GAC5B,GAAI2G,EAAMC,SAAWA,EAAQ,CAC3B,IAAItC,EAASqC,EAAMQ,WACnB,GAAoB,UAAhB7C,EAAOE,KAAkB,CAC3B,IAAIgF,EAASlF,EAAOX,IACpBuD,EAAcP,GAEhB,OAAO6C,GAMX,MAAM,IAAI5F,MAAM,0BAGlB6F,cAAe,SAASpC,EAAUf,EAAYE,GAa5C,OAZAzB,KAAKjB,SAAW,CACdzB,SAAU8C,EAAOkC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBzB,KAAKrB,SAGPqB,KAAKpB,SA9rBPwC,GAisBOlC,IAQJnE,EA9sBK,CAqtBiBC,EAAOD,SAGtC,IACE4J,mBAAqB1H,EACrB,MAAO2H,GAWmB,iBAAfC,WACTA,WAAWF,mBAAqB1H,EAEhC6H,SAAS,IAAK,yBAAdA,CAAwC7H,K,qMC/uBhC8H,E,+HAAZ,SAAYA,GACRA,+BAEAA,yCACAA,qDACAA,yCACAA,uCACAA,mCACAA,mBACAA,qBAEAA,mCACAA,uCACAA,oCACAA,kCACAA,oCACAA,gCACAA,4CACAA,kCACAA,kCACAA,0CACAA,sCACAA,4CACAA,wCACAA,4CACAA,sCACAA,wCACAA,8CACAA,oCACAA,8BACAA,gCACAA,sCACAA,kCACAA,wCACAA,8BACAA,kCACAA,kCACAA,sCACAA,oCACAA,0CACAA,kCACAA,oCACAA,8CAQAA,kCACAA,oCACAA,8CACAA,gDACAA,4CACAA,8CACAA,wDAGAA,kCAAaA,gCAGbA,kBACAA,wBACAA,sBAAOA,oBAAMA,wCAAgBA,4BAC7BA,kCAAaA,kCACbA,sBAAOA,0BAASA,oCAAcA,wCAC9BA,sBACAA,4BACAA,gCACAA,wCACAA,0CACAA,4DACAA,gDACAA,4CACAA,kBAAKA,gBACLA,8BAEAA,oCACAA,oCACAA,kCACAA,gDACAA,kDACAA,kEACAA,gBACAA,kBAEAA,sBACAA,gDACAA,gCACAA,8BAEAA,0CACAA,sBACAA,4BAEAA,kBAGAA,8BAGAA,sBAGAA,8BAGAA,gBAGAA,sBAEAA,kBAGAA,0BAGAA,4BAGAA,wCAGAA,0BAGAA,4BACAA,4CAEAA,2CAGAA,6BACAA,2BACAA,6DACAA,2DACAA,6DACAA,2DACAA,mDACAA,uCACAA,2CACAA,qCACAA,uDACAA,mDACAA,qEACAA,+BACAA,+BACAA,iDACAA,iCACAA,yCACAA,2EACAA,2CACAA,+CACAA,qDACAA,yCACAA,2CACAA,yEACAA,yBACAA,+BACAA,mCACAA,iCACAA,iEACAA,+DACAA,iCACAA,qBACAA,6DACAA,2DACAA,iCACAA,iCACAA,iCACAA,yCACAA,uDAGAA,qBACAA,uCACAA,qDACAA,+CACAA,qDACAA,qDACAA,2CACAA,6BACAA,mDACAA,uBACAA,2BACAA,uCACAA,mDACAA,+BACAA,+CACAA,mDACAA,6FACAA,6CACAA,uBAlMJ,CAAYA,MAAS,KAqMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBAD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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if(mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                         if(mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if(collectionType.typeVariables.length == 0){\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean){\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;        \r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)){\r\n                let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n                switch (classIdentifier) {\r\n                    case \"Input\":\r\n                        this.pushStatements({\r\n                            type: TokenType.callInputMethod,\r\n                            method: method,\r\n                            position: node.position,\r\n                            stepFinished: true,\r\n                            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                        });\r\n                        isSystemMethod = true;\r\n                        break;\r\n                    case \"SystemTools\":\r\n                        if(method.identifier == \"pause\"){\r\n                            this.pushStatements([{\r\n                                type: TokenType.setPauseDuration,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            },{\r\n                                type: TokenType.pause,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            }\r\n                        ]);\r\n                            isSystemMethod = true;    \r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if(!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if(object.intrinsicData[\"ListHelper\"] instanceof ListHelper){\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if(getIteratorMethod == null){\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if(getIteratorMethod.invoke){\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{value: object, type: object.class}]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(hasNextMethod.invoke([iteratorAsValue])){\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{value: object, type: object.class}]);            \r\n            if(iteratorWithError.error != null){this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false;}\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(true){\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if(hasNext.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false;}\r\n                if(hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if(objWithError.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false;}\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({value: obj, type: type});\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): {error: string, value: Value} {\r\n        if(method.invoke){\r\n            return {value: {value: method.invoke([]), type: method.returnType}, error: null};\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { response } from \"express\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    }\r\n                }, () => {\r\n                    that.errorHappened = true;\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\nimport { Workspace } from \"../../workspace/Workspace.js\";\nimport { Main } from \"../Main.js\";\nimport { Dialog } from \"./Dialog.js\";\n\nexport class WorkspaceImporter {\n\n    dialog: Dialog;\n\n    constructor(private main: Main, private path: string[] = []) {\n\n        this.dialog = new Dialog();\n        \n    }\n\n    show() {\n        let that = this;\n        this.dialog.init();\n        this.dialog.heading(\"Workspace importieren\");\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\n        if(this.path.length  > 0){\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\n        }\n        this.dialog.description(pathDescription);\n\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\n        this.dialog.addDiv($fileInputButton);\n        \n        let exportedWorkspaces: ExportedWorkspace[] = [];\n        \n        let $errorDiv = this.dialog.description(\"\", \"red\");\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\n        \n        let registerFiles = (files: FileList) => {\n            for (let i = 0; i < files.length; i++) {\n                let f = files[i];\n                var reader = new FileReader();\n                reader.onload = (event) => {\n                    let text: string = <string>event.target.result;\n                    if (!text.startsWith(\"{\")) {\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n                    \n                    let ew: ExportedWorkspace = JSON.parse(text);\n                    \n                    if(ew.modules == null || ew.name == null || ew.settings == null){\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n\n                    exportedWorkspaces.push(ew);\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\n\n                };\n                reader.readAsText(f);\n            }\n        }\n\n        $fileInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            registerFiles(files);\n        })\n\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\n        this.dialog.addDiv($dropZone);\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\n\n\n\n        $dropZone.on('dragover', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\n        })\n        $dropZone.on('drop', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            var files = evt.originalEvent.dataTransfer.files;\n            registerFiles(files);\n        })\n\n        this.dialog.addDiv($workspacePreviewDiv);\n\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\n\n        this.dialog.buttons([\n            {\n                caption: \"Abbrechen\",\n                color: \"#a00000\",\n                callback: () => { this.dialog.close() }\n            },\n            {\n                caption: \"Importieren\",\n                color: \"green\",\n                callback: () => {\n                    \n                    let networkManager = this.main.networkManager;\n                    let projectExplorer = this.main.projectExplorer;\n\n                    let owner_id: number = this.main.user.id;\n                    if (this.main.workspacesOwnerId != null) {\n                        owner_id = this.main.workspacesOwnerId;\n                    }\n\n                    let count = 0;\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\n\n                    let firstWorkspace: Workspace;\n\n                    for(let wse of exportedWorkspaces){\n\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\n                        if(firstWorkspace == null) firstWorkspace = ws;\n                        ws.isFolder = false;\n                        ws.path = this.path.join(\"/\");\n                        ws.settings = wse.settings;\n                        this.main.workspaceList.push(ws);\n                        ws.alterAdditionalLibraries();\n\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\n                            count--;\n                            if (error == null) {\n                                projectExplorer.workspaceListPanel.addElement({\n                                    name: ws.name,\n                                    externalElement: ws,\n                                    iconClass: \"workspace\",\n                                    isFolder: false,\n                                    path: that.path\n                                }, true);\n\n                                for(let mo of wse.modules){\n                                    let f: File = {\n                                        name: mo.name,\n                                        dirty: false,\n                                        saved: true,\n                                        text: mo.text,\n                                        text_before_revision: null,\n                                        submitted_date: null,\n                                        student_edited_after_revision: false,\n                                        version: 1,\n                                        is_copy_of_id: null,\n                                        repository_file_version: null,\n                                        identical_to_repository_version: null\n                                    };\n                                    let m = new Module(f, this.main);\n                                    ws.moduleStore.putModule(m);\n                                    networkManager.sendCreateFile(m, ws, owner_id,\n                                        (error: string) => {\n                                            count--;\n                                            if (error == null) {\n                                                projectExplorer.workspaceListPanel.sortElements();\n                                                this.dialog.close();\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\n                                            } else {\n                                                alert('Der Server ist nicht erreichbar!');\n                    \n                                            }\n                                        });\n                                }\n\n                            } else {\n                                alert('Der Server ist nicht erreichbar!');\n        \n                            }\n                        });\n\n\n\n                    }\n\n                }\n            },\n        ])\n    }\n\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"src/client/compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (!workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\n\nexport class FilledShapeDefaults {\n    static defaultFillColor: number = 0x8080ff;\n    static defaultFillAlpha: number = 1.0;\n\n    static defaultBorderColor: number = null;\n    static defaultBorderAlpha: number = 1.0;\n    static defaultBorderWidth: number = 10;\n\n    static defaultVisibility: boolean = true;\n\n    static initDefaultValues(){\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\n    \n        FilledShapeDefaults.defaultBorderColor = null;\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\n        FilledShapeDefaults.defaultBorderWidth = 10;\n\n        FilledShapeDefaults.defaultVisibility = true;\n    }\n\n    static setDefaultVisibility(visibility: boolean) {\n        FilledShapeDefaults.defaultVisibility = visibility;\n    }\n\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\n\n        FilledShapeDefaults.defaultBorderWidth = width;\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultBorderColor = c.color;\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultBorderColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\n        }\n\n    }\n\n    static setDefaultFillColor(color: string | number, alpha?: number) {\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultFillColor = c.color;\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultFillColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\n        }\n\n    }\n\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            \r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if($jo_tabs.length == 0){\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n        \r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n                    \r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n                    \r\n                    if(this.interpreter.pauseUntil != null){\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n            \r\n            this.summedDelta = 0;\r\n            \r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n            \r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            this.app.renderer.render(this.stage, {\r\n                renderTexture: rt,\r\n                transform: transform\r\n            });            \r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            this.stage.children.forEach(c => c.destroy());\r\n            this.stage.removeChildren();\r\n\r\n            let sprite = new PIXI.Sprite(rt);\r\n            sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n            //@ts-ignore\r\n            sprite.transform.onChange();\r\n            this.stage.projectionTransform = new PIXI.Matrix();\r\n            this.stage.addChild(sprite);\r\n\r\n        }, 300);\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n        \r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class GamepadClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let buttonIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\n\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\n\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\n\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\n\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let axisIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\n\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\n\n\n    }\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 34,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n        this.setBaseClass(objectType);\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\n\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Zerstört das Objekt.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\n                rh.centerXInitial = 60;\n                rh.centerYInitial = 60;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\n                    sh.centerXInitial = 60;\n                    sh.centerYInitial = 10 + höhe/2;\n                    \n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n                \n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.borderWidth = 1;\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n\n                sh.turtleSize = größe;\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = true;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear(100, 200, 0);\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel + sh.turtleAngleDeg);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(-sh.turtleAngleDeg);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(objectType);\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n    \n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"workspace.json\");\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n    url?: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    async initJavaOnlineDivs() {\r\n        \r\n        let divsWithScriptLists:[JQuery<HTMLElement>, JOScript[]][] = [];\r\n\r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            \r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let srcAttr = $script.attr('src');\r\n                let text = $script.text().trim();\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: text\r\n                };\r\n                if(srcAttr != null) script.url = srcAttr;\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            divsWithScriptLists.push([$div, scriptList])\r\n\r\n        });\r\n\r\n        for(let dws of divsWithScriptLists){\r\n            await this.initDiv(dws[0], dws[1]);\r\n        }\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    async initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        for(let script of scriptList){\r\n            if(script.url != null){\r\n                const response = await fetch(script.url)\r\n                script.text = await response.text()\r\n            }\r\n        }\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}